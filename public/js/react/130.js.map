{"version":3,"file":"js/react/130.js","mappings":"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","sources":["webpack:///./resources/js/react/independentTask/components/ReportResolveButton.jsx","webpack:///./resources/js/react/independentTask/components/loader/ReportTableLoder.jsx","webpack:///./resources/js/react/independentTask/components/ReportTableModal.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Modal from \"../../global/Modal\";\r\nimport Button from \"./Button\";\r\nimport CKEditorComponent from \"../../ckeditor/index\";\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport { useResolveReportMutation } from \"../../services/api/tasksApiSlice\";\r\nimport _ from \"lodash\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateReportStatus } from \"../../services/features/tasksSlice\";\r\n\r\nconst ReportResoveButton = ({ row }) => {\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [search, setSearch] = React.useState(\"\");\r\n    const [comment, setComment] = React.useState(\"\");\r\n    const [resolveReport, { isLoading }] = useResolveReportMutation();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleModal = (e) => {\r\n        setIsOpen(true);\r\n    };\r\n\r\n    const close = () => setIsOpen(false);\r\n\r\n    const isTopManagement = _.includes([1], window?.Laravel?.user?.role_id);\r\n\r\n    const onSubmit = (type) => {\r\n        let data = {\r\n            status: type,\r\n            report_id: row?.id,\r\n            admin_comment: comment,\r\n        };\r\n\r\n        if (comment) {\r\n            resolveReport(data)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    if (res.status === 200) {\r\n                        dispatch(\r\n                            updateReportStatus({ id: row?.id, status: type })\r\n                        );\r\n                        const body = document.getElementById(\"body\");\r\n                        body.style.cursor = \"default\";\r\n                        close();\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleEditor = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    const variant = row?.status === \"approved\" ? \"success\" : \"tertiary\";\r\n    const title =\r\n        row?.status === \"approved\"\r\n            ? \"Resoved\"\r\n            : row?.status === \"pending\"\r\n            ? \"Resove\"\r\n            : _.startCase(row?.status);\r\n\r\n    const badge =\r\n        row?.status === \"pending\"\r\n            ? \"badge-primary\"\r\n            : row?.status === \"approved\"\r\n            ? \"badge-success\"\r\n            : \"badge-warning\";\r\n\r\n    return (\r\n        <div>\r\n            {!isTopManagement && <span className={`badge ${badge}`}>{row?.status}</span>}\r\n\r\n            {isTopManagement && (\r\n                <React.Fragment>\r\n                    <Button\r\n                        onClick={() =>\r\n                            row?.status === \"pending\" && handleModal()\r\n                        }\r\n                        variant={variant}\r\n                        className={\r\n                            row?.status === \"denied\"\r\n                                ? \"sp1_tasks_tbl_report_btn\"\r\n                                : \"\"\r\n                        }\r\n                    >\r\n                        {title}\r\n                    </Button>\r\n\r\n                    <React.Fragment>\r\n                        <Modal isOpen={isOpen}>\r\n                            <div className=\"sp1_modal-content-wrapper\">\r\n                                <div className=\"sp1_modal-panel\">\r\n                                    {/* header */}\r\n                                    <div className=\"sp1_modal-head\">\r\n                                        <div className=\"sp1_modal-title pl-2\">\r\n                                            <strong>Report Details</strong>\r\n                                        </div>\r\n                                        <Button\r\n                                            onClick={close}\r\n                                            aria-label=\"ModalClose\"\r\n                                            variant=\"tertiary\"\r\n                                            className=\"sp1_modal-close\"\r\n                                        >\r\n                                            <i className=\"fa-solid fa-xmark\" />\r\n                                        </Button>\r\n                                    </div>\r\n                                    {/* end header */}\r\n\r\n                                    {/* body */}\r\n                                    <div className=\"sp1_modal-body p-3\">\r\n                                        <div className=\"ck-editor-holder\">\r\n                                            <CKEditorComponent\r\n                                                onChange={handleEditor}\r\n                                                placeholder=\"Write your comment here!\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"mt-3 d-flex align-items-center justify-content-end py-4\">\r\n                                            <div\r\n                                                className=\"ml-auto d-flex align-items-center w-fit\"\r\n                                                style={{ gap: \"10px\" }}\r\n                                            >\r\n                                                <SubmitButton\r\n                                                    variant=\"success\"\r\n                                                    title=\"Approve & Close\"\r\n                                                    onClick={() =>\r\n                                                        onSubmit(\"approved\")\r\n                                                    }\r\n                                                    isLoading={isLoading}\r\n                                                    className=\"ml-auto mr-2\"\r\n                                                />\r\n                                                {!isLoading && (\r\n                                                    <SubmitButton\r\n                                                        title=\"Deny & Close\"\r\n                                                        onClick={() =>\r\n                                                            onSubmit(\"denied\")\r\n                                                        }\r\n                                                        isLoading={isLoading}\r\n                                                        className=\"deny_button\"\r\n                                                    />\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* end body */}\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </React.Fragment>\r\n                </React.Fragment>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReportResoveButton;\r\n","import _ from \"lodash\";\r\nimport { Placeholder } from \"../../../global/Placeholder\";\r\n\r\nexport default function ReportTableLoder(){\r\n    return(\r\n        _.times(5, item => (\r\n            <tr key={item} className=\"sp1_tasks_tr\" > \r\n                <td className=\"sp1_tasks_td\">\r\n                    <Placeholder width=\"50px\" height=\"14px\" className=\"mb-1\"/> \r\n                </td>\r\n\r\n                <td className=\"sp1_tasks_td d-flex align-items-center\">\r\n                    <Placeholder width=\"24px\" height=\"24px\" type=\"circle\" className=\"mb-1 mr-2\"/>\r\n                    <Placeholder width=\"80px\" height=\"13px\" className=\"mb-1\"/>\r\n                </td> \r\n\r\n                <td className=\"sp1_tasks_td d-flex align-items-center\">\r\n                    <Placeholder width=\"24px\" height=\"24px\" type=\"circle\" className=\"mb-1 mr-2\"/>\r\n                    <Placeholder width=\"80px\" height=\"13px\" className=\"mb-1\"/>\r\n                </td>  \r\n                  \r\n                <td className=\"sp1_tasks_td\">\r\n                    <Placeholder width=\"100%\" height=\"13px\" className=\"mb-1\"/>\r\n                    <Placeholder width=\"60%\" height=\"13px\" className=\"mb-1\"/>\r\n                </td> \r\n\r\n                <td className=\"sp1_tasks_td\">\r\n                    <Placeholder width=\"100%\" height=\"13px\" className=\"mb-1\"/>\r\n                    <Placeholder width=\"100%\" height=\"13px\" className=\"mb-1\"/>\r\n                    <Placeholder width=\"40%\" height=\"13px\" className=\"mb-1\"/>\r\n                </td> \r\n                <td className=\"sp1_tasks_td\">\r\n                    <Placeholder width=\"80px\" height=\"13px\" className=\"mb-1\"/> \r\n                </td>  \r\n\r\n                <td className=\"sp1_tasks_td\">\r\n                    <Placeholder width=\"80px\" height=\"20px\" className=\"mb-1\"/> \r\n                </td>\r\n                <td className=\"sp1_tasks_td\">\r\n                    <Placeholder width=\"80px\" height=\"20px\" className=\"mb-1\"/> \r\n                </td>\r\n            </tr>\r\n        ))\r\n    )\r\n}","import {\r\n    useReactTable,\r\n    getCoreRowModel,\r\n    getPaginationRowModel,\r\n    getFilteredRowModel,\r\n    getSortedRowModel,\r\n    flexRender,\r\n} from \"@tanstack/react-table\";\r\nimport React from \"react\";\r\nimport { DragableColumnHeader } from \"./table/DragableColumnHeader\";\r\nimport demo from \"./demo.json\";\r\nimport Person from \"./Person\";\r\nimport ReportResoveButton from \"./ReportResolveButton\";\r\nimport ReportTableLoder from \"./loader/ReportTableLoder\";\r\nimport EmptyTable from \"../../global/EmptyTable\";\r\nimport _ from \"lodash\";\r\n\r\n// columns model\r\n\r\nconst ReportTableModal = ({\r\n    reports = [],\r\n    task,\r\n    search,\r\n    tableName = \"sp1-table\",\r\n    isLoading = true,\r\n}) => {\r\n    const [data, setData] = React.useState([...reports]);\r\n    const [sorting, setSorting] = React.useState([]);\r\n    const [{ pageIndex, pageSize }, setPagination] = React.useState({\r\n        pageIndex: 0,\r\n        pageSize: 10,\r\n    });\r\n  \r\n\r\n    //\r\n    const defaultColumns = React.useMemo(() => [\r\n        {\r\n            id: \"serial_no\",\r\n            header: \"Serial No.\",\r\n            accessorKey: \"id\",\r\n            cell: (info) => info.getValue(),\r\n        },\r\n        {\r\n            id: \"report_issuer\",\r\n            header: \"Report Issuer\",\r\n            cell: ({ row }) => {\r\n                const data = row?.original;\r\n                return (\r\n                    <span>\r\n                        <Person\r\n                            url={`/account/employees/${data?.added_by}`}\r\n                            name={data?.report_issue_added_by}\r\n                            avatar={data?.report_issue_added_by_avatar}\r\n                        />\r\n                    </span>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            id: \"accountable_individual\",\r\n            header: \"Accountable Individual\",\r\n            cell: ({ row }) => {\r\n                const data = row?.original;\r\n                return (\r\n                    <span>\r\n                        <Person\r\n                            url={`/account/employees/${data?.person}`}\r\n                            name={data?.responsible_person_name}\r\n                            avatar={data?.responsible_person_avatar}\r\n                        />\r\n                    </span>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            id: \"report_reason\",\r\n            header: \"Report Reason\",\r\n            cell: ({ row }) => {\r\n                const data = row?.original;\r\n                return <span>{data?.reason}</span>;\r\n            },\r\n        },\r\n        {\r\n            id: \"report_reason_details\",\r\n            header: \"Report Reason Details\",\r\n            cell: ({ row }) => {\r\n                const data = row?.original;\r\n                return (\r\n                    <div\r\n                        className=\"sp1_ck_content\"\r\n                        dangerouslySetInnerHTML={{ __html: data?.comment }}\r\n                    />\r\n                );\r\n            },\r\n        },\r\n        {\r\n            id: \"pre_reported\",\r\n            header: \"Previously Reported\",\r\n            cell: ({ row }) => {\r\n                const data = row?.original;\r\n                return <span>{data?.previousNotedIssue}</span>;\r\n            },\r\n        },\r\n        {\r\n            id: \"action\",\r\n            header: \"Action\",\r\n            cell: ({ row }) => {\r\n                const data = row?.original;\r\n                return <ReportResoveButton row={data} />;\r\n            },\r\n        },\r\n    ]);\r\n\r\n    // columns\r\n    const [columns] = React.useState([...defaultColumns]);\r\n    const [columnOrder, setColumnOrder] = React.useState(_.map(columns, \"id\"));\r\n    const resetColumnsOrder = () => setColumnOrder(_.map(columns, \"id\"));\r\n\r\n    const pagination = React.useMemo(\r\n        () => ({ pageIndex, pageSize }),\r\n        [pageIndex, pageSize]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        setData([...reports]);\r\n    }, [reports]);\r\n\r\n    const table = useReactTable({\r\n        data,\r\n        columns,\r\n        state: {\r\n            sorting,\r\n            columnOrder,\r\n            pagination,\r\n            tableName,\r\n            globalFilter: search,\r\n        },\r\n        onPaginationChange: setPagination,\r\n        onSortingChange: setSorting,\r\n        onColumnOrderChange: setColumnOrder,\r\n        getCoreRowModel: getCoreRowModel(),\r\n        getPaginationRowModel: getPaginationRowModel(),\r\n        getFilteredRowModel: getFilteredRowModel(),\r\n        getSortedRowModel: getSortedRowModel(),\r\n    });\r\n\r\n    return (\r\n        <div className=\"sp1_tasks_table_wrapper sp1_tasks_report_table_wrapper\">\r\n            <table className=\"sp1_tasks_table sp1_tasks_report_table\">\r\n                <thead className=\"sp1_tasks_thead\">\r\n                    {table.getHeaderGroups().map((headerGroup) => (\r\n                        <tr key={headerGroup.id} className=\"sp1_tasks_tr\">\r\n                            {headerGroup.headers.map((header) => {\r\n                                return (\r\n                                    <DragableColumnHeader\r\n                                        key={header.id}\r\n                                        header={header}\r\n                                        table={table}\r\n                                        className=\"sp1_tasks_report_th\"\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody className=\"sp1_tasks_tbody\">\r\n                    {isLoading && <ReportTableLoder />}\r\n                    {!isLoading &&\r\n                        table.getRowModel().rows.map((row) => {\r\n                            return (\r\n                                <tr className=\"sp1_tasks_tr\" key={row.id}>\r\n                                    {row.getVisibleCells().map((cell) => {\r\n                                        return (\r\n                                            <td\r\n                                                key={cell.id}\r\n                                                className=\"px-2 sp1_tasks_td sp1_tasks_report_td\"\r\n                                            >\r\n                                                {flexRender(\r\n                                                    cell.column.columnDef.cell,\r\n                                                    cell.getContext()\r\n                                                )}\r\n                                            </td>\r\n                                        );\r\n                                    })}\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                </tbody>\r\n            </table>\r\n\r\n            {!isLoading && _.size(data) === 0 && <EmptyTable />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReportTableModal;\r\n"],"names":["_ref","_window","row","_React$useState2","_slicedToArray","React","isOpen","setIsOpen","_React$useState4","_React$useState6","comment","setComment","_useResolveReportMuta2","useResolveReportMutation","resolveReport","isLoading","dispatch","useDispatch","close","isTopManagement","_","window","Laravel","user","role_id","onSubmit","type","data","status","report_id","id","admin_comment","unwrap","then","res","updateReportStatus","document","getElementById","style","cursor","variant","title","badge","_jsxs","children","_jsx","className","concat","Button","onClick","Modal","CKEditorComponent","onChange","e","editor","getData","placeholder","gap","SubmitButton","ReportTableLoder","item","Placeholder","width","height","_ref$reports","reports","search","task","_ref$tableName","tableName","_ref$isLoading","_toConsumableArray","setData","sorting","setSorting","pageIndex","pageSize","_React$useState6$","setPagination","defaultColumns","header","accessorKey","cell","info","getValue","_ref2","original","Person","url","added_by","name","report_issue_added_by","avatar","report_issue_added_by_avatar","_ref3","person","responsible_person_name","responsible_person_avatar","_ref4","reason","_ref5","dangerouslySetInnerHTML","__html","_ref6","previousNotedIssue","_ref7","ReportResoveButton","columns","_React$useState10","columnOrder","setColumnOrder","pagination","table","useReactTable","state","globalFilter","onPaginationChange","onSortingChange","onColumnOrderChange","getCoreRowModel","getPaginationRowModel","getFilteredRowModel","getSortedRowModel","getHeaderGroups","map","headerGroup","headers","DragableColumnHeader","getRowModel","rows","getVisibleCells","flexRender","column","columnDef","getContext","EmptyTable"],"sourceRoot":""}