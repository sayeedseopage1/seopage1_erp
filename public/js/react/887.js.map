{"version":3,"file":"js/react/887.js","mappings":"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","sources":["webpack:///./resources/js/react/TimeLogTable/components/TimeLogTableFilterBar.jsx","webpack:///./resources/js/react/TimeLogTable/components/TaskWiseTableLoader.jsx","webpack:///./resources/js/react/TimeLogTable/components/TaskWiseLogTable.jsx","webpack:///./resources/js/react/TimeLogTable/components/TaskWiseLogTableColumn.jsx","webpack:///./resources/js/react/TimeLogTable/export/excel/ExportTaskWiseTableDataToExcel.jsx","webpack:///./resources/js/react/TimeLogTable/pages/TaskWiseTable.jsx","webpack:///./resources/js/react/services/api/timeLogTableApiSlice.js"],"sourcesContent":["import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport JqueryDateRangePicker from './JqueryDateRangePicker';\r\nimport PersonFilter from './PersonFilter';\r\nimport { useLazyGetAllUsersQuery } from '../../services/api/userSliceApi';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setUsers } from '../../services/features/usersSlice';\r\nimport FilterItem from './FilterBarItem';\r\nimport dayjs from 'dayjs';\r\nimport { useGetProjectsOptionsQuery } from '../../services/api/FilterBarOptionsApiSlice';\r\n// import PersonFilterItem from './ProjectFilter';\r\nimport ProjectFilterItem from './ProjectFilter';\r\n\r\n\r\nexport default function TimeLogTableFilterBar ({onFilter}){\r\n    const { users } = useSelector(s => s.users);\r\n    const dispatch = useDispatch();\r\n    const [startDate, setStartDate] = React.useState(null);\r\n    const [endDate, setEndDate] = React.useState(null);\r\n    const [status, setStatus] = React.useState('in progress');\r\n\r\n    // employee\r\n    const [selectedEmployeeId, setSelectedEmployeeId] = React.useState(null);\r\n    const [selectedPMId, setSelectedPMId] = React.useState(null);\r\n    const [selectedClientId, setSelectedClientId] = React.useState(null);\r\n    const [selectedProject, setSelectedProject] = React.useState(null);\r\n\r\n    const logged_user = window?.Laravel?.user;\r\n    const top_management = [1, 6, 4, 8].includes(Number(logged_user?.role_id));\r\n\r\n\r\n    // fetch all users\r\n    const [getAllUsers, {  isFetching:userIsFetching}] = useLazyGetAllUsersQuery('', {\r\n        skip: users.length\r\n    });\r\n\r\n    const { data: getProjectsOptions, isFetching } = useGetProjectsOptionsQuery('');\r\n\r\n    \r\n    React.useEffect(() => {\r\n        if( !users.length && !userIsFetching){\r\n            (async () => { \r\n                let res = await getAllUsers().unwrap(); \r\n                if(res){\r\n                    dispatch(setUsers(res));\r\n                }\r\n            })()\r\n        }\r\n    }, []) \r\n\r\n\r\n    \r\n    React.useEffect(() => {\r\n        if(users?.length){\r\n            if(!top_management){\r\n                setSelectedEmployeeId(logged_user?.id)\r\n            }\r\n        }\r\n    }, [users]);\r\n\r\n   \r\n\r\n    let content = null;\r\n\r\n    // filter options\r\n    const _selectedEmployeeId = React.useMemo(() => selectedEmployeeId, [selectedEmployeeId]);\r\n    const _selectedClientId = React.useMemo(() => selectedClientId, [selectedClientId]);\r\n    const _selectedPMId = React.useMemo(() => selectedPMId, [selectedPMId]); \r\n    const _status = React.useMemo(() => status, [status]); \r\n    const _selectedProject = React.useMemo(() => selectedProject, [selectedProject])\r\n    const _startDate = React.useMemo(() => startDate, [startDate]);\r\n    const _endDate = React.useMemo(() => endDate, [endDate]);\r\n\r\n    React.useEffect(()=> {\r\n        if(_startDate && endDate){\r\n            onFilter({\r\n                start_date: dayjs(_startDate).format('YYYY-MM-DD'),\r\n                end_date: dayjs(_endDate).format('YYYY-MM-DD'),\r\n                employee_id: _selectedEmployeeId,\r\n                pm_id: _selectedPMId,\r\n                client_id: _selectedClientId,   \r\n                status: _status,\r\n                project_id: _selectedProject ? _selectedProject.id : null\r\n            })\r\n        }\r\n    }, [_selectedClientId, _selectedEmployeeId, _selectedPMId, _status, _selectedProject, _startDate, _endDate]);\r\n\r\n\r\n    const handleStatusFilter = (status) => {\r\n        if(status){\r\n            setStatus(status);\r\n        }else{\r\n            setStatus(null);\r\n        }\r\n    }   \r\n    \r\n    const handleDateFilter = (s, e) => {} \r\n\r\n    const handleProjectFilter = (e, data) => {\r\n        if(data){\r\n            setSelectedProject(data);\r\n        }else{\r\n            setSelectedProject(null)\r\n        }\r\n    }\r\n\r\n    const handleEmployeeFilter = (e, data) => { \r\n        e.preventDefault();\r\n        if(data){\r\n            setSelectedEmployeeId(data.id);\r\n        }else{\r\n            setSelectedEmployeeId(null);\r\n        }\r\n        \r\n    }\r\n\r\n    const handlePMFilter = (e, data) => {\r\n        e.preventDefault();\r\n        if(data){\r\n            setSelectedPMId(data.id);\r\n        }else{\r\n            setSelectedPMId(null);\r\n        }\r\n    }\r\n\r\n\r\n    const handleClientFilter = (e, data) => {\r\n        e.preventDefault();\r\n       if(data){\r\n            setSelectedClientId(data.id);\r\n       } else{\r\n            setSelectedClientId(null);\r\n       }\r\n    }\r\n\r\n \r\n    content =  <div className='d-flex flex-wrap bg-white p-1'>\r\n        <div className='border-right pr-1'>\r\n            <JqueryDateRangePicker \r\n                startDate={startDate}\r\n                setStartDate={setStartDate}\r\n                endDate={endDate}\r\n                setEndDate={setEndDate}\r\n                onApply={handleDateFilter}\r\n            />\r\n        </div>\r\n\r\n        {/* employee */}\r\n        <PersonFilter\r\n            title=\"Employee\"\r\n            items={users ? [...users?.filter(user => {\r\n                if(top_management){\r\n                    return user.role_id && Number(user.role_id) !== 4\r\n                }else{\r\n                    return user.id === logged_user.id\r\n                }\r\n            })]:[]}\r\n            selected={selectedEmployeeId ? users?.find(u => Number(u.id) === selectedEmployeeId) : null}\r\n            isLoading={userIsFetching}\r\n            onSelect={handleEmployeeFilter}\r\n            selectedAllButton = {top_management}\r\n        />\r\n\r\n\r\n        {/* project manager */}\r\n        <PersonFilter\r\n            title=\"Project Manager\"\r\n            items={users ? [...users?.filter(user => user.role_id && Number(user.role_id) === 4)] : []}\r\n            selected={selectedPMId ? users?.find(u => Number(u.id) === selectedPMId): null}\r\n            isLoading={userIsFetching}\r\n            onSelect={handlePMFilter}\r\n        />\r\n\r\n        {/* client */}\r\n        <PersonFilter\r\n            title=\"Client\"\r\n            items={users ? [...users?.filter(user => !user.role_id)] : []}\r\n            selected={selectedClientId ? users?.find(u => Number(u.id) === selectedClientId): null}\r\n            isLoading={userIsFetching}\r\n            onSelect={handleClientFilter}\r\n        />\r\n \r\n\r\n        <ProjectFilterItem\r\n            title=\"Project\"\r\n            items={getProjectsOptions ? [...getProjectsOptions]: []}\r\n            isLoading={isFetching}\r\n            selected={selectedProject}\r\n            onSelect={handleProjectFilter}\r\n        />\r\n    \r\n        <FilterItem\r\n            title=\"Status\"\r\n            items = {[\"finished\", \"canceled\", \"in progress\", \"partially finished\", \"under review\"]}\r\n            selected={status}\r\n            isLoading={false}\r\n            onSelect={handleStatusFilter}\r\n        />\r\n\r\n\r\n\r\n    </div>\r\n\r\n    if(!content) {\r\n        return null;\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        content,\r\n        document.getElementById('timeLogTableFilterBar')\r\n    )\r\n}","import React from \"react\";\r\nimport { Placeholder } from \"../../global/Placeholder\";\r\nimport _ from \"lodash\";\r\n\r\n\r\nconst PersonLoader = () => {\r\n    return(\r\n        <div\r\n            className=\"d-flex align-items-center\"\r\n            style={{ gap: \"10px\" }}\r\n        >\r\n            <Placeholder\r\n                className=\"sp1-item-center border rounded-circle\"\r\n                width=\"36px\"\r\n                height=\"36px\"\r\n            />\r\n\r\n            <div className=\"\">\r\n                <h6 className=\"mb-2 f-14\">\r\n                    <Placeholder width=\"130px\" />\r\n                </h6>\r\n                <span className=\"f-12 text-hover-underline\">\r\n                    <Placeholder height=\"10px\" width=\"80px\" />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TaskWiseTimeLogTableLoader = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <tr className=\"sp1_tlr_tr\">\r\n                <td className=\"sp1_tlr_td\" rowSpan={3}> <Placeholder width=\"250px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" rowSpan={3}> <Placeholder width=\"200px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" rowSpan={3}> <PersonLoader/> </td> \r\n                <td className=\"sp1_tlr_td\" rowSpan={3}> <PersonLoader/> </td> \r\n                <td className=\"sp1_tlr_td\" > <PersonLoader/> </td>\r\n                <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n            </tr>\r\n\r\n            {_.times(2, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\"> \r\n                    <td className=\"sp1_tlr_td\" > <PersonLoader/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                    <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                </tr>\r\n            ))}\r\n\r\n            {_.times(2, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\">\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder width=\"180px\"/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder width=\"200px\"/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td> \r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td> \r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                    <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                </tr>\r\n            ))}\r\n\r\n            <tr className=\"sp1_tlr_tr\">\r\n                <td className=\"sp1_tlr_td\" rowSpan={2}> <Placeholder width=\"180px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" rowSpan={2}> <Placeholder width=\"200px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" rowSpan={2}> <PersonLoader/> </td> \r\n                <td className=\"sp1_tlr_td\" rowSpan={2}> <PersonLoader/> </td> \r\n                <td className=\"sp1_tlr_td\" > <PersonLoader/> </td>\r\n                <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n            </tr>\r\n\r\n            {_.times(1, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\"> \r\n                    <td className=\"sp1_tlr_td\" > <PersonLoader/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                    <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                </tr>\r\n            ))}\r\n\r\n            {_.times(3, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\">\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder width=\"180px\"/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder width=\"200px\"/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td> \r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td> \r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                    <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                </tr>\r\n            ))}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TaskWiseTimeLogTableLoader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocalStorage } from \"react-use\";\r\nimport TableDragAbleHeader from \"./DragHeader\";\r\nimport TableFooter from \"./TableFooter\";\r\nimport TaskWiseTimeLogTableLoader from \"./TaskWiseTableLoader\";\r\nimport \"./data-table.css\";\r\n\r\nconst DataTable = ({\r\n    data,\r\n    columns = [],\r\n    tableName = \"data-table\",\r\n    sortBy = \"\",\r\n    height = \"calc(100vh - 100px)\",\r\n    onPaginate,\r\n    perpageData,\r\n    handlePerPageData,\r\n    totalEntry,\r\n    currentPage,\r\n    isLoading,\r\n}) => {\r\n    const [columnOrder, setColumnOrder] = useState([]);\r\n    const [value, setValue] = useLocalStorage(tableName);\r\n\r\n    // get columns keys\r\n    useEffect(() => {\r\n        if(value?.columnOrders){\r\n            setColumnOrder(value?.columnOrders);\r\n        }else{\r\n            const column_ids = _.map(columns, \"id\");\r\n            setColumnOrder([...column_ids]);\r\n        }\r\n    }, []);\r\n\r\n    const _columns = _.sortBy(columns, (item) =>\r\n        _.indexOf(columnOrder, item.id)\r\n    );\r\n\r\n\r\n    // render row\r\n    const renderRow = (data) => {\r\n        const rows = [];\r\n        if (data) {\r\n            for (const [key, value] of data) {\r\n                value?.map((item, index) => {\r\n                    const className =\r\n                        value.length === index + 1\r\n                            ? \"sp1_tlr_td f-14 sp1_tlr_td_border\"\r\n                            : \"sp1_tlr_td f-14\";\r\n                    rows.push(\r\n                        <React.Fragment key={item.uuid}>\r\n                            <tr className=\"sp1_tlr_tr\">\r\n                                {\r\n                                    _.map(_columns, col =>{\r\n                                        if(col.group){\r\n                                            return index === 0 && (\r\n                                                <React.Fragment key={col.id}>\r\n                                                    {col.cell({row: item, rowSpan: _.size(value)})}\r\n                                                </React.Fragment>\r\n                                            );\r\n                                        }else{\r\n                                                return <React.Fragment key={col.id}>\r\n                                                    { col.cell({ row: item, className: `${className} sp1_drag_col_${col?.id}`})}\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </tr>\r\n                        </React.Fragment>\r\n                    );\r\n                });\r\n            }\r\n        }\r\n        return rows;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"p-3\">\r\n                <div\r\n                    className=\"position-relative sp1_tlr_tbl_wrapper\"\r\n                    style={{ height }}\r\n                >\r\n                    <table className=\"sp1_tlr_table\">\r\n                        <thead className=\"sp1_tlr_thead\">\r\n                            <tr className=\"sp1_tlr_tr\">\r\n                                {_.map(_columns, (column) => {\r\n                                    return (\r\n                                        <TableDragAbleHeader\r\n                                            key={column.id}\r\n                                            className=\"sp1_tlr_th\"\r\n                                            column={column}\r\n                                            columns = {_columns}\r\n                                            onSort={() => {}}\r\n                                            onDrop={setColumnOrder}\r\n                                            order={columnOrder}\r\n                                            tableName={tableName}\r\n                                            storeOnLocalStore={(columns) => setValue({...value, columnOrders: columns})}\r\n                                        />\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"sp1_tlr_tbody\">\r\n                            {!isLoading && renderRow(data)}\r\n                            {isLoading && <TaskWiseTimeLogTableLoader />}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <TableFooter\r\n                    onPaginate={onPaginate}\r\n                    perpageData={perpageData}\r\n                    totalEntry={totalEntry}\r\n                    currentPage={currentPage}\r\n                    handlePerPageData={handlePerPageData}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default DataTable;\r\n","import dayjs from \"dayjs\"\r\nimport UserRender from \"./UserRender\"\r\nimport { convertTime } from \"../../utils/converTime\"\r\n\r\nexport const TaskWiseTableColumn = [\r\n    {\r\n        id: 'task_id',\r\n        header: 'Task',\r\n        className: '',\r\n        group: true,\r\n        sorted: false,\r\n        cell: ({ row, col, rowSpan = 1 }) => {\r\n            return <td\r\n                className={`sp1_tlr_td sp1_tlr_td_border sp1_drag_col_${col?.id} sp1_tlr_td_marged ${rowSpan ? \"sp1_tlr_td_hover-disable\" : \"\"}`}\r\n                rowSpan={rowSpan}\r\n            >\r\n                <a href={`/account/tasks/${row?.task_id}`} >{row?.task_name}</a>\r\n            </td>\r\n        }\r\n    },\r\n    {\r\n        id: 'project_id',\r\n        header: 'Project Name',\r\n        className: '',\r\n        group: true,\r\n        sorted: false,\r\n        sortAccessor: 'project_id',\r\n        cell: ({ row, col, rowSpan = 1 }) => {\r\n            return <td\r\n                className={`sp1_tlr_td sp1_tlr_td_border sp1_drag_col_${col?.id} sp1_tlr_td_marged ${rowSpan ? \"sp1_tlr_td_hover-disable\" : \"\"}`}\r\n                rowSpan={rowSpan}\r\n            >\r\n                {\r\n                    row?.is_independent ?\r\n                        <span>{row?.project_name}</span> :\r\n                        <a href={`/account/tasks/${row?.task_id}`} >{row?.project_name}</a>\r\n                }\r\n            </td>\r\n        }\r\n    },\r\n    {\r\n        id: 'pm_id',\r\n        header: 'Project Manager',\r\n        className: '',\r\n        group: true,\r\n        sorted: false,\r\n        sortAccessor: 'pm_id',\r\n        cell: ({ row, col, rowSpan = 1 }) => {\r\n            return <td\r\n                className={`sp1_tlr_td sp1_tlr_td_border sp1_drag_col_${col?.id} sp1_tlr_td_marged ${rowSpan ? \"sp1_tlr_td_hover-disable\" : \"\"}`}\r\n                rowSpan={rowSpan}\r\n            >\r\n                <UserRender\r\n                    name={row?.pm_name}\r\n                    profileUrl={`/account/employees/${row?.pm_id}`}\r\n                    image={row?.pm_image}\r\n                    role={row?.pm_roles}\r\n                    id={row?.pm_id}\r\n                />\r\n            </td>\r\n        }\r\n    },\r\n    {\r\n        id: 'client_id',\r\n        header: 'Client Name',\r\n        className: '',\r\n        group: true,\r\n        sorted: false,\r\n        sortAccessor: 'client_id',\r\n        cell: ({ row, col, rowSpan = 1 }) => {\r\n            return <td\r\n                className={`sp1_tlr_td sp1_tlr_td_border  sp1_drag_col_${col?.id} sp1_tlr_td_marged ${rowSpan ? \"sp1_tlr_td_hover-disable\" : \"\"}`}\r\n                rowSpan={rowSpan}\r\n            >\r\n                <UserRender\r\n                    name={row?.client_name}\r\n                    profileUrl={`/account/clients/${row?.client_id}`}\r\n                    image={row?.client_image}\r\n                    role={row?.is_independent ? \"\" : \"Freelancer.com\"}\r\n                    roleLink={row?.client_from}\r\n                    id={row?.client_id}\r\n                />\r\n            </td>\r\n        }\r\n    },\r\n    {\r\n        id: 'employee_id',\r\n        header: 'Employee Name',\r\n        className: '',\r\n        sorted: true,\r\n        group: false,\r\n        sortAccessor: '',\r\n        cell: ({ row, col, className, rowSpan }) => {\r\n            return <td className={className} rowSpan={rowSpan}>\r\n                <UserRender\r\n                    name={row?.employee_name}\r\n                    profileUrl={`/account/employees/${row?.employee_id}`}\r\n                    image={row?.employee_image}\r\n                    role={\r\n                        row?.employee_roles\r\n                    }\r\n                    id={row?.employee_id}\r\n                />\r\n            </td>\r\n        }\r\n\r\n    },\r\n    {\r\n        id: 'start_time',\r\n        header: 'Start Time',\r\n        className: '',\r\n        sorted: false,\r\n        group: false,\r\n        cell: ({ row, className }) => {\r\n            return <td className={className}>\r\n                {dayjs(row?.start_time).format('MMM DD, YYYY')} <br />\r\n                at {dayjs(row?.start_time).format('hh:mm A')}\r\n            </td>\r\n        }\r\n    },\r\n    {\r\n        id: 'end_time',\r\n        header: 'End Time',\r\n        className: '',\r\n        sorted: false,\r\n        group: false,\r\n        cell: ({ row, className }) => {\r\n            return (\r\n                <td className={className}>\r\n                    {row?.end_time ?\r\n                        dayjs(row?.end_time).format('MMM DD, YYYY [at] hh:mm A') :\r\n                        <span className=\"text-success\">Active</span>\r\n                    }\r\n                </td>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        id: 'total_track_time',\r\n        header: 'Total Track Time',\r\n        className: '',\r\n        sorted: false,\r\n        group: false,\r\n        cell: ({ row, className }) => {\r\n            return <td className={className}>\r\n                {row?.total_minutes ? (\r\n                    convertTime(row?.total_minutes)\r\n                ) : (\r\n                    <span className=\"text-danger\">\r\n                        <i\r\n                            className=\"fa-solid fa-chevron-left mr-1\"\r\n                            style={{ fontSize: \"10px\" }}\r\n                        />\r\n                        1 min\r\n                    </span>\r\n                )}\r\n            </td>\r\n        }\r\n    }\r\n]\r\n","import * as React from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport ReactExport from \"react-data-export\";\r\nimport _ from \"lodash\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\nconst ExportTaskWiseTableDataToExcel = ({ data, button, filter, filename }) => {\r\n    const fieldStyle = {\r\n        alignment: {\r\n            wrapText: true,\r\n            vertical: \"center\",\r\n            horizontal: \"top\",\r\n        },\r\n    };\r\n\r\n    console.log(\"data\", data);\r\n    // get data\r\n    const getData = (data) => {\r\n        let rows = [];\r\n        _.forEach(data, (d) => {\r\n            let row = [\r\n                {\r\n                    value: d[\"task_name\"] ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n                {\r\n                    value: d[\"project_name\"] ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n                {\r\n                    value: d[\"pm_name\"] ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n                {\r\n                    value: d[\"client_name\"] ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n                {\r\n                    value: d[\"employee_name\"] ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n                {\r\n                    value: d[\"start_time\"] ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n                {\r\n                    value: d[\"end_time\"] ?? \"active\",\r\n                    style: {\r\n                        ...fieldStyle,\r\n                        font: {\r\n                            color: d[\"end_time\"]\r\n                                ? { rgb: \"00000000\" }\r\n                                : { rgb: \"FF00AA00\" },\r\n                        },\r\n                    },\r\n                },\r\n                {\r\n                    value: d[\"hours\"] ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n            ];\r\n\r\n            rows.push(row);\r\n        });\r\n        return rows;\r\n    };\r\n\r\n    // columns\r\n    const columns = [\r\n        { title: \"Task Name\", width: { wpx: 300 } },\r\n        { title: \"Project Name\", width: { wpx: 300 } },\r\n        { title: \"Project Manager\", width: { wpx: 200 } },\r\n        { title: \"Client Name\", width: { wpx: 200 } },\r\n        { title: \"Employee Name\", width: { wpx: 200 } },\r\n        { title: \"Start Time\", width: { wpx: 200 } },\r\n        { title: \"End Time\", width: { wpx: 200 } },\r\n        { title: \"Total Track Time\", width: { wpx: 200 } },\r\n    ];\r\n\r\n    // multi data set\r\n    const multiDataSet = [\r\n        {\r\n            columns: [\r\n                { title: \"Filter\" },\r\n                { title: \"Date\" },\r\n                { title: \"Status\" },\r\n            ],\r\n            data: [\r\n                [\r\n                    {\r\n                        value: `--`,\r\n                    },\r\n                    {\r\n                        value: `${dayjs(filter?.start_date).format(\r\n                            \"MMM-DD-YYYY\"\r\n                        )} to ${dayjs(filter?.end_date).format(\"MMM-DD-YYYY\")}`,\r\n                        style: {\r\n                            font: {\r\n                                bold: true,\r\n                            },\r\n                        },\r\n                    },\r\n                    {\r\n                        value: _.startCase(filter?.status),\r\n                        style: {\r\n                            font: {\r\n                                bold: true,\r\n                                color: \"#ffffff\",\r\n                            },\r\n                        },\r\n                    },\r\n                ],\r\n            ],\r\n        },\r\n        {\r\n            xSteps: 0,\r\n            ySteps: 2,\r\n            columns: columns,\r\n            data: getData(data),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <ExcelFile filename={filename} element={button}>\r\n            <ExcelSheet dataSet={multiDataSet} name={filename} />\r\n        </ExcelFile>\r\n    );\r\n};\r\n\r\nexport default ExportTaskWiseTableDataToExcel;\r\n","import { groupBy, orderBy } from \"lodash\";\r\nimport React, { useState } from \"react\";\r\nimport Loader from \"../../global/Loader\";\r\nimport { useGetTaskWiseDataMutation } from \"../../services/api/timeLogTableApiSlice\";\r\nimport { convertTime } from \"../../utils/converTime\";\r\nimport { paginate } from '../../utils/paginate';\r\nimport { RefreshButton } from \"../components/RefreshButton\";\r\nimport Tabbar from \"../components/Tabbar\";\r\nimport TaskWiseLogTable from '../components/TaskWiseLogTable';\r\nimport { TaskWiseTableColumn } from \"../components/TaskWiseLogTableColumn\";\r\nimport TimeLogTableFilterBar from \"../components/TimeLogTableFilterBar\";\r\nimport { ExportToExcel } from \"../components/ExportToExcel\";\r\nimport ExportTaskWiseTableDataToExcel from \"../export/excel/ExportTaskWiseTableDataToExcel\";\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport Switch from '../../global/Switch'\r\n\r\nconst TaskWiseLogReport = () => {\r\n    const [data, setData] = useState([]);\r\n    const [perPageData, setParPageData] = useState(10);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [renderData, setRenderData] = useState(null);\r\n    const [sortConfig, setSortConfig] = useState([]);\r\n    const [trackedTime, setTrackedTime] = useState(0);\r\n    const [filter, setFilter] = useState(null);\r\n    const [getTaskWiseData, {isLoading}] = useGetTaskWiseDataMutation();\r\n\r\n    // current user\r\n    const auth = useAuth();\r\n\r\n    // handle data\r\n    const handleData = (data, currentPage, perPageData) => {\r\n        const paginated = paginate(data, currentPage, perPageData);\r\n        const grouped = groupBy(paginated, 'task_id');\r\n        const sorted = Object.entries(grouped).sort(([keyA], [keyB]) => keyB - keyA);\r\n        setRenderData([...sorted]);\r\n    }\r\n\r\n    // handle fetch data\r\n    const handleFetchData = async (filter) => {\r\n        setFilter(filter);\r\n        await getTaskWiseData(filter)\r\n            .unwrap()\r\n            .then(res => {\r\n                setCurrentPage(1);\r\n                const sortedData = orderBy(res?.data, [\"task_id\"], [\"desc\"]);\r\n                handleData(sortedData, 1, perPageData); \r\n                setData(sortedData); \r\n                const totalTrackTime = _.sumBy(sortedData, (d) => Number(d.total_minutes));\r\n                setTrackedTime(totalTrackTime);\r\n            })\r\n    }\r\n\r\n    // data sort handle\r\n    const handleSorting = (sort) => {\r\n        const sortData = orderBy(data, ...sort);\r\n        handleData(sortData, currentPage, perPageData);\r\n    }\r\n\r\n    // handle pagination\r\n    const handlePagination = (page) => {\r\n        setCurrentPage(page);\r\n        handleData(data, page, perPageData);\r\n    }\r\n\r\n    // handle par page data change\r\n    const handlePerPageData=(number)=>{\r\n        setParPageData(number);\r\n        handleData(data, currentPage, number);\r\n    }\r\n\r\n    // handle refresh button\r\n    const handleRefresh = () => {\r\n        handleFetchData(filter);\r\n    }\r\n\r\n    return (\r\n        <div className=\"sp1_tlr_container\">\r\n            <TimeLogTableFilterBar onFilter={handleFetchData} />\r\n            <div className=\"sp1_tlr_tbl_container\">\r\n                <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                    <Tabbar/>\r\n\r\n                    <div className=\"d-flex align-items-center\" style={{gap: '10px'}}>\r\n                        <RefreshButton onClick={handleRefresh} isLoading={isLoading} >\r\n                            {isLoading ?\r\n                                <Loader title=\"Refreshing...\"  borderRightColor=\"white\" />\r\n                            : 'Refresh'}\r\n                        </RefreshButton> \r\n                        \r\n                        {/* export button */}\r\n                        {/* <ExportToExcel>\r\n                            <i className=\"fa-solid fa-download\" />\r\n                            Export to Excel\r\n                        </ExportToExcel> */}\r\n                        <Switch>\r\n                            <Switch.Case condition={auth.getRoleId() === 1}>\r\n                                <ExportTaskWiseTableDataToExcel\r\n                                    data = {data}\r\n                                    filter={filter}\r\n                                    button = {\r\n                                        <ExportToExcel>\r\n                                            <i className=\"fa-solid fa-download\" />\r\n                                            Export to Excel\r\n                                        </ExportToExcel>\r\n                                    }\r\n                                    filename={`task_wise_table_${filter?.start_date}_to_${filter?.end_date}`} \r\n                                />\r\n                            </Switch.Case>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n                <div className=\" w-100 d-flex flex-wrap justify-center align-items-center\" style={{gap: '10px'}}>\r\n                    <span className=\"mx-auto\">\r\n                        Total Tracked Time: <strong>{convertTime(trackedTime)}</strong>\r\n                    </span>\r\n                </div>\r\n\r\n                <TaskWiseLogTable\r\n                    data={renderData}\r\n                    columns={TaskWiseTableColumn}\r\n                    tableName=\"task_timelog_report\"\r\n                    onSort={handleSorting}\r\n                    height=\"calc(100vh - 370px)\"\r\n                    onPaginate={handlePagination}\r\n                    perpageData={perPageData}\r\n                    handlePerPageData={handlePerPageData}\r\n                    currentPage={currentPage}\r\n                    totalEntry={data.length}\r\n                    isLoading={isLoading}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskWiseLogReport;\r\n","import { apiSlice } from \"./apiSlice\";            \r\n\r\n\r\nconst timeLogTableApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: (build) => ({\r\n        \r\n       getEmployeeWiseData:  build.mutation({\r\n            query: (data) => ({\r\n                url: `/get-timelogs/employees`,\r\n                method: \"POST\",\r\n                body: {\r\n                    ...data,\r\n                    _token: document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\")\r\n                }\r\n            }) \r\n       }),\r\n\r\n       getProjectWiseData: build.mutation({\r\n            query: (data) => ({\r\n                url: `/get-timelogs/projects`,\r\n                method: \"POST\",\r\n                body: {\r\n                    ...data,\r\n                    _token: document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\")\r\n                }\r\n            }) \r\n        }), \r\n\r\n        getTaskWiseData: build.mutation({\r\n            query: (data) => ({\r\n                url: `/get-timelogs/tasks`,\r\n                method: \"POST\",\r\n                body: {\r\n                    ...data,\r\n                    _token: document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\")\r\n                }\r\n            }) \r\n        }),  \r\n\r\n        getTimeLogHistory: build.mutation({\r\n            query: (data) => ({\r\n                url: `/get-timelogs/time_log_history`,\r\n                method: \"POST\",\r\n                body: {\r\n                    ...data,\r\n                    _token: document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\")\r\n                }\r\n            }) \r\n        }),  \r\n\r\n        getTimeLogHistoryDetails: build.query({\r\n            query: (userId) => `/account/tasks/developer-task-history/${userId}`\r\n        })\r\n\r\n\r\n    })\r\n}) ;\r\n\r\n\r\n\r\nexport const { \r\n     useGetEmployeeWiseDataMutation,\r\n     useGetTaskWiseDataMutation,\r\n     useGetProjectWiseDataMutation,\r\n     useGetTimeLogHistoryMutation,\r\n     useLazyGetTimeLogHistoryDetailsQuery \r\n} = timeLogTableApiSlice;\r\n\r\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","toString","from","test","len","arr2","TimeLogTableFilterBar","_ref","_window","onFilter","users","useSelector","dispatch","useDispatch","_React$useState2","React","startDate","setStartDate","_React$useState4","endDate","setEndDate","_React$useState6","status","setStatus","_React$useState8","selectedEmployeeId","setSelectedEmployeeId","_React$useState10","selectedPMId","setSelectedPMId","_React$useState12","selectedClientId","setSelectedClientId","_React$useState14","selectedProject","setSelectedProject","logged_user","window","Laravel","user","top_management","includes","Number","role_id","_useLazyGetAllUsersQu2","useLazyGetAllUsersQuery","skip","getAllUsers","userIsFetching","isFetching","_useGetProjectsOption","useGetProjectsOptionsQuery","getProjectsOptions","data","fn","_callee","res","_context","unwrap","setUsers","self","args","arguments","apply","err","undefined","id","content","_selectedEmployeeId","_selectedClientId","_selectedPMId","_status","_selectedProject","_startDate","_endDate","start_date","dayjs","format","end_date","employee_id","pm_id","client_id","project_id","_jsxs","className","children","_jsx","JqueryDateRangePicker","onApply","PersonFilter","title","items","_toConsumableArray","filter","selected","find","isLoading","onSelect","preventDefault","selectedAllButton","ProjectFilterItem","FilterItem","ReactDOM","document","getElementById","PersonLoader","style","gap","Placeholder","width","height","rowSpan","_","index","_ref$columns","columns","_ref$tableName","tableName","_ref$height","sortBy","onPaginate","perpageData","handlePerPageData","totalEntry","currentPage","_useState2","useState","columnOrder","setColumnOrder","_useLocalStorage2","useLocalStorage","setValue","useEffect","columnOrders","column_ids","map","_columns","item","indexOf","column","TableDragAbleHeader","onSort","onDrop","order","storeOnLocalStore","_objectSpread","rows","_step","_iterator","_createForOfIteratorHelper","_loop","_step$value","col","group","cell","row","size","concat","uuid","renderRow","TaskWiseTimeLogTableLoader","TableFooter","TaskWiseTableColumn","header","sorted","_ref$rowSpan","href","task_id","task_name","sortAccessor","_ref2","_ref2$rowSpan","is_independent","project_name","_ref3","_ref3$rowSpan","UserRender","pm_name","profileUrl","image","pm_image","role","pm_roles","_ref4","_ref4$rowSpan","client_name","client_image","roleLink","client_from","_ref5","employee_name","employee_image","employee_roles","_ref6","start_time","_ref7","end_time","_ref8","total_minutes","convertTime","fontSize","ExcelFile","ReactExport","ExcelSheet","button","filename","fieldStyle","alignment","wrapText","vertical","horizontal","console","log","multiDataSet","font","bold","color","xSteps","ySteps","wpx","_d$task_name","_d$project_name","_d$pm_name","_d$client_name","_d$employee_name","_d$start_time","_d$end_time","_d$hours","rgb","getData","element","dataSet","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","setData","_useState4","perPageData","setParPageData","_useState6","setCurrentPage","_useState8","renderData","setRenderData","_useState10","_useState12","trackedTime","setTrackedTime","_useState14","setFilter","_useGetTaskWiseDataMu2","useGetTaskWiseDataMutation","getTaskWiseData","auth","useAuth","handleData","paginated","paginate","grouped","groupBy","entries","sort","keyA","handleFetchData","sortedData","orderBy","totalTrackTime","sumBy","_x","Tabbar","RefreshButton","onClick","Loader","borderRightColor","Switch","Case","condition","getRoleId","ExportTaskWiseTableDataToExcel","ExportToExcel","TaskWiseLogTable","sortData","page","number","timeLogTableApiSlice","apiSlice","injectEndpoints","endpoints","build","getEmployeeWiseData","mutation","query","url","body","_token","querySelector","getAttribute","getProjectWiseData","getTimeLogHistory","getTimeLogHistoryDetails","userId","useGetEmployeeWiseDataMutation","useGetProjectWiseDataMutation","useGetTimeLogHistoryMutation","useLazyGetTimeLogHistoryDetailsQuery"],"sourceRoot":""}