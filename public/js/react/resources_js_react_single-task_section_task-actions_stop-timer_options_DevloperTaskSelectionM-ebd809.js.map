{"version":3,"file":"js/react/resources_js_react_single-task_section_task-actions_stop-timer_options_DevloperTaskSelectionM-ebd809.js","mappings":"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","sources":["webpack:///./resources/js/react/single-task/section/task-actions/stop-timer/options/DevloperTaskSelectionMenu.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport _ from \"lodash\"; \r\nimport { Combobox } from \"@headlessui/react\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\nimport { User } from \"../../../../../utils/user-details\";\r\nimport { useGetDeveloperTasksQuery } from \"../../../../../services/api/SingleTaskPageApi\";\r\n\r\nconst DevloperTaskSelectionMenu = ({ task, setTask }) => {\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n \r\n    const user = new User(window?.Laravel?.user);\r\n\r\n    //  Fetch user wise tasks list \r\n    const {\r\n        data: developerTasks,\r\n        isFetching\r\n    } = useGetDeveloperTasksQuery(user?.getId());\r\n\r\n\r\n    // project filter\r\n    const filteredDeveloperTask =\r\n    searchQuery === \"\"\r\n            ? developerTasks\r\n            : developerTasks?.filter((task) =>\r\n                  _.lowerCase(task.heading).includes(\r\n                      _.lowerCase(searchQuery)\r\n                  )\r\n              );\r\n\r\n    return (\r\n        <div className=\"position-relative w-100 mb-3\">\r\n            <Combobox value={task} onChange={setTask}>\r\n                <Combobox.Button className=\"position-relative w-100\">\r\n                    <Combobox.Input\r\n                        className=\"w-100 bg-white py-2 pl-2 pr-1 border d-flex align-items-center justify-content-between\"\r\n                        displayValue={(task) => task?.heading}\r\n                        onChange={(e) => setSearchQuery(e.target.value)}\r\n                        placeholder=\"--\"\r\n                    />\r\n\r\n                    {/* Selection box icon */}\r\n                    <span\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"50%\",\r\n                            right: \"5px\",\r\n                            transform: \"translateY(-50%)\",\r\n                        }}\r\n                    >\r\n                        <HiOutlineSelector />\r\n                    </span>\r\n                </Combobox.Button>\r\n\r\n                <Combobox.Options\r\n                    className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                    style={{\r\n                        zIndex: \"1\",\r\n                        maxHeight: \"350px\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {(filteredDeveloperTask && filteredDeveloperTask.length) ? (\r\n                        filteredDeveloperTask?.map((task) => (\r\n                            <Combobox.Option\r\n                                key={task.id}\r\n                                value={task}\r\n                                tabIndex={-1}\r\n                                className={({ selected, active }) =>\r\n                                    selected\r\n                                        ? \"task-selection-list-option selected\"\r\n                                        : active\r\n                                        ? \"task-selection-list-option active\"\r\n                                        : \"task-selection-list-option\"\r\n                                }\r\n                            >\r\n                                <span>{task?.heading} <span className=\"badge badge-success\">{task?.client_name}</span></span>\r\n                            </Combobox.Option>\r\n                        ))\r\n                    ) : (\r\n                        <div className=\"task-selection-list-option\">\r\n                            {isFetching ? \"Loading...\" : \"Nothing found.\"}\r\n                        </div>\r\n                    )}\r\n                </Combobox.Options>\r\n            </Combobox>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DevloperTaskSelectionMenu;\r\n"],"names":["React","useState","_","Combobox","HiOutlineSelector","User","useGetDeveloperTasksQuery","jsx","_jsx","jsxs","_jsxs","DevloperTaskSelectionMenu","_ref","_window","task","setTask","_useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","user","window","Laravel","_useGetDeveloperTasks","getId","developerTasks","data","isFetching","filteredDeveloperTask","filter","lowerCase","heading","includes","className","children","value","onChange","Button","Input","displayValue","e","target","placeholder","style","position","top","right","transform","Options","zIndex","maxHeight","overflowY","length","map","Option","tabIndex","_ref2","selected","active","client_name","id"],"sourceRoot":""}