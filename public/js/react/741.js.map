{"version":3,"file":"js/react/741.js","mappings":"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","sources":["webpack:///./resources/js/react/single-independent-task/section/task-actions/report/ReportForm.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/stop-timer/options/UserSelectionList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\nimport Button from \"../../../components/Button\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport UserSelectionList from \"../stop-timer/options/UserSelectionList\";\r\nimport { useCreateReportMutation } from \"../../../../services/api/SingleTaskPageApi\";\r\nimport { User } from \"../../../../utils/user-details\";\r\n\r\n\r\n\r\nconst ReportForm = ({close, task, onSuccess}) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [person, setPerson] = useState(null);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [previousNotedIssue, setPreviousNotedIssue] = useState(\"\");\r\n    const [error, setError]  = useState(\"\");\r\n    const auth = new User(window.Laravel.user);\r\n\r\n    const [createReport, {isLoading}] = useCreateReportMutation(); \r\n\r\n\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 5000,\r\n        timerProgressBar: true,\r\n    });\r\n\r\n    const isValid = () => {\r\n        let err = new Object();\r\n        let errCount = 0;\r\n\r\n        if(!reason){\r\n            errCount++;\r\n            err.reason = 'Please select a reason for report!'\r\n        }\r\n\r\n        if(!person){\r\n            errCount++;\r\n            err.person = 'Select the responsible person!';\r\n        }\r\n\r\n        if(comment === ''){\r\n            errCount++;\r\n            err.comment = 'Please write a briefly describe about this report!'\r\n        }\r\n\r\n         if(previousNotedIssue === ''){\r\n            errCount++;\r\n            err.previousReport = 'You have to select an option.'\r\n        }\r\n\r\n        setError(err);\r\n        return !errCount;\r\n    }\r\n\r\n    const onSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const data = {\r\n            reason: reason?.name,\r\n            person: person?.id,\r\n            comment,\r\n            previousNotedIssue,\r\n            user_id: window?.Laravel?.user?.id,\r\n            task_id: task?.id\r\n        }\r\n        \r\n        if(isValid()){\r\n            createReport(data).unwrap()\r\n            .then((res) => { \r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: \"Report Issued Successfully!\"\r\n                });\r\n                close();\r\n                onSuccess();\r\n            })\r\n        }else{\r\n            Swal.fire({\r\n                position: \"center\",\r\n                icon: \"error\",\r\n                title: \"Please fillup the all required fields!\",\r\n                showConfirmButton: true,\r\n            }); \r\n        }\r\n    }\r\n\r\n    // get user \r\n    const users = auth?.getRoleId() === 6 ? [4, 8] : [4, 6]\r\n    const reports = [\r\n        {\r\n            id: 1,\r\n            name: `Project Manager /Team Lead ${auth?.getRoleId() === 6 ? '' : '/ Lead Developer'} Is Making Me Do Their Work Without Top Managements’ Authorization`,\r\n            info: \"Your report will be kept private and management won't disclose your name to anyone including the project manager and lead developer!\",\r\n        },\r\n        {\r\n            id: 2,\r\n            name: `Need Further Clarification From ${auth?.getRoleId() === 6 ? 'Team Lead':'Lead Developer'} / Project Manager`,\r\n            info: '',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form className=\"px-3\"> \r\n                <div className=\"form-group\">\r\n                    {reason?.info && <div className=\"f-12 alert alert-info py-1\">{reason?.info}</div>}\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">Select Reason for report</label> \r\n                    <div className=\"position-relative w-100 mb-3\">\r\n                        <Listbox value={reason} onChange={setReason}>\r\n                            <Listbox.Button className=\"w-100 bg-white py-2 pl-2 pr-1 border text-left d-flex align-items-center justify-content-between\">\r\n                                <span className=\"mr-auto\">\r\n                                    {reason?.name ?? <span style={{color: '#aaa'}}> -- </span>}\r\n                                </span>\r\n                                <HiOutlineSelector className=\"f-16\" />\r\n                            </Listbox.Button>\r\n\r\n                            <Listbox.Options\r\n                                className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                                style={{\r\n                                    zIndex: 10,\r\n                                    maxHeight: \"350px\",\r\n                                    overflowY: \"auto\",\r\n                                }}\r\n                            >\r\n                                {reports?.map((report) => (\r\n                                    <Listbox.Option\r\n                                        key={report.id}\r\n                                        value={report}\r\n                                        className={({ selected, active }) =>\r\n                                            selected\r\n                                                ? \"task-selection-list-option selected\"\r\n                                                : active\r\n                                                ? \"task-selection-list-option active\"\r\n                                                : \"task-selection-list-option\"\r\n                                        }\r\n                                    >\r\n                                        <div>\r\n                                            <div>{report?.name}</div>\r\n                                        </div>\r\n                                    </Listbox.Option>\r\n                                ))}\r\n                            </Listbox.Options>\r\n                        </Listbox>\r\n                    </div>\r\n                    {error?.reason && <div className=\"f-14\" style={{color:'red'}}>{error?.reason}</div>}\r\n                </div>\r\n                {/* reason selection end */}\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Responsible Person\r\n                    </label>\r\n                    <div className=\"position-relative w-100 mb-3\">\r\n                        <UserSelectionList person={person} setPerson={setPerson} roles={users} />\r\n                    </div>\r\n                    {error?.person && <div className=\"f-14\" style={{color:'red'}}>{error?.person}</div>}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"editor\" className=\"font-weight-bold\">\r\n                        Briefly describe the problem here...\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent\r\n                            onChange={(e, editor) => {\r\n                                const data = editor.getData();\r\n                                setComment(data);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    {error?.comment && <div className=\"f-14\" style={{color:'red'}}>{error?.comment}</div>}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Did you report the same issue previously?\r\n                    </label>\r\n                    <div className=\"\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"inlineRadioOptions\"\r\n                                id=\"inlineRadio1\"\r\n                                value=\"yes\"\r\n                                onChange={(e) =>\r\n                                    setPreviousNotedIssue(e.target.value)\r\n                                }\r\n                            />\r\n                            <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"inlineRadio1\"\r\n                            >\r\n                                Yes\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"inlineRadioOptions\"\r\n                                id=\"inlineRadio2\"\r\n                                value=\"no\"\r\n                                onChange={(e) =>\r\n                                    setPreviousNotedIssue(e.target.value)\r\n                                }\r\n                            />\r\n                            <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"inlineRadio2\"\r\n                            >\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    {error?.previousReport && <div className=\"f-14\" style={{color:'red'}}>{error?.previousReport}</div>}\r\n                </div>\r\n\r\n                <div className=\"my-3 d-flex align-items-center\">\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        onClick={close}\r\n                        className=\"ml-auto mr-2\"\r\n                    >\r\n                        Close\r\n                    </Button>\r\n\r\n                    <SubmitButton onClick={onSubmit} isLoading={isLoading} title=\"Report\" />\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ReportForm;\r\n","import React, { useState } from \"react\";\r\nimport { useUsers } from \"../../../../../hooks/useUsers\";\r\nimport { User } from \"../../../../../utils/user-details\";\r\nimport { Combobox } from \"@headlessui/react\";\r\nimport _ from \"lodash\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\n\r\nconst UserSelectionList = ({ person, setPerson, filter, roles=[] }) => {\r\n    const { users, usersIsFetching } = useUsers();\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    let _user = _.filter(users, (user) => !_.isNull(user.role_id));\r\n\r\n    if(roles && _.size(roles) > 0){\r\n        _user = _.filter(users, (user) => _.includes(roles, Number(user.role_id))); \r\n    }else if(filter){\r\n        switch (filter) {\r\n            case 'client':\r\n                _user = _.filter(users, (user) => _.isNull(user.role_id)); \r\n                break;\r\n            case 'developer': \r\n                _user = _.filter(users, (user) => _.includes([5, 8, 10], Number(user.role_id))); \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    let filteredUsers =\r\n        search === \"\"\r\n            ? _user\r\n            : _user?.filter((user) =>\r\n                  _.lowerCase(user.name).includes(_.lowerCase(search))\r\n              );\r\n\r\n    return (\r\n        <div className=\"position-relative w-100 mb-3\">\r\n            \r\n            <Combobox value={person} onChange={setPerson}>\r\n                <Combobox.Button className=\"position-relative w-100\">\r\n                    <Combobox.Input\r\n                        className=\"w-100 bg-white py-2 pl-2 pr-1 border d-flex align-items-center justify-content-between\"\r\n                        displayValue={(person) => person?.name}\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                        placeholder=\"--\"\r\n                    />\r\n\r\n                    {/* Selection box icon */}\r\n                    <span\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"50%\",\r\n                            right: \"5px\",\r\n                            transform: \"translateY(-50%)\",\r\n                        }}\r\n                    >\r\n                        <HiOutlineSelector />\r\n                    </span>\r\n                </Combobox.Button>\r\n\r\n                <Combobox.Options\r\n                    className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                    style={{\r\n                        zIndex: 10,\r\n                        maxHeight: \"350px\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {filteredUsers && filteredUsers.length ? (\r\n                        filteredUsers.map((user) => (\r\n                            <Combobox.Option\r\n                                key={user.id}\r\n                                value={user}\r\n                                className={({ selected, active }) =>\r\n                                selected\r\n                                    ? \"task-selection-list-option selected\"\r\n                                    : active\r\n                                    ? \"task-selection-list-option active\"\r\n                                    : \"task-selection-list-option\"\r\n                            }\r\n                            >\r\n                                {({selected}) => (\r\n                                    <div className=\"d-flex align-items-center bg-transparent f-14\" style={{ gap: \"10px\" }}>\r\n                                        <img\r\n                                            src={user?.image_url}\r\n                                            alt={user?.name}\r\n                                            width={24}\r\n                                            height={24}\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                        \r\n                                        {selected}\r\n                                        <span className=\"w-100\">{user?.name} <span className=\"badge badge-success\">{user?.employee_detail?.designation?.name}</span></span>\r\n\r\n                                        {selected && <span className=\"ml-auto\"> <i className=\"fa-solid fa-check text-white\" /> </span> }\r\n                                    </div>\r\n                                )}\r\n                            </Combobox.Option>\r\n                        ))\r\n                    ) : (\r\n                        <div className=\"task-selection-list-option\">\r\n                            {usersIsFetching ? \"Loading...\" : \"Nothing found.\"}\r\n                        </div>\r\n                    )}\r\n                </Combobox.Options>\r\n            </Combobox>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserSelectionList;\r\n\r\n// const UserList = (props) => {\r\n//     const user = new User(props.user);\r\n\r\n//     if (!user?.getRoleId()) return null;\r\n//     return (\r\n        \r\n//     );\r\n// };\r\n"],"names":["_ref","_reason$name","close","task","onSuccess","_useState2","_slicedToArray","useState","reason","setReason","_useState4","person","setPerson","_useState6","comment","setComment","_useState8","previousNotedIssue","setPreviousNotedIssue","_useState10","error","setError","auth","User","window","Laravel","user","_useCreateReportMutat2","useCreateReportMutation","createReport","isLoading","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","users","getRoleId","reports","id","name","concat","info","_jsx","React","children","_jsxs","className","htmlFor","Listbox","value","onChange","Button","style","color","HiOutlineSelector","Options","zIndex","maxHeight","overflowY","map","report","Option","_ref2","selected","active","UserSelectionList","roles","CKEditorComponent","e","editor","data","getData","type","target","previousReport","variant","onClick","SubmitButton","_window","preventDefault","err","errCount","user_id","task_id","Object","fire","icon","title","unwrap","then","res","_user2","filter","_ref$roles","_useUsers","useUsers","usersIsFetching","search","setSearch","_user","_","role_id","Number","filteredUsers","includes","Combobox","Input","displayValue","placeholder","top","right","transform","length","_ref3","_user$employee_detail","gap","src","image_url","alt","width","height","employee_detail","designation"],"sourceRoot":""}