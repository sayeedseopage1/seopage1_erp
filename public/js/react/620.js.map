{"version":3,"file":"js/react/620.js","mappings":"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","sources":["webpack:///./resources/js/react/single-independent-task/section/task-actions/stop-timer/options/UserSelectionList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useUsers } from \"../../../../../hooks/useUsers\";\r\nimport { User } from \"../../../../../utils/user-details\";\r\nimport { Combobox } from \"@headlessui/react\";\r\nimport _ from \"lodash\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\n\r\nconst UserSelectionList = ({ person, setPerson, filter, roles=[] }) => {\r\n    const { users, usersIsFetching } = useUsers();\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    let _user = _.filter(users, (user) => !_.isNull(user.role_id));\r\n\r\n    if(roles && _.size(roles) > 0){\r\n        _user = _.filter(users, (user) => _.includes(roles, Number(user.role_id))); \r\n    }else if(filter){\r\n        switch (filter) {\r\n            case 'client':\r\n                _user = _.filter(users, (user) => _.isNull(user.role_id)); \r\n                break;\r\n            case 'developer': \r\n                _user = _.filter(users, (user) => _.includes([5, 8, 10], Number(user.role_id))); \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    let filteredUsers =\r\n        search === \"\"\r\n            ? _user\r\n            : _user?.filter((user) =>\r\n                  _.lowerCase(user.name).includes(_.lowerCase(search))\r\n              );\r\n\r\n    return (\r\n        <div className=\"position-relative w-100 mb-3\">\r\n            \r\n            <Combobox value={person} onChange={setPerson}>\r\n                <Combobox.Button className=\"position-relative w-100\">\r\n                    <Combobox.Input\r\n                        className=\"w-100 bg-white py-2 pl-2 pr-1 border d-flex align-items-center justify-content-between\"\r\n                        displayValue={(person) => person?.name}\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                        placeholder=\"--\"\r\n                    />\r\n\r\n                    {/* Selection box icon */}\r\n                    <span\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"50%\",\r\n                            right: \"5px\",\r\n                            transform: \"translateY(-50%)\",\r\n                        }}\r\n                    >\r\n                        <HiOutlineSelector />\r\n                    </span>\r\n                </Combobox.Button>\r\n\r\n                <Combobox.Options\r\n                    className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                    style={{\r\n                        zIndex: 10,\r\n                        maxHeight: \"350px\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {filteredUsers && filteredUsers.length ? (\r\n                        filteredUsers.map((user) => (\r\n                            <Combobox.Option\r\n                                key={user.id}\r\n                                value={user}\r\n                                className={({ selected, active }) =>\r\n                                selected\r\n                                    ? \"task-selection-list-option selected\"\r\n                                    : active\r\n                                    ? \"task-selection-list-option active\"\r\n                                    : \"task-selection-list-option\"\r\n                            }\r\n                            >\r\n                                {({selected}) => (\r\n                                    <div className=\"d-flex align-items-center bg-transparent f-14\" style={{ gap: \"10px\" }}>\r\n                                        <img\r\n                                            src={user?.image_url}\r\n                                            alt={user?.name}\r\n                                            width={24}\r\n                                            height={24}\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                        \r\n                                        {selected}\r\n                                        <span className=\"w-100\">{user?.name} <span className=\"badge badge-success\">{user?.employee_detail?.designation?.name}</span></span>\r\n\r\n                                        {selected && <span className=\"ml-auto\"> <i className=\"fa-solid fa-check text-white\" /> </span> }\r\n                                    </div>\r\n                                )}\r\n                            </Combobox.Option>\r\n                        ))\r\n                    ) : (\r\n                        <div className=\"task-selection-list-option\">\r\n                            {usersIsFetching ? \"Loading...\" : \"Nothing found.\"}\r\n                        </div>\r\n                    )}\r\n                </Combobox.Options>\r\n            </Combobox>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserSelectionList;\r\n\r\n// const UserList = (props) => {\r\n//     const user = new User(props.user);\r\n\r\n//     if (!user?.getRoleId()) return null;\r\n//     return (\r\n        \r\n//     );\r\n// };\r\n"],"names":["_ref","_user2","person","setPerson","filter","_ref$roles","roles","_useUsers","useUsers","users","usersIsFetching","_useState2","_slicedToArray","useState","search","setSearch","_user","_","user","role_id","Number","filteredUsers","name","includes","_jsx","className","children","_jsxs","Combobox","value","onChange","Button","Input","displayValue","e","target","placeholder","style","position","top","right","transform","HiOutlineSelector","Options","zIndex","maxHeight","overflowY","length","map","Option","_ref2","selected","active","_ref3","_user$employee_detail","gap","src","image_url","alt","width","height","employee_detail","designation","id"],"sourceRoot":""}