{"version":3,"file":"js/react/973.js","mappings":"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","sources":["webpack:///./resources/js/react/UI/comments/components/CustomModal.jsx","webpack:///./resources/js/react/UI/comments/CommentContainerDecider.jsx","webpack:///./resources/js/react/UI/comments/CommentsContainer.jsx","webpack:///./resources/js/react/UI/form/checkbox.css?a080","webpack:///./resources/js/react/UI/form/Cheeckbox.jsx","webpack:///./resources/js/react/global/AvatarGroup.module.css?7b6f","webpack:///./resources/js/react/global/AvatarGroup.jsx","webpack:///./resources/js/react/global/Rating.jsx","webpack:///./resources/js/react/hooks/useRevision.jsx","webpack:///./resources/js/react/hooks/useSingleTask.jsx","webpack:///./resources/js/react/services/api/TaskCommentApiSlice.js","webpack:///./resources/js/react/single-independent-task/components/Accordion.jsx","webpack:///./resources/js/react/single-independent-task/components/Guideline.jsx","webpack:///./resources/js/react/single-independent-task/components/RevisionText.jsx","webpack:///./resources/js/react/single-independent-task/components/loader/GenarelLoader.jsx","webpack:///./resources/js/react/single-independent-task/permissions.js","webpack:///./resources/js/react/single-independent-task/section/comments/CommentSendBox.jsx","webpack:///./resources/js/react/single-independent-task/components/CustomModal.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentWritingModal.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/Widget.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentsSection.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailySubmissionItem.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailysubmissionDrawerTable.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/drawer-table-support/Single_user_submission_table_column.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/SingleUserSubmissionTableDrawer.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailySubmissionSection.jsx","webpack:///./resources/js/react/single-independent-task/section/history/InnerHistoryItemLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/history/Histories.jsx","webpack:///./resources/js/react/single-independent-task/section/history/HistorySection.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/Note.jsx","webpack:///./resources/js/react/single-independent-task/components/form/Input.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/CreateNote.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/EditNote.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/NoteView.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/NoteSection.jsx","webpack:///./resources/js/react/single-independent-task/section/revisions/ViewComment.jsx","webpack:///./resources/js/react/single-independent-task/section/revisions/RevisionSection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css?78f7","webpack:///./resources/js/react/single-independent-task/section/comments/DatePicker.jsx","webpack:///./resources/js/react/single-independent-task/components/form/Searchbox.jsx","webpack:///./resources/js/react/single-independent-task/components/Loader.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/TaskCategorySelectionBox.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/AssignedToSelection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/PrioritySelection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskEditModal.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/Genarel.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/SubmittedWork.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/TimeLog.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/TaskReview.jsx","webpack:///./resources/js/react/single-independent-task/components/HistoryLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/History.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/PreviewSubtask.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/approve-task/ApproveTask.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTask.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/LeadConfirmationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/WorkingEnvironmentForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskEditForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskSection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/TaskEditForm.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmitionView.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/WorkItem.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/InnerWorkItem.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmittedModalView.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmittedWork.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/TodaysUpdateModalTableRow.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css?c214","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css?09ae","webpack:///./resources/js/react/single-independent-task/section/daily-submission/TodaysUpdateModalTable.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/DailySubmissionControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/MarkAsComplete.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionCreationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionAcceptAndContinue.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionView.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/AssigneeRevisionToDev.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/DenyAndContinue.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/DeveloperRevisionView.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionViewModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionViewControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/subtask_creation_guide/GuideLineText.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/SubtaskCreationControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/StartTimerConfirmationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/stop-timer/LessTrackTimerModal.jsx","webpack:///./resources/js/react/single-independent-task/components/StartTimerWorkingReportPopup.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/TimerControl.jsx","webpack:///./resources/js/react/single-independent-task/section/helper/timer-start-working-report-error-toaster.js","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/SubmitForClientApproval.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/ClientAcceptedTask.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/AssigneeToLeadFromClientRevision.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/ClientRevision.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/ClientApproval.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/report/Report.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/TaskAction.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/InnerTableRow.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogTable.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogItemLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogSection.jsx","webpack:///./resources/js/react/single-independent-task/SingleIndependentTask.jsx","webpack:///./resources/js/react/single-independent-task/components/Button.jsx","webpack:///./resources/js/react/single-independent-task/components/Dropdown.jsx","webpack:///./resources/js/react/single-independent-task/components/Modal.jsx","webpack:///./resources/js/react/single-independent-task/components/SubmitButton.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/AttachmentUpload.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/Comment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/EditComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/InnerComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/ReplyComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/ReplyCommentPreview.jsx","webpack:///./resources/js/react/single-task/hooks/useDailySubmission.jsx","webpack:///./resources/js/react/utils/timeCalculate.js","webpack:///./resources/js/react/UI/form/checkbox.css","webpack:///./resources/js/react/global/AvatarGroup.module.css","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css","webpack:///./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css"],"sourcesContent":["import * as React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { usePopper } from 'react-popper';\r\nimport { motion, AnimatePresence } from 'framer-motion'; \r\n  \r\n\r\nconst CustomModal = ({toggleRef = null,  isOpen, close, children}) => {\r\n    const [modalRef, setModalRef] = React.useState(null); \r\n    const { styles, attributes } = usePopper(toggleRef, modalRef,{\r\n        placement: 'left-start',\r\n        modifiers: [ \r\n            {name: 'offset', options: {offset: [0, 0]}},\r\n        ]\r\n    })\r\n\r\n  return ( \r\n        <div \r\n            ref={setModalRef}\r\n            style={{\r\n                ...styles.popper,\r\n                pointerEvents: isOpen ? 'all' : 'none', \r\n                zIndex: 99,\r\n            }} \r\n            {...attributes.popper}\r\n        >   \r\n\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        exit={{opacity: 0}}\r\n                        className=''\r\n                    >\r\n                        {children} \r\n\r\n                        <Shadow/>\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </div> \r\n  )\r\n}\r\n\r\nexport default CustomModal \r\n\r\nconst Shadow = () => {\r\n    return ReactDOM.createPortal(\r\n        <div\r\n            style={{\r\n                width: '100vw',\r\n                height: '100vh',\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                zIndex: 90,\r\n                background: 'rgba(0,0,0,.1)'\r\n            }} \r\n        />,\r\n        document.querySelector('#sp1SingleTaskPageModal')\r\n    )\r\n}","import React from \"react\";\r\nimport Modal from \"./components/Modal\";\r\nimport CustomModal from \"./components/CustomModal\";\r\n\r\nconst CommentContainerDecider = ({\r\n    fullScreenView,\r\n    toggleRef,\r\n    width,\r\n    isOpen,\r\n    children,\r\n}) => {\r\n    // console.log(width);\r\n    const handleContainer = (children) => {\r\n        if (fullScreenView && width <= 991) {\r\n            return (\r\n                <Modal isOpen={isOpen}>\r\n                    <div\r\n                        // className=\"position-relative\"\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"80px\",\r\n                            left: \"-10px\",\r\n                            padding: \"75px 23px 18px 25px\",\r\n                            height: \"100vh\",\r\n                            width: \"100vw\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"sp1_task_comment_modal\"\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                top: \"80px\",\r\n                                left: \"-10px\",\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                                maxHeight: \"100vh\",\r\n                            }}\r\n                        >\r\n                            {/* modal body (start) */}\r\n                            {children}\r\n                            {/* modal body (end) */}\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            );\r\n        } else if (!fullScreenView && width <= 991) {\r\n            return (\r\n                <Modal isOpen={isOpen}>\r\n                    <div\r\n                        className=\"position-relative\"\r\n                        style={{\r\n                            padding: \"75px 23px 18px 25px\",\r\n                            height: \"100vh\",\r\n                            width: \"100vw\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"sp1_task_comment_modal\"\r\n                            style={{\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                                maxHeight: \"100vh\",\r\n                            }}\r\n                        >\r\n                            {/* modal body (start) */}\r\n                            {children}\r\n                            {/* modal body (end) */}\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            );\r\n        } else if (fullScreenView && width > 991) {\r\n            return (\r\n                <Modal isOpen={isOpen}>\r\n                    <div\r\n                        // className=\"position-relative\"\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"80px\",\r\n                            left: \"-10px\",\r\n                            padding: \"79px 41px 21px 261px\",\r\n                            height: \"100vh\",\r\n                            width: \"100vw\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"sp1_task_comment_modal\"\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                top: \"80px\",\r\n                                left: \"-10px\",\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                                maxHeight: \"100vh\",\r\n                            }}\r\n                        >\r\n                            {/* modal body (start) */}\r\n                            {children}\r\n                            {/* modal body (end) */}\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            );\r\n        } else if (!fullScreenView && width > 991) {\r\n            return (\r\n                <Modal isOpen={isOpen}>\r\n                    <div\r\n                        className=\"position-relative\"\r\n                        style={{\r\n                            paddingTop: \"50px\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                margin: \"auto\",\r\n                            }}\r\n                            className=\"sp1_task_comment_modal\"\r\n                        >\r\n                            {/* modal body (start) */}\r\n                            {children}\r\n                            {/* modal body (end) */}\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            );\r\n        }\r\n        // else if (width <= 1200) {\r\n        //     return (\r\n        //         <Modal isOpen={isOpen}>\r\n        //             <div className=\"position-relative\">\r\n        //                 <div className=\"sp1_task_comment_modal --small-device\">\r\n        //                     {/* modal body (start) */}\r\n        //                     {children}\r\n        //                     {/* modal body (end) */}\r\n        //                 </div>\r\n        //             </div>\r\n        //         </Modal>\r\n        //     );\r\n        // }\r\n        else {\r\n            return (\r\n                <Modal isOpen={isOpen}>\r\n                    <div className=\"position-relative\">\r\n                        <div className=\"sp1_task_comment_modal --small-device\">\r\n                            {/* modal body (start) */}\r\n                            {children}\r\n                            {/* modal body (end) */}\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            );\r\n        }\r\n    };\r\n\r\n    return handleContainer(children);\r\n};\r\n\r\nexport default CommentContainerDecider;\r\n","import React from \"react\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport CustomModal from \"./components/CustomModal\";\r\nimport Modal from \"./components/Modal\";\r\nimport CommentsBody from \"./CommentsBody\";\r\nimport { useState, useEffect } from \"react\";\r\nimport commentDemoData from \"./_Data/commentDemoData\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGetCommentsQuery } from \"../../services/api/commentsApiSlice\";\r\nimport CommentContainerDecider from \"./CommentContainerDecider\";\r\nimport _ from \"lodash\";\r\nimport { useCommentStore } from \"./zustand/store\";\r\n\r\nconst CommentsContainer = ({\r\n    toggleRef = null,\r\n    isOpen,\r\n    close,\r\n    task,\r\n    comments = null,\r\n    onCommentPost,\r\n    taskId,\r\n    singleCommentId,\r\n    showCommentEditor = true,\r\n    showSearchBtn = true,\r\n    showFullScreenBtn = true,\r\n    height = \"89vh\",\r\n}) => {\r\n    const { commentState } = useCommentStore();\r\n    // ---------------------------------------------------------\r\n    const param = useParams();\r\n\r\n    // ---------------------------------------------------------\r\n\r\n    const { width } = useWindowSize();\r\n    const [fullScreenView, setFullScreenView] = useState(false);\r\n    const { data, isFetching, isLoading, refetch } = useGetCommentsQuery(\r\n        param?.taskId\r\n    );\r\n\r\n    // useEffect hook to call refetch when commentState changes\r\n    useEffect(() => {\r\n        refetch();\r\n    }, [commentState]);\r\n\r\n    return (\r\n        <CommentContainerDecider\r\n            fullScreenView={fullScreenView}\r\n            isOpen={isOpen}\r\n            toggleRef={toggleRef}\r\n            width={width}\r\n        >\r\n            {/* {isOpen && ( */}\r\n            <CommentsBody\r\n                fullScreenView={fullScreenView}\r\n                setFullScreenView={setFullScreenView}\r\n                isOpen={isOpen}\r\n                close={close}\r\n                // comments={param?.taskId ? data : comments}\r\n                comments={\r\n                    param?.taskId\r\n                        ? singleCommentId\r\n                            ? data?.filter(\r\n                                  (comment) => comment.id === singleCommentId\r\n                              )\r\n                            : data\r\n                        : comments\r\n                }\r\n                // comments={demoComments}\r\n                loading={isLoading}\r\n                fetching={isFetching}\r\n                refetch={refetch}\r\n                taskId={taskId ? taskId : param?.taskId}\r\n                showFullScreenBtn={width <= 991 ? false : showFullScreenBtn}\r\n                height={height}\r\n                showCommentEditor={showCommentEditor}\r\n                showSearchBtn={showSearchBtn}\r\n            />\r\n            {/* )} */}\r\n        </CommentContainerDecider>\r\n    );\r\n};\r\n\r\nexport default CommentsContainer;\r\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./checkbox.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import \"./checkbox.css\";\r\n\r\nconst Checkbox = ({\r\n    value,\r\n    onChange,\r\n    label,\r\n    checked,\r\n    className = \"\",\r\n    labelClassName = \"\",\r\n    disabled = false,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <label\r\n            className={`d-flex align-items-center sp1_checkbox--label ${labelClassName}${\r\n                disabled ? \" disable\" : \"\"\r\n            }`}\r\n        >\r\n            <input\r\n                type=\"checkbox\"\r\n                value={value}\r\n                checked={checked}\r\n                disabled={disabled}\r\n                onChange={onChange}\r\n                className={`sp1_checkbox mr-2 ${className}`}\r\n            />\r\n            {label}\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Checkbox;\r\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./AvatarGroup.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from \"react\";\r\nimport styles from \"./AvatarGroup.module.css\";\r\nimport _ from \"lodash\";\r\n\r\nconst AvatarGroup = ({ users = [], className = \"\", show=2 }) => {\r\n\r\n    const len = _.size(users);\r\n\r\n    const avatars = len > show ? users.splice(0, show) : users;\r\n\r\n    return (\r\n        <div className={styles.avatar_group}>\r\n\r\n\r\n            {len > show && (\r\n                <div  className={`${styles.avatar} ${className} ${styles.empty_avatar}`} >\r\n                    <span> +{len}</span>\r\n                </div>\r\n            )}\r\n            {_.map(avatars, (user, i) => (\r\n                <div key={i} className={`${styles.avatar} ${className}`}>\r\n                    <img\r\n                        src={user.src}\r\n                        alt=\"\"\r\n                        className={styles.avatar_image}\r\n                    />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvatarGroup;\r\n","const Rating = ({\r\n    rating,\r\n    className = '',\r\n    iconClassName = '',\r\n}) => {\r\n    return (\r\n        <>\r\n            {[...Array(5)].map((r, idx) =>\r\n                idx <= parseInt(rating) - 1 ? (\r\n                    <i key={idx} className=\"fa-solid fa-star\" style={{color:'#FFA500'}} />\r\n                ) : rating - parseInt(rating) > 0 &&\r\n                  idx === parseInt(rating) ? (\r\n                    <i key={idx} className=\"fa-solid fa-star-half-stroke\" style={{color:'#FFA500'}} />\r\n                ) : (\r\n                    <i key={idx} className=\"fa-regular fa-star\" style={{color: '#b9b9b9'}} />\r\n                ),\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Rating;","import _ from \"lodash\";\r\n\r\n\r\n\r\nexport const useRevision = (task) => {\r\n    const taskType = _.includes([5, 7], task?.category?.id) ? 'design' : 'development';\r\n\r\n    // project menager acknowladgement options\r\n    const getProjectManagerAcknowladgementOptions = () =>{\r\n\r\n        const isAlreadyAccepted = false;\r\n\r\n        if(isAlreadyAccepted){\r\n            return []\r\n        }\r\n\r\n        return [\r\n            {\r\n                id: 'PLRx01',\r\n                revision: \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right\",\r\n                isDeniable: false,\r\n            },\r\n            {\r\n                id: 'PLRx02',\r\n                revision: \"The work done is aligned with my instruction, but after seeing it, I want to give some minor changes\",\r\n                isDeniable: false,\r\n            },\r\n            {\r\n                id: 'PLRx3',\r\n                revision: `The Lead ${taskType === 'design' ? 'designer' : 'developer'}/project coordinator’s delivered work doesn’t match my shared requirement`,\r\n                isDeniable: true,\r\n            },\r\n            {\r\n                id: 'PLRx04',\r\n                revision: `The instruction was followed, but the lead ${taskType === 'design' ? 'designer' : 'developer'} missed out some default/basic things or best practices which are not essential to write in instruction`,\r\n                isDeniable: true\r\n            },\r\n            {\r\n                id: 'PLRx05',\r\n                revision: \"I have some general revisions\",\r\n                isDeniable: false,\r\n                type: 'GENERAL_REVISION'\r\n            }\r\n        ]\r\n    }\r\n\r\n    // lead developer acknowladgement Options\r\n    const getLeadDeveloperAcknowladgementOptions = () => { \r\n        const isAlreadyAccepted = false;\r\n        // if already accepted\r\n        if(isAlreadyAccepted){\r\n            return []\r\n        }else{\r\n            return [\r\n                {\r\n                    id: 'LDRx1',\r\n                    revision: `The concerned ${taskType === 'design' ? 'designer’s' : 'developer’s'}  delivered work doesn’t match my shared requirement`,\r\n                    isDeniable: true,\r\n                },\r\n                {\r\n                    id: 'LDRx2',\r\n                    revision: \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right.\",\r\n                    isDeniable: false,\r\n                },\r\n                {\r\n                    id: 'LDRx3',\r\n                    revision: \"The work done is aligned with my instruction but after seeing it, I want to give some minor changes.\",\r\n                    isDeniable: false\r\n                },\r\n\r\n                {\r\n                    id: 'LDRx4',\r\n                    revision: `The instruction was followed but the ${taskType === 'design' ? 'designer' : 'developer'} missed out on some default/basic things or best practices which are not essential to mention in instruction.`,\r\n                    isDeniable: true,\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return{\r\n        getLeadDeveloperAcknowladgementOptions,\r\n        getProjectManagerAcknowladgementOptions\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {\r\n    useApproveSubmittedTaskMutation,\r\n    useLazyGetSubmittedTaskQuery,\r\n    useLazyGetTaskDetailsQuery\r\n} from '../services/api/SingleTaskPageApi';\r\nimport { User } from '../utils/user-details';\r\n\r\nexport const useSingleTask = () => {\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    /* ********************************** */\r\n    /* ********* Get Task by task ID ********* */\r\n    const [\r\n        getTaskDetails,\r\n        {isFetching: taskDetailsIsFetching}\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    const getTaskById = async (taskId) => {\r\n        try{\r\n            const res = await getTaskDetails(`/${taskId}/json?mode=basic`).unwrap();\r\n            if(res){\r\n                const task = {\r\n                    ...res.task,\r\n                    taskFiles: res?.taskFiles,\r\n                    parent_task_action: res.parent_task_action,\r\n                    parent_task_title: res.parent_task_heading?.heading || null,\r\n                    working_environment: res.working_environment,\r\n                    working_environment_data: res.working_environment_data,\r\n                    pm_task_guideline: res.task_guideline,\r\n                    task_revisions: res.revisions,\r\n                    taskSubTask: res.Sub_Tasks,\r\n                }\r\n                return task;\r\n            }\r\n        }catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n     /* *************************************************** */\r\n    /* ********* Get Task submittion Information ********* */\r\n\r\n    const [getSubmittedTask, {isFetching: submittionInfoIsFetching} ] = useLazyGetSubmittedTaskQuery();\r\n\r\n    // method\r\n    const getSubmittionInfo = async (taskId) => {\r\n        try{\r\n            const res = await getSubmittedTask(taskId).unwrap();\r\n            if(res){\r\n                let data = _.orderBy(res, ['task_id', 'submission_no'], ['desc', 'desc']);\r\n                return data;\r\n            }\r\n        }catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    /* ********************************** */\r\n    /* ********* Approved Task ********* */\r\n    const [\r\n        approveSubmittedTask,\r\n        {isLoading: approveTaskLoadingStatus}\r\n    ] = useApproveSubmittedTaskMutation();\r\n\r\n    // method\r\n    const approveTask = async (data, callback) => {\r\n        if(!data || _.isEmpty(data)) return;\r\n        try{\r\n            const res = await approveSubmittedTask(data).unwrap();\r\n\r\n            if(res){\r\n                callback &&callback();\r\n                const Toast = Swal.mixin({\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n                })\r\n\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'Task Approved Successfully'\r\n                })\r\n            }\r\n        }catch(err){ console.log(err) }\r\n    }\r\n\r\n\r\n    return {\r\n        getTaskById,\r\n        approveTask,\r\n        getSubmittionInfo,\r\n        taskDetailsIsFetching,\r\n        approveTaskLoadingStatus,\r\n        submittionInfoIsFetching\r\n    }\r\n}\r\n","import { apiSlice } from \"./apiSlice\";\r\n\r\nconst taskCommentApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: (build) => ({\r\n        // get task comments\r\n        getTaskComments: build.query({\r\n            query: (taskId) => `/account/tasks/${taskId}/comments`,\r\n            providesTags: (result = [], error, arg) => [\r\n                \"TASK_COMMENTS\",\r\n                \"TASK_COMMENT\",\r\n                ...result.map(({ id }) => ({ type: \"TASK_COMMENT\", id })),\r\n            ],\r\n        }),\r\n\r\n        // get task comments\r\n        getTaskCommentReplies: build.query({\r\n            query: (commentId) =>\r\n                `/account/tasks/comments/${commentId}/replies`,\r\n            providesTags: [\"TASK_COMMENT_REPLIES\"],\r\n        }),\r\n\r\n        // widget data\r\n        getTaskCommentWidgetData: build.query({\r\n            query: (taskId) => `/account/tasks/comments-widget-data/${taskId}`,\r\n            providesTags: [\"TASK_COMMENTS_WIDGET\"],\r\n        }),\r\n\r\n        // preview a comment\r\n        getPreviewCommentData: build.query({\r\n            query: (commentId) =>\r\n                `/account/tasks/comments/${commentId}/preview`,\r\n            providesTags: [\"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // update comment\r\n        updateComment: build.mutation({\r\n            query: ({ data }) => ({\r\n                url: `/account/tasks/comment-edit`,\r\n                method: \"POST\",\r\n                body: data,\r\n                formData: true,\r\n            }),\r\n            invalidatesTags: [\"TASK_COMMENTS_WIDGET\", \"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // remove file\r\n        removeCommentPreviousUploadedFile: build.mutation({\r\n            query: (data) => ({\r\n                url: `/account/tasks/${data.task_id}/comments/${data.comment_id}/delete-attach-file`,\r\n                method: \"DELETE\",\r\n                body: {\r\n                    ...data,\r\n                    _token: document\r\n                        .querySelector(\"meta[name='csrf-token']\")\r\n                        .getAttribute(\"content\"),\r\n                },\r\n            }),\r\n            invalidatesTags: [\"TASK_COMMENTS_WIDGET\", \"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // reply comment\r\n        replyTaskComment: build.mutation({\r\n            query: (data) => ({\r\n                url: `/account/tasks/comment-reply`,\r\n                method: \"POST\",\r\n                body: data.formData,\r\n                formData: true,\r\n            }),\r\n            invalidatesTags: (result, error, arg) => [\r\n                { type: \"TASK_COMMENT\", id: arg.commentId },\r\n                \"TASK_COMMENT_REPLIES\",\r\n                \"TASK_COMMENTS_WIDGET\",\r\n                \"TASK_COMMENT_PREVIEW\",\r\n            ],\r\n        }),\r\n\r\n        deleteComment: build.mutation({\r\n            query: (commentId) => ({\r\n                url: `/account/tasks/comments/${commentId}/delete`,\r\n                method: \"DELETE\",\r\n                body: {\r\n                    _token: document\r\n                        .querySelector(\"meta[name='csrf-token']\")\r\n                        .getAttribute(\"content\"),\r\n                },\r\n            }),\r\n\r\n            invalidatesTags: (_result = [], _error, arg) => [\r\n                { type: \"TASK_COMMENT\", id: arg },\r\n                \"TASK_COMMENT_REPLIES\",\r\n                \"TASK_COMMENTS_WIDGET\",\r\n                \"TASK_COMMENT_PREVIEW\",\r\n            ],\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n    useGetTaskCommentsQuery,\r\n    useGetTaskCommentRepliesQuery,\r\n    useGetTaskCommentWidgetDataQuery,\r\n    useLazyGetTaskCommentWidgetDataQuery,\r\n    useGetPreviewCommentDataQuery,\r\n    useUpdateCommentMutation,\r\n    useRemoveCommentPreviousUploadedFileMutation,\r\n    useReplyTaskCommentMutation,\r\n    useDeleteCommentMutation,\r\n} = taskCommentApiSlice;\r\n","import * as React from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\n\r\nconst Accordion = ({expendable=true, children, title, headingClass, headingStyle}) => {\r\n    const [expend,setExpend] = React.useState(false);\r\n\r\n    const toggle = () => {\r\n        setExpend(!expend);\r\n    }\r\n\r\n    const init = expendable ? 0 : 300;\r\n\r\n  return (\r\n    <div className='sp1_task_card mb-4'>\r\n        <div \r\n            className={`sp1_task_card--head ${headingClass}` }\r\n            onClick={ () => expendable ? toggle() : null}\r\n            style={{...headingStyle, cursor: expendable ? 'pointer': 'default'}}\r\n        > {title} \r\n\r\n            {expendable ? expend ? \r\n                <span className=\"__icon\">\r\n                    <i className=\"fa-solid fa-chevron-up\"></i>\r\n                </span>\r\n            : <span className=\"__icon\">\r\n                    <i className=\"fa-solid fa-chevron-down\"></i>\r\n                </span>: null\r\n            }\r\n        </div>\r\n\r\n\r\n        <AnimatePresence>\r\n            {expendable ? expend && (\r\n                <motion.div\r\n                    initial={{ height: init }}\r\n                    animate={{height: 800}}\r\n                    exit={{height: 0}}\r\n                    className='sp1_task_card--body'\r\n                >\r\n                    {children}\r\n                </motion.div> \r\n            ): <div className='sp1_task_card--body'>\r\n               {children}  \r\n            </div>\r\n        }\r\n        </AnimatePresence>\r\n\r\n\r\n       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Accordion","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport { useClickAway } from \"react-use\";\r\nimport _ from \"lodash\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Guideline = ({ text, editorContainerClass, workEnv }) => {\r\n    const { task } = useSelector((s) => s.subTask);\r\n    const [expend, setExpend] = useState(false);\r\n    let isLong = text?.length > 400;\r\n    const showText = isLong ? text.slice(0, 400) + \"...\" : text;\r\n    const ref = useRef();\r\n\r\n    const handleExpend = (e) => {\r\n        e.preventDefault();\r\n        setExpend(!expend);\r\n    };\r\n\r\n    useClickAway(ref, () => {\r\n        setExpend(false);\r\n    });\r\n\r\n    return (\r\n        <div className=\"sp1_task_card--sub-card\">\r\n            <div\r\n                className={`sp1_ck_content sp1_guideline_text ${editorContainerClass}`}\r\n                dangerouslySetInnerHTML={{ __html: showText }}\r\n            ></div>\r\n            {isLong ? (\r\n                <a href=\"#\" onClick={handleExpend} className=\"\">\r\n                    {\" \"}\r\n                    Read full description{\" \"}\r\n                </a>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n\r\n            <Modal className=\"sp1_task_card--sub-card-modal\" isOpen={expend}>\r\n                <div\r\n                    ref={ref}\r\n                    className=\"sp1_task_card--sub-card-modal-content\"\r\n                >\r\n                    <div className=\"d-flex align-items-center justify-content-between __header\">\r\n                        <button onClick={() => setExpend(false)}>\r\n                            <i className=\"fa-solid fa-xmark\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n                    {!_.isEmpty(workEnv) ? (\r\n                        <div className=\"sp1_task_card--sub-card m-4\">\r\n                            <div\r\n                                className=\"px-4 py-3\"\r\n                                style={{ background: \"#F3F5F9\" }}\r\n                            >\r\n                                <h6 className=\"mb-2\">Working Environment</h6>\r\n                                <hr />\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's URL\r\n                                            </strong>\r\n                                            : <br />{\" \"}\r\n                                            <a\r\n                                                target=\"__blank\"\r\n                                                href={workEnv?.site_url}\r\n                                            >\r\n                                                View on new tab\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>Frontend Password</strong>:{\" \"}\r\n                                            <br /> {workEnv?.frontend_password}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's Login URL\r\n                                            </strong>\r\n                                            : <br />{\" \"}\r\n                                            <a\r\n                                                target=\"__blank\"\r\n                                                href={workEnv?.login_url}\r\n                                            >\r\n                                                View on new tab\r\n                                            </a>{\" \"}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's\r\n                                                Username/Email\r\n                                            </strong>\r\n                                            : <br /> {workEnv?.email}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>Password</strong>: <br />{\" \"}\r\n                                            {workEnv?.password}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <div className=\"__content\">\r\n                        <div\r\n                            className={`sp1_ck_content word-break ${editorContainerClass}`}\r\n                            dangerouslySetInnerHTML={{ __html: text }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\" __footer\">\r\n                        <button\r\n                            className=\"btn btn-sm py-1 btn-primary ml-auto\"\r\n                            onClick={() => setExpend(false)}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Guideline;\r\n","import * as React from 'react'\r\nimport Modal from '../../Insights/ui/Modal';\r\nimport { useClickAway } from 'react-use';\r\nimport Button from './Button';\r\n\r\nconst RevisionText = ({text, index, date, time, revision}) => {\r\n    const [expend, setExpend] = React.useState(false);\r\n    const ref = React.useRef();\r\n\r\n    let isLong = text?.length > 800;\r\n    const showText = isLong ? text?.slice(0, 800) + '...' : text;\r\n\r\n\r\n    const toggleModal = (e) => {\r\n        e.preventDefault();\r\n        setExpend(!expend)\r\n    }\r\n \r\n\r\n    useClickAway(ref, () => {\r\n        setExpend(false)\r\n    })\r\n   \r\n  return (\r\n    <div className=\"sp1_task_card--sub-card\" style={{minHeight: '110px'}}>\r\n        <div className=\"sp1_tc_sc-inx\">\r\n            <h2>{index}</h2>\r\n            <span className=\"d-block\"><strong>Date</strong> {date} </span>\r\n            <span className=\"d-block\"><strong>Time</strong>: {time}</span>\r\n        </div>\r\n        <div className=\"\"> \r\n            {revision?.revisionAcknowledgement ? \r\n                <span className='d-block mb-2'> \r\n                    <span className='font-weight-bold text-danger'> <strong>Reason: </strong>  </span> \r\n                    {revision?.revisionAcknowledgement} {\" \"}\r\n                    {revision?.isDeny ? <span className='badge badge-danger'>Rejected By Developer</span> : null} \r\n                    {revision?.isAccept ? <span className='badge badge-success'>Accepted By Developer</span> : null}\r\n                </span> \r\n            : null}\r\n            <div>\r\n                <span className='font-weight-bold text-success'>Statement:</span>\r\n                <div className='sp1_ck_content' style={{textIndent: '2rem'}} dangerouslySetInnerHTML={{__html: showText}} />\r\n            </div> \r\n\r\n            {isLong ? <a href=\"#\" className='ml-2' onClick={toggleModal}>Read full guideline</a> : ''}\r\n\r\n            <Modal className=\"sp1_task_card--sub-card-modal\" isOpen={expend}>\r\n                <div ref={ref} className='sp1_task_card--sub-card-modal-content'>\r\n                    <div className='d-flex align-items-center justify-content-between __header'>\r\n                        <button onClick={() => setExpend(false)}>\r\n                        <i className=\"fa-solid fa-xmark\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div className='__content'>\r\n                        <div className=\"sp1_tc_sc-inx\">\r\n                            <h2>{index}</h2>\r\n                            <span className=\"d-block\"><strong>Date</strong> {date} </span>\r\n                            <span className=\"d-block\"><strong>Time</strong>: {time}</span>\r\n                        </div>\r\n                        <div>\r\n                        <span className='d-block mb-2'> <span className='font-weight-bold text-danger'><strong>Reason: </strong></span> {revision?.revisionAcknowledgement}</span>\r\n                            <span className='font-weight-bold text-success'>Commitment:</span>\r\n                            <div className='sp1_ck_content' style={{textIndent: '2rem'}} dangerouslySetInnerHTML={{__html: text}} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=' __footer'>\r\n                        <button className='btn btn-sm py-1 btn-primary ml-auto' onClick={() => setExpend(false)}>\r\n                            Close\r\n                        </button>\r\n                    </div> \r\n                </div>\r\n            </Modal>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RevisionText","import React from \"react\"; \r\nimport {Placeholder} from '../../../global/Placeholder';\r\n\r\nconst GenarelLoader = () => { \r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-6 pb-3 pb-xl-0\">\r\n                <div className=\"d-flex flex-column\" style={{ gap: \"10px\" }}>\r\n                    <h6 className=\"\">\r\n                       <Placeholder width=\"220px\" />\r\n                    </h6> \r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" /> \r\n                        </div>\r\n                    </div> \r\n\r\n                    {/* <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* asignee to */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                <Placeholder\r\n                                    width=\"32px\"\r\n                                    height=\"32px\"\r\n                                    type=\"circle\"\r\n                                    className=\"rounded-circle\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"ml-2\">\r\n                                <Placeholder width=\"130px\" /> \r\n                                <Placeholder width=\"70px\" height=\"10px\" className=\"mt-2\" /> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* assignee by */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                <Placeholder\r\n                                    width=\"32px\"\r\n                                    height=\"32px\"\r\n                                    type=\"circle\"\r\n                                    className=\"rounded-circle\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"ml-2\">\r\n                                <Placeholder width=\"130px\" /> \r\n                                <Placeholder width=\"70px\" height=\"10px\" className=\"mt-2\" /> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* PRIORITY */}\r\n\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* category */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"100px\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenarelLoader;\r\n","import _ from \"lodash\";\r\nimport { User } from \"../utils/user-details\";\r\n\r\n// * task page permission\r\n\r\nexport function singleTaskPagePermission(task, auth) {\r\n    let hasPermission = false;\r\n    // check is auth\r\n    const isAuth = auth.getRoleId() === 1;\r\n    const pmPermission = task.projectManagerId === auth.getId();\r\n    hasPermission = true;\r\n\r\n    return hasPermission;\r\n}\r\n\r\n// permission for timer control\r\nexport function timeControlPermision({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = loggedUser;\r\n\r\n    // if status id 2 or 3 show timer start button\r\n    if ([2, 3].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    }\r\n    return (\r\n        statusPermission && assigneePermission && _.size(task?.subtask) === 0\r\n    );\r\n}\r\n\r\n// mark as completed button permission controller\r\nexport function markAsCompletedButtonPermission({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n        if (_loggedUser?.getRoleId() === 6) {\r\n            if ([8].includes(Number(statusId))) {\r\n                statusPermission = true;\r\n            }\r\n        } else {\r\n            if ([2, 3].includes(Number(statusId))) {\r\n                statusPermission = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// approve button permission\r\nexport function approveButtonPermission({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if status id 6 show timer start button\r\n    if ([6].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    } else if (_loggedUser?.getRoleId() === 1) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// approve button permission\r\nexport function needRevisionPermision({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if status id 6 show timer start button\r\n    if ([6].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    } else if (_loggedUser?.getRoleId() === 1) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// revision button\r\nexport function revisionButtonPermission({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = loggedUser;\r\n    //    console.log(statusId)\r\n    // if status id 6 show timer start button\r\n    if ([1].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// submit for client approval button permission\r\n\r\nexport function submitForClientApproval({ task, status, auth }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([8].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (\r\n        (assignedUser?.getId() === auth?.getId() && auth?.getRoleId() === 4) ||\r\n        auth?.getRoleId() === 1\r\n    ) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\nexport function clientApproveConfirmationButtonPermission({\r\n    task,\r\n    status,\r\n    auth,\r\n}) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([9].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (\r\n        (assignedUser?.getId() === auth?.getId() && auth?.getRoleId() === 4) ||\r\n        auth?.getRoleId() === 1\r\n    ) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\nexport function taskEditPermision({ task, status, auth }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([1, 2, 3].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser?.getId() === auth?.getId() || auth?.getRoleId() === 1) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// sub task creation permission\r\n\r\nexport function subTaskCreationPermision({ task, status, auth }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let assignedBy = task?.assignedBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([1, 2, 3].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (\r\n        assignedUser?.getId() === auth?.getId() ||\r\n        (assignedBy?.getId() === auth?.getId() &&\r\n            _.includes([5, 6, 9, 10], auth?.getRoleId()))\r\n        // ||\r\n        // auth?.getRoleId() === 1\r\n    ) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n","import dayjs from 'dayjs';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport CKEditorComponent from '../../../ckeditor';\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine';\r\nimport { useStoreCommentMutation } from '../../../services/api/SingleTaskPageApi';\r\nimport { User } from '../../../utils/user-details';\r\nimport Button from '../../components/Button';\r\n\r\nconst CommentSendBox = ({onCommentPost, task}) => {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const [comment, setComment] = React.useState('');\r\n  const [files, setFiles] = React.useState([]);\r\n  const [error, setError] = React.useState(null);\r\n\r\n  const auth = new User(window?.Laravel?.user);\r\n\r\n  const [storeComment, {isLoading}] = useStoreCommentMutation();\r\n\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setComment(data);\r\n  }\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // if text not provide show error message\r\n    if(!comment){\r\n        setError(s => ({...s, comment: \"Please provide a comment before submitting.\"}));\r\n        return;\r\n    }\r\n\r\n    // make form data\r\n    const fd = new FormData();\r\n    fd.append('comment', comment);\r\n    fd.append('task_id', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    await storeComment({data: fd, task_id: task?.id})\r\n    .unwrap()\r\n    .then(res=>{\r\n      setEditMode(false);\r\n      setComment(\"\");\r\n      setFiles('');\r\n      let comment = {...res}\r\n      comment.last_updated_at = dayjs(res?.last_updated_at).unix();\r\n      onCommentPost(comment);\r\n    }).catch(err => console.log(err))\r\n\r\n  }\r\n\r\n  const commentMode = () => {\r\n    if(editMode){\r\n      return (\r\n        <div className='w-100'>\r\n            <div className='ck-editor-holder'>\r\n              <CKEditorComponent data={comment} onChange={handleEditorChange} />\r\n            </div>\r\n            {error?.comment ? <ErrorText>{error?.comment}</ErrorText> : null }\r\n\r\n            <div className='mt-2'>\r\n              <h6>Attach Files</h6>\r\n              <UploadFilesInLine\r\n                files={files}\r\n                setFiles={setFiles}\r\n                uploadInputClass='comment-file-upload'\r\n                fileWrapperClass='comment-uploaded-file'\r\n              />\r\n            </div>\r\n          <div className='mt-3 d-flex align-items-center'>\r\n            {isLoading ?\r\n                  <Button className='cursor-processing mr-2'>\r\n                      <div\r\n                          className=\"spinner-border text-white\"\r\n                          role=\"status\"\r\n                          style={{width: '18px', height: '18px' }}\r\n                      >\r\n                      </div>\r\n                      Processing...\r\n                  </Button> :\r\n                <Button className='mr-2' onClick={handleSubmit}>Send</Button>}\r\n\r\n            <Button\r\n              variant='secondary'\r\n              onClick={() => setEditMode(false)}\r\n            >Close</Button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return <div\r\n      onClick={() => setEditMode(true)}\r\n      className='__box'\r\n    ><span>Write a comment ...</span></div>\r\n  }\r\n\r\n  return (\r\n    <div className='sp1_task_comment_send_box'>\r\n        <>\r\n            <div className='__avatar rounded-circle mr-2' style={{width: '36px', height: '36px'}}>\r\n                <img\r\n                  src={auth?.getAvatar()}\r\n                  alt='sender_name'\r\n                  width=\"36px\"\r\n                  height=\"36px\"\r\n                  className='rounded-circle'\r\n                />\r\n            </div>\r\n        </>\r\n          <div className='__send-box'>\r\n            {commentMode()}\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentSendBox\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n    padding: 10px 0;\r\n`;\r\n","import * as React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { usePopper } from 'react-popper';\r\nimport { motion, AnimatePresence } from 'framer-motion'; \r\n  \r\n\r\nconst CustomModal = ({toggleRef = null,  isOpen, close, children}) => {\r\n    const [modalRef, setModalRef] = React.useState(null); \r\n    const { styles, attributes } = usePopper(toggleRef, modalRef,{\r\n        placement: 'left-start',\r\n        modifiers: [ \r\n            {name: 'offset', options: {offset: [0, 0]}},\r\n        ]\r\n    })\r\n\r\n  return ( \r\n        <div \r\n            ref={setModalRef}\r\n            style={{\r\n                ...styles.popper,\r\n                pointerEvents: isOpen ? 'all' : 'none', \r\n                zIndex: 99,\r\n            }} \r\n            {...attributes.popper}\r\n        >   \r\n\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        exit={{opacity: 0}}\r\n                        className=''\r\n                    >\r\n                        {children} \r\n\r\n                        <Shadow/>\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </div> \r\n  )\r\n}\r\n\r\nexport default CustomModal \r\n\r\nconst Shadow = () => {\r\n    return ReactDOM.createPortal(\r\n        <div\r\n            style={{\r\n                width: '100vw',\r\n                height: '100vh',\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                zIndex: 90,\r\n                background: 'rgba(0,0,0,.1)'\r\n            }} \r\n        />,\r\n        document.querySelector('#sp1SingleTaskPageModal')\r\n    )\r\n}","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\nimport CKEditorComponent from '../../../ckeditor'\r\n\r\nconst CommentWritingModal = ({isOpen, close}) => {\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"sp1_st_cnt_modal\">\r\n        <div className='sp1_st_comment_preview'>\r\n            <div className='sp1_st_comment_panel' style={{maxWidth: '60vw', minHeight: '50vh'}}> \r\n                <div className='border-bottom pb-2 d-flex'>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div> \r\n\r\n\r\n                {/* comment */}\r\n                <div className='mt-3 w-100'>\r\n                   <div className=\"sp1_st_write_comment-sendbox\">\r\n                       <div style={{minWidth: '48px'}}>\r\n                            <img \r\n                                src=\"/user-uploads/avatar/40164f31bc7d575c7dbe99b24b408d75.png\" \r\n                                alt=\"\"\r\n                                width={48}\r\n                                height={48}\r\n                                className='rounded-circle'\r\n                            />\r\n                       </div> \r\n                         \r\n                        <div> \r\n                            <div className='sp1_st_write_comment_editor'>\r\n                                <CKEditorComponent/>\r\n                            </div> \r\n                            <div className='py-3'>\r\n                                <div>Attach Files here (if need) <i className='fa-solid fa-paperclip ml-1 text-primary' /></div>\r\n                                <div className='sp1_st_write_comment_editor_attach'>\r\n                                    <i className=\"fa-solid fa-cloud-arrow-up\"></i>\r\n                                    <span>Attach Files</span>\r\n                                </div> \r\n                            </div>\r\n                        </div> \r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CommentWritingModal","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useGetTaskCommentWidgetDataQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport dayjs from \"dayjs\";\r\nimport { timeCalculate } from \"../../../utils/timeCalculate\";\r\nimport Modal from \"../../components/Modal\";\r\nimport CommentPreview from \"./CommentPreview\";\r\nimport CommentsContainer from \"../../../UI/comments/CommentsContainer\";\r\nimport { useGetCommentsQuery } from \"../../../services/api/commentsApiSlice\";\r\n\r\n// widget item\r\n\r\nconst WidgetItem = ({ comment }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    if (!comment) return null;\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"d-flex justify-content-between sp1_tark_right_item align-items-start pt-1 pb-2\">\r\n                <div\r\n                    className=\"w-100 sp1_st_comment-view\"\r\n                    style={{ overflow: \"hidden\" }}\r\n                >\r\n                    <p className=\"mb-0 pb-0\">\r\n                        <a\r\n                            href={`/account/employees/${comment.user.id}`}\r\n                            className=\"hover-underline text-primary\"\r\n                        >\r\n                            {comment.user.name}\r\n                        </a>{\" \"}\r\n                        {comment.is_deleted\r\n                            ? \"deleted \"\r\n                            : comment.mention\r\n                            ? \"replied to \"\r\n                            : \"added \"}{\" \"}\r\n                        a comment\r\n                    </p>\r\n                    <p\r\n                        className=\"text-ellipsis d-flex align-items-center mb-0 pb-0\"\r\n                        style={{ color: \"#AEAFB9\" }}\r\n                    >\r\n                        {comment.is_deleted\r\n                            ? timeCalculate(comment.deleted_at)\r\n                            : timeCalculate(comment.created_date)}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"d-flex align-items-center\">\r\n                    <a\r\n                        href=\"#\"\r\n                        className={`mr-2 py-2 sp1_task_righ_action_btn ${\r\n                            isOpen ? \"text-primary\" : \"\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setIsOpen(true);\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-regular fa-eye\"></i>\r\n                    </a>\r\n                    {/* <a href=\"#\" className=\"mr-2 py-2 sp1_task_righ_action_btn\"><i className=\"fa-regular fa-pen-to-square\"></i></a> */}\r\n                </div>\r\n            </div>\r\n\r\n            {/* <Modal isOpen={isOpen}>\r\n                <CommentPreview\r\n                    isOpen={isOpen}\r\n                    close={() => setIsOpen(false)}\r\n                    commentId={comment.id}\r\n                />\r\n            </Modal> */}\r\n            <CommentsContainer\r\n                singleCommentId={comment.id}\r\n                close={() => setIsOpen(false)}\r\n                isOpen={isOpen}\r\n                showCommentEditor={false}\r\n                showFullScreenBtn={false}\r\n                showSearchBtn={false}\r\n                height=\"50vh\"\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst Widget = ({ task }) => {\r\n    // console.log(task);\r\n    // const { data, isLoading } = useGetTaskCommentWidgetDataQuery(task.id, {\r\n    //     skip: !task.id,\r\n    // });\r\n    const { data: comments, isLoading } = useGetCommentsQuery(task.id, {\r\n        skip: !task.id,\r\n    });\r\n\r\n    const handleOrdering = (comments = []) => {\r\n        const sortedComments = [...comments];\r\n\r\n        sortedComments.sort((a, b) => {\r\n            if (a.is_deleted && b.is_deleted) {\r\n                const a_day = dayjs(a.deleted_at);\r\n                const b_day = dayjs(b.deleted_at);\r\n                return b_day.diff(a_day);\r\n            } else if (a.is_deleted) {\r\n                const a_day = dayjs(a.deleted_at);\r\n                const b_day = dayjs(b.created_date);\r\n                return b_day.diff(a_day);\r\n            } else if (b.is_deleted) {\r\n                const a_day = dayjs(a.created_date);\r\n                const b_day = dayjs(b.deleted_at);\r\n                return b_day.diff(a_day);\r\n            } else {\r\n                const a_day = dayjs(a.created_date);\r\n                const b_day = dayjs(b.created_date);\r\n                return b_day.diff(a_day);\r\n            }\r\n        });\r\n\r\n        return sortedComments;\r\n    };\r\n\r\n    // console.log({ widget: data });\r\n    return (\r\n        <React.Fragment>\r\n            {_.map(handleOrdering(comments), (comment) => (\r\n                <WidgetItem key={comment.id} comment={comment} />\r\n            ))}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Widget;\r\n","import * as React from \"react\";\r\nimport Comment from \"./Comment\";\r\nimport CommentModal from \"./CommentModal\";\r\nimport Button from \"../../components/Button\";\r\nimport CommentWritingModal from \"./CommentWritingModal\";\r\nimport { useLazyGetTaskDetailsQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport _ from \"lodash\";\r\nimport Widget from \"./Widget\";\r\nimport { useGetTaskCommentsQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport CommentsContainer from \"../../../UI/comments/CommentsContainer\";\r\n\r\nconst CommentSection = ({ task, isLoading }) => {\r\n    // const [comments, setComments] = React.useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = React.useState(false);\r\n    const [openAddCommentModal, setOpenAddCommentModal] = React.useState(false);\r\n    const [modalToggleRef, setModalToggleRef] = React.useState(null);\r\n\r\n    const toggleModalButton = () => setModalIsOpen(!modalIsOpen);\r\n    const toggleAddCommentModal = () =>\r\n        setOpenAddCommentModal(!openAddCommentModal);\r\n    const closeAddCommentModal = () => setOpenAddCommentModal(false);\r\n\r\n    // const [getTaskDetails, { isFetching }] = useLazyGetTaskDetailsQuery();\r\n    const { data, isLoading: isFetching } = useGetTaskCommentsQuery(task.id, {\r\n        skip: !task.id,\r\n    });\r\n\r\n    const comments = _.orderBy(data, \"id\", \"desc\");\r\n\r\n    // console.log({comments})\r\n    // // if task notes fetch completed store data into redux store\r\n    // React.useEffect(() => {\r\n    //     if (task && task.id) {\r\n    //         getTaskDetails(`/${task?.id}/json?mode=task_comment`)\r\n    //             .unwrap()\r\n    //             .then((res) => {\r\n    //                 let r = _.orderBy([...res], \"id\", \"desc\");\r\n    //                 setComments(r);\r\n    //             })\r\n    //             .catch((err) => {\r\n    //                 console.log(err);\r\n    //             });\r\n    //     }\r\n    // }, []);\r\n\r\n    // on comment post\r\n    const onCommentPost = (comment) => {\r\n        const _comments = [...comments];\r\n        _comments.unshift(comment);\r\n        // setComments(_comments);\r\n    };\r\n\r\n    const updateComments = (comment) => {\r\n        let _comments = comments;\r\n        _comments = _.map(_comments, (c) =>\r\n            c.id === comment.id ? comment : c\r\n        );\r\n        // setComments(_comments);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"sp1_task_right_card mb-3\"\r\n                ref={setModalToggleRef}\r\n                style={{ zIndex: modalIsOpen ? \"99\" : \"\" }}\r\n            >\r\n                {/* <CommentModal\r\n                    isOpen={modalIsOpen}\r\n                    toggleRef={modalToggleRef}\r\n                    comments={comments}\r\n                    task={task}\r\n                    isLoading={isFetching}\r\n                    close={() => setModalIsOpen(false)}\r\n                    onCommentPost={onCommentPost}\r\n                    updateComments={updateComments}\r\n                /> */}\r\n\r\n                <CommentsContainer\r\n                    isOpen={modalIsOpen}\r\n                    toggleRef={modalToggleRef}\r\n                    comments={comments}\r\n                    task={task}\r\n                    close={() => setModalIsOpen(false)}\r\n                    onCommentPost={onCommentPost}\r\n                />\r\n\r\n                <button\r\n                    aria-label=\"openCommentModalButton\"\r\n                    className=\"sp1_task_right_dl_toggle\"\r\n                    onClick={toggleModalButton}\r\n                    style={{ zIndex: modalIsOpen ? \"110\" : \"\" }}\r\n                >\r\n                    <i\r\n                        className={`fa-solid fa-circle-chevron-${\r\n                            modalIsOpen ? \"right\" : \"left\"\r\n                        }`}\r\n                        style={{ color: \"#276fec\" }}\r\n                    />\r\n                </button>\r\n\r\n                <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n                    <h6 className=\"f-16 mb-0\">Comment</h6>\r\n                    {(isLoading || isFetching) && (\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2 mr-auto\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        />\r\n                    )}\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        className=\"sp1_tark_add_item\"\r\n                        aria-label=\"addButton\"\r\n                        onClick={toggleModalButton}\r\n                    >\r\n                        <i\r\n                            className=\"fa-solid fa-plus\"\r\n                            style={{ fontSize: \"12px\" }}\r\n                        />\r\n                        Comment\r\n                    </Button>\r\n\r\n                    <CommentWritingModal\r\n                        isOpen={openAddCommentModal}\r\n                        close={closeAddCommentModal}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"sp1_task_right_card--body\">\r\n                    <Widget task={task} />\r\n\r\n                    {/*\r\n                    {!isFetching && !isLoading ? (\r\n                        comments?.length > 0 ? (\r\n                            comments?.map((comment) => (\r\n                                <Comment key={comment.id} comment={comment} />\r\n                            ))\r\n                        ) : (\r\n                            <div\r\n                                className=\"d-flex align-items-center justify-content-center\"\r\n                                style={{\r\n                                    color: \"#B4BCC4\",\r\n                                    fontSize: \"15px\",\r\n                                    textAlign: \"center\",\r\n                                    height: \"100%\",\r\n                                    width: \"100%\",\r\n                                }}\r\n                            >\r\n                                No Comment is Available\r\n                            </div>\r\n                        )\r\n                    ) : (\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{\r\n                                color: \"#5A6169\",\r\n                                fontSize: \"15px\",\r\n                                textAlign: \"center\",\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                            }}\r\n                        >\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                    marginRight: \"10px\",\r\n                                }}\r\n                            />\r\n                            Loading...\r\n                        </div>\r\n                    )} */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CommentSection;\r\n","import dayjs from \"dayjs\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst DailySubmissionItem = ({ item, setModalData, modalData }) => {\r\n    // const [show,setShow] = useState(false);\r\n    const { task } = useSelector((s) => s.subTask);\r\n\r\n    if (!item) return null;\r\n\r\n    return (\r\n        <tr\r\n            onClick={() => {\r\n                setModalData((prev) => {\r\n                    if (prev?.id === item.id) {\r\n                        return null;\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n            }}\r\n            className=\"sp1_tlr_tr\"\r\n            style={{\r\n                verticalAlign: \"middle\",\r\n                margin: \"0 auto\",\r\n                cursor: \"pointer\",\r\n            }}\r\n        >\r\n            <td\r\n                className=\"sp1_tlr_td\"\r\n                style={{ minWidth: \"100px\", textAlign: \"left\" }}\r\n            >\r\n                <span className=\"singleline-ellipsis\">\r\n                    <span className=\"text-primary\">Task#{task.id}</span>\r\n                    {\" submitted by \"}\r\n                    <span className=\"text-primary\">{item.developer_name}</span>\r\n                </span>\r\n            </td>\r\n            <td className=\"sp1_tlr_td\" style={{ minWidth: \"100px\" }}>\r\n                {dayjs(item.submission_creation_date).format(\"MMM DD, YYYY\")}\r\n            </td>\r\n            <td className=\"sp1_tlr_td\" style={{ minWidth: \"50px\" }}>\r\n                {modalData?.id === item.id ? (\r\n                    <AiFillEyeInvisible\r\n                        style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <AiFillEye\r\n                        style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    />\r\n                )}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default DailySubmissionItem;\r\n","import { useRef } from \"react\";\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport Button from \"../../components/Button\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { get_data_dailySubmission } from \"./fake-data/data_dailySubmission\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\n\r\nconst DailysubmissionDrawerTable = ({ isOpen, close, toggle, data, modalData, setModalData }) => {\r\n    const ref = useRef(null);\r\n    const { width: deviceWidth } = useWindowSize();\r\n    // useClickAway(ref, close);\r\n\r\n    // console.log(get_data_dailySubmission());\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\">\r\n                <div className='sp1-subtask-form --modal-panel-header'>\r\n                    <h6>Daily Submission</h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <table className=\"mt-3 sp1_tlr_table sp1_tlr_tbody\">\r\n                        {/* {deviceWidth > 800 ? <Table data={data} />: <CardView data={data} />} */}\r\n                        {\r\n                            data?.map((singleData) => (\r\n                                <DailySubmissionItem key={singleData.id} item={singleData} setModalData={setModalData} modalData={modalData} />\r\n                            ))\r\n                        }\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if (deviceWidth > 1200) {\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        );\r\n    } else {\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                {content()}\r\n            </Modal>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DailysubmissionDrawerTable;","import { convertTime } from \"../../../../utils/converTime\";\r\n\r\nconst timeFormatter = (time = '') => {\r\n    // console.log(time);\r\n    const [year, month, date] = time.split(\" \")[0].split(\"-\");\r\n    let month_name = '';\r\n    switch (month) {\r\n        case '01':\r\n            month_name = \"Jan\";\r\n            break;\r\n\r\n        case '02':\r\n            month_name = \"Feb\";\r\n            break;\r\n\r\n        case '03':\r\n            month_name = \"Mar\";\r\n            break;\r\n\r\n        case '04':\r\n            month_name = \"Apr\";\r\n            break;\r\n\r\n        case '05':\r\n            month_name = \"May\";\r\n            break;\r\n\r\n        case '06':\r\n            month_name = \"Jun\";\r\n            break;\r\n\r\n        case '07':\r\n            month_name = \"Jul\";\r\n            break;\r\n\r\n        case '08':\r\n            month_name = \"Aug\";\r\n            break;\r\n\r\n        case '09':\r\n            month_name = \"Sep\";\r\n            break;\r\n\r\n        case '10':\r\n            month_name = \"Oct\";\r\n            break;\r\n\r\n        case '11':\r\n            month_name = \"Nov\";\r\n            break;\r\n\r\n        case '12':\r\n            month_name = \"Dec\";\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return `${month_name} ${date}, ${year}`\r\n}\r\n\r\n\r\nexport const columnSchema = [\r\n    {\r\n        id: 'report_date',\r\n        header: 'Report Date',\r\n        draggable: true,\r\n        // accessor: 'report_date',\r\n        accessorKey: 'submission_creation_date',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {timeFormatter(cell.getValue())}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'page_link',\r\n        header: 'Page Link',\r\n        draggable: true,\r\n        // accessor: 'page_link',\r\n        accessorKey: 'link_name',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\">\r\n                View Link\r\n                </a>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'sections',\r\n        header: 'Sections',\r\n        draggable: true,\r\n        // accessor: 'sections',\r\n        accessorKey: 'section_name',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {cell.getValue()}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'comment',\r\n        header: 'Comment',\r\n        draggable: true,\r\n        // accessor: 'comment',\r\n        accessorKey: 'comment',\r\n        cell: (cell) => (\r\n            <div style={{ minWidth: '20rem', maxWidth: '20rem', width: '100%' }} dangerouslySetInnerHTML={{__html:cell.getValue()}}/>\r\n        )\r\n    },\r\n    {\r\n        id: 'total_time_spent',\r\n        header: 'Total Time Spent',\r\n        draggable: true,\r\n        // accessor: 'total_time_spent',\r\n        accessorKey: 'hours_spent',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {convertTime(cell.getValue())}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'attachment_url',\r\n        header: 'Screenshots/Screen records of the sections',\r\n        draggable: true,\r\n        // accessor: 'attachment_url',\r\n        accessorKey: 'attachments',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\"></a>\r\n                View Link\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'site_url',\r\n        header: `Working/Staging Site's URL`,\r\n        draggable: true,\r\n        // accessor: 'site_url',\r\n        accessorKey: 'site_url',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\">\r\n                    View Link\r\n                </a>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'frontend_password',\r\n        header: 'Frontend Password',\r\n        draggable: true,\r\n        // accessor: 'frontend_password',\r\n        accessorKey: 'frontend_password',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {cell.getValue()?cell.getValue():'No Password'}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'submission_date',\r\n        header: 'Report Submission Date',\r\n        draggable: true,\r\n        // accessor: 'submission_date',\r\n        accessorKey: 'submission_creation_date',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {timeFormatter(cell.getValue())}\r\n            </div>\r\n        )\r\n    }\r\n]","import { useRef } from \"react\";\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport Button from \"../../components/Button\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { get_data_dailySubmission } from \"./fake-data/data_dailySubmission\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\nimport DataTable from \"../../../global/table/DataTable\";\r\nimport { columnSchema } from \"./drawer-table-support/Single_user_submission_table_column\";\r\n\r\nconst SingleUserSubmissionTableDrawer = ({ isOpen, close, toggle, data, setModalData }) => {\r\n    const ref = useRef(null);\r\n    const { width: deviceWidth } = useWindowSize();\r\n    // useClickAway(ref, close);\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\">\r\n                <div className='sp1-subtask-form --modal-panel-header'>\r\n                    <h6>Daily Submission</h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={() => {\r\n                            setModalData(null);\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <DataTable\r\n                        tableData={data?[data]:[]}\r\n                        tableColumns={columnSchema}\r\n                        tableName=\"single-user-submission-table\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if (deviceWidth > 1200) {\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        );\r\n    } else {\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                {content()}\r\n            </Modal>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SingleUserSubmissionTableDrawer;","import { useEffect, useState } from \"react\";\r\nimport DailysubmissionDrawerTable from \"./DailysubmissionDrawerTable\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\nimport SingleUserSubmissionTableDrawer from \"./SingleUserSubmissionTableDrawer\";\r\nimport { useGetDailyTasksSubmissionQuery } from \"../../../services/api/dailySubmissionApiSlice\";\r\n\r\n\r\nconst DailySubmissionSection = ({ task }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [modalTableIsOpen, setModalTableIsOpen] = useState(false);\r\n  const [modalRefButton, setModalRefButton] = useState(null);\r\n  const [singleUserSubmissionTableDrawerRef, setSingleUserSubmissionTableDrawerRef] = useState(null);\r\n  const [modalData, setModalData] = useState(null);\r\n\r\n\r\n  const { data, isLoading } = useGetDailyTasksSubmissionQuery(task?.id);\r\n    // control modal\r\n  const toggle = () => setIsOpen(prev => !prev);\r\n  const close = () => setIsOpen(false);\r\n\r\n  // const modalTableToggle = () => setModalTableIsOpen(prev=> !prev);\r\n  const modalTableOpen = () => setModalTableIsOpen(true);\r\n  const modalTableClose = () => setModalTableIsOpen(false);\r\n\r\n  useEffect(() => {\r\n    if (modalData) {\r\n      modalTableOpen();\r\n    } else {\r\n      modalTableClose();\r\n    }\r\n  }, [modalData])\r\n\r\n  const handleModalRef = (ref) => {\r\n    setModalRefButton(ref);\r\n    setSingleUserSubmissionTableDrawerRef(ref);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='sp1_task_right_card mb-3'\r\n      ref={handleModalRef}\r\n      style={{ zIndex: isOpen ? '99' : '' }}>\r\n\r\n      <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Daily Submission</span>\r\n        {isLoading &&\r\n          <div\r\n            className=\"spinner-border text-dark ml-2 mr-auto\"\r\n            role=\"status\"\r\n            style={{\r\n              width: '16px',\r\n              height: '16px',\r\n              border: '0.14em solid rgba(0, 0, 0, .25)',\r\n              borderRightColor: 'transparent'\r\n            }}\r\n          />\r\n        }\r\n      </div>\r\n\r\n\r\n      {/* side drop toggle button */}\r\n      {/* {_.size(timeLogs) > 0 && } */}\r\n      <button\r\n        aria-label='openCommentModalButton'\r\n        className='sp1_task_right_dl_toggle'\r\n        onClick={toggle}\r\n        style={{ zIndex: isOpen ? 110 : '' }}\r\n      >\r\n        <i\r\n          className={`fa-solid fa-circle-chevron-${isOpen ? 'right' : 'left'}`}\r\n          style={{ color: \"#276fec\" }}\r\n        />\r\n      </button>\r\n      {/* side drop toggle button end */}\r\n\r\n\r\n      <DailysubmissionDrawerTable\r\n        isOpen={isOpen}\r\n        close={close}\r\n        toggle={modalRefButton}\r\n        data={data?.daily_submissions}\r\n        modalData={modalData}\r\n        setModalData={setModalData} />\r\n\r\n      <SingleUserSubmissionTableDrawer\r\n        isOpen={modalTableIsOpen}\r\n        close={modalTableClose}\r\n        toggle={singleUserSubmissionTableDrawerRef}\r\n        data={modalData}\r\n        setModalData={setModalData} />\r\n\r\n\r\n      <div className=\"sp1_task_right_card--body\">\r\n        {data?.daily_submissions.length > 0 ?\r\n          <table className=\"sp1_tlr_table\">\r\n            <tbody className=\"sp1_tlr_tbody\">\r\n              {!isLoading &&\r\n                data?.daily_submissions?.map((singleData) => (\r\n                  <DailySubmissionItem key={singleData.id} item={singleData} setModalData={setModalData} modalData={modalData} />\r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n          :\r\n          <div\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{\r\n              color: \"#B4BCC4\",\r\n              fontSize: \"15px\",\r\n              textAlign: \"center\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            No Submission is Available\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailySubmissionSection;","import React from 'react'\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst InnerHistoryItemLoader = () => {\r\n  return (\r\n    <div className=\"d-flex align-items-center sp1_tark_right_item py-2\">\r\n        <div className=''>\r\n            <Placeholder\r\n              width={48}\r\n              height={48}\r\n            />\r\n        </div>\r\n        <div className='px-3 w-100'>\r\n            <Placeholder className='mb-2'/>  \r\n            <Placeholder/>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default InnerHistoryItemLoader ","import React, {lazy} from 'react'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport Button from '../../components/Button';\r\nconst InnerHistoryItem = lazy(() => import('./InnerHistoryItem'));\r\nimport InnerHistoryItemLoader from './InnerHistoryItemLoader';\r\nimport Modal from '../../components/Modal';\r\nimport { useWindowSize } from \"react-use\";\r\n\r\n\r\nconst Histories = ({isOpen, close, toggle, data = []}) => {\r\n  const {width: deviceWidth} = useWindowSize();\r\n  \r\n  const content = () => {\r\n    return (\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6> History </h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='mt-3'>\r\n                    {data ? data.map(d => (\r\n                        <React.Fragment key={d.id}>\r\n                            <React.Suspense fallback={<InnerHistoryItemLoader />}>\r\n                                <InnerHistoryItem history={d} />\r\n                            </React.Suspense>\r\n                        </React.Fragment>\r\n                    )):null}\r\n                </div>      \r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n \r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n            <React.Fragment>{content()}</React.Fragment>       \r\n        </CustomModal>\r\n    );\r\n    }else{\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Histories\r\n","import React, {lazy, Suspense} from 'react'\r\nconst HistoryItem = lazy(() => import('./HistoryItem'));\r\nimport { Placeholder } from '../../../global/Placeholder';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { storeHistories } from '../../../services/features/subTaskSlice';\r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport Histories from './Histories';\r\nimport useSWR from 'swr';\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst HistorySection = () => {\r\n  const {task, histories} = useSelector(s => s.subTask);\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, error, isLoading:isFetching } = useSWR(`/account/task/${task.id}/json?mode=task_history`, fetcher, {\r\n    refreshInterval: 5000\r\n  });\r\n\r\n  //fetch all task \r\n  // const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n  //   skip: histories?.length\r\n  // })\r\n\r\n   //if task notes fetch completed store data into redux store\r\n  //  React.useEffect(()=> {\r\n  //   if(task && task.id){\r\n  //     getTaskDetails(`/${task?.id}/json?mode=task_history`)\r\n  //     .unwrap()\r\n  //     .then(res => {\r\n  //       if(res){\r\n  //         dispatch(storeHistories(res));\r\n  //       }\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(err)\r\n  //     })\r\n  //   } \r\n  // }, [task]); \r\n\r\n  React.useEffect(()=> {\r\n    if(!isFetching && data){\r\n      dispatch(storeHistories(data));\r\n    }  \r\n  }, [data, isFetching]); \r\n  \r\n\r\n  // control modal\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const close = () => setIsOpen(false);\r\n\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3' ref={setModalRefButton} style={{zIndex: isOpen ? 99 : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">History</span> \r\n        {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n          <button \r\n            aria-label='openCommentModalButton'  \r\n            className='sp1_task_right_dl_toggle'\r\n            onClick={toggle}\r\n            style={{zIndex: isOpen ? '110' : ''}}\r\n          >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>\r\n        {/* side drop toggle button end */}\r\n \r\n          {/* histories details */}\r\n          <Histories\r\n            isOpen={isOpen}\r\n            close={close}\r\n            data={histories} \r\n            toggle={modalRefButton}\r\n          />\r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          {!isFetching ? histories ? histories.map( history => (\r\n            <React.Fragment key={history.id}>\r\n              <Suspense fallback={<div className='sp1_tark_right_item py-2 '> <Placeholder /> </div>}>\r\n                <HistoryItem history={history} />\r\n              </Suspense>\r\n            </React.Fragment>\r\n          )):<div\r\n            className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#B4BCC4',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          >\r\n              Empty History\r\n          </div> : \r\n          <div className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#5A6169',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          > \r\n              <div \r\n                    className=\"spinner-border text-dark ml-2\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent',\r\n                        marginRight: '10px'\r\n                    }}\r\n                />\r\n              Loading...\r\n          </div> }\r\n        </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default HistorySection","import { Link } from \"react-router-dom\"\r\n\r\nconst Note = ({note}) => {\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\">\r\n        <div className='w-100 text-ellipsis'>\r\n          {note?.title || 'Untitled'} \r\n        </div>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?note=${note.id}&type=view`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n            <Link to={`?note=${note.id}&type=edit`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-pen-to-square\"></i>\r\n            </Link>\r\n        </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Input = ({\r\n    label,\r\n    id,\r\n    readOnly=false,\r\n    placeholder='',\r\n    inputClass='',\r\n    labelClass='',\r\n    type='text',\r\n    className='',\r\n    value,\r\n    defaultValue,\r\n    onChange,\r\n    error,\r\n    ...rest\r\n}) => {\r\n  return (\r\n    <div className={`form-group my-3 w-100 ${className}`}>\r\n        <label\r\n            htmlFor={id}\r\n            className={`f-14 text-dark-gray mb-1 ${labelClass}`}\r\n            data-label=\"true\"\r\n        >\r\n            {label}\r\n            {rest.required && <sup className='f-14 mr-1'>*</sup> }\r\n        </label>\r\n        <input\r\n            type={type}\r\n            className={`form-control singleline-ellipsis height-35 w-100 f-14 ${inputClass}`}\r\n            placeholder={placeholder}\r\n            id={id}\r\n            value={value}\r\n            defaultValue={defaultValue}\r\n            onChange={onChange}\r\n            readOnly={readOnly}\r\n            onWheel={e => e.currentTarget.blur()}\r\n            {...rest}\r\n        />\r\n\r\n        {error? <div className='' style={{color: 'red'}}> {error} </div> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import * as React from 'react' \r\nimport Button from '../../components/Button' \r\nimport _ from 'lodash'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useCrateNoteMutation } from '../../../services/api/SingleTaskPageApi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeNotes } from '../../../services/features/subTaskSlice'\r\nimport Input from '../../components/form/Input'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from '../../components/Modal'\r\n\r\n\r\n\r\n\r\n\r\nconst CreateNote = ({isOpen, close,toggleRef}) => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [files, setFiles] = React.useState([]);\r\n  const [title, setTitle] = React.useState('');\r\n  const [errTitle, setErrTitle] = React.useState(null);\r\n  const [note,setNote] = React.useState('');\r\n  const dispatch = useDispatch();  \r\n  const { width: deviceWidth} = useWindowSize();\r\n\r\n\r\n const [crateNote, {isLoading}] = useCrateNoteMutation();\r\n\r\n  // handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n  const handleSubmit = e => { \r\n    e.preventDefault();\r\n    if(!title){\r\n        setErrTitle('Title name required');\r\n        return null;\r\n    }\r\n    const fd = new FormData(); \r\n    fd.append('title', title);\r\n    fd.append('note', note);\r\n    fd.append('taskId', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    \r\n    crateNote(fd).unwrap().then(res => {\r\n            if(res?.status === 'success'){\r\n                let _notes = [...notes];\r\n                _notes.push(res?.note);\r\n                dispatch(storeNotes(_notes));\r\n\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: \"Data has been stored Successfully\",\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                }) \r\n\r\n                close();\r\n            }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setNote(data);\r\n  }  \r\n\r\n  const content = () => {\r\n    return (  \r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6>Write Notes</h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <div className='py-3'>\r\n                        <Input \r\n                            id='title'\r\n                            label=\"Title\"\r\n                            type=\"text\" \r\n                            placeholder='Enter a task title'\r\n                            name='title'\r\n                            required={true}\r\n                            value={title}\r\n                            error= {errTitle}\r\n                            onChange={e => handleChange(e, setTitle)}\r\n                        />\r\n\r\n                        <div className='sp1_st_write_comment_editor' style={{minHeight: '100px'}}>\r\n                            <h6 className='mb-3 f-14' style={{color:'#777'}}>Write Note</h6>\r\n                            <CKEditorComponent onChange={handleEditorChange}/>\r\n                        </div>\r\n\r\n                        <div className='mt-3'>\r\n                            <h6 className='mb-3 f-14' style={{color:'#777'}}>Upload Files</h6>\r\n                            <UploadFilesInLine  \r\n                                files={files} \r\n                                setFiles={setFiles} \r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"mt-5\"> \r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <Button\r\n                                        variant='secondary'\r\n                                        className='mr-2'\r\n                                        onClick={close}\r\n                                    > \r\n                                        Cancel\r\n                                    </Button> \r\n        \r\n                                    {!isLoading ? (\r\n                                        <Button onClick={handleSubmit}>\r\n                                            <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                            Keep as Notes\r\n                                        </Button>\r\n                                    ) : (\r\n                                    <Button className='cursor-processing'>\r\n                                        <div \r\n                                            className=\"spinner-border text-white\" \r\n                                            role=\"status\"\r\n                                            style={{\r\n                                                width: '18px',\r\n                                                height: '18px', \r\n                                            }}\r\n                                        >\r\n                                        </div>\r\n                                        Processing...\r\n                                    </Button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n    )\r\n  }\r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n           <React.Fragment>\r\n            {content()}\r\n           </React.Fragment>\r\n        </CustomModal>\r\n      )\r\n }else{\r\n    return (\r\n        <Modal isOpen={isOpen}> \r\n            <React.Fragment>\r\n                {content()}\r\n            </React.Fragment>\r\n        </Modal>\r\n      )\r\n }\r\n\r\n}\r\n\r\nexport default CreateNote ","import * as React from 'react' \r\nimport Button from '../../components/Button' \r\nimport _ from 'lodash'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useCrateNoteMutation, useDeleteNoteUploadedFileMutation, useGetTaskDetailsQuery, useUpdateNoteMutation } from '../../../services/api/SingleTaskPageApi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeNotes } from '../../../services/features/subTaskSlice'\r\nimport Input from '../../components/form/Input'\r\nimport { useEffect } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport { useWindowSize } from 'react-use' \r\nimport Modal from '../../components/Modal'\r\n\r\nconst EditNote = ({isOpen, close, toggleRef}) => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [files, setFiles] = React.useState([]);\r\n  const [title, setTitle] = React.useState('');\r\n  const [errTitle, setErrTitle] = React.useState(null);\r\n  const [note,setNote] = React.useState('');\r\n  const [attachedFiles, setAttachedFiles] = React.useState([]);\r\n  const dispatch = useDispatch();\r\n  const { width: deviceWidth} = useWindowSize();\r\n  const [searchParams] = useSearchParams();\r\n  const noteId = searchParams.get('note');\r\n  const type = searchParams.get('type');\r\n\r\n\r\n\r\n   const [updateNote, {isLoading}] = useUpdateNoteMutation();\r\n\r\n  // fetch all task \r\n  const {data, isFetching} = useGetTaskDetailsQuery(`/${noteId}/json?mode=task_note_edit`, {\r\n    skip: type ? (type !== 'edit' || !noteId) : true,\r\n    refetchOnMountOrArgChange: true\r\n  }) \r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    clearField();\r\n    if(!isFetching && data){ \r\n        setTitle(data?.title);\r\n        setNote(data?.note);\r\n        setAttachedFiles(data?.files || []);\r\n    }\r\n  }, [data, noteId, isFetching]);\r\n\r\n  const clearField = () => {\r\n    setTitle('');\r\n    setNote('');\r\n    setAttachedFiles([]);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    clearField();\r\n    close();\r\n  }\r\n\r\n\r\n // handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n\r\n// handle submittion\r\n  const handleSubmit = e => { \r\n    e.preventDefault();\r\n    if(!title){\r\n        setErrTitle('Title name required');\r\n        return null;\r\n    }\r\n    const fd = new FormData(); \r\n    fd.append('title', title);\r\n    fd.append('note', note);\r\n    fd.append('taskId', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    fd.append('_method', 'PUT');\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    \r\n    updateNote({data: fd, id: noteId}).unwrap().then(res => { \r\n            if(res?.status === 'success'){  \r\n                let _notes = [...notes];\r\n                _notes = _notes?.map(note => {\r\n                    if(Number(note?.id) === Number(res?.note?.id)){\r\n                        return res?.note;\r\n                    }else return note\r\n                })\r\n  \r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: res?.message,\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                }) \r\n\r\n                dispatch(storeNotes(_notes)); \r\n\r\n                handleClose();\r\n            }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  // handle editor\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setNote(data);\r\n  }  \r\n\r\n  // handle loading state\r\nReact.useEffect(() => { \r\n    if (isLoading || isFetching) {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'progress';\r\n      } else {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'default';\r\n      }\r\n}, [isLoading, isFetching])\r\n\r\n\r\n\r\n\r\n  // handle uplaoded file delete request\r\nconst [deleteNoteUploadedFile] = useDeleteNoteUploadedFileMutation();\r\n\r\nconst handleFileDelete = (e, file) => { \r\n    // delete\r\n    deleteNoteUploadedFile(file?.id).unwrap();\r\n   \r\n    // delete form ui\r\n    let previousFile = [...attachedFiles];\r\n    let index = previousFile?.indexOf(file);\r\n    previousFile.splice(index,1);\r\n    setAttachedFiles(previousFile);\r\n}\r\n\r\n\r\n    const content = () => {\r\n        return (\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6>Update Notes\r\n                        {isFetching && <div \r\n                            className=\"spinner-border text-dark ml-2\" \r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent' \r\n                            }}\r\n                        />}\r\n                  </h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={handleClose}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                {isFetching && \r\n                    <div className='w-100' style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        zIndex: 1\r\n                    }}/>\r\n                }\r\n                <div className='py-3'>\r\n                    <Input \r\n                        id='title'\r\n                        label=\"Title\"\r\n                        type=\"text\" \r\n                        placeholder='Enter a task title'\r\n                        name='title'\r\n                        required={true}\r\n                        value={title}\r\n                        error= {errTitle}\r\n                        onChange={e => handleChange(e, setTitle)}\r\n                    />\r\n\r\n                    <div className='sp1_st_write_comment_editor pr-0' style={{minHeight: '100px'}}>\r\n                        <h6 className='mb-3 f-14' style={{color:'#777'}}>Write Note</h6>\r\n                        <CKEditorComponent data={note} onChange={handleEditorChange}/>\r\n                    </div>\r\n\r\n                    <div className='mt-3'>\r\n                        <h6 className='mb-3 f-14' style={{color:'#777'}}>Upload Files</h6>\r\n                        <UploadFilesInLine  \r\n                            files={files} \r\n                            setFiles={setFiles} \r\n                            previous={attachedFiles}\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"mt-5\"> \r\n                            <div className=\"d-flex align-items-center\">\r\n                                <Button\r\n                                    variant='secondary'\r\n                                    className='mr-2'\r\n                                    onClick={handleClose}\r\n                                > \r\n                                    Cancel\r\n                                </Button> \r\n    \r\n                                {!isLoading ? (\r\n                                    <Button onClick={handleSubmit}>\r\n                                        <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                        Update\r\n                                    </Button>\r\n                                ) : (\r\n                                <Button className='cursor-processing'>\r\n                                    <div \r\n                                        className=\"spinner-border text-white\" \r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: '18px',\r\n                                            height: '18px', \r\n                                        }}\r\n                                    >\r\n                                    </div>\r\n                                    Processing...\r\n                                </Button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </CustomModal>\r\n      )\r\n }else{\r\n    return (\r\n        <Modal isOpen={isOpen}> \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </Modal>\r\n      )\r\n }\r\n}\r\n\r\nexport default EditNote;","import * as React from 'react'\r\nimport Button from '../../components/Button'\r\nimport CustomModal from '../../components/CustomModal' \r\nimport { useGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport { User } from '../../../utils/user-details'\r\nimport ContentLoader from \"react-content-loader\"\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from '../../components/Modal'\r\n\r\n\r\nconst NoteView = ({close, isOpen, toggleRef}) => {\r\n    const [searchParams] = useSearchParams();\r\n    const noteId = searchParams.get('note');\r\n    const type = searchParams.get('type');\r\n    const { width: deviceWidth} = useWindowSize();\r\n\r\n    // fetch all task \r\n    const {data, isFetching} = useGetTaskDetailsQuery(`/${noteId}/json?mode=task_note_edit`, {\r\n        skip: type ? (type !== 'view' || !noteId) : true,\r\n        refetchOnMountOrArgChange: true\r\n    }) \r\n    \r\n  const user = data ?  new User(data.user) : null;\r\n\r\n  const content = () =>{\r\n    return(\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                <h6>Notes</h6> \r\n                {isFetching && <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent'\r\n                    }}\r\n                />} \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='py-3'>\r\n                    <div>\r\n                        {isFetching ? <>Loading...</> : \r\n                        <>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div className=''>\r\n                                    <img src={user?.getAvatar()} alt=\"\" width={40} height={40} />\r\n                                </div>\r\n                                <div className='px-3'>\r\n                                    <h6 className='mb-0'>{user?.getName()}</h6>\r\n                                    <span className='' style={{color: '#A5ACB5'}}>{user?.getDesignationName()}</span>\r\n                                </div>\r\n                            </div> \r\n                            <div className='mt-4'>\r\n                                <h6 className='font-weight-bold'>{data?.title}</h6>\r\n                                <div className='sp1_ck_content mb-5' dangerouslySetInnerHTML={{__html: data?.note}} />\r\n                                {data?.files && <UploadFilesInLine previous={data?.files} mode='preview'/>}\r\n                            </div>\r\n                        </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </CustomModal>\r\n    )\r\n  }else{\r\n    return <Modal isOpen={isOpen} > \r\n        <React.Fragment>\r\n            {content()}\r\n        </React.Fragment>\r\n     </Modal>\r\n  }\r\n}\r\n\r\nexport default NoteView","import React from 'react'\r\nimport Note from './Note'\r\nimport CreateNote from './CreateNote';\r\nimport Button from '../../components/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { storeNotes } from '../../../services/features/subTaskSlice';\r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport EditNote from './EditNote';\r\nimport NoteView from './NoteView';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\n\r\nconst NoteSection = () => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [mode, setMode] = React.useState('');\r\n\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n\r\n  const dispatch = useDispatch();   \r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const paramType = searchParams.get('type');\r\n\r\n\r\n  // fetch all task \r\n  const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n    skip: notes?.length\r\n  })\r\n\r\n  // control mode \r\n  React.useEffect(() => {\r\n    let _mode = paramType ? paramType : '';\r\n    setMode(_mode);\r\n  }, [paramType])\r\n\r\n\r\n  // if task notes fetch completed store data into redux store\r\n  React.useEffect(()=> {\r\n    if(task && task.id){\r\n      getTaskDetails(`/${task?.id}/json?mode=task_note`)\r\n      .unwrap()\r\n      .then(res => {\r\n        if(res){\r\n          dispatch(storeNotes(res));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    } \r\n  }, [task]);\r\n \r\n \r\n  // close modal\r\n  const close = (e) => { \r\n    navigate(`/account/tasks/${task.id}`); \r\n  }\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3' ref={setModalRefButton} style={{zIndex: mode ? '99' : ''}}>\r\n       <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n          <span className=\"f-16\">Notes</span>\r\n          {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n          <Button\r\n              variant='tertiary'\r\n              className=\"sp1_tark_add_item\" \r\n              aria-label=\"addButton\"\r\n              onClick={() => navigate(`?type=create`)}\r\n          > \r\n              {mode === 'create' ? (\r\n                <> <i className=\"fa-solid fa-xmark\" style= {{fontSize: '12px'}}/> Close </> \r\n                ) :\r\n                (\r\n                  <> <i className=\"fa-solid fa-plus\"  style= {{fontSize: '12px'}} /> Note  </>\r\n                )\r\n              }\r\n          </Button>\r\n        </div>\r\n\r\n        {/* left dropdown */}\r\n        {mode && <button \r\n          aria-label='openCommentModalButton'  \r\n          \r\n          className='sp1_task_right_dl_toggle'\r\n          onClick={close}\r\n          style={{zIndex: mode ? '110' : ''}}\r\n        >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ mode ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>}\r\n      {/* left dropdown */}\r\n\r\n        {/* create new */} \r\n        <CreateNote \r\n            close={close}  \r\n            isOpen={mode === 'create'} \r\n            toggleRef={modalRefButton}\r\n        /> \r\n\r\n        {/* edit note */} \r\n        <EditNote \r\n          close={close} \r\n          isOpen={ mode === 'edit'}   \r\n          toggleRef={modalRefButton}\r\n        />  \r\n\r\n\r\n        {/* note view */}\r\n        <NoteView \r\n          close={close}\r\n          isOpen={mode === 'view'} \r\n          toggleRef={modalRefButton}\r\n        /> \r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          { !isFetching ? notes?.length > 0 ? notes.map(note => (\r\n            <Note \r\n              key={note.id} \r\n              note={note}  \r\n            /> \r\n          )): <div\r\n            className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#B4BCC4',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          >\r\n              Empty Notes\r\n            </div> : \r\n            <div className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#5A6169',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          > \r\n              <div \r\n                    className=\"spinner-border text-dark ml-2\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent',\r\n                        marginRight: '10px'\r\n                    }}\r\n                />\r\n              Loading...\r\n            </div> }\r\n        </div>\r\n\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default NoteSection","import * as React from 'react'\r\nimport Button from '../../components/Button'\r\nimport CustomModal from '../../components/CustomModal' \r\n\r\n\r\nconst  ViewComment = ({close, isOpen, toggleRef, comment}) => { \r\n  return (\r\n    <CustomModal isOpen={isOpen} toggleRef={toggleRef}>\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal ml-auto'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='py-3'>\r\n                    <div>\r\n                        {/* comment here... */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </CustomModal>\r\n    \r\n  )\r\n}\r\n\r\nexport default ViewComment \r\n\r\n","import React from 'react'\r\nimport Rating from '../../../global/Rating'\r\nimport useSWR from 'swr';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux'\r\nimport ViewComment from './ViewComment';\r\n\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst RevisionSection = ({task}) => { \r\n  const [toggleRef, setToggleRef] = React.useState(null);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const toggle = (e) => {\r\n    e.preventDefault();\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  const close = e => {\r\n    setIsOpen(false);\r\n  }\r\n\r\n\r\n  const { data, error, isLoading } = useSWR(`/account/task/${task.id}/json?mode=task_approve`, fetcher);\r\n\r\n\r\n  const cmt = data?.comment;\r\n  const commentLength = cmt?.length > 250; \r\n  let comment = commentLength ? cmt?.slice(0, 250): cmt;  \r\n  comment = comment || `<span className='' style=\"color: #A7A9B2\">No Comment is Available</span>`\r\n \r\n  return (\r\n    <div className=\"sp1_task_right_card mb-3\" ref={setToggleRef} style={{maxHeight:'450px'}}>  \r\n\r\n        {/* side drop toggle button */}\r\n        {isOpen && (\r\n            <button \r\n                aria-label='openCommentModalButton'  \r\n                \r\n                className='sp1_task_right_dl_toggle'\r\n                onClick={toggle}\r\n                style={{zIndex: isOpen ? '110' : ''}}\r\n            >\r\n                <i \r\n                className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n                style={{color: \"#276fec\"}} \r\n                />\r\n            </button>\r\n        )}\r\n        {/* side drop toggle button end */}\r\n\r\n        <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n            <span className=\"f-16\">Task Review</span> \r\n        </div> \r\n       \r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Deadline Meet : </div>\r\n            <div className=\"d-flex align-items-center\">\r\n                <Rating rating={Number(data?.deadline_meet)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Submission Quality: </div>\r\n            <div className=\"d-flex align-items-center\">  \r\n                <Rating rating={Number(data?.submission_quality)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Req. Fullfillment: </div>\r\n            <div className=\"d-flex align-items-center\"> \r\n            <Rating rating={Number(data?.req_fullfillment)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Overall Task Ratings: </div>\r\n            <div className=\"d-flex align-items-center\"> \r\n                <Rating rating={Number(data?.overall_tasks)} /> \r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"mb-2\">\r\n            <span className=\"font-weight-bold d-block mb-1\">Comments:</span>\r\n            <div style={{color:'#777', fontSize: '13px'}}>\r\n                <div className='sp1_ck_content' dangerouslySetInnerHTML={{__html: comment}}></div> \r\n                { commentLength && <a href=\"#\" onClick={toggle} >Read More</a>}\r\n            </div>\r\n        </div> \r\n        <ViewComment isOpen={isOpen} toggleRef={toggleRef} close={close} comment={data?.comment} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RevisionSection","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./task-edit-form.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import * as React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nconst DatePickerComponent = ({date, selected, setDate, minDate, maxDate, placeholderText,...rest}) => {\r\n\r\n  return (\r\n        <DatePicker\r\n            selected={date}\r\n            dateFormat='dd-MM-yyyy'\r\n            onChange={(d) => setDate(d)}\r\n            className='w-100 border-0 py-2'\r\n            minDate={minDate}\r\n            maxDate={maxDate}\r\n            placeholderText={placeholderText}\r\n            {...rest}\r\n        />\r\n  )\r\n}\r\n\r\nexport default DatePickerComponent;\r\n","/* eslint-disable react/display-name */\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nconst SearchBox = ({value, onChange, placeholder=\"Search\", autoFocus=false, className=\"\", ...props}) => {\r\n        const ref = React.useRef(null);\r\n        React.useEffect(() => {\r\n            if (autoFocus) {\r\n                ref.current.focus();\r\n            }\r\n        }, [autoFocus, ref])\r\n        return (\r\n            <div className='cnx__ins__ui_search'>\r\n                <input \r\n                    type='text' \r\n                    placeholder= {placeholder}\r\n                    value={value}\r\n                    className={`cnx__ins__ui_search_input ${className}`}\r\n                    onChange={e => onChange(e.currentTarget.value)}  \r\n                    ref={ref}   \r\n                    {...props}\r\n                />\r\n\r\n                {/* search icons */}\r\n                    <div className='cnx__ins__ui_search_icon'>\r\n                        <svg \r\n                            xmlns=\"http://www.w3.org/2000/svg\" \r\n                            className='cnx__ins__ui_search_icon_svg mb-1'\r\n                            viewBox=\"0 0 24 24\" width=\"15\" height=\"15\">\r\n                            <path d=\"M23.707,22.293l-5.969-5.969a10.016,10.016,0,1,0-1.414,1.414l5.969,5.969a1,1,0,0,0,1.414-1.414ZM10,18a8,8,0,1,1,8-8A8.009,8.009,0,0,1,10,18Z\"/>\r\n                        </svg>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nSearchBox.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    placeholder: PropTypes.string,\r\n    className: PropTypes.string,\r\n    autoFocus: PropTypes.bool,\r\n}\r\n\r\n\r\nexport default SearchBox;","const Loader = ({title =\"Loading...\"}) => {\r\n  return (\r\n        <div className='d-flex align-items-center'>\r\n            <div\r\n                className=\"spinner-border text-dark mr-2\"\r\n                role=\"status\"\r\n                style={{\r\n                    width: \"16px\",\r\n                    height: \"16px\",\r\n                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                    borderRightColor: \"transparent\",\r\n                }}\r\n            /> \r\n            <span>{title}</span>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import { Combobox } from '@headlessui/react'\r\nimport * as React from 'react'\r\nimport SearchBox from '../../components/form/Searchbox';\r\nimport _  from 'lodash';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from '../../components/Loader';\r\nimport { useGetTaskDetailsQuery } from '../../../../react-latest/services/api/SingleTaskPageApi';\r\n\r\n\r\n\r\nconst TaskCategorySelectionBox = ({selected, onSelect, taskId}) => {\r\n    const [query, setQuery] = React.useState('');\r\n\r\n    const params = useParams();\r\n    const {\r\n        data:categories,\r\n        isFetching\r\n    } = useGetTaskDetailsQuery(`/${params?.taskId || taskId}/json?mode=category`);\r\n\r\n\r\n    const filteredData =\r\n    query === ''\r\n      ? categories\r\n      : categories?.filter((cat) => {\r\n          return cat?.category_name.toLowerCase().includes(query.toLowerCase())\r\n        })\r\n\r\n  return (\r\n    <Combobox value={selected} onChange={onSelect}>\r\n        <div className=\"form-group position-relative my-3\">\r\n            <label htmlFor=\"\">Task category<sup>*</sup></label>\r\n            <Combobox.Button className=\"d-flex align-items-center w-100 sp1-selection-display-button\">\r\n                <Combobox.Input\r\n                    onChange={e => setQuery(e.target.value)}\r\n                    placeholder='--'\r\n                    displayValue={(value) => value?.category_name || ''}\r\n                    className=\"form-control height-35 f-14 sp1-selection-display w-100\"\r\n                />\r\n                <div className='__icon'>\r\n                    <i className=\"fa-solid fa-sort\"></i>\r\n                </div>\r\n            </Combobox.Button>\r\n\r\n            <Combobox.Options className=\"sp1-select-options\">\r\n\r\n                {isFetching && (\r\n                    <div className='sp1-select-option-nodata'>\r\n                        <Loader />\r\n                    </div>\r\n                )}\r\n\r\n                {filteredData?.length===0 ?\r\n                    <div className='sp1-select-option-nodata'>\r\n                         Nothing found.\r\n                    </div>\r\n                :filteredData?.map((cat, catIdx) => (\r\n                <Combobox.Option\r\n                    key={catIdx}\r\n                    className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                    value={cat}\r\n                >\r\n                    {({ selected }) => (\r\n                        <>\r\n                            <span\r\n                                className={`block truncate ${\r\n                                selected ? 'font-medium' : 'font-normal'\r\n                                }`}\r\n                            >\r\n                                {cat?.category_name}\r\n                            </span>\r\n                            {selected ? (\r\n                                <span className=\"ml-auto\"> <i className='fa-solid fa-check'/> </span>\r\n                            ) : null}\r\n                        </>\r\n                    )}\r\n                </Combobox.Option>\r\n            ))}\r\n            </Combobox.Options>\r\n        </div>\r\n    </Combobox >\r\n  )\r\n}\r\n\r\nexport default TaskCategorySelectionBox\r\n","import { Combobox } from \"@headlessui/react\";\r\nimport * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n    useDeveloperInProgressTaskQuery,\r\n    useGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst AssginedToSelection = ({ selected, onSelect }) => {\r\n    const [query, setQuery] = React.useState(\"\");\r\n\r\n    const params = useParams();\r\n    const { data: employees, isFetching } = useGetTaskDetailsQuery(\r\n        `/${params?.taskId}/json?mode=employees`\r\n    );\r\n\r\n    const filteredData =\r\n        query === \"\"\r\n            ? employees\r\n            : employees?.filter((employee) => {\r\n                  return employee?.name\r\n                      .toLowerCase()\r\n                      .includes(query.toLowerCase());\r\n              });\r\n\r\n    return (\r\n        <Combobox value={selected} onChange={onSelect}>\r\n            <div className=\"form-group position-relative my-3\">\r\n                <label htmlFor=\"\">Assigned To</label>\r\n                <Combobox.Button className=\"d-flex align-items-center w-100 sp1-selection-display-button\">\r\n                    <Combobox.Input\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        placeholder=\"--\"\r\n                        displayValue={(value) => value?.name || \"\"}\r\n                        className=\"form-control height-35 f-14 sp1-selection-display w-100\"\r\n                    />\r\n                    <div className=\"__icon\">\r\n                        <i className=\"fa-solid fa-sort\"></i>\r\n                    </div>\r\n                </Combobox.Button>\r\n\r\n                <Combobox.Options className=\"sp1-select-options\">\r\n                    {isFetching && (\r\n                        <div className=\"sp1-select-option-nodata\">\r\n                            <Loader />\r\n                        </div>\r\n                    )}\r\n\r\n                    {filteredData?.length === 0 ? (\r\n                        <div className=\"sp1-select-option-nodata\">\r\n                            Nothing found.\r\n                        </div>\r\n                    ) : (\r\n                        filteredData?.map((employee) => (\r\n                            <Option key={employee.id} employee={employee} />\r\n                        ))\r\n                    )}\r\n                </Combobox.Options>\r\n            </div>\r\n        </Combobox>\r\n    );\r\n};\r\n\r\nexport default AssginedToSelection;\r\n\r\nconst Option = ({ employee }) => {\r\n    const { data, isLoading } = useDeveloperInProgressTaskQuery(\r\n        employee?.id,\r\n        { skip: !employee?.id }\r\n    );\r\n  \r\n    if(isLoading){\r\n        return <div className=\"sp1-select-option mb-2\">\r\n            <div className=\"d-flex align-items-center px-3\"> \r\n                <Placeholder />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <Combobox.Option\r\n            key={employee?.id}\r\n            className={({ active }) =>\r\n                `sp1-select-option ${active ? \"active\" : \"\"}`\r\n            }\r\n            value={{\r\n                ...employee,\r\n                isOverloaded: data?.status === 400,\r\n            }}\r\n        >\r\n            {({ selected }) => (\r\n                <div\r\n                    className=\"d-flex align-items-center\"\r\n                    style={{ gap: \"10px\" }}\r\n                >\r\n                    <div\r\n                        className=\"rounded-circle\"\r\n                        style={{\r\n                            width: \"28px\",\r\n                            height: \"28px\",\r\n                            overflow: \"hidden\",\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src={employee?.image_url}\r\n                            alt={employee?.name}\r\n                            width={100}\r\n                            height={100}\r\n                            className=\"rounded-circle\"\r\n                            style={{\r\n                                width: \"100%\",\r\n                                height: \"100%\",\r\n                                objectFit: \"fill\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <span\r\n                        className={`block truncate ${\r\n                            selected ? \"font-medium\" : \"font-normal\"\r\n                        }`}\r\n                    >\r\n                        <span className=\"mr-2\">{employee?.name}</span>\r\n                        {data?.status === 400 ? <span className=\"badge badge-danger\">Overloaded</span> : \r\n                        employee?.developer_status === 1 ? (\r\n                            <span className=\"badge badge-warning\">\r\n                                Working...\r\n                            </span>\r\n                        ) : (\r\n                            <span className=\"badge badge-primary\">\r\n                                Open to Work\r\n                            </span>\r\n                        )}\r\n\r\n\r\n                    </span>\r\n                    {selected ? (\r\n                        <span className=\"ml-auto\">\r\n                            <i className=\"fa-solid fa-check\"></i>\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n            )}\r\n        </Combobox.Option>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport { Listbox } from '@headlessui/react'\r\n\r\n\r\n\r\nconst priority = [\"Emergency\", \"Urgent\", \"Regular\"]\r\n\r\n\r\nconst PrioritySelection = ({selected, setSelected}) => { \r\n    return(\r\n        <Listbox value={selected} onChange={setSelected}>\r\n            <div className=\"form-group position-relative my-3\">\r\n                <label htmlFor=\"\"> Priority <sup>*</sup> </label>\r\n                    <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">{selected}\r\n                    \r\n                    <div className='__icon'>\r\n                        <i className=\"fa-solid fa-sort\"></i>\r\n                    </div>\r\n                </Listbox.Button>\r\n                <Listbox.Options  className=\"sp1-select-options\">\r\n                    {priority?.map((s, i) => (\r\n                        <Listbox.Option \r\n                            key={i}\r\n                            className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                            value={s}\r\n                        > {s} </Listbox.Option>\r\n                    ))}\r\n                </Listbox.Options>\r\n            </div>\r\n        </Listbox>\r\n    )\r\n}\r\n\r\nexport default PrioritySelection;","import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport Card from \"../../../global/Card\";\r\nimport styles from \"./task-edit-form.module.css\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport Button from '../../../global/Button';\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\nimport AssignedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\n\r\nimport {\r\n    useDeleteUplaodedFileMutation,\r\n    useGetTaskDetailsQuery,\r\n    useEditSubtaskMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useGetMilestoneDetailsQuery } from \"../../../services/api/projectApiSlice\";\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n// Edit form Provider\r\nconst EditFormProvider = ({ task }) => {\r\n    const [searchParams] = useSearchParams(); // get search params\r\n    const isVisible = searchParams.get(\"modal\") === \"edit\"; // check has modal\r\n    const taskId = searchParams.get(\"task\"); // get task id\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const close = () => navigate(location.pathname, {replace: true});\r\n\r\n\r\n    const [   editSubtask, { isLoading, error } ] = useEditSubtaskMutation();\r\n    // handle submission\r\n    const handleSubmission = (formData) => {\r\n        editSubtask({data: formData, id: task?.id}).unwrap().then(res => {\r\n            toast.success(\"Task Updated successfully!\");\r\n            close();\r\n        }).catch((err) => {\r\n            if(err?.status === 422){\r\n                toast.warn(\"Please fill out all required fields\")\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={isVisible}>\r\n            <Card className={styles.form_card}>\r\n                <Card.Head\r\n                  onClose={close}\r\n                  className={styles.form_card_head}\r\n                >\r\n                    <h6> Edit Task # {taskId} </h6>\r\n                </Card.Head>\r\n\r\n                <Card.Body className={styles.form_card_body}>\r\n                    <div className=\"\">\r\n                        {task && (\r\n                            <SubTaskEditModal\r\n                                task={task}\r\n                                onSubmit={handleSubmission}\r\n                                isLoading={isLoading}\r\n                                onClose={close}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditFormProvider;\r\n\r\nconst SubTaskEditModal = ({ task, onSubmit, isLoading, onClose}) => {\r\n    const editDataIsFetching = !task;\r\n    //form data\r\n    const [title, setTitle] = useState(task.title);\r\n    const [milestone, setMilestone] = useState({id: task.milestoneID, milestone_title: task.milestoneTitle});\r\n    const [parentTask, setParentTask] = useState(task.parentTaskTitle);\r\n    const [startDate, setStateDate] = useState(new Date(task.startDate));\r\n    const [dueDate, setDueDate] = useState(new Date(task.dueDate));\r\n    const [project, setProject] = useState(task.projectName);\r\n    const [taskCategory, setTaskCategory] = useState({\r\n        id: task.category.id,\r\n        category_name: task.category.name,\r\n    });\r\n    const [assignedTo, setAssignedTo] = useState({\r\n        id: task.assigneeTo.id,\r\n        name: task.assigneeTo.name,\r\n    });\r\n    const [description, setDescription] = useState(task.description);\r\n    const [priority, setPriority] = useState(task.priority);\r\n    const [estimateTimeHour, setEstimateTimeHour] = useState(\r\n        task.estimateHours\r\n    );\r\n    const [estimateTimeMin, setEstimateTimeMin] = useState(\r\n        task.estimateMinutes\r\n    );\r\n    const [attachedFiles, setAttachedFiles] = useState([]);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { data: estimation, isFetching } = useGetTaskDetailsQuery(\r\n        `/${task.id}/json?mode=estimation_time`\r\n    );\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n      let count = 0;\r\n      const err = new Object();\r\n\r\n      const errorMessages = {\r\n        requiredField: 'This field is required.',\r\n        startDate: 'Please select a start date.',\r\n        dueDate: 'Please select a due date.',\r\n        taskCategory: 'Please select a task category.',\r\n        assignedTo: 'Please select a user.',\r\n        overloadedUser: (name, gender) =>\r\n          `You cannot assign this task to ${name} because ${\r\n            gender === 'male' ? 'he ' : 'she '\r\n          } has more than 10 submittable tasks.`,\r\n        description: 'This field is required.',\r\n      };\r\n\r\n      const showError = (field) => {\r\n        err[field] = errorMessages[field];\r\n        count++;\r\n      }\r\n\r\n\r\n      if(!title) showError('title');\r\n      if(!startDate) showError('startDate');\r\n      if(!dueDate) showError('dueDate');\r\n      if(!taskCategory) showError('taskCategory');\r\n      if(!assignedTo) showError('assignedTo');\r\n\r\n      if (assignedTo && assignedTo?.isOverloaded) {\r\n        err.assignedTo = overloadedUser(assignedTo.name, genderPronoun);\r\n        count++;\r\n      }\r\n\r\n      if(!description) showError('description');\r\n\r\n      setError(error);\r\n      return count === 0;\r\n\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n         //form data\r\n         const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n         const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n         const fd = new FormData();\r\n         fd.append(\"milestone_id\", task?.milestoneID);\r\n         fd.append(\"task_id\", task?.parentTaskId);\r\n         fd.append(\"title\", title);\r\n         fd.append(\"start_date\", _startDate);\r\n         fd.append(\"due_date\", _dueDate);\r\n         fd.append(\"project_id\", task?.projectId);\r\n         fd.append(\"task_category_id\", taskCategory?.id);\r\n         fd.append(\"user_id\", assignedTo?.id);\r\n         fd.append(\"description\", description);\r\n         fd.append(\"board_column_id\", task?.boardColumn.id);\r\n         fd.append(\"priority\", _.lowerCase(priority));\r\n         fd.append(\"estimate_hours\", estimateTimeHour);\r\n         fd.append(\"estimate_minutes\", estimateTimeMin);\r\n         fd.append(\"deliverable_id\", milestone?.deliverable_type ?? '');\r\n         fd.append(\"image_url\", null);\r\n         fd.append(\"addedFiles\", null);\r\n         fd.append('subTaskID', task?.subtaskId);\r\n         fd.append(\"_method\", \"PUT\");\r\n         fd.append(\r\n             \"_token\",\r\n             document\r\n                 .querySelector(\"meta[name='csrf-token']\")\r\n                 .getAttribute(\"content\")\r\n         );\r\n         Array.from(files).forEach((file) => {\r\n             fd.append(\"file[]\", file);\r\n         });\r\n\r\n        if(isValid()){\r\n         onSubmit(fd);\r\n        }else{\r\n         toast.warn('Please fill out all required fields!');\r\n        }\r\n\r\n    };\r\n\r\n\r\n      const {data: projects, isFetching: isFetchingMilestone} = useGetMilestoneDetailsQuery(task?.projectId)\r\n\r\n\r\n\r\n    // handle uploaded file delete request\r\n    const [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\n    const handleFileDelete = (e, file) => {\r\n        // delete\r\n        deleteUplaodedFile(file?.id).unwrap();\r\n\r\n        // delete form ui\r\n        let previousFile = [...attachedFiles];\r\n        let index = previousFile?.indexOf(file);\r\n        previousFile.splice(index, 1);\r\n        setAttachedFiles(previousFile);\r\n    };\r\n\r\n    // handle loading state\r\n    React.useEffect(() => {\r\n        if (isLoading || editDataIsFetching) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading, editDataIsFetching]);\r\n\r\n    //   editor\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        let errText = \"\";\r\n        let hoursErr = err?.estimate_hours?.[0];\r\n        let minErr = err?.estimate_minutes?.[0];\r\n        if (hoursErr) errText += hoursErr;\r\n        if (minErr) errText += minErr;\r\n        return errText;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching && (\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            zIndex: 1,\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className=\"sp1-subtask-form --form row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Input\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter a task title\"\r\n                            name=\"title\"\r\n                            required={true}\r\n                            value={title}\r\n                            error={required_error?.title?.[0]}\r\n                            onChange={(e) => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* project */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* Project Milestone Selection Menu */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Milestone\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={milestone?.milestone_title}\r\n                            />\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* parent task */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Parent Task\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={task?.parentTaskTitle}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Start Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={dayjs\r\n                                        .dayjs(task?.start_date)\r\n                                        .toDate()}\r\n                                    maxDate={\r\n                                        dueDate ||\r\n                                        dayjs.dayjs(task?.due_date).toDate()\r\n                                    }\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.start_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.start_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Due Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={\r\n                                        startDate ||\r\n                                        dayjs.dayjs(task?.start_date).toDate()\r\n                                    }\r\n                                    maxDate={dayjs\r\n                                        .dayjs(task?.due_date)\r\n                                        .toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.due_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.due_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <TaskCategorySelectionBox\r\n                            selected={taskCategory}\r\n                            onSelect={setTaskCategory}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <AssignedToSelection\r\n                            selected={assignedTo}\r\n                            onSelect={setAssignedTo}\r\n                        />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <PrioritySelection\r\n                            selected={priority}\r\n                            setSelected={setPriority}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Set Estimate Time */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className=\"f-14 text-dark-gray\">\r\n                                Set Estimate Time{\" \"}\r\n                                <sup className=\"f-14\"> * </sup>\r\n                            </label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeHour)\r\n                                    }\r\n                                />{\" \"}\r\n                                hrs\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeMin)\r\n                                    }\r\n                                />{\" \"}\r\n                                min\r\n                            </div>\r\n\r\n                            <div style={{ color: \"red\" }}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{ color: \"red\" }}>\r\n                                Estimation time can't exceed{\" \"}\r\n                                {estimation?.hours_left} hours{\" \"}\r\n                                {estimation?.minutes_left} minutes\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div\r\n                                className=\"sp1_st_write_comment_editor\"\r\n                                style={{ minHeight: \"100px\" }}\r\n                            >\r\n                                <CKEditorComponent\r\n                                    data={description}\r\n                                    onChange={handleEditorChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3 mb-5\">\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                className=\"mr-2\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n\r\n                            <Button\r\n                              onClick={handleSubmit}\r\n                              isLoading={isLoading}\r\n                            >\r\n                                <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\"; \r\nimport { User } from \"../../../../utils/user-details\"; \r\nimport Accordion from \"../../../components/Accordion\";\r\nimport Guideline from \"../../../components/Guideline\";\r\nimport RevisionText from \"../../../components/RevisionText\";\r\nimport GenarelLoader from \"../../../components/loader/GenarelLoader\";\r\nimport ArticleLoader from \"../../../components/loader/ArticleLoader\";\r\nimport dayjs from \"dayjs\";\r\nimport { Placeholder } from \"../../../../global/Placeholder\";\r\n\r\nconst Genarel = ({task, isFetching}) => { \r\n    const loggedUser = new User(window?.Laravel?.user);\r\n\r\n    \r\n    return (\r\n        <div className=\"row\">\r\n            {isFetching ? <GenarelLoader /> : \r\n                <React.Fragment>\r\n                    <div className=\"col-12 col-xl-6 pb-3 pb-xl-0\">\r\n                        <div className=\"d-flex flex-column\" style={{ gap: \"10px\" }}>\r\n                            <h6 className=\"\">\r\n                                Task: <a target=\"__blank\" href={`/account/tasks/${task?.id}`} className=\"text-primary font-weight-normal\">\r\n                                    {task?.getSubtaskTitle()}\r\n                                </a>\r\n                            </h6>\r\n                            {\r\n                                task?.isSubtask && (\r\n                                    <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">\r\n                                            Parent Task :\r\n                                        </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <a href={`/account/tasks/${task?.parentTaskId}`} className=\"text-dark text-hover-underline\">\r\n                                                {task?.parentTaskTitle}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n                            {/* project name */}\r\n                            {/* <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">Project : </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span className=\"dot-color bg-danger mr-2\" />\r\n                                    <a href={`/account/projects/${task?.projectId}`} className=\"text-dark text-hover-underline\"> \r\n                                        {task?.projectName} \r\n                                    </a>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            {/* milestone */}\r\n                            {/* <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Milestone :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span className=\"dot-color bg-primary mr-2\" />\r\n                                    {task?.milestoneTitle}\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            {/* asignee to */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Assigned To :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                        <img\r\n                                            src={task?.assigneeTo?.getAvatar()}\r\n                                            alt={task?.assigneeTo?.getName()}\r\n                                            width=\"32px\"\r\n                                            height=\"32px\"\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"ml-2\">\r\n                                        <span\r\n                                            className={`d-block f-14 font-weight-bold`}\r\n                                        >\r\n                                            <a href={task?.assigneeTo?.getUserLink()} className=\"text-dark hover-underline\">{task?.assigneeTo?.getName()}</a> \r\n                                            {Number(task?.assigneeTo?.getId()) ===\r\n                                                Number(loggedUser?.getId()) && (\r\n                                                <sup\r\n                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                    style={{ fontSize: \"10px\" }}\r\n                                                >\r\n                                                    {\" \"}\r\n                                                    It's You{\" \"}\r\n                                                </sup>\r\n                                            )}\r\n                                        </span>\r\n\r\n                                        <span style={{ fontSize: \"12px\" }}>\r\n                                            {task?.assigneeTo?.getDesignationName()}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* assignee by */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Assigned by:{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                        <img\r\n                                            src={task?.assigneeBy?.getAvatar()}\r\n                                            alt={task?.assigneeBy?.getName()}\r\n                                            width=\"32px\"\r\n                                            height=\"32px\"\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"ml-2\">\r\n                                        <span\r\n                                            className={`d-block f-14 font-weight-bold`}\r\n                                        >\r\n                                            <a \r\n                                                href={task?.assigneeBy?.getUserLink()}\r\n                                                className=\"text-dark hover-underline\"\r\n                                            >\r\n                                                {task?.assigneeBy?.getName()}\r\n                                            </a>\r\n                                            {Number(task?.assigneeBy?.getId()) ===\r\n                                                Number(loggedUser?.getId()) && (\r\n                                                <sup\r\n                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                    style={{ fontSize: \"10px\" }}\r\n                                                >\r\n                                                    It's You\r\n                                                </sup>\r\n                                            )}\r\n                                        </span>\r\n\r\n                                        <span style={{ fontSize: \"12px\" }}>\r\n                                            {task?.assigneeBy?.getDesignationName()}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* PRIORITY */}\r\n\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">Priority : </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span\r\n                                        className=\"dot-color mr-2\"\r\n                                        style={{ background: \"rgba(252, 189, 1, 1)\" }}\r\n                                    />\r\n                                    {task?.priority}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* category */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Task Category :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    {task?.category?.name}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            }\r\n\r\n            <div\r\n                className=\"col-12 col-xl-6 d-flex flex-column py-3 px-3\"\r\n                style={{ gap: \"10px\", background: \"#F0F2F6\" }}\r\n            >\r\n                <div className=\"font-weight-bold d-block\"> Status: </div>\r\n\r\n                {\r\n                    isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    <div\r\n                    className=\"d-flex align-items-center\"\r\n                    style={{ gap: \"6px\" }}\r\n                >\r\n                    <span\r\n                        className=\"dot-color mr-2\"\r\n                        style={{ background: task?.boardColumn?.labelColor }}\r\n                    />\r\n                    <span className=\"font-weight-bold\">{task?.boardColumn.columnName}</span>\r\n                </div>\r\n                }\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Start Date{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.getStartDate(\"MMM DD, YYYY\")}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Due Date{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.getDueDate(\"MMM DD, YYYY\")}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Time Estimate */}\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Time Estimate{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.getEstimateTime()}\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                    Total Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.parentTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Parent Task Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.parentTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Subtask Hours Logged:{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.subTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Total Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.totalTimeLog || \"--\"}\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"col-12 border-top py-4 mt-4\">\r\n                {/* <Accordion expendable={false} title=\"General Guidelines\">\r\n                    {\r\n                        isFetching ? \r\n                        <ArticleLoader /> :\r\n                        <Guideline text={task?.guidelines} editorContainerClass=\"modal-guideline-editor-text\" />\r\n                    }\r\n                </Accordion> */}\r\n\r\n                {_.size(task?.revisions) > 0 &&\r\n                    <Accordion\r\n                        title={_.last(task?.revisions)?.revisionStatus}\r\n                        headingClass=\"d-flex align-items-center justify-content-between\"\r\n                        headingStyle={{\r\n                            background: \"rgba(227,62,79,1)\",\r\n                            color: \"#fff\",\r\n                        }}\r\n                    >\r\n\r\n                        {_.map(task?.revisions, (revision, index) => (\r\n                                <RevisionText\r\n                                    key={revision.id}\r\n                                    index={index + 1}\r\n                                    date={dayjs(revision.createdAt).format('MMM DD, YYYY')}\r\n                                    time={dayjs(revision.createdAt).format('hh:mm a')}\r\n                                    text={revision?.comment}\r\n                                />\r\n                            ))\r\n                        }\r\n                        \r\n                    </Accordion>\r\n                }\r\n\r\n                <Accordion expendable={false} title=\"Task Descriptions\">\r\n                    <Guideline text={task?.description} />\r\n                </Accordion>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Genarel;\r\n","import React, { Suspense, lazy } from 'react'\r\nimport Loader from '../../../components/Loader'\r\nconst SubmittedWorkItem = lazy(() => import('./SubmittedWorkItem'))\r\n\r\nconst SubmittedWork = ({task, submittedWork, loading}) => { \r\n  return (\r\n    <React.Fragment>\r\n        <h6 className='font-weight-bold'>Submitted Work</h6>\r\n        <div className='d-flex flex-column h-100' style={{gap:'10px'}}>\r\n\r\n            {loading && <div className='mt-3'><Loader /></div>}  \r\n            {submittedWork.length > 0 ? submittedWork.map((s) => (\r\n                <React.Fragment key={s?.task_id}>\r\n                    <Suspense fallback={<div className='mt-3'><Loader /></div>}>\r\n                        <SubmittedWorkItem data={s} task={task} />\r\n                    </Suspense>\r\n                </React.Fragment> \r\n            )): null}\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SubmittedWork","import React from \"react\";\r\nimport { TimeLog } from \"../../../../utils/single-task\"; \r\nimport Loader from \"../../../components/Loader\"; \r\n\r\nconst TimeLogContainer = ({ task, timeLog, isLoading }) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"sp1_modal_timelog_view\">\r\n            <div><h6> Session Logs </h6> </div>\r\n            <div>\r\n                <table className=\"sp1_subtask_log-tbl\">\r\n                        <thead className=\"__thead\">\r\n                            <tr>\r\n                                <th>Employee</th>\r\n                                <th>Start Time</th>\r\n                                <th>End Time</th>\r\n                                <th>Memo</th>\r\n                                <th>Hours Logged</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                </table>\r\n                <div className=\"sp1_modal_timelog_view-tbl-contanier\">  \r\n                    <table className=\"sp1_subtask_log-tbl\"> \r\n                        <tbody className=\"__tbody\"> \r\n                            {timeLog\r\n                                ? timeLog.map((log) => (\r\n                                    <TableRow key={log.id} log={log} />\r\n                                ))\r\n                                : null}\r\n\r\n                            {isLoading && <tr><td className=\"py-2 text-center\" colSpan={5}><Loader /></td></tr>}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeLogContainer;\r\n\r\nconst TableRow = ({ log }) => {\r\n    const timeLog = new TimeLog(log);\r\n    const user = timeLog?.user;\r\n\r\n\r\n    return (\r\n        <tr className=\"__tbody_tr\">\r\n            <td className=\"__tbody_td _tbody_td_employee\">\r\n                <img src={user?.getAvatar()} alt={user?.getName()} />\r\n                <span className=\"px-2\">{user?.getName()}</span>\r\n            </td> \r\n            <td className='__tbody_td _tbody_td_start_time'>\r\n                {timeLog?.getStartTime()} <br/>\r\n                {timeLog?.getStartTime('hh:mm a')}\r\n            </td>\r\n            \r\n            <td className='__tbody_td _tbody_td_start_time _tbody_td_start_end'>\r\n                {!timeLog?.endTime ? <span className=\"text-success font-weight-bold\">Active</span> :\r\n                    <>\r\n                        {timeLog?.getEndTime()} <br/>\r\n                        {timeLog?.getEndTime('hh:mm a')}\r\n                    </>\r\n                }\r\n\r\n            </td> \r\n            <td className=\"__tbody_td _tbody_td_memo\">{timeLog?.memo}</td> \r\n            <td className=\"__tbody_td _tbody_td_hour_logged\">{timeLog?.hoursLogged}</td>\r\n        </tr>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport Rating from '../../../../global/Rating';\r\nimport Loader from '../../../components/Loader';\r\n\r\nconst TaskReview = ({review, isLoading}) => {\r\n    const data = review; \r\n    let comment = data?.comment || `<span className='' style=\"color: #A7A9B2\">No Comment is Available</span>`;\r\n   \r\n    return (\r\n        <div className=\"sp1_task_right_card mb-3\" style={{maxHeight:'450px'}}>  \r\n          {/* side drop toggle button end */}\r\n          <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n              <span className=\"f-16\">Task Review</span> \r\n          </div> \r\n\r\n          {isLoading ? <Loader/> : <React.Fragment>\r\n            \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Deadline Meet : </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Rating rating={Number(data?.deadline_meet)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Submission Quality: </div>\r\n                <div className=\"d-flex align-items-center\">  \r\n                    <Rating rating={Number(data?.submission_quality)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Req. Fullfillment: </div>\r\n                <div className=\"d-flex align-items-center\"> \r\n                <Rating rating={Number(data?.req_fullfillment)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Overall Task Ratings: </div>\r\n                <div className=\"d-flex align-items-center\"> \r\n                    <Rating rating={Number(data?.overall_tasks)} /> \r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"mb-2\">\r\n                <span className=\"font-weight-bold d-block mb-1\">Comments:</span>\r\n                <div style={{color:'#777', fontSize: '13px'}}>\r\n                    <div className='sp1_ck_content' dangerouslySetInnerHTML={{__html: comment}}></div>\r\n                </div>\r\n            </div> \r\n            </React.Fragment>} \r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskReview","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nconst HistoryLoader = (props) => (\r\n    <ContentLoader\r\n        speed={2}\r\n        width={450}\r\n        height={45}\r\n        viewBox=\"0 0 450 45\"\r\n        backgroundColor=\"#f3f3f3\"\r\n        foregroundColor=\"#ecebeb\"\r\n        {...props}\r\n    >\r\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"46\" height=\"48\" />\r\n        <rect x=\"62\" y=\"29\" rx=\"0\" ry=\"0\" width=\"227\" height=\"12\" />\r\n        <rect x=\"60\" y=\"5\" rx=\"0\" ry=\"0\" width=\"344\" height=\"12\" />\r\n    </ContentLoader>\r\n);\r\n\r\nexport default HistoryLoader;\r\n","import React, {lazy, Suspense} from 'react'\r\nimport Loader from '../../../components/Loader' \r\nimport HistoryLoader from '../../../components/HistoryLoader';\r\nconst InnerHistoryItem = lazy(()=> import('../../history/InnerHistoryItem'));\r\n\r\nconst History = ({histories, isLoading}) => { \r\n  return (\r\n    <React.Fragment>\r\n        <h6 className='font-weight-bold'> Histories </h6> \r\n        <div className='mt-3 px-2'>  \r\n          {histories.length > 0 ? histories.map(d => (\r\n             <React.Fragment key={d.id}>\r\n               <Suspense fallback={<HistoryLoader />}>\r\n                  <InnerHistoryItem history={d} />\r\n              </Suspense>\r\n             </React.Fragment> \r\n          )):null} \r\n          {isLoading && <Loader />}\r\n        </div> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default History\r\n\r\n\r\n\r\n// history loader","import * as React from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Genarel from \"./preview/Genarel\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport {\r\n    useGetTaskDetailsQuery,\r\n    useLazyGetSubmittedTaskQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport SubmittedWork from \"./preview/SubmittedWork\";\r\nimport TimeLog from \"./preview/TimeLog\";\r\nimport TaskReview from \"./preview/TaskReview\";\r\nimport History from \"./preview/History\";\r\nimport Comments from \"./preview/Comments\";\r\nimport _ from \"lodash\";\r\nimport { useSingleTask } from \"../../../hooks/useSingleTask\";\r\nimport CommentsBody from \"../../../UI/comments/CommentsBody\";\r\nimport { useGetCommentsQuery } from \"../../../services/api/commentsApiSlice\";\r\n\r\nconst PreviewSubtask = ({ parentTask, subTask }) => {\r\n    const [task, setTask] = React.useState(null);\r\n    const taskID = subTask?.id;\r\n    const [submittedWork, setSubmittedWork] = React.useState([]);\r\n    const [timeLog, setTimeLog] = React.useState([]);\r\n    const [review, setReview] = React.useState(null);\r\n    const [histories, setHistories] = React.useState([]);\r\n    const [comments, setComments] = React.useState([]);\r\n    const [isCommentShow, setIsCommentShow] = React.useState(false);\r\n\r\n    const {\r\n        getTaskById,\r\n        getSubmittionInfo,\r\n        taskDetailsIsFetching,\r\n        submittionInfoIsFetching,\r\n    } = useSingleTask();\r\n\r\n    const [getTaskDetails, { isFetching: detailFetchingStateLoading }] =\r\n        useLazyGetTaskDetailsQuery();\r\n\r\n    const {\r\n        data: subTaskComments,\r\n        isFetching: commentsFetching,\r\n        isLoading: commentsLoading,\r\n        refetch: commentsRefetch,\r\n    } = useGetCommentsQuery(subTask?.id);\r\n\r\n    // fetch task details\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            let task = await getTaskById(taskID);\r\n            task = new SingleTask(task);\r\n            setTask(task);\r\n        })();\r\n    }, []);\r\n\r\n    //   fetch submitted rtk api\r\n    const fetchData = (url, cb) => {\r\n        getTaskDetails(`/${task?.id}/json?mode=${url}`)\r\n            .unwrap()\r\n            .then((res) => {\r\n                let d = _.orderBy(res, \"id\", \"desc\");\r\n                cb(d);\r\n            })\r\n            .catch((err) => console.error(err));\r\n    };\r\n\r\n    // fetch submitted works when submitted tab clieked\r\n    const fetchSubmittedWork = async (e) => {\r\n        e.preventDefault();\r\n        if (submittedWork.length === 0) {\r\n            const data = await getSubmittionInfo(taskID);\r\n            console.log({ data });\r\n            setSubmittedWork([...data]);\r\n        }\r\n    };\r\n\r\n    // fetch timelog data on tab click\r\n    const fetchTimeLogData = (e) => {\r\n        e.preventDefault();\r\n        if (timeLog.length === 0) {\r\n            fetchData(\"task_time_log\", setTimeLog);\r\n        }\r\n    };\r\n\r\n    // fetch review\r\n    const fetchReviewData = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_approve\", setReview);\r\n    };\r\n\r\n    // fetch histories\r\n    const fetchHistories = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_history\", setHistories);\r\n    };\r\n\r\n    // fetch comments\r\n    const fetchComments = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_comment\", setComments);\r\n    };\r\n\r\n    // on comment post\r\n    const onCommentPost = (comment) => {\r\n        const _comments = [...comments];\r\n        _comments.unshift(comment);\r\n        setComments(_comments);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* tab */}\r\n            <div\r\n                className=\"nav flex-column nav-pills sp1-subtask-modal-sidebar\"\r\n                id=\"v-pills-tab\"\r\n                role=\"tablist\"\r\n                aria-orientation=\"vertical\"\r\n            >\r\n                <a\r\n                    className=\"nav-link active\"\r\n                    id=\"v-pills-general-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-home\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-home\"\r\n                    aria-selected=\"true\"\r\n                    onClick={() => setIsCommentShow(false)}\r\n                >\r\n                    General\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-submitted-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-submitted-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-submitted-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchSubmittedWork(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Submitted Works\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-comments-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-comments\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-comments\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        commentsRefetch(e);\r\n                        setIsCommentShow(true);\r\n                    }}\r\n                >\r\n                    Comment\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-time-log-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-time-log-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-time-log-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchTimeLogData(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Time Logs\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-history-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-history\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-history\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchHistories(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    History\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-task-review-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-task-review-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-task-review-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchReviewData(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Task Review\r\n                </a>\r\n            </div>\r\n\r\n            <div\r\n                className={`tab-content ${\r\n                    isCommentShow ? \"p-0\" : \"p-3\"\r\n                } sp1-subtask-modal-tab-content`}\r\n                id=\"v-pills-tabContent\"\r\n            >\r\n                <div\r\n                    className=\"tab-pane fade show active sp1_st_tab_panel\"\r\n                    id=\"v-pills-home\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-general-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <Genarel\r\n                            isFetching={taskDetailsIsFetching}\r\n                            taskID={taskID}\r\n                            task={task}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-submitted-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-submitted-work-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <SubmittedWork\r\n                            task={task}\r\n                            submittedWork={submittedWork}\r\n                            loading={submittionInfoIsFetching}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-comments\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-comments-tab\"\r\n                >\r\n                    {/* <Comments\r\n                        task={task}\r\n                        comments={comments}\r\n                        onCommentPost={onCommentPost}\r\n                        isLoading={detailFetchingStateLoading}\r\n                    /> */}\r\n                    <CommentsBody\r\n                        close={() => {}}\r\n                        comments={subTaskComments}\r\n                        loading={commentsLoading}\r\n                        onSubmit={() => {}}\r\n                        isOpen={true}\r\n                        fullScreenView={false}\r\n                        setFullScreenView={() => {}}\r\n                        height={\"741px\"}\r\n                        fetching={commentsFetching}\r\n                        refetch={commentsRefetch}\r\n                        showFullScreenBtn={false}\r\n                        taskId={subTask?.id}\r\n                        showCloseBtn={false}\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-time-log-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-time-log-work-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <TimeLog\r\n                            task={task}\r\n                            timeLog={timeLog}\r\n                            isLoading={detailFetchingStateLoading}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-history\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-history-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <History\r\n                            histories={histories}\r\n                            isLoading={detailFetchingStateLoading}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-task-review-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-task-review-work-tab\"\r\n                >\r\n                    <TaskReview\r\n                        review={review}\r\n                        isLoading={detailFetchingStateLoading}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* end tab */}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PreviewSubtask;\r\n","import { Rating } from '@smastrom/react-rating';\r\nimport '@smastrom/react-rating/style.css';\r\nimport dayjs from 'dayjs';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { HiOutlineSelector } from 'react-icons/hi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport CKEditorComponent from '../../../../ckeditor/index';\r\nimport FileUploader from '../../../../file-upload/FileUploader';\r\nimport { Placeholder } from '../../../../global/Placeholder';\r\nimport { useSingleTask } from '../../../../hooks/useSingleTask';\r\nimport { useApproveSubmittedTaskMutation, useGetSubmittedTaskQuery } from '../../../../services/api/SingleTaskPageApi';\r\nimport Button from '../../../components/Button';\r\nimport Modal from '../../../components/Modal';\r\nimport SubmitButton from '../../../components/SubmitButton';\r\n\r\nconst ApproveTask = ({task, status, auth}) => {\r\n  const dispatch = useDispatch();\r\n  const [showApproveForm, setShowApproveForm] = useState(false);\r\n  const [completedWithInDeadline, setCompletedWithInDeadline] = useState(1);\r\n  const [submittedStar, setSubmittedStar] = useState(1);\r\n  const [fullfilledStar, setFullfilledStar] = useState(1);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const [oldSubmittion, setOldSubmittion] = useState([]);\r\n  const [latestSubmittion, setLatestSubmittion] = useState({});\r\n\r\n  const [approveSubmittedTask, {isLoading}] = useApproveSubmittedTaskMutation();\r\n  const { data: getSubmittedTask, isFetching  } = useGetSubmittedTaskQuery(task?.id);\r\n\r\n  const { approveTask,  approveTaskLoadingStatus } = useSingleTask();\r\n\r\n  const [err, setErr] = useState(null);\r\n\r\n \r\n useEffect(() => {\r\n    if(getSubmittedTask){\r\n        const data = _.sortBy(getSubmittedTask, ['submission_no']);\r\n        const latest = _.last(data);\r\n        const old = _.initial(data);\r\n        setOldSubmittion([...old]);\r\n        setLatestSubmittion(latest);\r\n    }\r\n }, [isFetching]);\r\n\r\n  const close = (e) => {\r\n    e.preventDefault();\r\n    setShowApproveForm(false)\r\n  }\r\n\r\n  // editor data \r\n  const onWriteOnEditor = (e, editor) => {\r\n    const data = editor.getData();\r\n    setComment(data);\r\n  }\r\n\r\n\r\n  const isValid = () =>{\r\n    let count = 0;\r\n    const error = new Object();\r\n\r\n    if(!comment){\r\n        error.comment = \"Please add a comment!\"\r\n        count ++;\r\n    }\r\n\r\n    setErr(error);\r\n    return !count;\r\n  }\r\n\r\n  // submit \r\n  const handleOnSubmit = async (e) =>{\r\n    e.preventDefault();\r\n    const data = {\r\n        rating: completedWithInDeadline,\r\n        rating2: submittedStar,\r\n        rating3: fullfilledStar,\r\n        comment,\r\n        task_id: task?.id,\r\n        user_id: auth?.getId()\r\n    }   \r\n\r\n    if(isValid()){ \r\n        const cb = () => setShowApproveForm(false);\r\n        await approveTask(data, cb ); \r\n    }else{\r\n        toast.warn(\"Please add a comment!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='success'\r\n            onClick={() => setShowApproveForm(true)}\r\n            className='d-flex align-items-center border-success'\r\n        >\r\n            <i className=\"fa-solid fa-handshake-angle\"></i>\r\n            <span className=\"d-inline ml-1\">Approve</span>\r\n        </Button>\r\n\r\n        <Modal isOpen={showApproveForm} className=\"sp1_single_task--modal w-100\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper w-100\">\r\n                <div\r\n                    className=\"sp1_single_task--modal-panel w-100\"\r\n                    style={{ maxWidth: '600px', minWidth: '320px' }}\r\n                >\r\n                    <div className=\"border-bottom pb-2 pl-3 pr-2 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <div className=\"font-weight-bold f-16\"> Approve Task </div>\r\n                        <Button onClick={close} className=\"\">\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"px-3\">\r\n                         { _.size(oldSubmittion) > 0 &&\r\n                            <div className='mb-3'>\r\n                                <div className=\"sp1_st--approve-card\"> \r\n                                    <div className=\"sp1_st--approve-card-header\" data-toggle=\"collapse\" href=\"#oldSubmittedSuccess\" role=\"button\"   aria-expanded=\"false\" aria-controls=\"oldSubmittedSuccess\">\r\n                                        Old Submitted Works ({_.size(oldSubmittion)})\r\n                                        <button>\r\n                                            <HiOutlineSelector />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"collapse multi-collapse shadow-none\" id=\"oldSubmittedSuccess\">\r\n                                    <div className=\"card card-body\">\r\n                                        {\r\n                                            _.size(oldSubmittion) > 0 ?\r\n                                            _.map(oldSubmittion, (task)=>(\r\n                                                <SubmittedWorkCard key={`${task.id}_${task?.submission_no}`} data={task} isLoading={isFetching}/>\r\n                                            )):\r\n                                            <span>\r\n                                                No Old Submittion!\r\n                                            </span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                         }\r\n                        {/* content */}\r\n                        {\r\n                            // getSubmittedTask?.submission_no === getSubmittedTask.\r\n                        }\r\n                        <SubmittedWorkCard data={latestSubmittion} latest={true} isLoading={isFetching} />\r\n                    </div>\r\n                    {\r\n                        !isFetching && \r\n                        <div className=\"mt-4 px-3\">\r\n                            <form action=\"\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>Is This Task Completed Within Deadline?<sup className='f-16'>*</sup></label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={completedWithInDeadline}\r\n                                            onChange={setCompletedWithInDeadline}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>How Beautifully The Task Is Submitted?<sup className='f-16'>*</sup></label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={submittedStar}\r\n                                            onChange={setSubmittedStar}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>\r\n                                        How Perfectly The Task Requirements Are Fullfilled?<sup className='f-16'>*</sup>\r\n                                    </label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={fullfilledStar}\r\n                                            onChange={setFullfilledStar}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>\r\n                                        Any Recommendations For Developer?<sup className='f-16'>*</sup>\r\n                                    </label>\r\n                                    <div className='ck-editor-holder'>\r\n                                        <CKEditorComponent onChange={onWriteOnEditor} />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"mt-3 d-flex align-items-center\">\r\n                                    <Button onClick={close} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                       Close \r\n                                    </Button>\r\n    \r\n                                    {/* {!isLoading ? (\r\n                                        <React.Fragment>\r\n                                            <Button onClick={handleOnSubmit}>Approve</Button>\r\n                                        </React.Fragment>\r\n                                    ) : (\r\n                                        <React.Fragment>\r\n                                            <Button className=\"cursor-processing\">\r\n                                                <div\r\n                                                    className=\"spinner-border text-white\"\r\n                                                    role=\"status\"\r\n                                                    style={{\r\n                                                        width: \"18px\",\r\n                                                        height: \"18px\",\r\n                                                    }}\r\n                                                />{\" \"}\r\n                                                Processing...\r\n                                            </Button>\r\n                                        </React.Fragment>\r\n                                    )} */}\r\n                                    <SubmitButton onClick={handleOnSubmit} title=\"Approve\" isLoading={approveTaskLoadingStatus} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ApproveTask\r\n\r\n\r\n// Submitted work\r\n\r\nconst SubmittedWorkCard = ({data, latest=false, className=\"\", style, isLoading = false}) => {\r\n\r\n    const links = _.compact(_.split(data?.links, ','));\r\n    const attaches =  _.compact(_.split(data?.attaches, ','));\r\n   \r\n\r\n    if(isLoading){\r\n        return <div className={`sp1_st--approve-card mb-3 ${className}`} style={style}> \r\n            <div className=\"sp1_st--approve-card-header\">\r\n                <Placeholder height=\"14px\" width='80px' className='mb-2' />\r\n                <Placeholder height=\"14px\" width='50px' className='mb-2' />\r\n            </div>\r\n\r\n            <div className='sp1_st--approve-card-body'>\r\n                <div className='mb-2'>\r\n                    <Placeholder height=\"14px\" width='80px' className='mb-2'/>\r\n\r\n                    <div className='ml-2'>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                    </div> \r\n                </div>\r\n\r\n                <div className='mb-2'>\r\n                    <Placeholder height=\"14px\" width='80px' className='mb-2'/>\r\n\r\n                    <div className='ml-2'>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='50%' className='mb-2'/>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    \r\n    return(\r\n        <div className={`sp1_st--approve-card mb-3 ${className}`} style={style}> \r\n            <div className=\"sp1_st--approve-card-header\">\r\n                <span>{latest ? 'Latest': \"Old\"} Submittion {!latest && `(${data?.submission_no})`}</span>\r\n                <span>\r\n                    {dayjs(data?.submission_date).format('MMM DD, YYYY hh:mm a')}\r\n                </span>\r\n            </div>\r\n\r\n            <div className='sp1_st--approve-card-body'>\r\n                <div className='mb-2'>\r\n                    <div className='font-weight-bold f-12' style={{color: '#81868E'}}> Links</div>\r\n                    <ol style={{listStyle: 'unset'}}>\r\n                        {_.map(links, (link, index) =>(\r\n                            <li key={`${link}_${index}`} style={{listStyle: 'numaric'}}>\r\n                                <a href={link}>{link}</a>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n\r\n                <div className='mb-2'>\r\n                    <div className=\"font-weight-bold f-12\" style={{color: '#81868E'}}>Description</div>\r\n                    <div className='sp1_ck_content p-2' dangerouslySetInnerHTML={{__html: data?.text ?? `<span style=\"color:rgb(180,188,196);\">Comment Not Available</span>`}}/>\r\n                </div>\r\n\r\n\r\n                <div className=\"mt-3\">\r\n                <span\r\n                    className=\"d-block f-12 font-weight-bold mb-2\"\r\n                    style={{ color: \"#767581\" }}\r\n                >\r\n                    Attached Files\r\n                </span>\r\n                {_.size(attaches) > 0 ? (\r\n                    <FileUploader>\r\n                        {_.map(attaches, (file, index) => (\r\n                            <FileUploader.Preview\r\n                                key={`${file}_${index}`}\r\n                                fileName={file}\r\n                                downloadAble={true}\r\n                                deleteAble={false}\r\n                                downloadUrl={`${file}`}\r\n                                previewUrl={`${file}`}\r\n                                fileType={_.includes([\"png\",\"jpg\", \"jpeg\", \"gif\", \"svg\"], _.last(_.split(file, '.'))) ? 'images' : 'others'}\r\n                                ext=\"\"\r\n                            />\r\n                        ))}\r\n                    </FileUploader>\r\n                    ) : (\r\n                        <span\r\n                            className=\"px-2\"\r\n                            style={{ color: \"rgb(180, 188, 196)\" }}\r\n                        >\r\n                            No Attachment is available\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useCheckEditableSubTaskQuery, useLazyCheckSubTaskTimerQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport Button from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport PreviewSubtask from \"./PreviewSubtask\";\r\nimport ApproveTask from \"../task-actions/approve-task/ApproveTask\";\r\n\r\nconst SubTask = ({ subTask, task, status, toggleEditForm }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    const [checkSubTaskTimer, {isFetching}] = useLazyCheckSubTaskTimerQuery()\r\n      // check task edit\r\n\r\n        const { data } = useCheckEditableSubTaskQuery(subTask?.id);\r\n        const isEditable = data?.task === 0;\r\n\r\n    const toggle = (e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setIsOpen(true);\r\n    }\r\n\r\n\r\n    const hasEditPermission = () => {\r\n        return Number(subTask?.added_by) === auth?.getId() && _.includes([1,2,3], status?.id);\r\n    }\r\n\r\n    const onEdit = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(subTask?.id)\r\n        .unwrap()\r\n        .then(res=>{\r\n            if(res?.status === 200){\r\n                toggleEditForm(e, subTask?.id)\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'You cannot edit the task because timer is already running',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const onModalEditButtonClick = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(subTask?.id)\r\n        .unwrap()\r\n        .then(res=>{\r\n            if(res?.status === 200){\r\n                window.location = `/account/tasks/${subTask?.id}/edit`\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'You cannot edit the task because timer is already running',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\"\r\n            style={{ gap: \"16px\" }}\r\n        >\r\n            <div className=\"w-100 text-ellipsis\">\r\n                <div onClick={toggle} className=\"hover-underline\" style={{cursor: 'pointer'}}>\r\n                    {subTask?.title}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <div\r\n                    onClick={toggle}\r\n                    className=\"mr-2 py-2 sp1_task_righ_action_btn\"\r\n                    style={{cursor: 'pointer'}}\r\n                >\r\n                    <i className=\"fa-regular fa-eye\"></i>\r\n                </div>\r\n                {\r\n                    isEditable && hasEditPermission() && <div\r\n                        onClick={onEdit}\r\n                        className=\"mr-2 py-2 sp1_task_righ_action_btn\"\r\n                        style={{cursor: 'pointer'}}\r\n                    >\r\n                        {isFetching ?  <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        /> :<i className=\"fa-regular fa-pen-to-square\"></i>}\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n            {/* task Preview Modal */}\r\n            <React.Fragment>\r\n                <Modal\r\n                    className={`sp1_subtask_offsetcanvas--modal`}\r\n                    isOpen={isOpen}\r\n                >\r\n                    <div\r\n                        className={`sp1_subtask_offsetcanvas ${\r\n                            isOpen ? \"open\" : \"\"\r\n                        }`}\r\n                    >\r\n                        <div className=\"d-flex align-items-center justify-content-between p-2 sp1_subtask_offsetcanvas--bar\">\r\n                            <div className=\"pl-3\">\r\n                                <span className=\"font-weight-bold f-16\">\r\n                                    Sub Task # {subTask?.id} :{\" \"}\r\n                                    <span className=\"font-weight-normal\">\r\n                                        {subTask?.title}\r\n                                    </span>{\" \"}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"d-flex align-items-center ml-auto\">\r\n                                {/* <ApproveTask\r\n                                    task={subTask}\r\n                                    auth={auth}\r\n                                />\r\n\r\n                                <Button variant=\"success\" onClick={() => setIsOpen(false)} className=\"mr-2 bg-danger\">\r\n                                    Revision\r\n                                </Button> */}\r\n\r\n                                {isEditable && hasEditPermission() && <a href=\"#\" onClick={onModalEditButtonClick} className=\"border text-dark mr-2 py-1 px-2\">\r\n                                    {isFetching ?  <div\r\n                                        className=\"spinner-border text-dark ml-2\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                            borderRightColor: \"transparent\",\r\n                                        }}\r\n                                    /> :<i className=\"fa-regular fa-pen-to-square\"></i>}\r\n                                </a>}\r\n                                <a\r\n                                    href={`/account/tasks/${subTask?.id}`}\r\n                                    target=\"_blank\"\r\n                                    className=\"border text-dark mr-2 py-1 px-2\"\r\n                                >\r\n                                    {/* <i className=\"fa-solid fa-up-right-and-down-left-from-center\" /> */}\r\n                                    <i className=\"fa-solid fa-arrow-up-right-from-square\"></i>\r\n                                </a>\r\n                                <Button onClick={() => setIsOpen(false)} className=\"\">\r\n                                    <i className=\"fa-solid fa-xmark\" />\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"sp1_subtask_offsetcanvas--body\">\r\n                            <PreviewSubtask\r\n                                parentTask={task}\r\n                                subTask={subTask}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubTask;\r\n","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\nimport {User} from '../../../utils/user-details';\r\n\r\nconst LeadConfirmationModal = ({isOpen, onConfirm}) => {\r\n  const [buttonVisible, setButtonVisible] = React.useState(false);\r\n  const [countDown, setCountDown] = React.useState(20);\r\n  const auth = new User(window.Laravel.user);\r\n\r\n  React.useEffect(() => { \r\n    if(auth.getRoleId() && auth.getRoleId() === 6){\r\n      let count = countDown ?? 0;\r\n\r\n      let timeIntervelId = setInterval(() => {\r\n          setCountDown(count--);\r\n      }, 1000);\r\n  \r\n  \r\n      let timeOutId = setTimeout(() => {\r\n        setButtonVisible(true);\r\n        clearInterval(timeIntervelId)\r\n      }, 22000);\r\n  \r\n      \r\n  \r\n      return () => {\r\n        clearTimeout(timeOutId);\r\n        clearInterval(timeIntervelId);\r\n      };\r\n    }\r\n    \r\n    \r\n    return () =>  onConfirm(); \r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"subtask-timer-confirmation--modal\">\r\n        <div className='subtask-timer-confirmation--panel'>\r\n           <div className=\"subtask-timer-confirmation--content\">\r\n                <h4 className='mb-3'> Do You Understand The Following Things? </h4>\r\n                \r\n                <ol type='A' style={{marginLeft: '30px'}}>\r\n                    <li> Your teams job is not to decide what the look and feel of a website will be based on a few reference websites </li>\r\n                    <li>Your teams job is not to research a theme based on an instruction shared by the PM. </li>\r\n                    <li>Your teams job is not to research a plugin based on a problem shared by PM.</li>\r\n                    <li>Your teams job is not to choose the color scheme of a website.</li>\r\n                    <li>Your teams job is not to talk to the support for example the shopify support team, theme support, plugin support and any other support for any solution.</li>\r\n                    <li>Your teams job is not to create the training videos for the client after the completion of a project. </li>\r\n                    <li>You understand that all your teams hours have to be logged/tracked and you team mates will questioned if each of them doesn’t log at least 7 hours for any reason.</li>\r\n                </ol>\r\n\r\n\r\n                <p>In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your teams job is to execute the work based on the defined requirements.  </p> \r\n\r\n                <p>If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily.</p>\r\n                \r\n                <p> Report immediately if you are asked to do any of these and if it was’t authorized by top management. You should see a text like “Authorized by top management” at the right side of the task title if it was authorized.In case, you don’t report, the extra time taken for these will be considered as your lackings (as they will remain unaccountable) and you will receive negative performance score.”</p>\r\n\r\n                <div className='d-flex align-items-center'>\r\n                     <Button \r\n                        onClick={onConfirm} \r\n                        className='ml-auto'\r\n                        disabled={!buttonVisible}\r\n                      > \r\n                        Yes, I Fully Understand This {!buttonVisible && `(${countDown})`}\r\n                      </Button> \r\n                </div>\r\n           </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default LeadConfirmationModal","import React, { useState } from \"react\";\r\nimport Input from \"../../components/form/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport { useWorkingEnvironmentMutation } from \"../../../services/api/SingleTaskPageApi\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport { toast } from \"react-toastify\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst WorkingEnvironmentForm = ({ task, onSubmit, close }) => {\r\n    const [siteUrl, setSiteUrl] = useState(\"\");\r\n    const [frontendPassword, setFrontendPassword] = useState(\"\");\r\n    const [loginUrl, setLoginUrl] = useState(\"\");\r\n    const [\r\n        siteLoginCredentialUserNameOrEmail,\r\n        setSiteLoginCredentialUserNameOrEmail,\r\n    ] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [err, setErr] = useState(null);\r\n\r\n    const [workingEnvironment, { isLoading }] = useWorkingEnvironmentMutation();\r\n\r\n    // handle input change\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        setState(e.target.value);\r\n    };\r\n\r\n    const isValid = () => {\r\n        let count = 0;\r\n        const error = new Object();\r\n\r\n        if (!siteUrl) {\r\n            count++;\r\n            error.siteUrl = \"You have to provide Working/Staging Site's URL\";\r\n        } else if (!checkIsURL(siteUrl)) {\r\n            count++;\r\n            error.siteUrl = \"Please enter a valid URL\";\r\n            toast.warn(\"Please enter a valid Working/Staging Site's URL\", {\r\n                position: \"top-right\",\r\n            });\r\n        }\r\n\r\n        if (!loginUrl) {\r\n            count++;\r\n            error.loginUrl =\r\n                \"You have to provide Working/Staging Site's Admin Panel URL\";\r\n        } else if (!checkIsURL(loginUrl)) {\r\n            count++;\r\n            error.loginUrl = \"Please enter a valid URL\";\r\n            toast.warn(\r\n                \"Please enter a valid Working/Staging Site's Admin Panel URL\",\r\n                { position: \"top-right\" }\r\n            );\r\n        }\r\n\r\n        if (!siteLoginCredentialUserNameOrEmail) {\r\n            count++;\r\n            error.username =\r\n                \"You have to provide Working/Staging Site's Admin Username/Email\";\r\n        }\r\n\r\n        if (!password) {\r\n            count++;\r\n            error.password =\r\n                \"You have to provide Working/Staging Site's Admin Password\";\r\n        }\r\n\r\n        if (!frontendPassword) {\r\n            count++;\r\n            error.frontendPassword =\r\n                \"You have to provide Working/Staging Site's Frontend Password\";\r\n        }\r\n\r\n        setErr(error);\r\n        return !count;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        const data = {\r\n            project_id: task?.projectId,\r\n            site_url: siteUrl,\r\n            login_url: loginUrl,\r\n            email: siteLoginCredentialUserNameOrEmail,\r\n            password: password,\r\n            task_id: task?.id,\r\n            frontend_password: frontendPassword,\r\n        };\r\n\r\n        if (isValid()) {\r\n            try {\r\n                await workingEnvironment(data)\r\n                    .unwrap()\r\n                    .then((res) => {\r\n                        close();\r\n                        Swal.fire(\r\n                            \"Working environment store successfully\",\r\n                            \"You can create subtask now\",\r\n                            \"success\"\r\n                        ).then(({ isConfirmed }) => {\r\n                            onSubmit();\r\n                        });\r\n                    });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            toast.error(\"Please provide all required fields\", {\r\n                position: \"top-right\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"sp1-subtask-form w-100 --form -row\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 lg:col-6\">\r\n                    <Input\r\n                        id=\"siteURL\"\r\n                        label=\"Working/Staging Site's URL\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's URL\"\r\n                        name=\"stie_url\"\r\n                        required={true}\r\n                        value={siteUrl}\r\n                        error={err?.siteUrl}\r\n                        onChange={(e) => handleChange(e, setSiteUrl)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 lg:col-6\">\r\n                    <Input\r\n                        id=\"frontendPassword\"\r\n                        label=\"Frontend Password\"\r\n                        type=\"text\"\r\n                        placeholder=\"Frontent Password\"\r\n                        name=\"frontend-end-password\"\r\n                        required={true}\r\n                        value={frontendPassword}\r\n                        error={err?.frontendPassword}\r\n                        onChange={(e) => handleChange(e, setFrontendPassword)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-4\">\r\n                    <Input\r\n                        id=\"loginUrl\"\r\n                        label=\"Working/Staging Site's Admin Panel URL\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's Admin Panel URL\"\r\n                        name=\"login_url\"\r\n                        required={true}\r\n                        value={loginUrl}\r\n                        error={err?.loginUrl}\r\n                        onChange={(e) => handleChange(e, setLoginUrl)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-5 h-100\">\r\n                    <Input\r\n                        id=\"siteLoginCredential\"\r\n                        label=\"Working/Staging Site's Admin Panel Username/Email\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's Admin Panel Username/Email\"\r\n                        name=\"site-login-credential\"\r\n                        required={true}\r\n                        value={siteLoginCredentialUserNameOrEmail}\r\n                        error={err?.username}\r\n                        onChange={(e) =>\r\n                            handleChange(\r\n                                e,\r\n                                setSiteLoginCredentialUserNameOrEmail\r\n                            )\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"h-100 d-md-flex align-items-end\">\r\n                        <Input\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"text\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            className=\"mt-md-auto\"\r\n                            required={true}\r\n                            value={password}\r\n                            error={err?.password}\r\n                            onChange={(e) => handleChange(e, setPassword)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 mt-3\">\r\n                <div className=\"d-flex align-items-center justify-content-end\">\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        className=\"mr-2\"\r\n                        onClick={close}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n\r\n                    <SubmitButton onClick={handleSubmit} isLoading={isLoading}>\r\n                        <i className=\"fa-regular fa-paper-plane\" />\r\n                        Create\r\n                    </SubmitButton>\r\n\r\n                    {/* {isLoading ? (\r\n                        <Button onClick={handleSubmit}>\r\n                            \r\n                        </Button>\r\n                    ) : (\r\n                        <Button className=\"cursor-processing\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"18px\",\r\n                                    height: \"18px\",\r\n                                }}\r\n                            ></div>\r\n                            Processing...\r\n                        </Button>\r\n                    )} */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkingEnvironmentForm;\r\n","import React, { useState } from \"react\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport AssginedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\n\r\nimport _ from \"lodash\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n    useCheckRestrictedWordsMutation,\r\n    useCreateSubtaskMutation,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\n\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n    setWorkingEnvironmentStatus,\r\n    storeSubTasks,\r\n} from \"../../../services/features/subTaskSlice\";\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport LeadConfirmationModal from \"./LeadConfirmationModal\";\r\nimport WorkingEnvironmentForm from \"./WorkingEnvironmentForm\";\r\nimport { useRefetchTaskDetails } from \"../../SingleIndependentTask\";\r\n\r\nconst SubTaskForm = ({ close, isFirstSubtask = false }) => {\r\n    const refetchTask = useRefetchTaskDetails();\r\n    const {\r\n        task: taskDetails,\r\n        subTask,\r\n        isWorkingEnvironmentSubmit,\r\n    } = useSelector((s) => s.subTask);\r\n    const dispatch = useDispatch();\r\n    const dayjs = new CompareDate();\r\n\r\n    //   form data\r\n    const [title, setTitle] = useState(\"\");\r\n    const [parentTask, setParentTask] = useState(\"\");\r\n    const [startDate, setStateDate] = useState(null);\r\n    const [dueDate, setDueDate] = useState(null);\r\n    const [taskCategory, setTaskCategory] = useState(\"\");\r\n    const [assignedTo, setAssignedTo] = useState(null);\r\n    // const [taskObserver, setTaskObserver] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    // const [status, setStatus] = useState(\"To Do\");\r\n    const [priority, setPriority] = useState(\"Regular\");\r\n\r\n    // const [estimateTimeHour, setEstimateTimeHour] = useState(0);\r\n    // const [estimateTimeMin, setEstimateTimeMin] = useState(0);\r\n\r\n    const [files, setFiles] = React.useState([]);\r\n\r\n    const [pageType, setPageType] = React.useState(\"\");\r\n    const [pageTypeOthers, setPageTypeOthers] = React.useState(\"\");\r\n    const [pageName, setPageName] = React.useState(\"\");\r\n    const [pageURL, setPageURL] = React.useState(\"\");\r\n    const [numberOfPage, setNumberOfPage] = React.useState(0);\r\n    const [existingDesignLink, setExistingDesignLink] = React.useState(\"\");\r\n    const [pageTypePriority, setPageTypePriority] = React.useState(\"\");\r\n    const [pageTypeName, setPageTypeName] = React.useState(\"\");\r\n\r\n    const [err, setErr] = useState(null);\r\n\r\n    const task = new SingleTask(taskDetails);\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n    // const params = useParams();\r\n    const [createSubtask, { isLoading, error }] = useCreateSubtaskMutation();\r\n    // const {  } = useGetTaskDetailsQuery(`/${task?.id}/json?mode=estimation_time`);\r\n    const [getTaskDetails, { data: estimation, isFetching }] =\r\n        useLazyGetTaskDetailsQuery();\r\n\r\n    const [showForm, setShowForm] = React.useState(false);\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n    const [containViolation, setContainViolation] = React.useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // const [\r\n    //     checkRestrictedWords,\r\n    //     {isLoading: checking}\r\n    // ] = useCheckRestrictedWordsMutation();\r\n    const checking = false;\r\n\r\n    // handle change\r\n    React.useEffect(() => {\r\n        setParentTask(task?.title);\r\n    }, [task]);\r\n\r\n    React.useEffect(() => {\r\n        getTaskDetails(`/${task?.id}/json?mode=estimation_time`).unwrap();\r\n    }, []);\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n    const isValid = () => {\r\n        let count = 0;\r\n        const error = new Object();\r\n\r\n        if (!title) {\r\n            error.title = \"The title field is required\";\r\n            count++;\r\n        }\r\n\r\n        if (!startDate) {\r\n            error.startDate = \"You have to select a start date\";\r\n            count++;\r\n        }\r\n\r\n        if (!dueDate) {\r\n            error.dueDate = \"You have to select a due date\";\r\n            count++;\r\n        }\r\n\r\n        if (!taskCategory) {\r\n            error.taskCategory = \"You have to select task category\";\r\n            count++;\r\n        }\r\n\r\n        if (!assignedTo) {\r\n            error.assignedTo = \"You have to select an user\";\r\n            count++;\r\n        }\r\n\r\n        if (assignedTo && assignedTo?.isOverloaded) {\r\n            toast.warn(\r\n                `You cannot assign this task to ${assignedTo?.name}  because ${\r\n                    assignedTo?.gender === \"male\" ? \"He \" : \"She \"\r\n                } has more than 04 Submittable tasks.`\r\n            );\r\n            count++;\r\n        }\r\n\r\n        if (!pageType) {\r\n            error.taskType = \"You have to Select task type\";\r\n            count++;\r\n        } else {\r\n            if (_.toLower(pageType) === _.toLower(\"New Page Design\")) {\r\n                if (!pageTypePriority) {\r\n                    error.pageTypePriority = \"You have to Select page type\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageName) {\r\n                    error.pageName = \"You have to Select page name\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageURL) {\r\n                    error.pageUrl = \"You have to provide page URL\";\r\n                    count++;\r\n                } else if (!checkIsURL(pageURL)) {\r\n                    error.pageUrl = \"You have to provide a valid page URL\";\r\n                    toast.warn(\"You have to provide a valid page URL\");\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if (_.toLower(pageType) === _.toLower(\"Others\")) {\r\n                if (!pageTypeOthers) {\r\n                    error.pageTypeOthers = \"You have to select an option\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageName) {\r\n                    error.pageName = \"You have to Select page name\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageURL) {\r\n                    error.pageUrl = \"You have to provide page URL\";\r\n                    count++;\r\n                } else if (!checkIsURL(pageURL)) {\r\n                    error.pageUrl = \"You have to provide a valid page URL\";\r\n                    toast.warn(\"You have to provide a valid page URL\");\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if (_.toLower(pageType) === _.toLower(\"Cloning Existing Design\")) {\r\n                if (!pageTypeName) {\r\n                    error.pageTypeName = \"You have to select an option\";\r\n                    count++;\r\n                }\r\n\r\n                if (!numberOfPage) {\r\n                    error.numberOfPage = \"The minimum required number is 1\";\r\n                    count++;\r\n                }\r\n\r\n                if (!existingDesignLink) {\r\n                    error.existingDesignLink =\r\n                        \"You have to provide Exiting Design Link\";\r\n                    count++;\r\n                } else if (!checkIsURL(existingDesignLink)) {\r\n                    error.existingDesignLink =\r\n                        \"You have to provide a valid Exiting Design Link\";\r\n                    toast.warn(\r\n                        \"You have to provide a valid Exiting Design Link\"\r\n                    );\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if (!description) {\r\n                error.description = \"The description field is required\";\r\n                count++;\r\n            }\r\n        }\r\n\r\n        setErr(error);\r\n        return !count;\r\n    };\r\n\r\n    // handle submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n        const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n        const fd = new FormData();\r\n        // fd.append(\"milestone_id\", task?.milestoneID);\r\n        fd.append(\"task_id\", task?.id);\r\n        fd.append(\"title\", title);\r\n        fd.append(\"start_date\", _startDate);\r\n        fd.append(\"due_date\", _dueDate);\r\n        // fd.append(\"project_id\", task?.projectId);\r\n        fd.append(\"task_category_id\", taskCategory?.id);\r\n        fd.append(\"user_id\", assignedTo?.id);\r\n        fd.append(\"description\", description);\r\n        fd.append(\"board_column_id\", task?.boardColumn?.id);\r\n        fd.append(\"priority\", _.lowerCase(priority));\r\n        // fd.append(\"estimate_hours\", estimateTimeHour);\r\n        // fd.append(\"estimate_minutes\", estimateTimeMin);\r\n        fd.append(\"image_url\", null);\r\n        fd.append(\"subTaskID\", null);\r\n        fd.append(\"addedFiles\", null);\r\n        fd.append(\"task_type\", pageType ?? null);\r\n        fd.append(\"page_type\", pageTypePriority);\r\n        fd.append(\"page_name\", pageName);\r\n        fd.append(\"page_url\", pageURL);\r\n        fd.append(\"task_type_other\", pageTypeOthers);\r\n        fd.append(\"page_type_name\", pageTypeName);\r\n        fd.append(\"number_of_pages\", numberOfPage);\r\n        fd.append(\"existing_design_link\", existingDesignLink);\r\n        fd.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            fd.append(\"file[]\", file);\r\n        });\r\n\r\n        // const submit = async () => {\r\n\r\n        if (isValid()) {\r\n            await createSubtask(fd)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    if (res?.status === \"success\") {\r\n                        let _subtask = [\r\n                            ...subTask,\r\n                            {\r\n                                id: res?.sub_task?.id,\r\n                                title: res?.sub_task?.title,\r\n                            },\r\n                        ];\r\n                        dispatch(storeSubTasks(_subtask));\r\n                        close();\r\n\r\n                        Swal.fire({\r\n                            position: \"center\",\r\n                            icon: \"success\",\r\n                            title: res.message,\r\n                            showConfirmButton: false,\r\n                            timer: 2500,\r\n                        });\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    if (err?.status === 422) {\r\n                        Swal.fire({\r\n                            position: \"center\",\r\n                            icon: \"error\",\r\n                            title: \"Please fill up all required fields\",\r\n                            showConfirmButton: true,\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (isLoading) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading]);\r\n\r\n    // editor data handle\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        const text = _.head(err?.errors?.hours);\r\n        return text;\r\n    };\r\n\r\n    useEffect(() => {\r\n        // const showEnv = _.size(task?.subtask) === 0 ? true : false;\r\n        if (auth.getRoleId() === 6 || auth.isHasRolePermission(13)) {\r\n            dispatch(setWorkingEnvironmentStatus(!isFirstSubtask));\r\n        }\r\n    }, [isFirstSubtask]);\r\n\r\n    // useEffect(()=>{\r\n    //   console.log({isFirstSubtask,isWorkingEnvironmentSubmit});\r\n    // },[isFirstSubtask,isWorkingEnvironmentSubmit]);\r\n\r\n    // useEffect(()=>{\r\n    //   console.log({isWorkingEnvironmentSubmit,isFirstSubtask,task});\r\n    // },[isWorkingEnvironmentSubmit,isFirstSubtask,task])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sp1-subtask-form --modal-panel\">\r\n                <div className=\"sp1-subtask-form --modal-panel-header\">\r\n                    <h6>\r\n                        {!isWorkingEnvironmentSubmit\r\n                            ? \"Working Environment\"\r\n                            : \"Create Sub Task\"}\r\n                    </h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className=\"_close-modal\"\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body sp1_subtask_form\">\r\n                    {/* working environment form */}\r\n                    {!isWorkingEnvironmentSubmit && (\r\n                        <WorkingEnvironmentForm\r\n                            task={task}\r\n                            onSubmit={() => {\r\n                                refetchTask();\r\n                            }}\r\n                            close={close}\r\n                        />\r\n                    )}\r\n                    {/* end working environment form */}\r\n\r\n                    {isWorkingEnvironmentSubmit && (\r\n                        <LeadConfirmationModal\r\n                            isOpen={!showForm}\r\n                            onConfirm={() => setShowForm(true)}\r\n                        />\r\n                    )}\r\n                    {showForm && (\r\n                        <div className=\"sp1-subtask-form --form row\">\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <Input\r\n                                    id=\"title\"\r\n                                    label=\"Title\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter a task title\"\r\n                                    name=\"title\"\r\n                                    required={true}\r\n                                    value={title}\r\n                                    error={\r\n                                        err?.title || required_error?.title?.[0]\r\n                                    }\r\n                                    onChange={(e) => handleChange(e, setTitle)}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Milestone */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Milestone\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={milestone}\r\n                                    />\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Parent Task\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={parentTask}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Project */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Project\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={project}\r\n                                    />\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\">\r\n                                        Start Date <sup className=\"f-14\">*</sup>\r\n                                    </label>\r\n                                    <div className=\"form-control height-35 f-14\">\r\n                                        <DatePicker\r\n                                            placeholderText={`Ex: ${dayjs\r\n                                                .dayjs()\r\n                                                .format(\"DD-MM-YYYY\")}`}\r\n                                            minDate={dayjs\r\n                                                .dayjs(task?.startDate)\r\n                                                .toDate()}\r\n                                            maxDate={\r\n                                                dueDate ||\r\n                                                dayjs\r\n                                                    .dayjs(task?.dueDate)\r\n                                                    .toDate()\r\n                                            }\r\n                                            date={startDate}\r\n                                            setDate={setStateDate}\r\n                                        />\r\n                                    </div>\r\n                                    {required_error?.start_date?.[0] && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {required_error?.start_date?.[0]}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {err?.startDate && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.startDate}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\">\r\n                                        Due Date <sup className=\"f-14\">*</sup>\r\n                                    </label>\r\n                                    <div className=\"form-control height-35 f-14\">\r\n                                        <DatePicker\r\n                                            placeholderText={`Ex: ${dayjs\r\n                                                .dayjs()\r\n                                                .format(\"DD-MM-YYYY\")}`}\r\n                                            minDate={\r\n                                                startDate ||\r\n                                                dayjs\r\n                                                    .dayjs(task?.startDate)\r\n                                                    .toDate()\r\n                                            }\r\n                                            maxDate={dayjs\r\n                                                .dayjs(task?.dueDate)\r\n                                                .toDate()}\r\n                                            date={dueDate}\r\n                                            setDate={setDueDate}\r\n                                        />\r\n                                    </div>\r\n                                    {required_error?.due_date?.[0] && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {required_error?.due_date?.[0]}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {err?.dueDate && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.dueDate}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <TaskCategorySelectionBox\r\n                                    selected={taskCategory}\r\n                                    onSelect={setTaskCategory}\r\n                                />\r\n\r\n                                {err?.taskCategory && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.taskCategory}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <AssginedToSelection\r\n                                    selected={assignedTo}\r\n                                    onSelect={setAssignedTo}\r\n                                />\r\n\r\n                                {err?.assignedTo && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.assignedTo}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {assignedTo?.isOverloaded && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {`You cannot assign this task to ${\r\n                                            assignedTo?.name\r\n                                        }  because ${\r\n                                            assignedTo?.gender === \"male\"\r\n                                                ? \"He \"\r\n                                                : \"She \"\r\n                                        } has more than 10 Submittable tasks.`}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            {/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <StatusSelection />\r\n                            </div> */}\r\n\r\n                            {/* Page Type  */}\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <Listbox\r\n                                    value={pageType}\r\n                                    onChange={setPageType}\r\n                                >\r\n                                    <div className=\"form-group position-relative my-3\">\r\n                                        <label htmlFor=\"\">\r\n                                            {\" \"}\r\n                                            Task Type <sup>*</sup>{\" \"}\r\n                                        </label>\r\n                                        <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                            <span className=\"singleline-ellipsis pr-3\">\r\n                                                {pageType ?? \"--\"}\r\n                                            </span>\r\n\r\n                                            <div className=\"__icon\">\r\n                                                <i className=\"fa-solid fa-sort\"></i>\r\n                                            </div>\r\n                                        </Listbox.Button>\r\n                                        <Listbox.Options className=\"sp1-select-options\">\r\n                                            {[\r\n                                                \"New Page Design\",\r\n                                                \"Cloning Existing Design\",\r\n                                                \"Others\",\r\n                                            ]?.map((s, i) => (\r\n                                                <Listbox.Option\r\n                                                    key={i}\r\n                                                    className={({ active }) =>\r\n                                                        `sp1-select-option ${\r\n                                                            active\r\n                                                                ? \"active\"\r\n                                                                : \"\"\r\n                                                        }`\r\n                                                    }\r\n                                                    value={s}\r\n                                                >\r\n                                                    {({ selected }) => (\r\n                                                        <>\r\n                                                            {s}\r\n\r\n                                                            {selected ? (\r\n                                                                <i className=\"fa-solid fa-check ml-2\" />\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </>\r\n                                                    )}\r\n                                                </Listbox.Option>\r\n                                            ))}\r\n                                        </Listbox.Options>\r\n                                    </div>\r\n                                </Listbox>\r\n\r\n                                {required_error?.pageType?.[0] && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {required_error?.pageType?.[0]}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {err?.taskType && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.taskType}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {pageType === \"New Page Design\" ? (\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <Listbox\r\n                                        value={pageTypePriority}\r\n                                        onChange={setPageTypePriority}\r\n                                    >\r\n                                        <div className=\"form-group position-relative my-3\">\r\n                                            <label htmlFor=\"\">\r\n                                                {\" \"}\r\n                                                Page Type <sup>*</sup>{\" \"}\r\n                                            </label>\r\n                                            <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                <span className=\"singleline-ellipsis pr-3\">\r\n                                                    {pageTypePriority ?? \"--\"}\r\n                                                </span>\r\n\r\n                                                <div className=\"__icon\">\r\n                                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                                </div>\r\n                                            </Listbox.Button>\r\n                                            <Listbox.Options className=\"sp1-select-options\">\r\n                                                {[\r\n                                                    \"Primary Page Development\",\r\n                                                    \"Secondary Page Development\",\r\n                                                ]?.map((s, i) => (\r\n                                                    <Listbox.Option\r\n                                                        key={i}\r\n                                                        className={({\r\n                                                            active,\r\n                                                        }) =>\r\n                                                            `sp1-select-option ${\r\n                                                                active\r\n                                                                    ? \"active\"\r\n                                                                    : \"\"\r\n                                                            }`\r\n                                                        }\r\n                                                        value={s}\r\n                                                    >\r\n                                                        {({ selected }) => (\r\n                                                            <>\r\n                                                                {s}\r\n\r\n                                                                {selected ? (\r\n                                                                    <i className=\"fa-solid fa-check ml-2\" />\r\n                                                                ) : (\r\n                                                                    \"\"\r\n                                                                )}\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Listbox.Option>\r\n                                                ))}\r\n                                            </Listbox.Options>\r\n                                        </div>\r\n                                    </Listbox>\r\n\r\n                                    {err?.pageTypePriority && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.pageTypePriority}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ) : null}\r\n\r\n                            {/* Others */}\r\n                            {pageType === \"Others\" ? (\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <Listbox\r\n                                        value={pageTypeOthers}\r\n                                        onChange={setPageTypeOthers}\r\n                                    >\r\n                                        <div className=\"form-group position-relative my-3\">\r\n                                            <label htmlFor=\"\">\r\n                                                {\" \"}\r\n                                                Others <sup>*</sup>{\" \"}\r\n                                            </label>\r\n                                            <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                <span className=\"singleline-ellipsis pr-3\">\r\n                                                    {pageTypeOthers ?? \"--\"}\r\n                                                </span>\r\n\r\n                                                <div className=\"__icon\">\r\n                                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                                </div>\r\n                                            </Listbox.Button>\r\n                                            <Listbox.Options className=\"sp1-select-options\">\r\n                                                {[\r\n                                                    \"Page Design Change\",\r\n                                                    \"Speed Optimization\",\r\n                                                    \"Fixing Issues/Bugs\",\r\n                                                    \"Responsiveness Issue Fixing/Making Something Responsive\",\r\n                                                ]?.map((s, i) => (\r\n                                                    <Listbox.Option\r\n                                                        key={i}\r\n                                                        className={({\r\n                                                            active,\r\n                                                        }) =>\r\n                                                            `sp1-select-option ${\r\n                                                                active\r\n                                                                    ? \"active\"\r\n                                                                    : \"\"\r\n                                                            }`\r\n                                                        }\r\n                                                        value={s}\r\n                                                    >\r\n                                                        {({ selected }) => (\r\n                                                            <>\r\n                                                                {s}\r\n\r\n                                                                {selected ? (\r\n                                                                    <i className=\"fa-solid fa-check ml-2\" />\r\n                                                                ) : (\r\n                                                                    \"\"\r\n                                                                )}\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Listbox.Option>\r\n                                                ))}\r\n                                            </Listbox.Options>\r\n                                        </div>\r\n                                    </Listbox>\r\n\r\n                                    {err?.pageTypeOthers && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.pageTypeOthers}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ) : null}\r\n\r\n                            {pageType ? (\r\n                                <React.Fragment>\r\n                                    {pageType === \"Cloning Existing Design\" ? (\r\n                                        <>\r\n                                            {/* <div className=\"col-12 col-md-6\">\r\n                                                    <Input\r\n                                                        id=\"page_type_name\"\r\n                                                        label=\"Page type name\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter page type name...\"\r\n                                                        name=\"pageTypeName\"\r\n                                                        required={true}\r\n                                                        value={pageTypeName}\r\n\r\n                                                        onChange={(e) => handleChange(e, setPageTypeName)}\r\n                                                    />\r\n                                                </div> */}\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Listbox\r\n                                                    value={pageTypeName}\r\n                                                    onChange={setPageTypeName}\r\n                                                >\r\n                                                    <div className=\"form-group position-relative my-3\">\r\n                                                        <label htmlFor=\"\">\r\n                                                            {\" \"}\r\n                                                            Page Type Name{\" \"}\r\n                                                            <sup>*</sup>{\" \"}\r\n                                                        </label>\r\n                                                        <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                            <span className=\"singleline-ellipsis pr-3\">\r\n                                                                {pageTypeName ??\r\n                                                                    \"--\"}\r\n                                                            </span>\r\n\r\n                                                            <div className=\"__icon\">\r\n                                                                <i className=\"fa-solid fa-sort\"></i>\r\n                                                            </div>\r\n                                                        </Listbox.Button>\r\n                                                        <Listbox.Options className=\"sp1-select-options\">\r\n                                                            {[\r\n                                                                \"Primary Page Development\",\r\n                                                                \"Secondary Page Development\",\r\n                                                            ]?.map((s, i) => (\r\n                                                                <Listbox.Option\r\n                                                                    key={i}\r\n                                                                    className={({\r\n                                                                        active,\r\n                                                                    }) =>\r\n                                                                        `sp1-select-option ${\r\n                                                                            active\r\n                                                                                ? \"active\"\r\n                                                                                : \"\"\r\n                                                                        }`\r\n                                                                    }\r\n                                                                    value={s}\r\n                                                                >\r\n                                                                    {({\r\n                                                                        selected,\r\n                                                                    }) => (\r\n                                                                        <>\r\n                                                                            {s}\r\n\r\n                                                                            {selected ? (\r\n                                                                                <i className=\"fa-solid fa-check ml-2\" />\r\n                                                                            ) : (\r\n                                                                                \"\"\r\n                                                                            )}\r\n                                                                        </>\r\n                                                                    )}\r\n                                                                </Listbox.Option>\r\n                                                            ))}\r\n                                                        </Listbox.Options>\r\n                                                    </div>\r\n                                                </Listbox>\r\n                                                {err?.pageTypeName ||\r\n                                                    required_error\r\n                                                        ?.page_type?.[0]}\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"page_name\"\r\n                                                    label=\"Page Name\"\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter page name\"\r\n                                                    name=\"page name\"\r\n                                                    required={true}\r\n                                                    value={pageName}\r\n                                                    error={err?.pageName}\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setPageName\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"page_url\"\r\n                                                    label=\"Page URL\"\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter page url\"\r\n                                                    name=\"page url\"\r\n                                                    required={true}\r\n                                                    value={pageURL}\r\n                                                    error={\r\n                                                        err?.pageUrl ||\r\n                                                        required_error\r\n                                                            ?.page_url?.[0]\r\n                                                    }\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setPageURL\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n\r\n                                    {pageType === \"Cloning Existing Design\" ? (\r\n                                        <>\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"number_of_pages\"\r\n                                                    label=\"Number of Pages\"\r\n                                                    type=\"number\"\r\n                                                    placeholder=\"--\"\r\n                                                    name=\"number_of_pages\"\r\n                                                    required={true}\r\n                                                    value={numberOfPage}\r\n                                                    error={err?.numberOfPage}\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setNumberOfPage\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"exiting_project_url\"\r\n                                                    label=\"Existing Design Link\"\r\n                                                    type=\"Link\"\r\n                                                    placeholder=\"--\"\r\n                                                    name=\"exiting_project_url\"\r\n                                                    required={true}\r\n                                                    value={existingDesignLink}\r\n                                                    error={\r\n                                                        err?.existingDesignLink\r\n                                                    }\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setExistingDesignLink\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                        </>\r\n                                    ) : null}\r\n                                </React.Fragment>\r\n                            ) : null}\r\n                            {/*  */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <PrioritySelection\r\n                                    selected={priority}\r\n                                    setSelected={setPriority}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Set Estimate Time */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        htmlFor=\"\"\r\n                                        className=\"f-14 text-dark-gray\"\r\n                                    >\r\n                                        Set Estimate Time{\" \"}\r\n                                        <sup className=\"f-14\"> * </sup>\r\n                                    </label>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control height-35 f-14 mr-2\"\r\n                                            value={estimateTimeHour}\r\n                                            onWheel={e => e.currentTarget.blur()}\r\n                                            onChange={(e) =>handleChange( e,setEstimateTimeHour)}\r\n                                        />{\" \"}\r\n                                        hrs\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                            value={estimateTimeMin}\r\n                                            onWheel={e => e.currentTarget.blur()}\r\n                                            onChange={(e) =>\r\n                                                handleChange(\r\n                                                    e,\r\n                                                    setEstimateTimeMin\r\n                                                )\r\n                                            }\r\n                                        />{\" \"}\r\n                                        min\r\n                                    </div>\r\n\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {estimateError(required_error)}\r\n                                    </div>\r\n\r\n                                    <div style={{ color: \"#F73B12\" }}>\r\n                                    Estimation time can't exceed {estimation?.hours_left} hours {estimation?.minutes_left} minutes\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\"> Description </label>\r\n                                    <div\r\n                                        className=\"sp1_st_write_comment_editor\"\r\n                                        style={{ minHeight: \"100px\" }}\r\n                                    >\r\n                                        <CKEditorComponent\r\n                                            onChange={handleEditorChange}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {required_error?.description?.[0] && (\r\n                                        <span className=\"text-danger\">\r\n                                            <small>\r\n                                                {\" \"}\r\n                                                {\r\n                                                    required_error\r\n                                                        ?.description?.[0]\r\n                                                }{\" \"}\r\n                                            </small>\r\n                                        </span>\r\n                                    )}\r\n                                    {err?.description && (\r\n                                        <span className=\"text-danger\">\r\n                                            <small> {err?.description} </small>\r\n                                        </span>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <UploadFilesInLine\r\n                                    files={files}\r\n                                    setFiles={setFiles}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* {err?.violationWord ? <div className=\"alert alert-danger mt-2 w-100 text-center\" dangerouslySetInnerHTML={{__html: err?.violationWord}} />: null} */}\r\n\r\n                            <div className=\"col-12 mt-3 pb-3\">\r\n                                <div className=\"d-flex align-items-center justify-content-end\">\r\n                                    <Button\r\n                                        variant=\"secondary\"\r\n                                        className=\"mr-2\"\r\n                                        onClick={close}\r\n                                    >\r\n                                        Cancel\r\n                                    </Button>\r\n\r\n                                    {!isLoading && !checking ? (\r\n                                        <Button onClick={handleSubmit}>\r\n                                            <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                            Create\r\n                                        </Button>\r\n                                    ) : (\r\n                                        <Button className=\"cursor-processing\">\r\n                                            <div\r\n                                                className=\"spinner-border text-white\"\r\n                                                role=\"status\"\r\n                                                style={{\r\n                                                    width: \"18px\",\r\n                                                    height: \"18px\",\r\n                                                }}\r\n                                            ></div>\r\n                                            Processing...\r\n                                        </Button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SubTaskForm;\r\n","import React, { useState } from 'react'\r\nimport Button from '../../components/Button'\r\nimport Input from '../../components/form/Input'\r\nimport TaskCategorySelectionBox from './TaskCategorySelectionBox'\r\nimport AssginedToSelection from './AssignedToSelection'\r\nimport PrioritySelection from './PrioritySelection'\r\nimport DatePicker from '../comments/DatePicker'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport _ from 'lodash'\r\nimport { useDeleteUplaodedFileMutation, useEditSubtaskMutation, useGetTaskDetailsQuery, useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeSubTasks } from '../../../services/features/subTaskSlice'\r\nimport { CompareDate } from '../../../utils/dateController'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n\r\nconst  SubtTaskEditForm= ({close, editId}) => {\r\n    const { task, subTask } = useSelector(s => s.subTask);\r\n    const dispatch = useDispatch();\r\n\r\n//   form data\r\n  const [title, setTitle] = useState('');\r\n  const [milestone, setMilestone] = useState('');\r\n  const [parentTask, setParentTask] = useState('');\r\n  const [startDate, setStateDate] = useState(new Date());\r\n  const [dueDate, setDueDate] = useState(new Date());\r\n  const [project, setProject] = useState(\"\");\r\n  const [taskCategory, setTaskCategory] = useState('')\r\n  const [assignedTo, setAssignedTo] = useState('');\r\n  const [taskObserver, setTaskObserver] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('To Do');\r\n  const [priority, setPriority] = useState('Medium');\r\n  const [estimateTimeHour, setEstimateTimeHour ] = useState('');\r\n  const [estimateTimeMin, setEstimateTimeMin ] = useState('');\r\n  const [attachedFiles, setAttachedFiles] = useState([]);\r\n  const [files, setFiles] = React.useState([]);\r\n\r\n    const params = useParams();\r\n\r\nconst [\r\n    editSubtask,\r\n    { isLoading, error }\r\n] = useEditSubtaskMutation();\r\n\r\nconst [\r\n    getTaskDetails,\r\n    { data: edit, isFetching: editDataIsFetching}\r\n] = useLazyGetTaskDetailsQuery();\r\n\r\n\r\n// find edited subtask\r\nconst editSubTask = subTask.find(d => d.id === editId);\r\n\r\nconst { data: estimation, isFetching } = useGetTaskDetailsQuery(`/${params?.taskId}/json?mode=estimation_time`);\r\n\r\n\r\nconst required_error = error?.status === 422 ? error?.data: null;\r\n\r\n\r\n// handle change\r\nReact.useEffect(() => {\r\n    const formatedDate = (d) => {\r\n        let day = dayjs.dayjs(d).toDate();\r\n        return day;\r\n    }\r\n    getTaskDetails(`/${editId}/json?mode=sub_task_edit`).unwrap().then(res => {\r\n        if(res){\r\n            const assigneeTo = res?.users?.[0];\r\n\r\n            setTitle(res.heading);\r\n            setMilestone(res.milestone_title);\r\n            setParentTask(task?.heading);\r\n            setStateDate(formatedDate(res.start_date));\r\n            setDueDate(formatedDate(res.due_date));\r\n            setProject(res.project_name);\r\n            setTaskCategory(res.task_category);\r\n            setAssignedTo(assigneeTo ? {id: assigneeTo?.id, name: assigneeTo?.name}: '');\r\n            setDescription(res.description);\r\n            setPriority(_.startCase(res.priority));\r\n            setEstimateTimeHour(res.estimate_hours);\r\n            setEstimateTimeMin(res.estimate_minutes);\r\n            setAttachedFiles(res.files);\r\n\r\n\r\n\r\n        }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    } )\r\n}, [task, editId])\r\n\r\n\r\n\r\n// handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n// handle submission\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  const _startDate = dayjs.dayjs(startDate).format('DD-MM-YYYY');\r\n  const _dueDate = dayjs.dayjs(dueDate).format('DD-MM-YYYY');\r\n\r\n  const fd = new FormData();\r\n    fd.append('milestone_id', task?.milestone_id);\r\n    fd.append('task_id', task?.id);\r\n    fd.append('title', title);\r\n    fd.append('start_date', _startDate);\r\n    fd.append('due_date', _dueDate);\r\n    fd.append('project_id', task?.project_id);\r\n    fd.append('task_category_id', taskCategory?.id);\r\n    fd.append('user_id', assignedTo?.id);\r\n    fd.append('description', description);\r\n    fd.append('board_column_id', task?.board_column_id);\r\n    fd.append('priority', _.lowerCase(priority));\r\n    fd.append('estimate_hours', estimateTimeHour);\r\n    fd.append('estimate_minutes', estimateTimeMin);\r\n    fd.append('image_url', null);\r\n    fd.append('subTaskID', editSubTask?.subtask_id);\r\n    fd.append('addedFiles', null);\r\n    fd.append('_method', 'PUT');\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    editSubtask({data: fd, id: editId}).unwrap().then(res => {\r\n            if(res?.status === 'success'){\r\n\r\n                 let _subtask = [...subTask];\r\n                 _subtask = _subtask?.map(s => {\r\n                    if(Number(s?.id) === Number(res?.sub_task?.id)){\r\n                        return res?.sub_task\r\n                    }else return s;\r\n                 })\r\n\r\n                dispatch(storeSubTasks(_subtask));\r\n\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: res?.message,\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                })\r\n\r\n                close();\r\n            }\r\n    }).catch((err) => {\r\n        if(err?.status === 422){\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'error',\r\n                title: \"Please fill out all required fields\",\r\n                showConfirmButton: true,\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n// handle uplaoded file delete request\r\nconst [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\nconst handleFileDelete = (e, file) => {\r\n    // delete\r\n    deleteUplaodedFile(file?.id).unwrap();\r\n\r\n    // delete form ui\r\n    let previousFile = [...attachedFiles];\r\n    let index = previousFile?.indexOf(file);\r\n    previousFile.splice(index,1);\r\n    setAttachedFiles(previousFile);\r\n}\r\n\r\n\r\n// handle loading state\r\nReact.useEffect(() => {\r\n    if (isLoading || editDataIsFetching) {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'progress';\r\n      } else {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'default';\r\n      }\r\n}, [isLoading, editDataIsFetching])\r\n\r\n\r\n\r\nconst handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setDescription(data);\r\n}\r\n\r\nconst estimateError= (err) =>{\r\n    let errText = '';\r\n    let hoursErr = err?.estimate_hours?.[0];\r\n    let minErr = err?.estimate_minutes?.[0];\r\n    if(hoursErr) errText += hoursErr;\r\n    if(minErr) errText += minErr;\r\n    return errText;\r\n}\r\n\r\n  return (\r\n    <>\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'>\r\n                 <h6>\r\n                        Edit Sub Task\r\n                        {editDataIsFetching && <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent'\r\n                            }}\r\n                        />}\r\n                </h6>\r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching &&\r\n                    <div className='w-100' style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        zIndex: 1\r\n                    }}/>\r\n                }\r\n                <div className='sp1-subtask-form --form row'>\r\n                    <div className=\"col-6\">\r\n                        <Input\r\n                            id='title'\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder='Enter a task title'\r\n                            name='title'\r\n                            required={true}\r\n                            value={title}\r\n                            error= {required_error?.title?.[0]}\r\n                            onChange={e => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Milestone\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={milestone}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Parent Task\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={parentTask}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">Start Date <sup className='f-14'>*</sup></label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs.dayjs().format('DD-MM-YYYY')}`}\r\n                                    minDate={dayjs.dayjs(task?.start_date).toDate()}\r\n                                    maxDate={dueDate || dayjs.dayjs(task?.due_date).toDate()}\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                required_error?.start_date?.[0] &&\r\n                               <div style={{color: 'red'}}>{required_error?.start_date?.[0]}</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-6'>\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">Due Date <sup className='f-14'>*</sup></label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs.dayjs().format('DD-MM-YYYY')}`}\r\n                                    minDate={startDate || dayjs.dayjs(task?.start_date).toDate()}\r\n                                    maxDate={dayjs.dayjs(task?.due_date).toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                required_error?.due_date?.[0] &&\r\n                               <div style={{color: 'red'}}>{required_error?.due_date?.[0]}</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <TaskCategorySelectionBox selected={taskCategory} onSelect={setTaskCategory}  />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <AssginedToSelection selected={assignedTo} onSelect={setAssignedTo} />\r\n                    </div>\r\n{/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-6\">\r\n                        <PrioritySelection selected={priority} setSelected={setPriority} />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className='f-14 text-dark-gray'>Set Estimate Time <sup className='f-14'> * </sup></label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type='number'\r\n                                    onWheel={e => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) => handleChange(e, setEstimateTimeHour)}\r\n                                /> hrs\r\n                                <input\r\n                                    type='number'\r\n                                    onWheel={e => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={e => handleChange(e, setEstimateTimeMin)}\r\n                                /> min\r\n                            </div>\r\n\r\n                            <div style={{color: 'red'}}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{color: 'red'}}>\r\n                            Estimation time can't exceed {estimation?.hours_left} hours {estimation?.minutes_left} minutes\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div className='sp1_st_write_comment_editor' style={{minHeight: '100px'}}>\r\n                                <CKEditorComponent data={description} onChange={handleEditorChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12'>\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3\">\r\n\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant='secondary'\r\n                                className='mr-2'\r\n                                onClick={close}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            {!isLoading ? (\r\n                                <Button onClick={handleSubmit}>\r\n                                    <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                    Update\r\n                                </Button>\r\n                            ) : (\r\n                            <Button className='cursor-processing'>\r\n                                <div\r\n                                    className=\"spinner-border text-white\"\r\n                                    role=\"status\"\r\n                                    style={{\r\n                                        width: '18px',\r\n                                        height: '18px',\r\n                                    }}\r\n                                >\r\n                                </div>\r\n                                Processing...\r\n                            </Button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SubtTaskEditForm\r\n","import React from \"react\";\r\nimport SubTask from \"./SubTask\";\r\nimport SubTaskForm from \"./SubTaskForm\";\r\nimport Button from \"../../components/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    useGetTaskDetailsQuery,\r\n    useLazyGetInProgressTaskStatusQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { storeSubTasks } from \"../../../services/features/subTaskSlice\";\r\nimport SubtTaskEditForm from \"./SubTaskEditForm\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport Modal from \"../../components/Modal\";\r\nimport _ from \"lodash\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { subTaskCreationPermision } from \"../../permissions\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst SubTaskSection = ({ status }) => {\r\n    const { task, subTask } = useSelector((s) => s.subTask);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [edit, setEdit] = React.useState(null);\r\n    const [formMode, setFormMode] = React.useState(\"add\");\r\n    const [isTaskModalOpen, setIsTaskModalOpen] = React.useState(false);\r\n    const [subtaskModalToggleRef, setSubtaskModalToggleRef] =\r\n        React.useState(null);\r\n    const { width } = useWindowSize();\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n    // check in progress task history\r\n    const [getInProgressTaskStatus, { isFetching: inProgressTaskStatus }] =\r\n        useLazyGetInProgressTaskStatusQuery();\r\n\r\n    const toggleAddButton = async () => {\r\n        // try{\r\n        //     const res = await getInProgressTaskStatus(`/${auth?.getId()}`).unwrap();\r\n        //     if(res.status === 400){\r\n        //         toast.error(res?.message, {theme: 'colored'})\r\n        //     }else{\r\n        //         setIsTaskModalOpen(!isTaskModalOpen);\r\n        //     }\r\n\r\n        // }catch(err){\r\n        //     console.log(err)\r\n        // }\r\n\r\n        setIsTaskModalOpen(!isTaskModalOpen);\r\n    };\r\n\r\n    const closeAddModal = () => {\r\n        setIsTaskModalOpen(false);\r\n        setFormMode(\"add\");\r\n        navigate(`/account/tasks/${task?.id}`);\r\n    };\r\n    const toggleEditButton = (e) => {\r\n        setFormMode(\"edit\");\r\n        setIsTaskModalOpen(!isTaskModalOpen);\r\n    };\r\n\r\n    // edit modal form control\r\n    const toggleEditForm = (e, id) => {\r\n        e.preventDefault();\r\n        setEdit(id);\r\n        setIsTaskModalOpen(true);\r\n    };\r\n\r\n    const closeEditForm = () => {\r\n        setEdit(null);\r\n        setIsTaskModalOpen(false);\r\n    };\r\n\r\n    // handle create new subtask\r\n    // const handleCreateSubTask = () => {\r\n    //     // if parent task has not already any subtask\r\n    //     // show the Working Environment form\r\n    //     // else create from\r\n    // };\r\n\r\n    // edit modal form control end\r\n    // const {\r\n    //   data,\r\n    //   isFetching\r\n    // } = useGetTaskDetailsQuery(`/${task?.id}/json?mode=sub_task`, {\r\n    //   skip: subTask?.length\r\n    // });\r\n\r\n    // fetch all task\r\n    const [getTaskDetails, { isFetching }] = useLazyGetTaskDetailsQuery(\"\", {\r\n        skip: subTask?.length,\r\n    });\r\n\r\n    // useEffect(()=>{\r\n    //     console.log({task,subTask,isFetching});\r\n    //   },[task,subTask,isFetching])\r\n\r\n    // if task notes fetch completed store data into redux store\r\n    React.useEffect(() => {\r\n        if (task && task.id) {\r\n            getTaskDetails(`/${task?.id}/json?mode=sub_task`)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    if (res) {\r\n                        dispatch(storeSubTasks(res));\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [task]);\r\n\r\n    // React.useEffect(() => {\r\n    //   if(!isFetching && data){\r\n    //     dispatch(storeSubTasks(data));\r\n    //   }\r\n    // },[data])\r\n\r\n    const Task = new SingleTask(task);\r\n\r\n    console.log(\"Task\", Task);\r\n\r\n    return (\r\n        <div\r\n            className=\"sp1_task_right_card mb-3\"\r\n            ref={setSubtaskModalToggleRef}\r\n            style={{ zIndex: isTaskModalOpen ? \"99\" : \"\" }}\r\n        >\r\n            {width > 1200 ? (\r\n                <React.Fragment>\r\n                    {/* modal */}\r\n                    <CustomModal\r\n                        toggleRef={subtaskModalToggleRef}\r\n                        isOpen={isTaskModalOpen}\r\n                        close={closeAddModal}\r\n                        formMode={formMode}\r\n                    >\r\n                        {!edit ? (\r\n                            <SubTaskForm\r\n                                close={closeAddModal}\r\n                                isFirstSubtask={!Task.workEnvData}\r\n                            />\r\n                        ) : (\r\n                            <SubtTaskEditForm\r\n                                close={closeEditForm}\r\n                                editId={edit}\r\n                            />\r\n                        )}\r\n                    </CustomModal>\r\n                </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                    {/* modal */}\r\n                    <Modal isOpen={isTaskModalOpen}>\r\n                        {!edit ? (\r\n                            <SubTaskFsorm\r\n                                close={closeAddModal}\r\n                                isFirstSubtask={!Task.workEnvData}\r\n                            />\r\n                        ) : (\r\n                            <SubtTaskEditForm\r\n                                close={closeEditForm}\r\n                                editId={edit}\r\n                            />\r\n                        )}\r\n                    </Modal>\r\n                </React.Fragment>\r\n            )}\r\n\r\n            {/* left dropdown */}\r\n\r\n            {isTaskModalOpen && (\r\n                <button\r\n                    aria-label=\"openCommentModalButton\"\r\n                    className=\"sp1_task_right_dl_toggle\"\r\n                    onClick={toggleAddButton}\r\n                    style={{ zIndex: isTaskModalOpen ? \"110\" : \"\" }}\r\n                >\r\n                    <i\r\n                        className={`fa-solid fa-circle-chevron-${\r\n                            isTaskModalOpen ? \"right\" : \"left\"\r\n                        }`}\r\n                        style={{ color: \"#276fec\" }}\r\n                    />\r\n                </button>\r\n            )}\r\n            {/* left dropdown */}\r\n\r\n            <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n                <div className=\"f-16\">\r\n                    <span>Sub Task</span>\r\n                    {isFetching && (\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        />\r\n                    )}\r\n                </div>\r\n\r\n                {subTaskCreationPermision({ task: Task, auth, status }) && (\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        className=\"sp1_tark_add_item\"\r\n                        aria-label=\"addButton\"\r\n                        onClick={toggleAddButton}\r\n                    >\r\n                        {isTaskModalOpen ? (\r\n                            <React.Fragment>\r\n                                <i\r\n                                    className=\"fa-solid fa-xmark\"\r\n                                    style={{ fontSize: \"12px\" }}\r\n                                />{\" \"}\r\n                                Close\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                {inProgressTaskStatus ? (\r\n                                    <Loader title=\"Loading...\" />\r\n                                ) : (\r\n                                    <>\r\n                                        <i\r\n                                            className=\"fa-solid fa-plus\"\r\n                                            style={{ fontSize: \"12px\" }}\r\n                                        />{\" \"}\r\n                                        Sub Task\r\n                                    </>\r\n                                )}\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Button>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"sp1_task_right_card--body\">\r\n                {!isFetching ? (\r\n                    _.size(subTask) !== 0 ? (\r\n                        subTask?.map((sub) => (\r\n                            <SubTask\r\n                                key={sub.id}\r\n                                subTask={sub}\r\n                                task={task}\r\n                                status={status}\r\n                                toggleEditForm={toggleEditForm}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{\r\n                                color: \"#B4BCC4\",\r\n                                fontSize: \"15px\",\r\n                                textAlign: \"center\",\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                            }}\r\n                        >\r\n                            Sub Task is Not Available\r\n                        </div>\r\n                    )\r\n                ) : (\r\n                    <div\r\n                        className=\"d-flex align-items-center justify-content-center\"\r\n                        style={{\r\n                            color: \"#5A6169\",\r\n                            fontSize: \"15px\",\r\n                            textAlign: \"center\",\r\n                            height: \"100%\",\r\n                            width: \"100%\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                                marginRight: \"10px\",\r\n                            }}\r\n                        />\r\n                        Loading...\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubTaskSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport Card from \"../../../global/Card\";\r\nimport styles from \"./task-edit-form.module.css\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport Button from  '../../../global/Button'\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\nimport AssignedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\n\r\nimport {\r\n    useDeleteUplaodedFileMutation,\r\n    useGetTaskDetailsQuery,\r\n    useEditSubtaskMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { storeSubTasks } from \"../../../services/features/subTaskSlice\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useUpdateTaskMutation } from \"../../../services/api/tasksApiSlice\";\r\nimport { useGetMilestoneDetailsQuery, useLazyGetMilestoneDetailsQuery } from \"../../../services/api/projectApiSlice\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport Loader from \"../../../global/Loader\";\r\nimport { convertTime } from \"../../../utils/converTime\";\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n// Edit form Provider\r\nconst EditFormProvider = ({ task }) => {\r\n    const [searchParams] = useSearchParams(); // get search params\r\n    const isVisible = searchParams.get(\"modal\") === \"edit\"; // check has modal\r\n    const taskId = searchParams.get(\"task\"); // get task id\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const close = () => navigate(location.pathname, {replace: true});\r\n\r\n\r\n    const [updateTask, { isLoading, error }] = useUpdateTaskMutation();\r\n    // handle submission\r\n    const handleSubmission = (formData) => {\r\n        updateTask(formData).unwrap().then(res => {\r\n            if(res?.status === 200){\r\n                toast.success(\"Task Updated successfully!\");\r\n                close();\r\n            }\r\n        }).catch((err) => {\r\n            if(err?.status === 422){\r\n                toast.warn(\"Please fill out all required fields\")\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={isVisible}>\r\n            <Card className={styles.form_card}>\r\n                <Card.Head\r\n                  onClose={close}\r\n                  className={styles.form_card_head}\r\n                >\r\n                    <h6> Edit Task # {taskId} </h6>\r\n                </Card.Head>\r\n\r\n                <Card.Body className={styles.form_card_body}>\r\n                    <div className=\"\">\r\n                        {task && (\r\n                            <TaskEditForm\r\n                                task={task}\r\n                                onSubmit={handleSubmission}\r\n                                isLoading={isLoading}\r\n                                onClose={close}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditFormProvider;\r\n\r\nconst TaskEditForm = ({ task, onSubmit, isLoading, onClose}) => {\r\n    const editDataIsFetching = !task;\r\n    //form data\r\n    const [title, setTitle] = useState(task.title);\r\n    const [milestone, setMilestone] = useState({id: task.milestoneID, milestone_title: task.milestoneTitle});\r\n    const [parentTask, setParentTask] = useState(task.parentTaskTitle);\r\n    const [startDate, setStateDate] = useState(new Date(task.startDate));\r\n    const [dueDate, setDueDate] = useState(new Date(task.dueDate));\r\n    const [project, setProject] = useState(task.projectName);\r\n    const [taskCategory, setTaskCategory] = useState({\r\n        id: task.category.id,\r\n        category_name: task.category.name,\r\n    });\r\n    const [assignedTo, setAssignedTo] = useState({\r\n        id: task.assigneeTo.id,\r\n        name: task.assigneeTo.name,\r\n    });\r\n    const [description, setDescription] = useState(task.description);\r\n    const [priority, setPriority] = useState(task.priority);\r\n    const [estimateTimeHour, setEstimateTimeHour] = useState(\r\n        task.estimateHours\r\n    );\r\n    const [estimateTimeMin, setEstimateTimeMin] = useState(\r\n        task.estimateMinutes\r\n    );\r\n    const [attachedFiles, setAttachedFiles] = useState([]);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { data: estimation, isFetching } = useGetTaskDetailsQuery(\r\n        `/${task.id}/json?mode=estimation_time`\r\n    );\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n      let count = 0;\r\n      const err = new Object();\r\n\r\n      const errorMessages = {\r\n        requiredField: 'This field is required.',\r\n        startDate: 'Please select a start date.',\r\n        dueDate: 'Please select a due date.',\r\n        taskCategory: 'Please select a task category.',\r\n        assignedTo: 'Please select a user.',\r\n        overloadedUser: (name, gender) =>\r\n          `You cannot assign this task to ${name} because ${\r\n            gender === 'male' ? 'he ' : 'she '\r\n          } has more than 10 submittable tasks.`,\r\n        description: 'This field is required.',\r\n      };\r\n\r\n      const showError = (field) => {\r\n        err[field] = errorMessages[field];\r\n        count++;\r\n      }\r\n\r\n\r\n      if(!title) showError('title');\r\n      if(!startDate) showError('startDate');\r\n      if(!dueDate) showError('dueDate');\r\n      if(!taskCategory) showError('taskCategory');\r\n      if(!assignedTo) showError('assignedTo');\r\n\r\n      if (assignedTo && assignedTo?.isOverloaded) {\r\n        err.assignedTo = overloadedUser(assignedTo.name, genderPronoun);\r\n        count++;\r\n      }\r\n\r\n      if(!description) showError('description');\r\n\r\n      setError(error);\r\n      return count === 0;\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = () => {\r\n         //form data\r\n         const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n         const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n         const fd = new FormData();\r\n         fd.append(\"milestone_id\", task?.milestoneID);\r\n         fd.append(\"task_id\", task?.id);\r\n         fd.append(\"heading\", title);\r\n         fd.append(\"start_date\", _startDate);\r\n         fd.append(\"due_date\", _dueDate);\r\n         fd.append(\"project_id\", task?.projectId);\r\n         fd.append(\"category_id\", taskCategory?.id);\r\n         fd.append(\"user_id\", assignedTo?.id);\r\n         fd.append(\"description\", description);\r\n         fd.append(\"board_column_id\", task?.boardColumn.id);\r\n         fd.append(\"priority\", _.lowerCase(priority));\r\n         fd.append(\"estimate_hours\", estimateTimeHour);\r\n         fd.append(\"estimate_minutes\", estimateTimeMin);\r\n         fd.append(\"deliverable_id\", milestone?.deliverable_type ?? '');\r\n         fd.append(\"image_url\", null);\r\n         fd.append(\"addedFiles\", null);\r\n         fd.append(\"_method\", \"POST\");\r\n         fd.append(\r\n             \"_token\",\r\n             document\r\n                 .querySelector(\"meta[name='csrf-token']\")\r\n                 .getAttribute(\"content\")\r\n         );\r\n         Array.from(files).forEach((file) => {\r\n             fd.append(\"file[]\", file);\r\n         });\r\n\r\n        if(isValid()){\r\n         onSubmit(fd);\r\n        }else{\r\n         toast.warn('Please fill out all required fields!');\r\n        }\r\n\r\n    };\r\n\r\n\r\n      const {data: projects, isFetching: isFetchingMilestone} = useGetMilestoneDetailsQuery(task?.projectId)\r\n\r\n\r\n\r\n    // handle uploaded file delete request\r\n    const [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\n    const handleFileDelete = (e, file) => {\r\n        // delete\r\n        deleteUplaodedFile(file?.id).unwrap();\r\n\r\n        // delete form ui\r\n        let previousFile = [...attachedFiles];\r\n        let index = previousFile?.indexOf(file);\r\n        previousFile.splice(index, 1);\r\n        setAttachedFiles(previousFile);\r\n    };\r\n\r\n    // handle loading state\r\n    React.useEffect(() => {\r\n        if (isLoading || editDataIsFetching) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading, editDataIsFetching]);\r\n\r\n    //   editor\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        let errText = \"\";\r\n        let hoursErr = err?.estimate_hours?.[0];\r\n        let minErr = err?.estimate_minutes?.[0];\r\n        if (hoursErr) errText += hoursErr;\r\n        if (minErr) errText += minErr;\r\n        return errText;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching && (\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            zIndex: 1,\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className=\"sp1-subtask-form --form row\">\r\n                    <div className=\"col-6\">\r\n                        <Input\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter a task title\"\r\n                            name=\"title\"\r\n                            required={true}\r\n                            value={title}\r\n                            error={required_error?.title?.[0]}\r\n                            onChange={(e) => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* Project Milestone Selection Menu */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Listbox value={milestone} onChange={setMilestone}>\r\n                            <div className=\"form-group position-relative my-3\">\r\n                                <label\r\n                                    className={`f-14 text-dark-gray mb-1`}\r\n                                    data-label=\"true\"\r\n                                >\r\n                                    Milestone\r\n                                </label>\r\n                                <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                    <span className=\"singleline-ellipsis\" >{milestone?.milestone_title ?? '--'}</span>\r\n                                    <div className='__icon'>\r\n                                        <i className=\"fa-solid fa-sort\"></i>\r\n                                    </div>\r\n                                </Listbox.Button>\r\n                                <Listbox.Options  className=\"sp1-select-options\">\r\n                                    {isFetchingMilestone && <span className=\"w-full d-block py-2 px-3\">Loading...</span>}\r\n\r\n                                    {_.map(projects?.milestones, (milestone) => (\r\n                                        <Listbox.Option\r\n                                            key={milestone.id}\r\n                                            className={({ active }) =>  `sp1-select-option ${styles.list_border}${ active ? 'active' : ''}`}\r\n                                            value={milestone}\r\n                                        >\r\n                                          {milestone?.milestone_title}\r\n                                        </Listbox.Option>\r\n                                    ))}\r\n                                </Listbox.Options>\r\n\r\n                                {error?.milestone && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {error?.milestone}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Listbox>\r\n                    </div>\r\n\r\n                    {/* Project Deliverable */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Project Deliverable\r\n                                    </label>\r\n                                    <div className=\"sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                        <span className=\"singleline-ellipsis\">{isFetchingMilestone ? 'Loading...' : _.find(projects?.milestones, d => d.id === milestone.id)?.deliverable_type}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                     {/*task.isSubtask && (\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group my-3\">\r\n                                <label\r\n                                    className={`f-14 text-dark-gray mb-1`}\r\n                                    data-label=\"true\"\r\n                                >\r\n                                    Parent Task\r\n                                </label>\r\n                                <input\r\n                                    className={`form-control height-35 f-14`}\r\n                                    readOnly\r\n                                    defaultValue={parentTask}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )} */}\r\n\r\n\r\n\r\n                    <div className=\"col-6\">\r\n\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Start Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={dayjs\r\n                                        .dayjs(task?.start_date)\r\n                                        .toDate()}\r\n                                    maxDate={\r\n                                        dueDate ||\r\n                                        dayjs.dayjs(task?.due_date).toDate()\r\n                                    }\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.start_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.start_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Due Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={\r\n                                        startDate ||\r\n                                        dayjs.dayjs(task?.start_date).toDate()\r\n                                    }\r\n                                    maxDate={dayjs\r\n                                        .dayjs(task?.due_date)\r\n                                        .toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.due_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.due_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <TaskCategorySelectionBox\r\n                            selected={taskCategory}\r\n                            onSelect={setTaskCategory}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <AssignedToSelection\r\n                            selected={assignedTo}\r\n                            onSelect={setAssignedTo}\r\n                        />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-6\">\r\n                        <PrioritySelection\r\n                            selected={priority}\r\n                            setSelected={setPriority}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className=\"f-14 text-dark-gray\">\r\n                                Set Estimate Time{\" \"}\r\n                                <sup className=\"f-14\"> * </sup>\r\n                            </label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeHour)\r\n                                    }\r\n                                />{\" \"}\r\n                                hrs\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeMin)\r\n                                    }\r\n                                />{\" \"}\r\n                                min\r\n                            </div>\r\n\r\n                            <div style={{ color: \"red\" }}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{ color: \"red\" }}>\r\n                                {/* {console.log({a: projects?.minutes_left})} */}\r\n                                Estimation time can't exceed{\" \"}\r\n                                {convertTime(Number(projects?.minutes_left) > 0 ? Number(projects?.minutes_left) : 0)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div\r\n                                className=\"sp1_st_write_comment_editor\"\r\n                                style={{ minHeight: \"100px\" }}\r\n                            >\r\n                                <CKEditorComponent\r\n                                    data={description}\r\n                                    onChange={handleEditorChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3 mb-5\">\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                className=\"mr-2\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n\r\n                            <Button\r\n                              onClick={handleSubmit}\r\n                              isLoading={isLoading}\r\n                            >\r\n                                <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Button from \"../../components/Button\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from \"../../components/Modal\";\r\n\r\nconst SubmitionView = ({ isOpen, close, toggle, data, isLoading }) => {\r\n    const links = _.compact(_.split(data?.links, ','));\r\n    const attaches = _.compact(_.split(data?.attaches, ',')); \r\n    const { width: deviceWidth } = useWindowSize();\r\n\r\n    const content = () => {\r\n        return(\r\n            <div className=\"sp1-subtask-form --modal-panel --modal-submitted\">\r\n                <div className=\"sp1-subtask-form --modal-panel-header\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <h6>Submitted Task </h6>\r\n                        {isLoading && (\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className=\"_close-modal\"\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body --modal-submitted-body\">\r\n                    <div className=\"mt-3 d-flex flex-column\" style={{ gap: \"10px\" }} >\r\n                        <div>\r\n                            <span className=\"fs-14 font-weight-bold d-block mb-3\" style={{ color: \"#767581\" }} >\r\n                                Submitted By\r\n                            </span>\r\n\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div>\r\n                                    {\r\n                                        data?.image ? (\r\n                                            <img\r\n                                            src={`/user-uploads/avatar/${data?.image}`}\r\n                                            alt={data?.name}\r\n                                            width={32}\r\n                                            height={32}\r\n                                            className=\"rounded-circle\"\r\n                                        />):(\r\n                                            <div className=\"sp1-item-center rounded-circle border\" style={{ width: '32px', height: '32px' }} >\r\n                                                <span className=\"font-weight-bold\" style={{fontSize:'1.2rem'}}>{data?.name?.slice(0,1)}</span>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"d-flex flex-column px-2\">\r\n                                    <a className=\"text-underline text-primary\" href={`/account/employees/${data?.user_id}`} style={{ color: \"#767581\" }} > {data?.name} </a>\r\n                                    <span className=\"d-block\" style={{ color: \"#767581\" }}>\r\n                                        {dayjs(data?.submission_date).format( \"MMM DD, YYYY\" )} at {dayjs(data?.submission_date).format(\"hh:mm a\" )}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex flex-column mt-3\" style={{ gap: \"10px\" }} >\r\n                            <span className=\"d-block fs-14 font-weight-bold\" style={{ color: \"#767581\" }} > Links </span>\r\n                            <ul style={{  listStyle: \"unset\", marginLeft: \"30px\"}} >\r\n                                {links?.map((link, i) => (\r\n                                    <li style={{ listStyle: \"unset\" }}  key={link + i} >\r\n                                        <a className=\"hover-underline text-primary\" target=\"_blank\" href={link} > {link} </a>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"mt-2 mt-3\">\r\n                            <span className=\"d-block fs-12 font-weight-bold mb-2\" style={{ color: \"#767581\" }}>\r\n                                Description\r\n                            </span>\r\n                            {data?.text ? (\r\n                                <div className=\"sp1_ck_content\" dangerouslySetInnerHTML={{ __html: data?.text }} />\r\n                            ) : (\r\n                                <span style={{ color: \"rgb(180, 188, 196)\" }}>\r\n                                    No description is available\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-3\">\r\n                            <span className=\"d-block fs-12 font-weight-bold mb-2\" style={{ color: \"#767581\" }}>\r\n                                Attached Files\r\n                            </span>\r\n\r\n                            {_.size(attaches) > 0 ? (\r\n                                <FileUploader>\r\n                                    {_.map(attaches, (file, index) => (\r\n                                        <FileUploader.Preview\r\n                                            key={`${file}_${index}`}\r\n                                            fileName={file}\r\n                                            downloadAble={true}\r\n                                            deleteAble={false}\r\n                                            downloadUrl={`${file}`}\r\n                                            previewUrl={`${file}`}\r\n                                            fileType={_.includes([\"png\",\"jpg\", \"jpeg\", \"gif\", \"svg\"], _.last(_.split(file, '.'))) ? 'images' : 'others'}\r\n                                            ext=\"\"\r\n                                        />\r\n                                    ))}\r\n                                </FileUploader>\r\n                                ) : (\r\n                                    <span\r\n                                        className=\"\"\r\n                                        style={{ color: \"rgb(180, 188, 196)\" }}\r\n                                    >\r\n                                        No Attachment is available\r\n                                    </span>\r\n                                )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(deviceWidth > 1200){\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        )\r\n    }else{\r\n        return (\r\n            <React.Fragment>\r\n                <Modal isOpen={isOpen}> { content() } </Modal> \r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SubmitionView;\r\n","import React from 'react'\r\nimport SubmitionView from './SubmitionView';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nconst WorkItem = ({data, toggle, modalRef, close, isLoading}) => { \r\n  const [searchParams] = useSearchParams();\r\n  const previewId = searchParams.get('submitted-work') || 0;\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\">\r\n        <div> \r\n            <a className='hover-underline text-primary' href={`/account/tasks/${data?.task_id}`}> Task#{data?.task_id} </a>\r\n            ({data?.submission_no}) submitted by <a className='hover-underline text-primary' href={`/account/employees/${data?.user_id}`}>{data?.name}</a> </div>\r\n\r\n        <div>{dayjs(data?.submission_date).format('MMM DD, YYYY')}</div>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?submitted-work=${data?.task_id}${data?.submission_no}`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n        </div> \r\n\r\n       {\r\n        Number(previewId) === Number(`${data?.task_id}${data?.submission_no}`) && \r\n        <SubmitionView\r\n            isOpen={Number(previewId) === Number(`${data?.task_id}${data?.submission_no}`)}\r\n            toggle={modalRef}\r\n            data={data}\r\n            close={close}\r\n            isLoading={isLoading}\r\n        />\r\n       } \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default WorkItem","import React from 'react'\r\nimport { User } from '../../../utils/user-details'\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nconst InnerWorkItem = ({data}) => { \r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item px-0 py-2\" styte={{gap: \"16px\"}}>\r\n        <div> \r\n            <a \r\n              className='hover-underline text-primary' \r\n              href={`/account/tasks/${data?.task_id}`}\r\n            > \r\n              Task#{data?.task_id} \r\n            </a>\r\n            ({data?.submission_no}) submitted by <a className='hover-underline text-primary' href={`/account/employees/${data?.user_id}`}>{data?.name}</a> </div>\r\n\r\n        <div>{dayjs(data?.submission_date).format('MMM DD, YYYY')}</div>  \r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?submitted-work=${data?.task_id}${data?.submission_no}`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n        </div> \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default InnerWorkItem","import React from 'react'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport Button from '../../components/Button'\r\nimport InnerWorkItem from './InnerWorkItem'\r\nimport Modal from '../../components/Modal'\r\nimport { useWindowSize } from 'react-use'\r\n\r\nconst SubmittedModalView = ({\r\n    isOpen, \r\n    toggle,\r\n    data,\r\n    close,\r\n    isLoading\r\n}) => {\r\n  const { width: deviceWidth } = useWindowSize();\r\n \r\n  const content = () => {\r\n        return(\r\n            <div className='sp1-subtask-form --modal-panel --modal-submitted'>\r\n                <div className='sp1-subtask-form --modal-panel-header'> \r\n                    <div className='d-flex align-items-center'>\r\n                        <h6>Submitted Task </h6>\r\n                        {isLoading && <div \r\n                            className=\"spinner-border text-dark ml-2\" \r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent' \r\n                            }}\r\n                        />}\r\n                    </div> \r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button> \r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body px-0\">\r\n                    {data?.map(d => (\r\n                        <InnerWorkItem key={`${d.task_id}_${d.submission_no}`} data={d} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n  }\r\n\r\n\r\n  return (\r\n        deviceWidth > 1200 ? \r\n        <React.Fragment>\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle} > {content()} </CustomModal>\r\n        </React.Fragment> : \r\n        <React.Fragment>\r\n            <Modal isOpen={isOpen}> { content() } </Modal> \r\n        </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SubmittedModalView","import * as React from 'react' \r\nimport WorkItem from './WorkItem';\r\nimport useSWR from 'swr';\r\nimport SubmitionView from './SubmitionView';\r\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport SubmittedModalView from './SubmittedModalView';\r\nimport _ from 'lodash';\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst SubmittedWork = ({task}) => { \r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const navigate = useNavigate(); \r\n  const location = useLocation();\r\n  const { data, error, isLoading } = useSWR(`/account/tasks/get-task-submissions/${task?.id}`, fetcher, {refreshInterval: 1000 * 3600});\r\n  const [searchParams] = useSearchParams();\r\n  const preview = searchParams.get('submitted-work');\r\n  const modal = searchParams.get('view-modal')\r\n    // control modal\r\n  const toggle = (e) => {\r\n    e.preventDefault();\r\n    if(preview || modal){\r\n      if(location.state && location.state.from){\r\n        navigate(location.state.from);\r\n      }else{navigate(`/account/tasks/${task?.id}`);} \r\n    }else{\r\n      navigate(`/account/tasks/${task?.id}?view-modal=submitted-work`) \r\n    }\r\n  };\r\n  const close = () => { \r\n    if(location.state && location.state.from){\r\n      navigate(location.state.from);\r\n    }else{navigate(`/account/tasks/${task?.id}`);} \r\n  }\r\n \r\n  return (\r\n    <div className='sp1_task_right_card mb-3'  \r\n    ref={setModalRefButton} \r\n    style={{zIndex:  (preview || modal === 'submitted-work') ? 99 : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Submitted Works</span> \r\n          {isLoading && \r\n            <div \r\n                className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                role=\"status\"\r\n                style={{\r\n                    width: '16px',\r\n                    height: '16px',\r\n                    border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                    borderRightColor: 'transparent' \r\n                }}\r\n            />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n       {\r\n        _.size(data) > 0 &&\r\n        <button \r\n            aria-label='openCommentModalButton'\r\n            className='sp1_task_right_dl_toggle'\r\n            onClick={toggle}\r\n            style={{zIndex:  (preview || modal === 'submitted-work') ? '110' : ''}}\r\n          >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ (preview || modal === 'submitted-work') ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>\r\n       } \r\n\r\n        <SubmittedModalView\r\n            isOpen={modal === 'submitted-work'}\r\n            toggle={modalRefButton}\r\n            data={_.orderBy(data, ['task_id', 'submission_no'], ['desc', 'desc'])}\r\n            close={close}\r\n            isLoading={isLoading}\r\n        />\r\n\r\n        {/* side drop toggle button end */} \r\n        <div className=\"sp1_task_right_card--body\"> \r\n        {\r\n          _.size(data) > 0 ? \r\n            _.map(_.orderBy(data, ['task_id', 'submission_no'], ['desc', 'desc']), item => (\r\n              <WorkItem \r\n                key={item?.submission_date + item?.submission_no} \r\n                data={item} \r\n                toggle={toggle} \r\n                close={close}\r\n                isLoading={isLoading}\r\n                modalRef={modalRefButton} \r\n              />\r\n            )):\r\n            <div\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{\r\n                    color: \"#B4BCC4\",\r\n                    fontSize: \"15px\",\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                No Submitted Work is Available\r\n            </div>\r\n        }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubmittedWork ","/* eslint-disable react/prop-types */\r\nimport { useState } from \"react\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport { convertTime } from \"../../../utils/converTime\";\r\nimport { Placeholder } from \"../../../global/Placeholder\";\r\nimport Checkbox from \"../../../UI/form/Cheeckbox\";\r\nimport { useSubmitDailySubmissionMutation } from \"../../../services/api/dailySubmissionApiSlice\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst TodaysUpdateModalTableRow = ({ data, date, index, open, setOpen, loading, refetch }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [attachmentLink, setAttachmentLink] = useState('');\r\n    const [checked, setChecked] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const [taskDescription, setTaskDescription] = useState('');\r\n    const [updatedValue,] = useState(null);\r\n    const [completedSection, setCompletedSection] = useState('');\r\n    const [submitDailySubmission, { isLoading: isSubmitting }] = useSubmitDailySubmissionMutation();\r\n    \r\n\r\n    // error state\r\n    const [attachmentLinkError, setAttachmentLinkError] = useState('');\r\n    const [taskDescriptionError, setTaskDescriptionError] = useState('');\r\n    const [completedSectionError, setCompletedSectionError] = useState('')\r\n\r\n    // check validation of attachmentLink and taskDescription\r\n    const isValid = () => {\r\n        let valid = true;\r\n        if (attachmentLink === '') {\r\n            setAttachmentLinkError('You must provide the link of your work');\r\n            valid = false;\r\n        }\r\n        if (taskDescription === '') {\r\n            setTaskDescriptionError(\"Please describe what you've done !\");\r\n            valid = false;\r\n        }\r\n        if (completedSection === '') {\r\n            setCompletedSectionError(\"You must provide at least one section name that you have completed\");\r\n            valid = false;\r\n        }\r\n        return valid;\r\n    }\r\n\r\n\r\n    // daily update submission function\r\n    const handleSubmit = () => {\r\n        if (!isValid()) {\r\n            return;\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('task_id', data.id);\r\n        formData.append('user_id', window.Laravel?.user?.id)\r\n        formData.append('project_id', data.projectId);\r\n        formData.append('task_heading', data.task_title);\r\n        formData.append('client_id', data.clientId);\r\n        formData.append('client_name', data.client_name);\r\n        formData.append('hours_spent', data.total_time_spent);\r\n        formData.append('link_name', attachmentLink);\r\n        formData.append('section_name', completedSection);\r\n        formData.append('comment', taskDescription);\r\n        formData.append('mark_as_complete', checked);\r\n        formData.append('report_date', date);\r\n        const _token = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\");\r\n        formData.append(\"_token\", _token);\r\n        files.forEach((file) => formData.append('file[]', file))\r\n\r\n\r\n        submitDailySubmission(formData)\r\n            .unwrap()\r\n            .then(res => {\r\n                // console.log(res);\r\n                if (res.mark_as_complete===\"true\" || res.mark_as_complete===true) {\r\n                    navigate(`${location.pathname}?modal=complete-task`);\r\n                }\r\n                const Toast = Swal.mixin({\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n                })\r\n\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'Submitted successfully'\r\n                })\r\n                setOpen(null);\r\n                refetch();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <tr\r\n                className={`sp1_tlr_tr ${open === index && 'openRow_bg'}`}\r\n                // style={{\r\n                //     backgroundColor: `${data.daily_submission_status ? 'lightgreen' : 'white'}`\r\n                // }}\r\n            >\r\n\r\n                <td className={`sp1_tlr_td`} style={{ minWidth: '50px' }}>{loading ? <Placeholder /> : index + 1}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : data?.task_title}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : \r\n                    data?.page_url ?\r\n                        <a href={data.page_url} title={data.page_url} target=\"_blank\">View Link</a>\r\n                        :\r\n                        'No Link attached'\r\n                }</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : convertTime(data.total_time_spent)}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : (data?.client_name ?? 'N/A')}</td>\r\n                <td className={`sp1_tlr_td`}>\r\n                    {\r\n                        loading ?\r\n                            <Placeholder />\r\n                            :\r\n                            <button\r\n                                onClick={() => {\r\n                                    if (data.daily_submission_status) {\r\n                                        return;\r\n                                    }\r\n                                    setOpen((prev) => {\r\n                                        if (prev === index) {\r\n                                            return null;\r\n                                        } else {\r\n                                            return index;\r\n                                        }\r\n                                    })\r\n                                }\r\n                                }\r\n                                className={`btn btn-sm ${data.daily_submission_status ? 'btn-success' : 'btn-outline-success'}`}\r\n                            >\r\n                                {\r\n                                    data.daily_submission_status ? 'Submitted' : 'Click To Submit'\r\n                                }\r\n                            </button>\r\n                    }\r\n                </td>\r\n            </tr>\r\n            {open === index && (\r\n                <tr className={``} style={{ border: \"solid gray 1px\", borderTop: \"none\" }}>\r\n                    <td colSpan={6}>\r\n                        <form className=\"from_body openRow_bg\">\r\n\r\n                            {/* completed section names */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionName\">\r\n                                    Completed Section Name <sup>*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Sections Name\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <input\r\n                                    value={completedSection}\r\n                                    type=\"text\"\r\n                                    id=\"sectionName\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        margin: '2px 0',\r\n                                        borderRadius: '3px',\r\n                                        border: 'none',\r\n                                        fontSize: '1.2rem',\r\n                                        padding: '10px',\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    onChange={(e) => setCompletedSection(e.target.value)}\r\n                                />\r\n                                {completedSectionError && <small className=\"form-text text-danger\">{completedSectionError}</small>}\r\n                            </div>\r\n\r\n                            {/* attachment url link */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionName\">\r\n                                    Screenshots/Screen records of the sections <sup>*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Sections Name\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <input\r\n                                    value={attachmentLink}\r\n                                    type=\"text\"\r\n                                    id=\"sectionName\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        margin: '2px 0',\r\n                                        borderRadius: '3px',\r\n                                        border: 'none',\r\n                                        fontSize: '1.2rem',\r\n                                        padding: '10px',\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    onChange={(e) => setAttachmentLink(e.target.value)}\r\n                                />\r\n                                {attachmentLinkError && <small className=\"form-text text-danger\">{attachmentLinkError}</small>}\r\n                            </div>\r\n\r\n                            {/* upload files */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput1\">\r\n                                    Attachments\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Attachment\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <FileUploader files={files} setFiles={setFiles}>\r\n                                    <FileUploader.Input />\r\n                                    <FileUploader.SelectedFiles>\r\n                                        {({ previews, onDelete }) =>\r\n                                            Array.from(previews)?.map(\r\n                                                (p, i) => (\r\n                                                    <FileUploader.Preview\r\n                                                        key={i}\r\n                                                        id={i}\r\n                                                        fileName={p.name}\r\n                                                        previewUrl={p.preview}\r\n                                                        fileType={p.type}\r\n                                                        onRemove={onDelete}\r\n                                                    />\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </FileUploader.SelectedFiles>\r\n                                </FileUploader>\r\n                            </div>\r\n                            {/* End Upload files */}\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput2\" style={{ maxWidth: '95%' }}>\r\n                                    Describe which sections you have worked on today <sup className=\"text-danger\">*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Describe What You've Done\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n\r\n                                <div\r\n                                    className=\"sp1_st_write_comment_editor\"\r\n                                    style={{ minHeight: \"100px\" }}\r\n                                >\r\n                                    <CKEditorComponent\r\n                                        value={taskDescription}\r\n                                        onChange={(e, editor) => {\r\n                                            const data = editor.getData();\r\n                                            setTaskDescription(data);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {taskDescriptionError && <small className=\"form-text text-danger\">{taskDescriptionError}</small>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <Checkbox checked={checked} onChange={(e) => setChecked(e.target.checked)} label={'Mark as Complete'} className=\"user-select-none\" />\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 d-flex align-items-center\" style={{ gap: '5px' }}>\r\n                                <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" />\r\n                                {/* <SubmitButton onClick={()=>{}} isLoading={false} title=\"Submit & Mark as Complete\"></SubmitButton> */}\r\n                            </div>\r\n                        </form>\r\n                    </td>\r\n                </tr>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodaysUpdateModalTableRow;\r\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./DailySubmission.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./DataTable.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { useState } from \"react\";\r\nimport TodaysUpdateModalTableRow from \"./TodaysUpdateModalTableRow\";\r\nimport style from \"./styles/DailySubmission.module.css\";\r\nimport \"./styles/DataTable.css\";\r\nimport { useGetDailySubmissionQuery } from \"../../../services/api/dailySubmissionApiSlice\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst TodaysUpdateModalTable = () => {\r\n    const [open, setOpen] = useState(null);\r\n    const [searchParams] = useSearchParams();\r\n    const date_type = searchParams.get(\"data_type\");\r\n\r\n    const loggedUser = new User(window.Laravel?.user);\r\n\r\n    const today = dayjs().format('YYYY-MM-DD');\r\n\r\n    const { data, isLoading, refetch } = useGetDailySubmissionQuery(\r\n        `${loggedUser?.id}?date_type=${today}`\r\n    ); \r\n     \r\n\r\n    return (\r\n        <div className={`sp1_tlr_tbl_wrapper`} style={{ overflow: \"auto\" }}>\r\n            <table className={`sp1_tlr_table`} style={{ minWidth: \"0\" }}>\r\n                <thead>\r\n                    <tr className={``}>\r\n                        <th className={`sp1_tlr_th`}>SL No.</th>\r\n                        <th className={`sp1_tlr_th`}>Task Name</th>\r\n                        <th className={`sp1_tlr_th`}>Page Link</th>\r\n                        <th className={`sp1_tlr_th`}>\r\n                            Total Time Spend on This Task Today\r\n                        </th>\r\n                        <th className={`sp1_tlr_th`}>Client Name</th>\r\n                        <th className={`sp1_tlr_th`} style={{ width: \"10rem\" }}>\r\n                            Action\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody className={`sp1_tlr_tbody`}>\r\n                    {/* {\r\n                        (isLoading ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] : data?.data).filter((d) => !d.daily_submission_status).map((d, i) => <TodaysUpdateModalTableRow data={d} key={i} index={i} open={open} setOpen={setOpen} loading={isLoading} />)\r\n                    } */}\r\n                    {(isLoading\r\n                        ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n                        : data?.data\r\n                    ).map((d, i) => (\r\n                        <TodaysUpdateModalTableRow\r\n                            data={d}\r\n                            date={data?.date}\r\n                            key={i}\r\n                            index={i}\r\n                            open={open}\r\n                            setOpen={setOpen}\r\n                            loading={isLoading}\r\n                            refetch={refetch}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodaysUpdateModalTable;\r\n","import { useState } from \"react\";\r\n// import { Button } from \"react-bootstrap\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport TodaysUpdateModalTable from \"../daily-submission/TodaysUpdateModalTable\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\"; \r\nimport dayjs from \"dayjs\";\r\n\r\nconst DailySubmissionControl = () => {\r\n    const [todaysUpdateModalisOpen, setTodaysUpdateModalisOpen] =\r\n        useState(false);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const url = new URLSearchParams(location.search);\r\n \r\n\r\n    const isOpen = url.get(\"modal\") === \"daily-submission\"; \r\n\r\n\r\n     \r\n\r\n    // console.log(location);\r\n\r\n    const close = () => {\r\n        if(url.get('trigger') === 'stop-button'){\r\n            Swal.fire({\r\n                icon: \"warning\",\r\n                title: \"If you don't submit the daily submission, you won't be able to start any task on next day.\",\r\n                showConfirmButton: true,\r\n            });\r\n        }\r\n\r\n        navigate(`${location.pathname}`);\r\n        setTodaysUpdateModalisOpen(false);\r\n    };\r\n    const open = () => navigate(`${location.pathname}?modal=daily-submission&data_type=today`);\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                // onClick={toggle}\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {/* {isFetching ? <Loader title=\"Processing...\" /> : <i className=\"fa-solid fa-check\" />} */}\r\n                <span className=\"d-inline ml-1\"> Submit Today's Update </span>\r\n            </Button>\r\n\r\n            <Modal isOpen={isOpen} className=\"sp1_mark-as--modal \">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_mark-as--modal-panel\"\r\n                        style={{ overflow: \"visible\", maxWidth: \"70rem\" }}\r\n                    >\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0\">Submit Today's Update</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"visible\" }}\r\n                        >\r\n                            <div className=\"alert alert-warning text-center\">\r\n                                If you don't submit the daily submission, you\r\n                                won't be able to start any task on next day.\r\n                            </div>\r\n\r\n                            {isOpen && <TodaysUpdateModalTable />}\r\n                            <div className=\"mt-3 d-flex align-items-center\">\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                    onClick={close}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                                {/* <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" /> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DailySubmissionControl;\r\n","import _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport CKEditorComponent from \"../../../ckeditor/index\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport {\r\n    useLazyCheckSubTaskStateQuery,\r\n    useMarkAsCompleteMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport Button from \"../../components/Button\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Modal from \"../../components/Modal\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\n\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport Swal from \"sweetalert2\";\r\n// import Swal from \"sweetalert2\";\r\n\r\nconst MarkAsComplete = ({ task, auth }) => {\r\n    // form data\r\n    const dispatch = useDispatch();\r\n    const [links, setLinks] = useState([\"\"]);\r\n    const [linkErr, setLinkErr] = useState(\"\");\r\n    const [isModalUrl, setIsModalUrl] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentErr, setCommentErr] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [markAsComplete, { isLoading: isSubmitting }] =\r\n        useMarkAsCompleteMutation();\r\n    const [checkSubTaskState, { isFetching }] = useLazyCheckSubTaskStateQuery();\r\n\r\n    const [markAsCompleteModaIsOpen, setMarkAsCompleteModalIsOpen] =\r\n        useState(false);\r\n\r\n    // open modal\r\n    const open = () => {\r\n        navigate(`${location.pathname}?modal=complete-task`);\r\n    };\r\n\r\n    // close modal\r\n    const close = () => {\r\n        navigate(`${location.pathname}`);\r\n    };\r\n\r\n    // const [err, setErr] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const url = new URLSearchParams(location.search);\r\n        if (url.get(\"modal\") === \"complete-task\") {\r\n            setIsModalUrl(true);\r\n        } else {\r\n            setIsModalUrl(false);\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        // const url = new URLSearchParams(location.search);\r\n\r\n        // if (url.get('modal')==='complete-task') {\r\n        if (isModalUrl) {\r\n            if (Number(auth.getRoleId()) === 6) {\r\n                checkSubTaskState(task?.id)\r\n                    .unwrap()\r\n                    .then((res) => {\r\n                        if (res.status === \"true\" || res.status === true) {\r\n                            // const htmlContent = (\r\n                            //     <div className=\"__tostar_modal\">\r\n                            //         <strong>\r\n                            //             You can't complete this task because you\r\n                            //             have some pending subtask?\r\n                            //         </strong>\r\n                            //         <ul className=\"py-1\">\r\n                            //             {res.subtasks.map((el, idx) => (\r\n                            //                 <li\r\n                            //                     key={el.id}\r\n                            //                     style={{\r\n                            //                         listStyle: \"unset\",\r\n                            //                         fontSize: \"13px\",\r\n                            //                     }}\r\n                            //                 >\r\n                            //                     <a\r\n                            //                         href={`/account/tasks/${el.id}`}\r\n                            //                     >\r\n                            //                         {idx + 1}. {el.heading}\r\n                            //                     </a>{\" \"}\r\n                            //                     (\r\n                            //                     <a\r\n                            //                         href={`/account/clients/${el.clientId}`}\r\n                            //                     >\r\n                            //                         {el.client_name}\r\n                            //                     </a>\r\n                            //                     )\r\n                            //                 </li>\r\n                            //             ))}\r\n                            //         </ul>\r\n                            //     </div>\r\n                            // );\r\n                            // toast.warn(htmlContent, {\r\n                            //     position: \"top-center\",\r\n                            //     icon: false,\r\n                            // });\r\n                            Swal.fire({\r\n                                icon:'warning',\r\n                                title:`You can't complete this task because you\r\n                                have some pending subtask?`\r\n                            })\r\n                            close();\r\n                        } else {\r\n                            setMarkAsCompleteModalIsOpen(true);\r\n                        }\r\n                    });\r\n            } else {\r\n                setMarkAsCompleteModalIsOpen(true);\r\n            }\r\n        } else {\r\n            setMarkAsCompleteModalIsOpen(false);\r\n        }\r\n        // }\r\n        // else{\r\n        //     setMarkAsCompleteModalIsOpen(false);\r\n        // }\r\n    }, [isModalUrl]);\r\n\r\n    // handle editor change\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // handle remove link\r\n    const handleRemoveLink = (e, index) => {\r\n        const _links = [...links];\r\n        _links.splice(index, 1);\r\n        setLinks(_links);\r\n    };\r\n\r\n    // handle link change\r\n    const handleOnLinkInputChange = (e, index) => {\r\n        const _links = [...links];\r\n        (_links[index] = e.target.value), setLinks(_links);\r\n    };\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n        let valid = true;\r\n        if (!_.size(links) || links[0] === \"\") {\r\n            setLinkErr(\"You must provide at least one link to your work\");\r\n            toast.warn(\"You must provide at least one link to your work\");\r\n            valid = false;\r\n        }\r\n\r\n        if (_.size(links)) {\r\n            _.forEach(links, (link) => {\r\n                if (!checkIsURL(link)) {\r\n                    toast.warn(\"Please provide a valid url\");\r\n                    setLinkErr(\"Please provide a valid url\");\r\n                    valid = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (comment === \"\") {\r\n            setCommentErr(\"Please describe what you've done !\");\r\n            toast.warn(\"Please describe what you've done!\");\r\n            valid = false;\r\n        }\r\n\r\n        return valid;\r\n    };\r\n\r\n    // handle submit\r\n    const handleSubmit = (e) => {\r\n        const formData = new FormData();\r\n        formData.append(\"text\", comment);\r\n        formData.append(\"user_id\", auth?.getId());\r\n        formData.append(\"task_id\", task?.id);\r\n        links.map((link) => formData.append(\"link[]\", link));\r\n        files?.map((file) => formData.append(\"file[]\", file));\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n\r\n        if (isValid()) {\r\n            markAsComplete(formData)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    // const Toast = Swal.mixin({\r\n                    //     toast: true,\r\n                    //     position: 'top-end',\r\n                    //     showConfirmButton: false,\r\n                    //     timer: 3000,\r\n                    //     timerProgressBar: true,\r\n                    // })\r\n\r\n                    // Toast.fire({\r\n                    //     icon: 'success',\r\n                    //     title: 'Task submitted successfully'\r\n                    // })\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: \"top-end\",\r\n                        showConfirmButton: false,\r\n                        timer: 3000,\r\n                        timerProgressBar: true,\r\n                    });\r\n\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: \"Task submitted successfully\",\r\n                    });\r\n                    close();\r\n                })\r\n                .catch((err)=>{\r\n                    close();\r\n                    console.log(err);\r\n                })\r\n                .finally(()=>{\r\n                  close();\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {isFetching ? (\r\n                    <Loader title=\"Processing...\" />\r\n                ) : (\r\n                    <i className=\"fa-solid fa-check\" />\r\n                )}\r\n                <span className=\"d-inline ml-1\">\r\n                    {\" \"}\r\n                    {isFetching ? \"\" : \"Mark As Complete\"}\r\n                </span>\r\n            </Button>\r\n\r\n            <Modal\r\n                isOpen={markAsCompleteModaIsOpen}\r\n                className=\"sp1_mark-as--modal\"\r\n            >\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div className=\"sp1_mark-as--modal-panel\">\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0\">Submit Task</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"unset\" }}\r\n                        >\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlInput1\">\r\n                                        Submit Links What You've Done\r\n                                        <sup>*</sup>\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Submit Links What You've Done\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n                                    {links?.map((link, i) => (\r\n                                        <div\r\n                                            key={i}\r\n                                            className=\"mark-as-compeleted-link mb-2\"\r\n                                        >\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control py-2\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                placeholder=\"--\"\r\n                                                value={link}\r\n                                                onChange={(e) =>\r\n                                                    handleOnLinkInputChange(\r\n                                                        e,\r\n                                                        i\r\n                                                    )\r\n                                                }\r\n                                            />\r\n\r\n                                            {links?.length > 1 && (\r\n                                                <button\r\n                                                    onClick={(e) =>\r\n                                                        handleRemoveLink(e, i)\r\n                                                    }\r\n                                                >\r\n                                                    <i className=\"fa-regular fa-trash-can\"></i>\r\n                                                </button>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n\r\n                                    {linkErr && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            class=\"form-text text-danger\"\r\n                                        >\r\n                                            {linkErr}\r\n                                        </small>\r\n                                    )}\r\n\r\n                                    <button\r\n                                        className=\"mt-2 d-flex align-items-center bg-transparent\"\r\n                                        style={{ gap: \"10px\" }}\r\n                                        onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            setLinks((prev) => [...prev, \"\"]);\r\n                                        }}\r\n                                    >\r\n                                        <i className=\"fa-solid fa-circle-plus\" />\r\n                                        Add Another Link\r\n                                    </button>\r\n                                </div>\r\n\r\n                                {/* upload files */}\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlInput1\">\r\n                                        Attachments\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Attachment\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n                                    <FileUploader\r\n                                        files={files}\r\n                                        setFiles={setFiles}\r\n                                    >\r\n                                        <FileUploader.Input />\r\n                                        <FileUploader.SelectedFiles>\r\n                                            {({ previews, onDelete }) =>\r\n                                                Array.from(previews)?.map(\r\n                                                    (p, i) => (\r\n                                                        <FileUploader.Preview\r\n                                                            key={i}\r\n                                                            id={i}\r\n                                                            fileName={p.name}\r\n                                                            previewUrl={\r\n                                                                p.preview\r\n                                                            }\r\n                                                            fileType={p.type}\r\n                                                            onRemove={onDelete}\r\n                                                        />\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        </FileUploader.SelectedFiles>\r\n                                    </FileUploader>\r\n                                </div>\r\n                                {/* End Upload files */}\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label\r\n                                        htmlFor=\"exampleFormControlInput1\"\r\n                                        style={{ maxWidth: \"95%\" }}\r\n                                    >\r\n                                        Mention clearly if anything asked in the\r\n                                        instruction couldn't be done or if there\r\n                                        is anything else your reporting boss\r\n                                        should know while approving or rejecting\r\n                                        this task<sup>*</sup>\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Describe What You've Done\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n\r\n                                    <div className=\"ck-editor-holder stop-timer-options\">\r\n                                        <CKEditorComponent\r\n                                            onChange={handleEditorChange}\r\n                                        />\r\n                                    </div>\r\n                                    {commentErr && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            class=\"form-text text-danger\"\r\n                                        >\r\n                                            {commentErr}\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"mt-3 d-flex align-items-center\">\r\n                                    <Button\r\n                                        variant=\"tertiary\"\r\n                                        className=\"ml-auto mr-2\"\r\n                                        onClick={close}\r\n                                    >\r\n                                        Close\r\n                                    </Button>\r\n                                    <SubmitButton\r\n                                        onClick={handleSubmit}\r\n                                        isLoading={isSubmitting}\r\n                                        title=\"Submit\"\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MarkAsComplete;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport { useRevision } from \"../../../../hooks/useRevision\";\r\nimport { useCreateRevisionMutation } from \"../../../../services/api/SingleTaskPageApi\";\r\nimport Button from \"../../../components/Button\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst RevisionCreationModal = ({ close, task, auth }) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [isDeniable, setIsDeniable] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const {\r\n        getLeadDeveloperAcknowladgementOptions,\r\n        getProjectManagerAcknowladgementOptions,\r\n    } = useRevision();\r\n    const { pathname } = useLocation();\r\n    const navigate = useNavigate();\r\n    // console.log({pathname});\r\n\r\n    const role = auth.getRoleId();\r\n\r\n    const revisionOptions =\r\n        (role === 1 || role === 4 || role === 8)\r\n            ? getProjectManagerAcknowladgementOptions()\r\n            : getLeadDeveloperAcknowladgementOptions();\r\n\r\n    const [createRevision, { isLoading }] = useCreateRevisionMutation();\r\n\r\n    // radio button change\r\n    const handleChange = (value) => {\r\n        setReason(value);\r\n    };\r\n\r\n    // editor change text\r\n    const handleEditorTextChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // validation\r\n    const validate = () => {\r\n        let errorCount = 0;\r\n\r\n        if (comment === \"\") {\r\n            errorCount++;\r\n            setCommentError(\r\n                \"You have to explain the revision in details, so that lead developer/developer can understand where they need to work.\"\r\n            );\r\n        }\r\n\r\n        if (!reason) {\r\n            errorCount++;\r\n            setReasonError(\"You have to select a reason from above options\");\r\n        }\r\n\r\n        return errorCount === 0;\r\n    };\r\n\r\n    // handle submission\r\n    const handleSubmission = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            task_id: task?.id,\r\n            user_id: auth?.id,\r\n            revision_acknowledgement: reason?.revision ?? \"\",\r\n            acknowledgement_id: reason?.id,\r\n            comment,\r\n            is_deniable: reason?.isDeniable ?? false,\r\n        };\r\n\r\n        if (validate()) {\r\n            createRevision(data)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: \"top-end\",\r\n                        showConfirmButton: false,\r\n                        timer: 3000,\r\n                        timerProgressBar: true,\r\n                    });\r\n\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: \"Task submitted for Revision successfully\",\r\n                    });\r\n                    navigate(`${pathname}`);\r\n                    close();\r\n                })\r\n                .catch((err) => console.log(err));\r\n        } else {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: \"top-end\",\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n            });\r\n\r\n            Toast.fire({\r\n                icon: \"error\",\r\n                title: \"Your forgot to fill up some required fields\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div\r\n                className=\"sp1_single_task--modal-panel\"\r\n                style={{ maxWidth: \"550px\" }}\r\n            >\r\n                <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                    <div className=\"font-weight-bold f-14\">\r\n                        Revision - Task: {task?.id}#\r\n                        {task?.title || task?.heading}\r\n                    </div>\r\n                    <Button onClick={close} className=\"\">\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <form className=\"px-3\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select Reason for Revision\r\n                            <sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {revisionOptions.map((option) => (\r\n                                <div\r\n                                    key={option.id}\r\n                                    className=\"form-check d-flex align-items-start mb-2\"\r\n                                >\r\n                                    <input\r\n                                        className=\"form-check-input mr-2\"\r\n                                        type=\"radio\"\r\n                                        name=\"exampleRadios\"\r\n                                        id={option.id}\r\n                                        required={true}\r\n                                        onChange={() => handleChange(option)}\r\n                                        value={option.revision}\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            marginTop: \"3px\",\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor={option.id}\r\n                                        style={{ marginBottom: \"3px\" }}\r\n                                    >\r\n                                        {option.revision}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {reasonError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {reasonError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Explain or Comment<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"ck-editor-holder\">\r\n                            <CKEditorComponent\r\n                                onChange={handleEditorTextChange}\r\n                            />\r\n                        </div>\r\n                        {commentError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {commentError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                onClick={close}\r\n                                variant=\"tertiary\"\r\n                                className=\"ml-auto mr-2\"\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                            <SubmitButton\r\n                                title=\"Submit\"\r\n                                onClick={handleSubmission}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RevisionCreationModal;\r\n","import React, {useState, lazy, Suspense} from 'react'\r\nimport Button from '../../../components/Button' \r\nimport Modal from '../../../components/Modal';\r\nimport { SingleTask } from '../../../../utils/single-task';\r\nimport RevisionCreationModal from './RevisionCreationModal';\r\n\r\nconst RevisionControl = ({task, auth}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const singleTask = new SingleTask(task)\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn sp1-st-revision-btn'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Need Revision</span>\r\n        </Button> \r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <RevisionCreationModal auth={auth} task={singleTask} close={() => setRevisionModal(false)} />\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RevisionControl\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport Button from \"../../../components/Button\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\n// button\r\nexport const AcceptAndContinueButton = ({ isLoading, onClick }) => {\r\n    if (!isLoading) {\r\n        return <Button onClick={onClick}>Accept & Continue</Button>;\r\n    } else {\r\n        <React.Fragment>\r\n            <Button className=\"cursor-processing\">\r\n                <div\r\n                    className=\"spinner-border text-white\"\r\n                    role=\"status\"\r\n                    style={{\r\n                        width: \"18px\",\r\n                        height: \"18px\",\r\n                    }}\r\n                />{\" \"}\r\n                Processing...\r\n            </Button>\r\n        </React.Fragment>;\r\n    }\r\n};\r\n\r\n// component\r\nexport const RevisionAcceptAndContinue = ({\r\n    task,\r\n    revision,\r\n    onSubmit,\r\n    close,\r\n    onNext,\r\n    isSubmitting = false,\r\n}) => {\r\n    const [comment, setComment] = useState(\"\");\r\n    const [err, setErr] = useState(\"\");\r\n\r\n    const handleEditorDataChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n        if(comment !== ''){\r\n            onSubmit({comment});\r\n        }else{\r\n            setErr(\"You have to Explain Why & How Did This Happen!\")\r\n        }\r\n    }\r\n\r\n    const auth = window?.Laravel?.user;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form action=\"\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Please Explain Why & How Did This Happen?{\" \"}\r\n                        <sup className=\"f-16 text-red\">*</sup>\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent onChange={handleEditorDataChange} />\r\n                    </div>\r\n                    {err && <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                        {err}\r\n                    </small>}\r\n\r\n                    <div className=\"mt-3 d-flex align-items-center\">\r\n                        <Button\r\n                            onClick={close}\r\n                            variant=\"tertiary\"\r\n                            className=\"ml-auto mr-2\"\r\n                        >\r\n                            Back\r\n                        </Button>\r\n\r\n                        {!isSubmitting ? (\r\n                            <React.Fragment>\r\n                                {_.includes([4, 6], auth?.role_id) ? (\r\n                                    <Button onClick={handleOnSubmit}>Next</Button>\r\n                                ): \r\n                                    <SubmitButton\r\n                                        title=\"Submit\" \r\n                                        isLoading={isSubmitting}\r\n                                        onClick={handleOnSubmit}\r\n                                    />\r\n                                }\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Button className=\"cursor-processing\">\r\n                                    <div\r\n                                        className=\"spinner-border text-white\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"18px\",\r\n                                            height: \"18px\",\r\n                                        }}\r\n                                    />{\" \"}\r\n                                    Processing...\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport Button from '../../../components/Button'\r\nimport { AcceptAndContinueButton } from './RevisionAcceptAndContinue'\r\nimport { Placeholder } from '../../../../global/Placeholder'\r\nimport { User } from '../../../../utils/user-details'\r\nimport SubmitButton from '../../../components/SubmitButton'\r\n\r\nconst RevisionView = ({revision, isLoading, onAccept, onDeny, onContinue, isContinue}) => {\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    const getComment = () => {\r\n        const roleId = auth?.getRoleId();\r\n        if(roleId === 6 || roleId === 9 || roleId === 10){\r\n            return revision?.pm_comment;\r\n        }else {\r\n            return revision?.lead_comment;\r\n        }\r\n    }\r\n    const comment = getComment();\r\n    if(isLoading){\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <div>\r\n                        <Placeholder width='450px' className='mb-2' />\r\n                        <Placeholder width='100px' className='mb-3' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='st_revision_comment mb-4'>\r\n\r\n                    {isLoading &&\r\n                        <div>\r\n                            <Placeholder width='100%' className='mb-2' />\r\n                            <Placeholder width='100%' className='mb-2' />\r\n                            <Placeholder width='30%' className='mb-2' />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }else if(!comment && !isLoading){\r\n        return null;\r\n    }else{\r\n        return (\r\n            <React.Fragment>\r\n                {revision?.revision_acknowledgement &&\r\n                    <div>\r\n                        {!isLoading ? (\r\n                            <p>\r\n                                <span className='font-weight-bold text-danger f-16'>Reason: </span>\r\n                                { revision?.revision_acknowledgement ?? revision?.revision_reason }\r\n                            </p>\r\n                        ): <div>\r\n                            <Placeholder width='450px' className='mb-2' />\r\n                            <Placeholder width='100px' className='mb-3' />\r\n                        </div>}\r\n                    </div>\r\n                }\r\n\r\n                <div className='st_revision_comment'>\r\n                    {!isLoading && <div className='sp1_ck_content' dangerouslySetInnerHTML={{__html: comment}} />}\r\n\r\n                    {isLoading &&\r\n                        <div>\r\n                            <Placeholder width='100%' className='mb-2' />\r\n                            <Placeholder width='100%' className='mb-2' />\r\n                            <Placeholder width='30%' className='mb-2' />\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"mt-4 mb-2 d-flex align-items-center\">\r\n                   {!isLoading && (\r\n                        revision?.is_deniable ? (\r\n                            <React.Fragment>\r\n                                <Button onClick={onDeny} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                    Deny & Continue\r\n                                </Button>\r\n\r\n                                <AcceptAndContinueButton\r\n                                    onClick={onAccept}\r\n                                    isLoading={false}\r\n                                />\r\n                            </React.Fragment>\r\n                        ):\r\n                            <React.Fragment>\r\n                                <div className='ml-auto'>\r\n                                <SubmitButton\r\n                                    onClick={onContinue}\r\n                                    variant=\"primary\"\r\n                                    isLoading={isContinue}\r\n                                    title=\"Continue\"\r\n                                />\r\n                                </div>\r\n                            </React.Fragment>\r\n                    )\r\n                   }\r\n                </div>\r\n            </React.Fragment>\r\n          )\r\n    }\r\n\r\n}\r\n\r\nexport default RevisionView\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport _ from \"lodash\";\r\n\r\nconst options = [\r\n    {\r\n        id: \"LDRx10\",\r\n        revision: \"I overlooked a few things while checking\",\r\n        isDeniable: true,\r\n    },\r\n    {\r\n        id: \"LDRx11\",\r\n        revision: \"I couldn't understand a few things in the instruction\",\r\n        isDeniable: false,\r\n    },\r\n];\r\n\r\nconst AssigneeRevisionToDev = ({\r\n    task,\r\n    onBack,\r\n    onSubmit,\r\n    revision,\r\n    type = false,\r\n    isSubmitting = false,\r\n}) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comments, setComments] = useState([]);\r\n    const [commentError, setCommentError] = useState(false);\r\n    const [subtasks, setSubtasks] = useState([]);\r\n    const [subtaskError, setSubtaskError] = useState(\"\");\r\n    const [isDeniable, setIsDeniable] = useState(false);\r\n\r\n    // radio button change\r\n    const handleChange = (value) => {\r\n        setReason(value);\r\n    };\r\n\r\n    // editor change text\r\n    const hanldeEditorTextChange = (e, editor, id) => {\r\n        const data = editor.getData();\r\n        const _comments = [...comments];\r\n\r\n        const index = _comments?.findIndex((d) => d.subtask_id === id);\r\n        if (index === -1) {\r\n            _comments.push({\r\n                id: id,\r\n                subtask_id: id,\r\n                comment: data,\r\n                acknowledgement_id: reason?.id ?? \"\",\r\n            });\r\n        } else {\r\n            _comments[index] = {\r\n                id: id,\r\n                subtask_id: id,\r\n                comment: data,\r\n                acknowledgement_id: reason?.id ?? \"\",\r\n            };\r\n        }\r\n\r\n        setComments([..._comments]);\r\n    };\r\n\r\n    // validation\r\n    const validate = () => {\r\n        let errorCount = 0;\r\n        if (reason === null && revision?.is_deniable && type) {\r\n            errorCount++;\r\n            setReasonError(\"You have to select a reason from below options\");\r\n        }\r\n\r\n        if (_.size(task?.subtask) > 0) {\r\n            if (subtasks.length === 0) {\r\n                errorCount++;\r\n                setSubtaskError(\r\n                    \"You need to selecd at least one sub task to continue.\"\r\n                );\r\n            }\r\n\r\n            if (comments.length === 0 || comments.length !== subtasks.length) {\r\n                errorCount++;\r\n                setCommentError(true);\r\n            }\r\n\r\n            comments?.map((comment) => {\r\n                if (comment?.comment === \"\") {\r\n                    errorCount++;\r\n                    setCommentError(true);\r\n                }\r\n            });\r\n        }\r\n\r\n        return errorCount === 0 ? true : false;\r\n    };\r\n\r\n    // handle submiton\r\n    const handleSubmition = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            task_id: task?.id,\r\n            reason: reason?.revision,\r\n            comments,\r\n            is_deniable: reason?.isDeniable ?? false,\r\n        };\r\n        if (validate()) {\r\n            onSubmit(data);\r\n        }\r\n    };\r\n\r\n    const onBackButtonClick = (e) => {\r\n        e.preventDefault();\r\n        onBack();\r\n    };\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form action=\"\">\r\n                {revision?.is_deniable !== 0 && type ? (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Revision Acknowledgement\r\n                            <sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {_.map(options, (revision) => (\r\n                                <div\r\n                                    key={revision.id}\r\n                                    className=\"form-check d-flex align-items-start mb-2\"\r\n                                >\r\n                                    <input\r\n                                        className=\"form-check-input mr-2\"\r\n                                        type=\"radio\"\r\n                                        name=\"exampleRadios\"\r\n                                        id={revision.id}\r\n                                        required={true}\r\n                                        onChange={() => handleChange(revision)}\r\n                                        value={revision.revision}\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            marginTop: \"3px\",\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor={revision.id}\r\n                                        style={{ marginBottom: \"3px\" }}\r\n                                    >\r\n                                        {revision.revision}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {reasonError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {reasonError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n                ) : null}\r\n\r\n                {task?.taskSubTask?.length > 0 && (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select SubTask\r\n                            <sup className=\"font-weight-bold f-16\">*</sup> :\r\n                        </label>\r\n                        <SubtaskSelectionMenu\r\n                            task={task}\r\n                            subTasks={subtasks}\r\n                            setSubtasks={setSubtasks}\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n                {subtasks?.length > 0 && (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Comment:\r\n                        </label>\r\n                        {subtasks.map((s, i) => (\r\n                            <React.Fragment key={s.subtask_id}>\r\n                                <div className=\"form-group\">\r\n                                    <label\r\n                                        htmlFor=\"\"\r\n                                        className=\"font-weight-bold\"\r\n                                    >\r\n                                        {i + 1}. Task: {s?.title}\r\n                                    </label>{\" \"}\r\n                                    <br />\r\n                                    <label className=\"font-weight-bold\">\r\n                                        Write Your Revision\r\n                                        <sup className=\"font-weight-bold f-16\">\r\n                                            *\r\n                                        </sup>\r\n                                        :{\" \"}\r\n                                    </label>\r\n                                    <div className=\"ck-editor-holder\">\r\n                                        <CKEditorComponent\r\n                                            onChange={(e, editor) =>\r\n                                                hanldeEditorTextChange(\r\n                                                    e,\r\n                                                    editor,\r\n                                                    s?.subtask_id\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    {commentError && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            className=\"form-text text-danger\"\r\n                                        >\r\n                                            You have to explain the revision in\r\n                                            details, so that Developer can\r\n                                            understand where they need to work.\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"mt-3 mb-3 d-flex align-items-center\">\r\n                    {/* <Button\r\n                        onClick={onBackButtonClick}\r\n                        variant=\"tertiary\"\r\n                        className=\"ml-auto mr-2\"\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                     */}\r\n                    <NextAndContinueButton\r\n                        onClick={handleSubmition}\r\n                        isLoading={isSubmitting}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AssigneeRevisionToDev;\r\n\r\nconst NextAndContinueButton = ({ onClick, isLoading }) => {\r\n    if (!isLoading) {\r\n        return (\r\n            <Button className=\"ml-auto\" onClick={onClick}>\r\n                {\" \"}\r\n                Continue\r\n            </Button>\r\n        );\r\n    } else {\r\n        return (\r\n            <Button className=\"cursor-processing ml-auto\">\r\n                <div\r\n                    className=\"spinner-border text-white mr-2\"\r\n                    role=\"status\"\r\n                    style={{\r\n                        width: \"18px\",\r\n                        height: \"18px\",\r\n                    }}\r\n                />\r\n                Processing...\r\n            </Button>\r\n        );\r\n    }\r\n};\r\n\r\n// sub task selection menu\r\nconst SubtaskSelectionMenu = ({ task, subTasks, setSubtasks }) => {\r\n    return (\r\n        <div className=\"position-relative\">\r\n            <Listbox value={subTasks} onChange={setSubtasks} multiple>\r\n                <Listbox.Button className=\"position-relative w-100 bg-white py-2 pl-2 pr-1 border d-flex align-items-center justify-content-between\">\r\n                    <span\r\n                        className=\"w-100 mr-auto text-left d-flex flex-wrap align-items-center\"\r\n                        style={{ gap: \"6px\" }}\r\n                    >\r\n                        {subTasks?.length > 0\r\n                            ? subTasks.map((s) => (\r\n                                  <span\r\n                                      key={s.subtask_id}\r\n                                      className=\"badge badge-light\"\r\n                                      style={{ fontSize: \"13px\" }}\r\n                                  >\r\n                                      {\" \"}\r\n                                      {s?.title}{\" \"}\r\n                                  </span>\r\n                              ))\r\n                            : \"Select Subtasks\"}\r\n                    </span>\r\n                    <HiOutlineSelector />\r\n                </Listbox.Button>\r\n                <Listbox.Options\r\n                    className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                    style={{\r\n                        zIndex: 10,\r\n                        maxHeight: \"350px\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {task?.taskSubTask?.length > 0 ? (\r\n                        task?.taskSubTask?.map((s) => (\r\n                            <Listbox.Option\r\n                                value={s}\r\n                                key={s.subtask_id}\r\n                                tabIndex={-1}\r\n                                className={({ active }) =>\r\n                                    active\r\n                                        ? \"task-selection-list-option active\"\r\n                                        : \"task-selection-list-option\"\r\n                                }\r\n                            >\r\n                                {({ selected }) => (\r\n                                    <React.Fragment>\r\n                                        <div>{s.title} <span className=\"badge badge-success\">{s.assigned_to_name}</span></div>\r\n                                        {selected && (\r\n                                            <div>\r\n                                                <i className=\"fa-solid fa-check\"></i>\r\n                                            </div>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                )}\r\n                            </Listbox.Option>\r\n                        ))\r\n                    ) : (\r\n                        <div>No Data Found</div>\r\n                    )}\r\n                </Listbox.Options>\r\n            </Listbox>\r\n        </div>\r\n    );\r\n};\r\n","import React, {useState} from 'react'\r\nimport Button from '../../../components/Button';\r\nimport CKEditorComponent from '../../../../ckeditor';\r\nimport SubmitButton from '../../../components/SubmitButton';\r\nimport { User } from '../../../../utils/user-details';\r\n\r\n\r\n\r\nconst denyOptions = (type) => {\r\n    switch(type){\r\n        case 'lead_dev': \r\n            return ([\r\n                {id: 'deny1', title: 'The project manager added new things in the instruction which was not part of the original instruction'},\r\n                {id: 'deny2', title: 'The way the project manager is interpreting his original instruction now was not possible to understand from what his writing'}\r\n            ])\r\n        case 'dev':\r\n            return([\r\n                {id: 'deny1', title: 'The lead developer added new things in the instruction which was not part of the original instruction'},\r\n                {id: 'deny2', title: 'The way the lead developer is interpreting his original instruction now was not possible to understand from what his writing'}\r\n            ])\r\n        default: []\r\n    }\r\n}\r\n\r\n\r\n\r\nconst DenyAndContinue = ({onSubmit, isSubmitting, onBack, task}) => {\r\n    const auth = new User(window?.Laravel?.user);\r\n    const [reason, setReason] = useState(\"\");\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [err, setErr] = useState(null);\r\n\r\n    const handleEditorDataChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // radio button change\r\n    const handleChange = (e) => {\r\n        setReason(e.target.value);\r\n    };\r\n\r\n     // validation\r\n     const validate = () => {\r\n        let errorCount = 0;\r\n        \r\n        if(comment === \"\"){\r\n             errorCount++;\r\n             setCommentError('You have to explain the revision in details, so that lead developer/developer can understand where they need to work.')     \r\n        }\r\n \r\n        if(reason === ''){\r\n             errorCount++;\r\n             setReasonError('You have to select a reason from above options')\r\n        }\r\n \r\n        return errorCount === 0; \r\n     }\r\n\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            onSubmit({\r\n                comment,\r\n                denyReason: reason\r\n            });\r\n        }else{\r\n            setErr(\"You have to Explain Why Did You Deny!\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const options = auth?.getRoleId() === 6 ? denyOptions('lead_dev') : denyOptions('dev');\r\n    return (\r\n        <React.Fragment>  \r\n            <form action=\"\">\r\n                {/* reason for deny */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Select reason for deny<sup className=\"f-16\">*</sup> :\r\n                    </label>\r\n                    <div className=\"px-3\">\r\n                        {options.map(option => (\r\n                            <div key={option.id} className=\"form-check d-flex align-items-start mb-2\">\r\n                                <input\r\n                                    className=\"form-check-input mr-2\"\r\n                                    type=\"radio\"\r\n                                    name=\"exampleRadios\"\r\n                                    id={option.id}\r\n                                    required= {true}\r\n                                    onChange={handleChange}\r\n                                    value={option.title}\r\n                                    style={{\r\n                                        width: \"16px\",\r\n                                        height: \"16px\",\r\n                                        marginTop: \"3px\",\r\n                                    }}\r\n                                    \r\n                                />\r\n                                <label\r\n                                    className=\"form-check-label\"\r\n                                    htmlFor={option.id}\r\n                                    style={{ marginBottom: \"3px\" }}\r\n                                >\r\n                                    {option.title}\r\n                                </label>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    {reasonError && <small id=\"emailHelp\" className=\"form-text text-danger\">{reasonError}</small>}\r\n                </div>\r\n\r\n\r\n                {/* rich editor  */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Please Explain Why Did You Deny? <sup className=\"f-16 text-red\">*</sup>\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent onChange={handleEditorDataChange} />\r\n                    </div>\r\n                    {commentError && <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                        {commentError}\r\n                    </small>} \r\n                </div>\r\n\r\n                <div className=\"mt-3 d-flex align-items-center\">\r\n                        <Button onClick={onBack} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                            Back\r\n                        </Button>\r\n\r\n                        {!isSubmitting ? (\r\n                            <React.Fragment>\r\n                                <React.Fragment>\r\n                                {_.includes([4, 6], auth?.getRoleId()) ? (\r\n                                    <Button onClick={handleOnSubmit}>Next</Button>\r\n                                ): \r\n                                    <SubmitButton\r\n                                        title=\"Submit\" \r\n                                        isLoading={isSubmitting}\r\n                                        onClick={handleOnSubmit}\r\n                                    />\r\n                                }\r\n                            </React.Fragment>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Button className=\"cursor-processing\">\r\n                                    <div\r\n                                        className=\"spinner-border text-white\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"18px\",\r\n                                            height: \"18px\",\r\n                                        }}\r\n                                    />{\" \"}\r\n                                    Processing...\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default DenyAndContinue","import React, {useState} from 'react'\r\nimport Button from '../../../components/Button'\r\nimport RevisionView from './RevisionView'\r\nimport { RevisionAcceptAndContinue } from './RevisionAcceptAndContinue';\r\nimport AssigneeRevisionToDev from './AssigneeRevisionToDev';\r\nimport DenyAndContinue from './DenyAndContinue';\r\nimport { useGetRevisionDetailsQuery, useRevisionAcceptOrDenyMutation } from '../../../../services/api/SingleTaskPageApi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setTaskStatus } from '../../../../services/features/subTaskSlice';\r\nimport { User } from '../../../../utils/user-details';\r\n\r\nconst DeveloperRevisionView = ({task, close}) => {\r\n  const [show, setShow] = useState(\"REVISION\");\r\n  const [accept, setAccept] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { data: revision, isFetching: isFetchingRevision } = useGetRevisionDetailsQuery(task?.id);\r\n  const [revisionAcceptOrDeny, {isLoading: isLoadingRevisionReview}] = useRevisionAcceptOrDenyMutation();\r\n  const auth = new User(window?.Laravel?.user);\r\n\r\n  // handle Accept and continue submission\r\n  const handleAcceptAndContinueSubmission = (data, type) => {\r\n\r\n    const _data = {\r\n        comment: data?.comment ?? '',\r\n        deny_reason: data?.denyReason ?? '',\r\n        task_id: task?.id,\r\n        user_id: auth?.getId(),\r\n        revision_id: revision?.id,\r\n        mode: data?.continue ? 'continue' : accept\r\n    }\r\n\r\n\r\n    revisionAcceptOrDeny(_data)\r\n    .unwrap()\r\n    .then(res => {\r\n        if(_.includes([4, 6], auth?.getRoleId())){\r\n            setShow(type);\r\n        }else{\r\n            dispatch(setTaskStatus(res?.task_status));\r\n            close();\r\n        }\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n\r\n  // generate modal title by user role id\r\n\r\n  const generateModalTitle = () => {\r\n    if(auth.getRoleId() === 4){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Lead Developer\":\"Revision By Project Manager/Top Management\";\r\n    }else if(auth.getRoleId() === 6){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Developer\":\"Revision By Project Manager/Top Management\";\r\n    }else if(auth.getRoleId() === 9 || auth.getRoleId() === 10){\r\n        return \"Revision By Project Manager/Top Management\";\r\n    }else return \"Revision By Lead Developer\"\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <div\r\n            className=\"sp1_single_task--modal-panel\"\r\n            style={{ maxWidth: \"550px\" }}\r\n        >\r\n            <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                <div className=\"font-weight-bold f-16\">\r\n                    Task#{task?.id}: {\" \"} {generateModalTitle()}\r\n                </div>\r\n                <Button onClick={close} className=\"\">\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"px-3\">\r\n               {show === 'REVISION' &&\r\n                    <RevisionView\r\n                        revision={revision}\r\n                        isLoading= {isFetchingRevision}\r\n                        isContinue={isLoadingRevisionReview}\r\n                        onAccept={() => {\r\n                            setAccept('accept');\r\n                            setShow('ACCEPT_AND_CONTINUE');\r\n                        }}\r\n                        onDeny={() => {\r\n                            setAccept(\"deny\");\r\n                            setShow('DENY_AND_CONTINUE')\r\n                        }}\r\n\r\n                        onContinue={() => {\r\n                            setAccept('continue')\r\n                            handleAcceptAndContinueSubmission({continue: true}, '')\r\n                        }}\r\n\r\n                    />\r\n                }\r\n\r\n                {\r\n                    show === 'ACCEPT_AND_CONTINUE' &&\r\n                    <RevisionAcceptAndContinue\r\n                        task={task}\r\n                        isSubmitting={isLoadingRevisionReview}\r\n                        onSubmit={data => handleAcceptAndContinueSubmission(data, \"ASSIGNEE_TO_DEV\")}\r\n                        close={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n\r\n                {show === \"DENY_AND_CONTINUE\" &&\r\n                    <DenyAndContinue\r\n                        task={task}\r\n                        onSubmit={data => handleAcceptAndContinueSubmission(data, \"DENY_ASSIGNEE_TO_DEV\")}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default DeveloperRevisionView\r\n","import _ from 'lodash';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { useGetRevisionDetailsQuery, useRevisionAcceptOrDenyByLeadDeveloperMutation } from '../../../../services/api/SingleTaskPageApi';\r\nimport { User } from '../../../../utils/user-details';\r\nimport Button from '../../../components/Button';\r\nimport AssigneeRevisionToDev from './AssigneeRevisionToDev';\r\nimport DenyAndContinue from './DenyAndContinue';\r\nimport { RevisionAcceptAndContinue } from './RevisionAcceptAndContinue';\r\nimport RevisionView from './RevisionView';\r\n\r\n\r\nconst RevisionViewModal = ({task, close}) => {\r\n  const [show, setShow] = useState(\"REVISION\");\r\n  const [accept, setAccept] = useState('');\r\n  const [comment, setComment] = useState('');\r\n  const [denyReason, setDenyReason] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { data: revision, isFetching } = useGetRevisionDetailsQuery(task?.id);\r\n//   const [revisionAcceptOrDeny, {isLoading: isLoadingRevisionReview}] = useRevisionAcceptOrDenyMutation();\r\n  const auth = new User(window?.Laravel?.user);\r\n  const [\r\n    revisionAcceptOrDeny,\r\n    {isLoading: isLoadingRevisionReview}\r\n  ] = useRevisionAcceptOrDenyByLeadDeveloperMutation();\r\n\r\n  // handle Accept and continue submition\r\n  const hanldeAcceptAndContinueSubmition = (data, type) => {\r\n    setComment(data);\r\n    setShow(type);\r\n  }\r\n\r\n   // handle Accept and continue submition\r\n   const hanldeDenyAndContinueSubmition = (data, type) => {\r\n    setComment(data);\r\n    setDenyReason(data?.denyReason);\r\n    setShow(type);\r\n  }\r\n\r\n\r\n  const handleOnSubmit = async (data, type) =>{\r\n    let fdata ={\r\n        comment: comment?.comment ?? '',\r\n        task_id: data?.task_id,\r\n        project_id: task?.projectId,\r\n        user_id: auth?.getId(),\r\n        subTask: _.map(data?.comments, comment => ({...comment, is_deniable: data?.is_deniable})),\r\n        revision_acknowledgement: data?.reason ?? '',\r\n        revision_id: revision?.id,\r\n        mode: data?.continue ? 'continue' : accept,\r\n        deny_reason: denyReason ?? '',\r\n        is_deniable: data?.is_deniable ?? false,\r\n    }\r\n\r\n\r\n    const params = (!data?.continue && accept===\"deny\") ? 'deny-continue' :'accept-continue';\r\n\r\n    await revisionAcceptOrDeny({fdata, params})\r\n    .unwrap()\r\n    .then(res => {\r\n        toast.success('Your request has been successfully processed')\r\n        close();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  const handleContinueButton = () => {\r\n    setAccept('continue');\r\n    if(_.size(revision?.taskSubTask) === 0){\r\n        setShow('DENY_ASSIGNEE_TO_DEV');\r\n    }else{\r\n        handleOnSubmit({\r\n            continue: true,\r\n        }, '')\r\n    }\r\n  }\r\n\r\n\r\n  const generateModalTitle = () => {\r\n    if(auth.getRoleId() === 4){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Lead Developer\":\"Revision By Project Manager\";\r\n    }else if(auth.getRoleId() === 6){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Developer\":\"Revision By Project Manager\";\r\n    }else if(auth.getRoleId() === 9 || auth.getRoleId() === 10){\r\n        return \"Revision By Project Manager\";\r\n    }else return \"Revision By Lead Developer\"\r\n  }\r\n\r\n\r\n\r\n\r\n//   console.log({task})\r\n  return (\r\n    <React.Fragment>\r\n        <div\r\n            className=\"sp1_single_task--modal-panel\"\r\n            style={{ maxWidth: \"550px\" }}\r\n        >\r\n            <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                <div className=\"font-weight-bold f-16\">\r\n                    Task#{task?.id}:\r\n                    {generateModalTitle()}\r\n                </div>\r\n                <Button onClick={close} className=\"\">\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"px-3\">\r\n               {show === 'REVISION' &&\r\n                    <RevisionView\r\n                        revision={revision}\r\n                        isLoading= {isFetching}\r\n                        isContinue={isLoadingRevisionReview}\r\n                        onAccept={() => {\r\n                            setAccept('accept');\r\n                            setShow('ACCEPT_AND_CONTINUE');\r\n                        }}\r\n                        onDeny={() => {\r\n                            setAccept('deny');\r\n                            setShow('DENY_AND_CONTINUE')\r\n                        }}\r\n                        onContinue={handleContinueButton}\r\n                    />\r\n                }\r\n\r\n                {\r\n                    show === 'ACCEPT_AND_CONTINUE' &&\r\n                    <RevisionAcceptAndContinue\r\n                        task={task}\r\n                        isSubmitting={isLoadingRevisionReview}\r\n                        onSubmit={data => hanldeAcceptAndContinueSubmition(data, \"ASSIGNEE_TO_DEV\")}\r\n                        close={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n\r\n                {show === \"ASSIGNEE_TO_DEV\" &&\r\n                    <AssigneeRevisionToDev\r\n                        task={task}\r\n                        revision={revision}\r\n                        type={true}\r\n                        onSubmit={(data) =>handleOnSubmit( data, 'ASSIGNEE_TO_DEV' )}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"ACCEPT_AND_CONTINUE\")}\r\n                    />\r\n                }\r\n\r\n                {show === \"DENY_AND_CONTINUE\" &&\r\n                    <DenyAndContinue\r\n                        task={task}\r\n                        onSubmit={data => hanldeDenyAndContinueSubmition(data, \"DENY_ASSIGNEE_TO_DEV\")}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n\r\n\r\n                {_.size(task?.taskSubTask) > 0 && show === \"DENY_ASSIGNEE_TO_DEV\" &&\r\n                    <AssigneeRevisionToDev\r\n                        task={task}\r\n                        revision={revision}\r\n                        type={false}\r\n                        onSubmit={(data) => handleOnSubmit(data, 'DENY_ASSIGNEE_TO_DEV')}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"DENY_AND_CONTINUE\")}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default RevisionViewModal\r\n","import React, { useState } from 'react';\r\nimport Button from '../../../components/Button';\r\nimport Modal from '../../../components/Modal';\r\nimport DeveloperRevisionView from './DeveloperRevisionView';\r\nimport RevisionViewModal from './RevisionViewModal';\r\n\r\nconst RevisionViewControl = ({task, auth, status}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const singleTask = task;\r\n\r\n    console.log({task})\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn --view-revision'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Revision</span>\r\n        </Button>\r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                {\r\n                    // check is subtask\r\n                    task?.hasSubtask ?\r\n                    <RevisionViewModal\r\n                        task={singleTask}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                    :\r\n                    <DeveloperRevisionView\r\n                        task={task}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n        </Modal>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RevisionViewControl\r\n","import React from 'react'\r\n\r\nexport default function GuideLineText() {\r\n\r\n    const html = `<html><head><meta content=\"text/html; charset=UTF-8\" http-equiv=\"content-type\"><style type=\"text/css\">ol{margin:0;padding:0}table td,table th{padding:0}.c4{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c5{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c2{height:11pt}.c3{font-style:italic}.c1{font-weight:700}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class=\"c5 doc-content\"><p class=\"c0\"><span>Other than all the old fields, we have introduced the task type and page type fields in the new subtask creation form. Here is a guide for you so you know when to choose which one: <br><br></span><span class=\"c1\">1. New page design:</span><span>&nbsp;When you are going to need any new pages developed (except for cloning for example duplicating a service page to create 20 more service pages and cases like this), you should select this one. It has 2 subdivisions in the next field: <br><br></span><span class=\"c1\">A. Primary page development:</span><span class=\"c4\">&nbsp;All the pages on the website that are money pages (can generate money or revenue), require significant effort to be developed and clients usually remain very picky about them and don&rsquo;t want to compromise anything in those pages are what we are calling primary pages. Primary pages will have these elements mandatorily: <br> &nbsp; &nbsp; They have to be money pages like home, product, service, collection etc. </span></p><p class=\"c0\"><span class=\"c4\">&nbsp; &nbsp; &nbsp;*Most of the traffic will be on these pages <br> &nbsp; &nbsp; They have not less than 6 sections and every section has to be well designed<br> &nbsp; &nbsp; Homepage should be always counted as a primary page. <br> &nbsp; &nbsp; The developers will have to put significant effort to build them</span></p><p class=\"c0\"><span>&nbsp; &nbsp; &nbsp;*The clients will be serious/picky about these pages and won&#39;t accept unless they are perfect. <br><br></span><span class=\"c1\">Rough numbers of primary page on a website:</span><span>&nbsp;Not more than 3 (Except for very rare cases)<br><br></span><span class=\"c1\">Example:</span><span>&nbsp;Home, product page and collection pages for woocommerce/shopify; home, service category and service page for service websites; Home, property buy/sale listing pages for a real estate broker site and like this. <br><br><br>B. </span><span class=\"c1\">Secondary page development:</span><span class=\"c4\">&nbsp;All the relatively less important pages on the site should go to secondary pages. The characteristics include: <br> &nbsp;*They don&rsquo;t generate money necessarily, they are needed for customers&#39; trust, information and other things. For example, about us, shipping policy, FAQ, return policy etc. <br> &nbsp;*They have less than 6 sections, for example contact us. <br> &nbsp;*Require less efforts from the developers to develop them.<br> &nbsp;*In many cases, developers can directly use the template with minimum customization. For example, cart, checkout pages on ecommerce sites. </span></p><p class=\"c0\"><span>&nbsp; *The clients will be less serious about them as these pages are not super sensitive. <br><br><br>2. </span><span class=\"c1\">Cloning existing design: <br></span><span class=\"c4\">Any cloning/duplication job that needs to be done in bulk should go under this. Example include: <br><br>A. Creating 20 service pages from 1 service page just by changing the content and the picture. <br>B. Creating/uploading 300 products after the product page will be developed initially. </span></p><p class=\"c0\"><span class=\"c4\">C. Creating 70 location pages from 1 page template finalized initially. <br><br>These tasks can be assigned to junior most persons in the team as these are identical to data entry works. <br><br></span></p><p class=\"c0\"><span>3. </span><span class=\"c1\">Others: </span><span><br>Under others, there are some other work types which you can select depending on your needs. <br><br>Choosing any task as the primary task will require authorization from team lead/management and the task will be assigned to the developers after the authorization part will be done. Declare any page as a primary page carefully as we are going to set up a point system for the developers where developers will get more points for the primary pages when compared to the secondary pages. So declaring any page as a primary page when it will take almost no effort to create can give the respective developer an unfair edge over the rest of him team members. <br><br></span><span class=\"c1\">P.S. </span><span class=\"c1 c3\">Other than these, we have added a new field named page url in the subtask creation form. So from now, you have to define the urls where the developers will work when assigning a task. It&rsquo;s important that the developers don&#39;t choose urls/permalinks randomly and you declare them beforehand and they use them mandatorily. <br><br></span><span class=\"c1\">Naming Criteria<br></span><span class=\"c4\">Make sure the subtask names are self explanatory so you or anyone else from the management knows what the subtask was about from its name. <br><br>For example, if the task name is &ldquo;Homepage&rdquo;, and if you have to break it into parts for obvious reasons, the subtask names should be as below: <br>Homepage mockup design (XD)</span></p><p class=\"c0\"><span class=\"c4\">Creating a custom slider for the homepage</span></p><p class=\"c0\"><span class=\"c4\">Converting XD to wordpress for the homepage</span></p><p class=\"c0 c2\"><span class=\"c4\"></span></p><p class=\"c0 c2\"><span><br><br><br></span></p></body></html>`\r\n  return (\r\n    <div dangerouslySetInnerHTML={{__html: html}}/>\r\n  )\r\n}\r\n","import { useState } from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport GuideLineText from \"./subtask_creation_guide/GuideLineText\";\r\n\r\n\r\nexport default function SubtaskCreationControl({ className }) {\r\n  const [subtaskCreationModalIsOpen, setSubtaskCreationModalIsOpen] = useState(false);\r\n\r\n\r\n    // console.log(location);\r\n\r\n    const close = () => setSubtaskCreationModalIsOpen(false);\r\n    const open = () => setSubtaskCreationModalIsOpen(true);\r\n\r\n    return (\r\n        <div className={` ${className}`} >\r\n            <Button\r\n                variant=\"tertiary\"\r\n                // onClick={toggle}\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {/* {isFetching ? <Loader title=\"Processing...\" /> : <i className=\"fa-solid fa-check\" />} */}\r\n                <span className=\"d-inline ml-1\"> Subtask creation guide </span>\r\n            </Button>\r\n\r\n            <Modal isOpen={subtaskCreationModalIsOpen} className=\"sp1_mark-as--modal \">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_mark-as--modal-panel\"\r\n                        style={{ overflow: \"visible\", maxWidth: \"70rem\" }}\r\n                    >\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0 ml-2\" style={{fontStyle:'normal',fontWeight:'bold'}}>Subtask creation guide</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"visible\" }}\r\n                        >\r\n                            \r\n                            <div style={{maxHeight:'80vh',overflow:'auto',padding:'0 20px 0 0'}}>\r\n                                <GuideLineText />\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 d-flex align-items-center\">\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                    onClick={close}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                                {/* <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" /> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\n\r\nconst StartTimerConfirmationModal = ({isOpen, onConfirm}) => {\r\n  const [buttonVisible, setButtonVisible] = React.useState(false);\r\n  const [countDown, setCountDown] = React.useState(20);\r\n\r\n  React.useEffect(() => {\r\n    let count = countDown ?? 0;\r\n\r\n    let timeIntervelId = setInterval(() => {\r\n        setCountDown(count--);\r\n    }, 1000);\r\n\r\n\r\n    let timeOutId = setTimeout(() => {\r\n      setButtonVisible(true);\r\n      clearInterval(timeIntervelId)\r\n    }, 22000);\r\n\r\n    \r\n\r\n    return () => {\r\n      clearTimeout(timeOutId);\r\n      clearInterval(timeIntervelId);\r\n    };\r\n  }, []);\r\n\r\n  const text = `<html><head><meta content=\"text/html; charset=UTF-8\" http-equiv=\"content-type\"><style type=\"text/css\">ol{margin:0;padding:0}table td,table th{padding:0}.c0{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c2{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c3{height:11pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class=\"c2 doc-content\"><p class=\"c1\"><span class=\"c0\">Do You Understand The Following Things?</span></p><p class=\"c1\"><span class=\"c0\">A. Your job is not to decide what the look and feel of a website will be based on a few reference websites.</span></p><p class=\"c1\"><span class=\"c0\">B. Your job is not to research a theme based on an instruction shared by the PM.</span></p><p class=\"c1\"><span class=\"c0\">C. Your job is not to research a plugin based on a problem shared by PM.</span></p><p class=\"c1\"><span class=\"c0\">D. Your job is not to choose the color scheme of a website.</span></p><p class=\"c1\"><span class=\"c0\">E. Your job is not to talk to the support for example the Shopify support team, theme support, plugin support and any other support for any solution.</span></p><p class=\"c1\"><span class=\"c0\">F. Your job is not to create the training videos for the client after the completion of a project.</span></p><p class=\"c1\"><span class=\"c0\">G. You understand that all your hours have to be logged/tracked, and you will be questioned if you don&rsquo;t log at least 7 hours for any reason.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your job is to execute the work based on the defined requirements.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily. Report immediately if you are asked to do any of these and if it wasn&rsquo;t authorized by top management. You should see a text like &ldquo;Authorized by top management&rdquo; on the right side of the task title if it was authorized.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">In case, you don&rsquo;t report, the extra time taken for these will be considered as your lacking (as they will remain unaccountable) and you will receive negative performance score.&quot;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2438;&#2474;&#2472;&#2495; &#2453;&#2495; &#2472;&#2495;&#2478;&#2509;&#2472;&#2482;&#2495;&#2454;&#2495;&#2468; &#2476;&#2495;&#2487;&#2479;&#2492;&#2455;&#2497;&#2482;&#2495; &#2476;&#2497;&#2461;&#2503;&#2472;?</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2535;&#2404; &#2453;&#2527;&#2503;&#2453;&#2463;&#2495; &#2480;&#2503;&#2475;&#2494;&#2480;&#2503;&#2472;&#2509;&#2488; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; &#2451;&#2474;&#2480; &#2477;&#2495;&#2468;&#2509;&#2468;&#2495; &#2453;&#2480;&#2503; &#2453;&#2509;&#2482;&#2494;&#2527;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; Look &amp; Feel &#2453;&#2503;&#2478;&#2472; &#2489;&#2476;&#2503; &#2468;&#2494;&#2480; &#2476;&#2495;&#2487;&#2527;&#2503; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2536;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2439;&#2472;&#2509;&#2488;&#2463;&#2509;&#2480;&#2494;&#2453;&#2486;&#2472; &#2437;&#2472;&#2497;&#2479;&#2494;&#2527;&#2496; &#2480;&#2495;&#2488;&#2494;&#2480;&#2509;&#2458; &#2453;&#2480;&#2503; &#2469;&#2495;&#2478; &#2454;&#2497;&#2433;&#2460;&#2503; &#2476;&#2503;&#2480; &#2453;&#2480;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2537;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2439;&#2472;&#2509;&#2488;&#2463;&#2509;&#2480;&#2494;&#2453;&#2486;&#2472; &#2437;&#2472;&#2497;&#2479;&#2494;&#2527;&#2496; &#2480;&#2495;&#2488;&#2494;&#2480;&#2509;&#2458; &#2453;&#2480;&#2503; &#2474;&#2509;&#2482;&#2494;&#2455;&#2495;&#2472; &#2454;&#2497;&#2433;&#2460;&#2503; &#2476;&#2503;&#2480; &#2453;&#2480;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2538;&#2404; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; &#2453;&#2494;&#2482;&#2494;&#2480; &#2488;&#2509;&#2453;&#2495;&#2478; &#2453;&#2495; &#2489;&#2476;&#2503; &#2488;&#2503;&#2463;&#2494; &#2474;&#2459;&#2472;&#2509;&#2470; &#2453;&#2480;&#2494; &#2476;&#2494; &#2453;&#2507;&#2472; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2539;&#2404; &#2453;&#2507;&#2472; &#2471;&#2480;&#2472;&#2503;&#2480; &#2488;&#2478;&#2488;&#2509;&#2479;&#2494;&#2480; &#2488;&#2478;&#2494;&#2471;&#2494;&#2472;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2453;&#2507;&#2472; &#2474;&#2509;&#2480;&#2453;&#2494;&#2480; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;&#2503;&#2480; &#2488;&#2494;&#2469;&#2503; &#2479;&#2507;&#2455;&#2494;&#2479;&#2507;&#2455; &#2453;&#2480;&#2494; (&#2479;&#2503;&#2478;&#2472;, &#2486;&#2474;&#2495;&#2475;&#2494;&#2439; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;, &#2469;&#2495;&#2478; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463;, &#2474;&#2509;&#2482;&#2494;&#2455;&#2495;&#2472; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463;, &#2447;&#2476;&#2434; &#2437;&#2472;&#2509;&#2479; &#2453;&#2507;&#2472; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;) &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2540;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2486;&#2503;&#2487; &#2489;&#2476;&#2494;&#2480; &#2474;&#2480;&#2503; &#2453;&#2509;&#2482;&#2494;&#2527;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2453;&#2507;&#2472; &#2474;&#2509;&#2480;&#2453;&#2494;&#2480; &#2463;&#2509;&#2480;&#2503;&#2439;&#2472;&#2495;&#2434; &#2477;&#2495;&#2465;&#2495;&#2451; &#2476;&#2494;&#2472;&#2494;&#2472;&#2507; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2541;&#2404; &#2438;&#2474;&#2472;&#2495; &#2488;&#2509;&#2476;&#2496;&#2453;&#2494;&#2480; &#2453;&#2480;&#2459;&#2503;&#2472; &#2479;&#2503;, &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2488;&#2453;&#2482; &#2453;&#2494;&#2460;&#2503;&#2480; &#2488;&#2478;&#2527; Seopage1 &#2447;&#2480; &#2439; &#2438;&#2480; &#2474;&#2495; &#2488;&#2495;&#2488;&#2509;&#2463;&#2503;&#2478;&#2503; &#2463;&#2509;&#2480;&#2509;&#2479;&#2494;&#2453; &#2453;&#2480;&#2468;&#2503; &#2489;&#2476;&#2503; &#2447;&#2476;&#2434; &#2479;&#2470;&#2495; &#2438;&#2474;&#2472;&#2495; &#2453;&#2507;&#2472; &#2453;&#2494;&#2480;&#2467;&#2503; &#2453;&#2478;&#2474;&#2453;&#2509;&#2487;&#2503; 7 &#2456;&#2467;&#2509;&#2463;&#2494; &#2463;&#2509;&#2480;&#2509;&#2479;&#2494;&#2453; &#2472;&#2494; &#2453;&#2480;&#2503;&#2472; &#2468;&#2494;&#2489;&#2482;&#2503; &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2474;&#2509;&#2480;&#2486;&#2509;&#2472; &#2453;&#2480;&#2494; &#2489;&#2476;&#2503;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2488;&#2494;&#2471;&#2494;&#2480;&#2467;&#2477;&#2494;&#2476;&#2503;, &#2479;&#2503;&#2453;&#2507;&#2472;&#2507; &#2471;&#2480;&#2467;&#2503;&#2480; &#2474;&#2509;&#2480;&#2479;&#2492;&#2507;&#2460;&#2472;&#2496;&#2479;&#2492;&#2468;&#2494; &#2476;&#2494; Requirements &#2447;&#2480; &#2476;&#2495;&#2487;&#2527;&#2503; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; (&#2479;&#2503; &#2453;&#2507;&#2472; &#2471;&#2480;&#2467;&#2503;&#2480;) &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2453;&#2494;&#2460;&#2404; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2489;&#2458;&#2509;&#2459;&#2503;, &#2438;&#2474;&#2472;&#2494;&#2480; &#2441;&#2474;&#2480;&#2503; &#2447;&#2488;&#2494;&#2439;&#2472; &#2453;&#2480;&#2494; &#2453;&#2494;&#2460;&#2455;&#2497;&#2482;&#2507;&#2453;&#2503; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2470;&#2503;&#2527;&#2494; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2437;&#2472;&#2509;&#2479;&#2479;&#2494;&#2527;&#2496; &#2476;&#2494;&#2488;&#2509;&#2468;&#2476;&#2494;&#2527;&#2472; &#2453;&#2480;&#2494;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2479;&#2470;&#2495; &#2453;&#2507;&#2472; &#2453;&#2494;&#2480;&#2467;&#2503;, &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480; &#2447;&#2439; &#2453;&#2507;&#2472;&#2451; &#2453;&#2494;&#2460;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2488;&#2494;&#2489;&#2494;&#2479;&#2509;&#2479;&#2503;&#2480; &#2474;&#2509;&#2480;&#2479;&#2492;&#2507;&#2460;&#2472; &#2478;&#2472;&#2503; &#2453;&#2480;&#2503;, &#2468;&#2494;&#2489;&#2482;&#2503; &#2468;&#2495;&#2472;&#2495; &#2488;&#2503;&#2455;&#2497;&#2482;&#2495;&#2480; &#2460;&#2472;&#2509;&#2479; &#2438;&#2482;&#2494;&#2470;&#2494; &#2438;&#2482;&#2494;&#2470;&#2494; &#2476;&#2495;&#2486;&#2503;&#2487; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2494;&#2460; &#2468;&#2504;&#2480;&#2495; &#2453;&#2480;&#2468;&#2503; &#2489;&#2476;&#2503; &#2447;&#2476;&#2434; &#2448; &#2453;&#2494;&#2460;&#2455;&#2497;&#2482;&#2495; &#2437;&#2476;&#2486;&#2509;&#2479;&#2439; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2489;&#2468;&#2503; &#2489;&#2476;&#2503;&#2404; &#2479;&#2470;&#2495; &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2507;&#2472;&#2451; &#2453;&#2494;&#2460; &#2453;&#2480;&#2468;&#2503; &#2476;&#2482;&#2494; &#2489;&#2479;&#2492; &#2447;&#2476;&#2434; &#2488;&#2503;&#2439; &#2453;&#2494;&#2460;&#2463;&#2495; &#2479;&#2470;&#2495; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2472;&#2494; &#2489;&#2479;&#2492; &#2468;&#2476;&#2503; &#2468;&#2494; &#2437;&#2476;&#2495;&#2482;&#2478;&#2509;&#2476;&#2503; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2453;&#2494;&#2459;&#2503; &#2480;&#2495;&#2474;&#2507;&#2480;&#2509;&#2463;&#2503;&#2480; &#2478;&#2494;&#2471;&#2509;&#2479;&#2478;&#2503; &#2460;&#2494;&#2472;&#2494;&#2468;&#2503; &#2489;&#2476;&#2503;&#2404; &nbsp;&#2488;&#2494;&#2471;&#2494;&#2480;&#2467;&#2468;, &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2494;&#2460;&#2503;&#2480; &#2453;&#2509;&#2487;&#2503;&#2468;&#2509;&#2480;&#2503;, &#2488;&#2434;&#2486;&#2509;&#2482;&#2495;&#2487;&#2509;&#2463; &#2474;&#2503;&#2460;&#2503;&#2480; &#2465;&#2494;&#2472; &#2474;&#2494;&#2486;&#2503; &ldquo;Authorized by top management&rdquo; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2447;&#2453;&#2463;&#2495; &#2482;&#2503;&#2454;&#2494; &#2470;&#2503;&#2454;&#2468;&#2503; &#2474;&#2494;&#2480;&#2476;&#2503;&#2472; &#2479;&#2470;&#2495; &#2488;&#2503;&#2463;&#2495; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2489;&#2479;&#2492;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2447;&#2439;&#2471;&#2480;&#2467;&#2503;&#2480; &#2437;&#2472;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2453;&#2494;&#2460;&#2503;&#2480; &#2453;&#2509;&#2487;&#2503;&#2468;&#2509;&#2480;&#2503; &#2438;&#2474;&#2472;&#2495; &#2479;&#2470;&#2495; &#2480;&#2495;&#2474;&#2507;&#2480;&#2509;&#2463; &#2472;&#2494; &#2453;&#2480;&#2503;&#2472;, &#2468;&#2494;&#2489;&#2482;&#2503; &#2488;&#2503;&#2439; &#2453;&#2494;&#2460;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2438;&#2474;&#2472;&#2495; &#2479;&#2503;&#2439; &#2488;&#2478;&#2527; &#2476;&#2509;&#2479;&#2527; &#2453;&#2480;&#2476;&#2503;&#2472; &#2468;&#2494; &#2455;&#2509;&#2480;&#2489;&#2472;&#2479;&#2507;&#2455;&#2509;&#2479; &#2476;&#2482;&#2503; &#2476;&#2495;&#2476;&#2503;&#2458;&#2495;&#2468; &#2489;&#2476;&#2503; &#2472;&#2494; &#2447;&#2476;&#2434; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2437;&#2472;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2453;&#2494;&#2460;&#2503; &#2460;&#2524;&#2495;&#2468; &#2469;&#2494;&#2453;&#2494;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2474;&#2494;&#2480;&#2475;&#2480;&#2509;&#2478;&#2503;&#2472;&#2509;&#2488; &#2488;&#2509;&#2453;&#2507;&#2480;&#2503; &#2472;&#2503;&#2455;&#2503;&#2463;&#2495;&#2477; &#2474;&#2527;&#2503;&#2472;&#2509;&#2463; &#2479;&#2507;&#2455; &#2489;&#2476;&#2503;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p></body></html>`\r\n\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"subtask-timer-confirmation--modal\">\r\n        <div className='subtask-timer-confirmation--panel'>\r\n           <div className=\"subtask-timer-confirmation--content\">\r\n            <div dangerouslySetInnerHTML={{__html: text}} />\r\n\r\n            \r\n                {/* <h4 className='mb-3'> Do You Understand The Following Things? </h4>\r\n                \r\n                <ol type='A'>\r\n                    <li> Your job is not to decide what the look and feel of a website will be based on a few reference websites. </li>\r\n                    <li>Your job is not to research a theme based on an instruction shared by the PM.</li>\r\n                    <li>Your job is not to research a plugin based on a problem shared by PM.</li>\r\n                    <li>Your job is not to choose the color scheme of a website.</li>\r\n                    <li>Your job is not to talk to the support for example the Shopify support team, theme support, plugin support and any other support for any solution.</li>\r\n                    <li>Your job is not to create the training videos for the client after the completion of a project.</li>\r\n                    <li>You understand that all your hours have to be logged/tracked, and you will be questioned if you don’t log at least 7 hours for any reason.</li>\r\n                </ol>\r\n\r\n\r\n                <p>In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your job is to execute the work based on the defined requirements. </p> \r\n\r\n                <p>If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily. Report immediately if you are asked to do any of these and if it wasn’t authorized by top management. You should see a text like “Authorized by top management” on the right side of the task title if it was authorized.</p>\r\n                \r\n                <p> In case, you don’t report, the extra time taken for these will be considered as your lacking (as they will remain unaccountable) and you will receive negative performance score.”</p>\r\n                */}\r\n                <div className='d-flex align-items-center'>\r\n                     <Button \r\n                        onClick={onConfirm} \r\n                        className='ml-auto'\r\n                        disabled={!buttonVisible}\r\n                      > \r\n                        Yes, I Fully Understand This {!buttonVisible && `(${countDown})`}\r\n                      </Button> \r\n                </div> \r\n           </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StartTimerConfirmationModal","import * as React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLessTrackModal } from \"../../../../services/features/subTaskSlice\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport Loader from \"../../../components/Loader\";\r\n\r\nconst StopTimerConfrimationPopUp = React.lazy(() =>\r\n    import(\"./StopTimerConfrimationPopUp\")\r\n);\r\n\r\nconst LessTrackTimerModal = ({ stopTimer, startTimer }) => {\r\n    const { task, lessTrackModal, lessTrackModalFor } = useSelector(\r\n        (s) => s.subTask\r\n    );\r\n    const dispatch = useDispatch();\r\n\r\n    const close = () => {\r\n        dispatch(setLessTrackModal({ show: false, type: \"\" }));\r\n    };\r\n\r\n    // temporarily stop timer now\r\n    const stopTimerTemporarily = () => {\r\n        if (lessTrackModalFor === \"STOP_TIMER\") {\r\n            stopTimer();\r\n        }\r\n\r\n        if (lessTrackModalFor === \"START_TIMER\") {\r\n            startTimer();\r\n        }\r\n\r\n        close();\r\n    };\r\n    // lessTrackModal\r\n    return (\r\n        <Modal isOpen={lessTrackModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <React.Suspense\r\n                    fallback={\r\n                        <div className=\"sp1_single_task--modal-panel\">\r\n                            <Loader />\r\n                        </div>\r\n                    }\r\n                >\r\n                    <StopTimerConfrimationPopUp\r\n                        handleTemporarilyStopTimer={stopTimerTemporarily}\r\n                        close={close}\r\n                    />\r\n                </React.Suspense>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default LessTrackTimerModal;\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const StartTimerWorkingReport = () => {\r\n    return(\r\n       <div>\r\n            <Title>You haven't submitted the last day's working report.</Title>\r\n            <Text> Do you want to submit the working report?</Text>\r\n            <Note><strong>Note:</strong> If you didn't submit last day's working report, you won't be able to start the timer</Note>\r\n       </div>\r\n    )\r\n}\r\n\r\n\r\nconst Title = styled.h1`\r\n    font-weight: 600;\r\n    font-size: 1.5rem;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Text = styled.p`\r\n    font-size: 1.1rem;\r\n    color: #ee3f07;\r\n`\r\n\r\nconst Note = styled.p`\r\n    font-size: 13px;\r\n    margin-top: 5px;\r\n    color: rgb(0 0 0 / 50%);\r\n    & > strong{\r\n        color:  #ee3f07;;\r\n    }\r\n`;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Button from \"../../components/Button\";\r\nimport StartTimerConfirmationModal from \"./StartTimerConfirmationModal\";\r\nimport {\r\n    useCheckWorkingReportMutation,\r\n    useLazyGetTaskDetailsQuery,\r\n    useLazyGetUserTrackTimeQuery,\r\n    useStartTimerApiMutation,\r\n    useStopTimerApiMutation\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport _ from \"lodash\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLessTrackModal, setTaskStatus } from \"../../../services/features/subTaskSlice\";\r\nimport LessTrackTimerModal from \"./stop-timer/LessTrackTimerModal\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { workingReportError } from \"../helper/timer-start-working-report-error-toaster\";\r\n\r\n\r\n\r\n\r\n// component\r\nconst TimerControl = ({ task, timerStart, setTimerStart, auth }) => {\r\n    const [timerId, setTimerId] = useState(null);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [isOpenConfirmationModal, setIsOpenConfirmationModal] =\r\n        useState(false); \r\n\r\n    const dispatch = useDispatch(); \r\n    const dayjs = new CompareDate(); \r\n    const loggedUser = new User(window?.Laravel?.user);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const timerStatus = task?.ranningTimer?.status;\r\n    const taskRunning = useMemo(() => timerStatus, [timerStatus])\r\n\r\n\r\n\r\n    // check timer is already running\r\n    useEffect(() => {\r\n        if (taskRunning === \"running\") {\r\n            let serverTime = task?.ranningTimer?.time;\r\n            let localTime = dayjs.dayjs().unix();\r\n            let timer = localTime - serverTime;\r\n            setTimerStart(true);\r\n            setSeconds(timer);\r\n            setTimerId(task?.ranningTimer?.id);\r\n        }\r\n    }, [taskRunning]);\r\n\r\n    //   timer control\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (timerStart) {\r\n            //   interval for timer\r\n            interval = setInterval(() => {\r\n                setSeconds((s) => s + 1);\r\n            }, 1000);\r\n        } else clearInterval(interval); // clear interval\r\n        return () => clearInterval(interval); // clear interval\r\n    }, [timerStart]);\r\n\r\n    // time formating\r\n    const timer = () => {\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const s = Math.floor((seconds % 3600) % 60);\r\n\r\n        // format\r\n        let sec = s < 10 ? `0${s}` : s;\r\n        let min = minutes < 10 ? `0${minutes}` : minutes;\r\n        let hr = hours < 10 ? `0${hours}` : hours;\r\n        return `${hr}:${min}:${sec}`;\r\n    };\r\n\r\n    // tostar\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 5000,\r\n        timerProgressBar: true,\r\n    });\r\n\r\n    /******** Start timer control *********/\r\n\r\n    // timer start first timer : checking api\r\n    const [\r\n        startTimerFirstCheck,\r\n        { isFetching: startTimerFirstCheckIsFetching },\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    // start timer api slice\r\n    const [startTimerApi, { isLoading: timerStartStatusIsLoading }] =\r\n        useStartTimerApiMutation();\r\n\r\n    // stop timer api slice\r\n    const [stopTimerApi, { isLoading: timerStopStatusIsLoading }] =\r\n        useStopTimerApiMutation();\r\n    \r\n    const [checkWorkReport] = useCheckWorkingReportMutation();\r\n\r\n    // timer start control\r\n    const startTimerControl = async() => {\r\n        setIsOpenConfirmationModal(false);\r\n\r\n        // check is developer submit their daily working report on previous day\r\n\r\n        try {\r\n           // check \r\n           const workReport = await checkWorkReport().unwrap();\r\n\r\n           // if submit all required report start timer\r\n           if(\r\n                workReport&&\r\n                workReport.data &&\r\n                workReport.data.check_in_check_out.check_in_status &&\r\n                workReport.data.daily_task_report.daily_submission_status &&\r\n                workReport.data.hours_log_report.hours_log_report_status\r\n           ){\r\n                await startTimerApi({\r\n                    task_id: task?.id,\r\n                    project_id: task?.projectId,\r\n                    memo: task?.title,\r\n                    user_id: window?.Laravel?.user?.id,\r\n                })\r\n                .unwrap()\r\n                .then(res => {\r\n                    if (res?.status === \"success\" || res?.status === 200) {\r\n                        setTimerStart(true);\r\n                        setTimerId(res?.id);\r\n                        dispatch(setTaskStatus(res?.task_status));\r\n                        Toast.fire({\r\n                            icon: 'success',\r\n                            title: _.startCase(res?.message),\r\n                        });\r\n                    } else {\r\n                        Toast.fire({\r\n                            icon: 'warning',\r\n                            title: _.startCase(res?.message),\r\n                        });\r\n                    }\r\n                }) \r\n           }else{\r\n            workingReportError();\r\n           }\r\n\r\n        } catch (error) {\r\n          console.log(error);  \r\n        }\r\n\r\n        /*\r\n        startTimerApi({\r\n            task_id: task?.id,\r\n            project_id: task?.projectId,\r\n            memo: task?.title,\r\n            user_id: window?.Laravel?.user?.id,\r\n        })\r\n            .unwrap()\r\n            .then((res) => {\r\n                  if (res?.status === \"success\" || res?.status === 200) {\r\n                    setTimerStart(true);\r\n                    setTimerId(res?.id);\r\n                    dispatch(setTaskStatus(res?.task_status));\r\n                    Toast.fire({\r\n                        icon: 'success',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                } else {\r\n                    Toast.fire({\r\n                        icon: 'warning',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => { \r\n                if(err.status === 400){\r\n                    if(err.data.acknowledgement_submitted === false){\r\n                        Swal.fire({\r\n                            title:  \"You have not meet last day's minimum hour count. Please share the reasons!\",\r\n                            showDenyButton: true,\r\n                            confirmButtonText: 'Yes',\r\n                            denyButtonText: `Close`,\r\n                            icon: 'warning'\r\n                          }).then((result) => {\r\n                            // Read more about isConfirmed, isDenied below\r\n                            if (result.isConfirmed) {\r\n                                dispatch(setLessTrackModal({\r\n                                    show: true, \r\n                                    type: 'START_TIMER', \r\n                                    date: dayjs.dayjs(err?.data?.date).format(\"MMM DD, YYYY\"),\r\n                                }))\r\n                            } \r\n                          })\r\n                     }\r\n                     \r\n                     else if(err.data.daily_submission_submitted === false){\r\n                        Swal.fire({\r\n                            title:  \"You didn't submit last day daily submission\",\r\n                            showDenyButton: true,\r\n                            confirmButtonText: 'Yes',\r\n                            denyButtonText: `Close`,\r\n                            icon: 'warning'\r\n                          }).then((result) => {\r\n                            // Read more about isConfirmed, isDenied below \r\n                            if (result.isConfirmed) {\r\n                                navigate(`?modal=daily-submission&date_type=last-date`)\r\n                            } \r\n                          })\r\n                     }\r\n    \r\n                } \r\n            });\r\n        */\r\n    };\r\n\r\n    // start timer function\r\n    const startTimer = (e) => {\r\n        e.preventDefault();\r\n        \r\n        startTimerFirstCheck(\r\n            `/${task?.id}/json?mode=developer_first_task_check&project_id=${task?.projectId}`\r\n        )\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res.is_first_task) {\r\n                    setIsOpenConfirmationModal(true);\r\n                } else startTimerControl();\r\n            })\r\n    };\r\n\r\n    \r\n\r\n    /*********** End of Start Timer control ***************/\r\n\r\n    // stop timer\r\n    const stopTimer = () => { \r\n        //navigate(`/account/tasks/${task?.id}?modal=daily-submission&trigger=stop-button`); \r\n        stopTimerApi({ timeId: timerId })\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res?.status === \"success\" || res?.status === 200) {\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                    setTimerStart(false);\r\n                    setSeconds(0);\r\n                    timerId(null);\r\n                } else {\r\n                    Toast.fire({\r\n                        icon: 'warning',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                }\r\n            });\r\n    }; \r\n    const [getUserTrackTime, {\r\n        isFetching: trackTimerFetcing\r\n    }] = useLazyGetUserTrackTimeQuery();\r\n\r\n    // handle stop timer \r\n    const handleStopTimer = () => {\r\n        // fetch data\r\n        getUserTrackTime(loggedUser?.getId())\r\n        .unwrap()\r\n        .then(res => { \r\n            if(res){\r\n                let currentTime = dayjs.dayjs(res.current_time);\r\n                let target = currentTime.set('hour', 16).set('minute', 45).set('second', 0);\r\n                const isSaturday = currentTime.day() === 6;\r\n\r\n                if(isSaturday){\r\n                    target = currentTime.set('hour', 13).set('minute', 0).set('second', 0);\r\n                }\r\n\r\n                let check = dayjs.dayjs(currentTime).isBefore(target);\r\n                let isDev = _.includes([5, 9 , 10], Number(auth?.getRoleId()));\r\n                if(!check && isDev){\r\n                    res.tracked_times < res.target_time ?  dispatch(setLessTrackModal({show: true, type: 'STOP_TIMER', date: 'Today'})) : stopTimer()\r\n                }else{\r\n                    stopTimer();\r\n                }\r\n            }\r\n            \r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    // control loading states...\r\n    useEffect(() => {\r\n        if (startTimerFirstCheckIsFetching || timerStartStatusIsLoading) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [startTimerFirstCheckIsFetching, timerStartStatusIsLoading]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!timerStart ? (\r\n                <React.Fragment>\r\n                    {!timerStartStatusIsLoading &&\r\n                    !startTimerFirstCheckIsFetching ? (\r\n                        <Button\r\n                            variant=\"tertiary\"\r\n                            onClick={startTimer}\r\n                            className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                        >\r\n                            <i className=\"fa-solid fa-circle-play\" />\r\n                            <span>Start Timer</span> \r\n                        </Button>\r\n                    ) : (\r\n                        <Button className=\"cursor-processing mr-2\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{ width: \"18px\", height: \"18px\" }}\r\n                            ></div>\r\n                            Starting...\r\n                        </Button>\r\n                    )}\r\n                    <StartTimerConfirmationModal\r\n                        isOpen={isOpenConfirmationModal}\r\n                        onConfirm={startTimerControl}\r\n                    />\r\n                </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                    >\r\n                        <i className=\"fa-solid fa-stopwatch\" />\r\n                        <span className=\"d-inline ml-1\">{timer()}</span>\r\n                    </Button>\r\n\r\n                    {/* <StopTimerControl\r\n                        stopTimer={stopTimer}\r\n                        timerStopStatusIsLoading={timerStopStatusIsLoading}\r\n                    /> */}\r\n\r\n                    {\r\n                        trackTimerFetcing ? \r\n                        (\r\n                            <Button className=\"cursor-processing\">\r\n                                <div\r\n                                    className=\"spinner-border text-white\"\r\n                                    role=\"status\"\r\n                                    style={{ width: \"18px\", height: \"18px\" }}\r\n                                />\r\n                                Processing...\r\n                            </Button>\r\n                        ):\r\n\r\n                        !timerStopStatusIsLoading ? (\r\n                            <Button\r\n                                variant=\"tertiary\"\r\n                                onClick={handleStopTimer}\r\n                                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                            >\r\n                                <i className=\"fa-solid fa-pause\" />\r\n                                <span className=\"d-inline ml-1\">Stop Timer</span>\r\n                            </Button>\r\n                        ) : (\r\n                            <Button className=\"cursor-processing\">\r\n                                <div\r\n                                    className=\"spinner-border text-white\"\r\n                                    role=\"status\"\r\n                                    style={{ width: \"18px\", height: \"18px\" }}\r\n                                />\r\n                                Stopping...\r\n                            </Button>\r\n                        )\r\n                    } \r\n                </React.Fragment>\r\n            )}\r\n\r\n\r\n            {/* LessTrackTimerModal */}\r\n            <LessTrackTimerModal stopTimer={stopTimer} startTimer={startTimerControl} />\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TimerControl\r\n","import Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport { StartTimerWorkingReport } from '../../components/StartTimerWorkingReportPopup'\r\n\r\n\r\nexport const workingReportError = () => {\r\n    withReactContent(Swal).fire({\r\n        icon: 'error',\r\n        html: <StartTimerWorkingReport />,\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'No',\r\n        customClass: {\r\n            confirmButton: 'btn btn-primary py-2 px-4',\r\n            cancelButton: 'btn py-2 px-4 text-white'\r\n        },\r\n    }).then(result => {\r\n        if(result.isConfirmed){\r\n            window.location.reload();\r\n        }\r\n    })\r\n}\r\n","import React, {useState, useRef} from 'react'\r\nimport Button from '../../../components/Button'\r\nimport Modal from '../../../components/Modal';\r\nimport { useClickAway } from 'react-use';\r\nimport { useSubmitForClientApprovalMutation } from '../../../../services/api/SingleTaskPageApi';\r\nimport Loader from '../../../components/Loader';\r\n\r\nexport const SubmitForClientApproval = ({task, auth}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const closeModal = () => setIsOpen(false)\r\n  const openModal = () => setIsOpen(true)\r\n  const ref = useRef();\r\n  useClickAway(ref, closeModal);\r\n\r\n\r\n  const [submitForClientApproval, {isLoading}] = useSubmitForClientApprovalMutation();\r\n\r\n\r\n  const handleOnSubmit = ()=>{\r\n    submitForClientApproval({task_id: task?.id, user_id: auth?.getId()})\r\n    .unwrap()\r\n    .then(res => {\r\n      Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: 'Submitted Task For Client Approval Successfully',\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n      });\r\n    })\r\n    .catch(err => console.log(err))\r\n    .finally(() => closeModal())\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <React.Fragment>\r\n          {\r\n            isLoading ? \r\n            <React.Fragment>\r\n              <div className=\"cursor-processing cnx__btn cnx__btn_sm cnx__btn_primary\">\r\n                    <div\r\n                        className=\"spinner-border text-white\"\r\n                        role=\"status\"\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                        }}\r\n                    ></div>\r\n                    Processing...\r\n                </div>\r\n            </React.Fragment>\r\n            :\r\n              <Button \r\n                  variant='success'\r\n                  onClick={openModal}\r\n                  className='d-flex align-items-center border-success'\r\n              >\r\n                  <i className=\"fa-solid fa-handshake-angle\"></i>\r\n                  <span className=\"d-inline ml-1\">Submit For Client Approval</span>\r\n              </Button> \r\n          }\r\n        </React.Fragment>\r\n        <Modal isOpen={isOpen} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n              <div \r\n                ref={ref}\r\n                className=\"sp1_single_task--modal-panel position-absolute p-2 mb-3\"\r\n                style={{top:'50%', left:'50%',transform:'translate(-50%, -50%)', width: '250px'}}\r\n              >\r\n                {!isLoading &&\r\n                  <div className='d-flex align-items-center border-bottom pb-1'>\r\n                    <Button variant='tertiary' onClick={closeModal} className='ml-auto border-0'>\r\n                      <i className='fa-solid fa-xmark' />\r\n                    </Button>\r\n                </div>\r\n                }\r\n                <div className='d-flex flex-column align-items-center p-2' style={{gap:'10px'}}>\r\n                  {isLoading && \r\n                    <React.Fragment>\r\n                      <Loader title='Submitting...' />\r\n                    </React.Fragment>\r\n                  }\r\n                  \r\n                  {!isLoading &&\r\n                    <React.Fragment>\r\n                      <img src='/img/warning.gif' alt='' style={{width: '50px', height: '50px'}}/>\r\n                      <div className='d-flex flex-column aling-items-center'>\r\n                        <h5 className='d-block mb-3'>Are You Sure?</h5>\r\n                        <div className='d-flex align-items-center justify-content-center'>\r\n                          <Button onClick={handleOnSubmit} className='mr-2 py-0'>Yes</Button>\r\n                          <Button variant='tertiary' onClick={closeModal} className='py-0'>No</Button>\r\n                        </div>\r\n                      </div>\r\n                   </React.Fragment>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Button from '../../../components/Button'\r\nimport { useConfirmClientApprovalMutation } from '../../../../services/api/SingleTaskPageApi'\r\nimport SubmitButton from '../../../components/SubmitButton';\r\n\r\nconst ClientAcceptedTask = ({task}) => { \r\n\r\n  const [confirmClientApproval, {isLoading}] = useConfirmClientApprovalMutation();\r\n\r\n  const handleClick=(e)=>{\r\n    e.preventDefault();\r\n    confirmClientApproval({\r\n        task_id: task?.id\r\n    }).unwrap()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <SubmitButton \r\n            onClick={handleClick}\r\n            variant='success'\r\n            isLoading={isLoading}\r\n            className='d-flex align-items-center border-success'\r\n        >\r\n            <i className=\"fa-solid fa-check\"></i>\r\n            <span className=\"d-inline ml-1\">Client Has Accepted This Task</span>\r\n        </SubmitButton>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientAcceptedTask","import React, { useState, useRef } from \"react\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport Button from \"../../../components/Button\";\r\nimport { useCreateRevisionMutation } from \"../../../../services/api/SingleTaskPageApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setTaskStatus } from \"../../../../services/features/subTaskSlice\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\n\r\n\r\n\r\nconst projectManagerAcknowladgement = [\r\n    {\r\n        id: \"CPRx01\",\r\n        title: 'Client added some additional requirements which was not part of the actual job scope',\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'PLRx12',\r\n        title: 'I submitted the work without proper checking and overlooked the issues',\r\n        isDeniable: true,\r\n    },\r\n    {\r\n        id: 'PLRx03',\r\n        title: 'I couldnt understand clients expectation properly earlier',\r\n        isDeniable: false\r\n    },\r\n    {\r\n        id: 'PLRx04',\r\n        title: 'I didnt understand the job properly as it’s very technical in nature and relied fully on technical team for success',\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'CPRx05',\r\n        title: \"The client didnt change his instruction but his interpretation of the original instruction now is weird and nobody could have interpreted it this way from his instruction\",\r\n        isDeniable: false,\r\n        createDispute: true,\r\n    },\r\n    {\r\n        id: 'CPRx06',\r\n        title: \"The client is asking for some minor changes which he couldn’t specify until he saw the completed work and we can’t charge him for these\",\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'SPRx01',\r\n        title: \"Sales person discussed something in a verbal meeting with the client and then forgot to document it when assigning\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    },\r\n    {\r\n        id: 'SPRx02',\r\n        title: \"Sales person couldn't define requirement properly and I also failed to define it after I took over\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    },\r\n    {\r\n        id: 'SPRx03',\r\n        title: \"Sales overpromised: This task is not doable to this extent or in this way and I informed management about it on day 1\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    }\r\n]\r\n\r\n\r\nconst AssigneeToLeadFromClientRevision = ({ close, onBack, onSubmit, task, auth, isSubmitting }) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [additionalPaid, setAdditionalPaid] = useState('');\r\n    const [additionalInfo, setAdditionalInfo] = useState(null);\r\n    const [additionalAmount, setAdditionalAmount] = useState(0);\r\n    const [additionalError, setAdditionalError] = useState('');\r\n\r\n    // radio button change\r\n    const handleChange = (e, reason) => {\r\n        setReason(reason);\r\n        setAdditionalAmount(0);\r\n        setAdditionalPaid('');\r\n        setAdditionalInfo(null);\r\n    };\r\n\r\n\r\n    // on blur\r\n    const handleBlurEvent = () => {\r\n        Swal.fire({\r\n            title: 'Do you want to create a milestone?',\r\n            // showDenyButton: true,\r\n            confirmButtonText: 'Yes',\r\n            // denyButtonText: `No`,\r\n            }).then(res => {\r\n            if(res.isConfirmed){\r\n                window.open(`/account/projects/${task?.projectId}?tab=milestones`, '_blank');\r\n            }\r\n        })\r\n    }\r\n\r\n    // additional payment\r\n    const hasAdditionalPayment = (isPay) =>{\r\n        setAdditionalPaid(() => isPay ? 'yes': 'no');\r\n    }\r\n\r\n    // editor change text\r\n    const handleEditorTextChange= (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    }\r\n\r\n    // validation\r\n    const validate = () => {\r\n       let errorCount = 0;\r\n\r\n       if(comment === \"\"){\r\n            errorCount++;\r\n            setCommentError('You have to explain the revision in details, so that lead developer can understand where they need to work.')\r\n       }\r\n\r\n       if(!reason){\r\n            errorCount++;\r\n            setReasonError('You have to select a reason from above options')\r\n       }\r\n\r\n\r\n       if(reason && reason?.id === 'CPRx01'){\r\n            if(additionalPaid === 'yes' && additionalAmount === 0){\r\n                errorCount++;\r\n                setAdditionalError('You have to provide amount')\r\n            }\r\n\r\n            if(additionalPaid === 'no' && !additionalInfo){\r\n                errorCount++;\r\n                setAdditionalError('You have to select an option')\r\n            }\r\n       }\r\n\r\n       return errorCount === 0;\r\n    }\r\n\r\n\r\n    // handle submission\r\n    const handleSubmission=(e)=>{\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        const data = {\r\n            acknowledgement_id: reason?.id ,\r\n            task_id: task?.id,\r\n            user_id: auth?.id,\r\n            is_deniable: reason?.isDeniable,\r\n            revision_acknowledgement: reason?.title,\r\n            comment: comment,\r\n            additional_amount: Number(additionalAmount),\r\n            additional_status: additionalPaid,\r\n            additional_comment: additionalInfo?.info ?? '',\r\n            dispute_create: reason?.createDispute || additionalInfo?.disputeCreate || false\r\n        }\r\n\r\n        if(validate()){\r\n            onSubmit(data);\r\n        }else{\r\n            console.log('Your forgot to fillup some required fields')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <form className=\"px-3\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select Reason for Revision<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {\r\n                                _.map(projectManagerAcknowladgement, option => (\r\n                                    <div key={option.id} className=\"form-check d-flex align-items-start mb-2\">\r\n                                        <input\r\n                                            className=\"form-check-input mr-2\"\r\n                                            type=\"radio\"\r\n                                            name=\"exampleRadios\"\r\n                                            id={option.id}\r\n                                            required= {true}\r\n                                            onChange={e => handleChange(e, option)}\r\n                                            value={option.title}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n\r\n                                        />\r\n                                        <label\r\n                                            className=\"form-check-label\"\r\n                                            htmlFor={option.id}\r\n                                            style={{ marginBottom: \"3px\" }}\r\n                                        >\r\n                                           {option.title}\r\n                                        </label>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        {reasonError && <small id=\"emailHelp\" className=\"form-text text-danger\">{reasonError}</small>}\r\n                    </div>\r\n\r\n                    {reason?.id === 'CPRx01' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Is the client paying additionally for these changes? <sup>*</sup></label>\r\n                            <div className=\"d-block\">\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"milestone\"\r\n                                            type=\"radio\"\r\n                                            id=\"createMilestoneYes\"\r\n                                            value=\"1\"\r\n                                            onChange={(e)=>hasAdditionalPayment(true)}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"createMilestoneYes\" className=\"form-check-label\">Yes</label>\r\n                                    </div>\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"milestone\"\r\n                                            type=\"radio\"\r\n                                            id=\"createMilestoneNo\"\r\n                                            value=\"0\"\r\n                                            onChange={(e) => hasAdditionalPayment(false)}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"createMilestoneNo\" className=\"form-check-label\">No</label>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {additionalPaid === 'yes' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Amount? <sup>*</sup></label>\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">$</div>\r\n                                </div>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onChange={e => setAdditionalAmount(e.target.value)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inlineFormInputGroup\"\r\n                                    placeholder=\"300\"\r\n                                    onBlur={handleBlurEvent}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        additionalPaid === 'no' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Is the client paying additionally for these changes? <sup>*</sup></label>\r\n                            <div className=\"d-block\">\r\n                                    <div className=\"form-check mb-3\">\r\n                                        <input\r\n                                            name=\"additionalInformation\"\r\n                                            className=\"form-check-input\"\r\n                                            type=\"radio\"\r\n                                            id=\"additionalInformation1\"\r\n                                            onChange={e => setAdditionalInfo({\r\n                                                info: e.target.value,\r\n                                                disputeCreate: false,\r\n                                            })}\r\n                                            value=\"Client changed his/her mind and he/she don't want to pay additional payment. We have to continue the task for client satisfaction\"\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"additionalInformation1\" className=\"form-check-label\">\r\n                                            Client changed his/her mind and he/she don't want to pay additional payment. We have to continue the task for client satisfaction\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"additionalInformation\"\r\n                                            type=\"radio\"\r\n                                            id=\"additionalInformation2\"\r\n                                            value=\"The client is interpreting his original instruction in a very unusual way!\"\r\n                                            onChange={(e) => setAdditionalInfo({\r\n                                                info: e.target.value,\r\n                                                disputeCreate: true,\r\n                                            })}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"additionalInformation2\" className=\"form-check-label\">\r\n                                        The client is interpreting his original instruction in a very unusual way!\r\n                                        </label>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    { additionalError && <div className=\"mb-3\">\r\n                        <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                            {additionalError}\r\n                        </small>\r\n                    </div>}\r\n\r\n                    {/* Editor  */}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Explain or Comment<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"ck-editor-holder\">\r\n                            <CKEditorComponent onChange={handleEditorTextChange}/>\r\n                        </div>\r\n                        {commentError && <small id=\"emailHelp\" className=\"form-text text-danger\">{commentError}</small>}\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button onClick={onBack} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                Back\r\n                            </Button>\r\n                            <SubmitButton title=\"Submit\" onClick={handleSubmission} isLoading={isSubmitting} />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AssigneeToLeadFromClientRevision;\r\n","import React, {useState, lazy, Suspense} from 'react'\r\nimport Button from '../../../components/Button' \r\nimport Modal from '../../../components/Modal';\r\nimport { SingleTask } from '../../../../utils/single-task';\r\nimport ClientRevisionForm from './ClientRevisionForm';\r\nimport AssigneeToLeadFromClientRevision from './AssigneeToLeadFromClientRevision';\r\nimport { useStoreClientRevisionTaskMutation } from '../../../../services/api/SingleTaskPageApi';\r\n\r\nconst ClientRevision = ({task, auth}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const [show,setShow] = useState('ASSINEE_TO_DEV');\r\n    \r\n    const singleTask = task;\r\n\r\n    // client revision data\r\n    const [clientComment, setClientComment] = useState('');\r\n    const [clientAcknowledgement, setClientAcknowladgement] = useState('');\r\n\r\n\r\n    const [storeClientRevisionTask, {isLoading}] = useStoreClientRevisionTaskMutation();\r\n\r\n    const handleSubmit = (data) => {\r\n       setClientAcknowladgement(data?.reason);\r\n       setClientComment(data?.comment); \r\n       setShow('ASSINEE_TO_DEV'); \r\n    }\r\n\r\n    const close = () => {\r\n        setRevisionModal(false)\r\n    }\r\n\r\n    const handleSubmitToStore = (data) =>{\r\n        const fData = {\r\n            ...data,\r\n            project_id: task?.projectId\r\n        }\r\n  \r\n        // show toster notification\r\n        const showToster= () =>{\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n            }) \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Task submitted for Revision successfully'\r\n            })\r\n        }\r\n    \r\n        storeClientRevisionTask(fData)\r\n        .unwrap()\r\n        .then(res => showToster())\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    \r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn sp1-st-revision-btn'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Client Has Revision</span>\r\n        </Button> \r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <div\r\n                    className=\"sp1_single_task--modal-panel w-100 pb-3\"\r\n                    style={{ maxWidth: \"550px\" }}\r\n                >\r\n                    <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <div className=\"font-weight-bold f-14\">\r\n                            Task#{task?.id} - Client Revision\r\n                        </div>\r\n                        <Button onClick={close} className=\"\">\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {/* {show === 'CLIENT_REVISION' && \r\n                        <ClientRevisionForm \r\n                            task={singleTask}\r\n                            close={() => setRevisionModal(false)} \r\n                            onSubmitForm={(data) => handleSubmit(data)}\r\n                        />\r\n                    }  */}\r\n                    {/* {show === \"ASSINEE_TO_DEV\" && */}\r\n                        <AssigneeToLeadFromClientRevision \r\n                            task={task}\r\n                            auth={auth}\r\n                            isSubmitting = {isLoading}\r\n                            onSubmit={handleSubmitToStore}\r\n                            close={() => setRevisionModal(false)}\r\n                            onBack={() => setShow('CLIENT_REVISION')}\r\n                        />\r\n                    {/* }  */}\r\n                </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientRevision \r\n\r\n","import React from 'react'\r\nimport { SubmitForClientApproval } from './SubmitForClientApproval'\r\nimport ClientAcceptedTask from './ClientAcceptedTask'\r\nimport { SingleTask } from '../../../../utils/single-task'\r\nimport ClientRevision from '../Revision/ClientRevision'\r\nimport { submitForClientApproval, clientApproveConfirmationButtonPermission } from '../../../permissions'\r\n\r\nconst ClientApproval = ({task, status, auth}) => {\r\n  return (\r\n    <React.Fragment>\r\n        { submitForClientApproval({task, status, auth}) && <SubmitForClientApproval task={task} auth={auth} /> }\r\n        { clientApproveConfirmationButtonPermission({task, status, auth}) && \r\n          <React.Fragment>\r\n            <ClientAcceptedTask task={task} auth={auth} />\r\n            <ClientRevision task={task} auth={auth} />\r\n          </React.Fragment>\r\n        }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientApproval","import React, { useState, lazy, Suspense } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport { SingleTask } from \"../../../../utils/single-task\";\r\nimport Loader from \"../../../components/Loader\";\r\nconst ReportForm = lazy(() => import(\"./ReportForm\"));\r\n\r\nconst ReportControl = ({ task }) => {\r\n    const [reportModalOpen, setReportModalOpen] = useState(false); \r\n\r\n    const close = () => setReportModalOpen(false);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={() => setReportModalOpen(true)}\r\n                className=\"ml-auto d-flex align-items-center sp1-st-revision-btn --view-revision sp1_report_btn\"\r\n            >\r\n                <i className=\"fa-solid fa-flag\"></i>\r\n                <span className=\"d-inline ml-1\">Report</span>\r\n            </Button>\r\n\r\n            <Modal isOpen={reportModalOpen} className=\"sp1_single_task--modal\">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_single_task--modal-panel task-report-form--modal-panel\"\r\n                    >\r\n                        <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                            <div className=\"font-weight-bold f-14\">\r\n                                Task#{task?.id} : Report\r\n                            </div>\r\n                            <Button onClick={close} className=\"\">\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n                        <Suspense fallback={<div className=\"py-3 d-flex align-items-center justify-content-center\"><Loader /></div>}>\r\n                            <ReportForm task={task} close={close} />\r\n                        </Suspense>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ReportControl;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { useDeveloperCanCompleteTaskQuery, useLazyCheckSubTaskTimerQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useDailySubmission } from \"../../../single-task/hooks/useDailySubmission\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport {\r\n    approveButtonPermission,\r\n    markAsCompletedButtonPermission,\r\n    needRevisionPermision,\r\n    revisionButtonPermission,\r\n    timeControlPermision\r\n} from \"../../permissions\";\r\nimport DailySubmissionControl from './DailySubmissionControl';\r\nimport MarkAsComplete from \"./MarkAsComplete\";\r\nimport RevisionControl from \"./Revision/RevisionControl\";\r\nimport RevisionViewControl from \"./Revision/RevisionViewControl\";\r\nimport SubtaskCreationControl from \"./SubtaskCreationControl\";\r\nimport TimerControl from \"./TimerControl\";\r\nimport ApproveTask from \"./approve-task/ApproveTask\";\r\nimport ClientApproval from \"./client-approval/ClientApproval\";\r\nimport ReportControl from \"./report/Report\";\r\n\r\nconst TaskAction = ({ task, status }) => {\r\n    const loggedUser = new User(window?.Laravel?.user);\r\n    const [timerStart, setTimerStart] = React.useState(false);\r\n    const { isEnable } = useDailySubmission();\r\n\r\n\r\n    const [checkSubTaskTimer, { isFetching }] = useLazyCheckSubTaskTimerQuery();\r\n\r\n    const {  data: checkMarkAsCompleteEnableStatus, isLoading: isLoadingCompleteCheck } = useDeveloperCanCompleteTaskQuery(task?.id, {skip: !task.id});\r\n    const ENABLE_MARKASCOMPLETE_BUTTON = task && (task?.isSubtask ? checkMarkAsCompleteEnableStatus?.message === \"Developer can complete this task\" : true);\r\n\r\n    // console.log({task});\r\n\r\n\r\n    const onModalEditButtonClick = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(task?.id)\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res?.status === 200) {\r\n                    window.location = `/account/tasks/${task?.id}/edit`;\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Oops...\",\r\n                        text: \"You cannot edit the task because timer is already running\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    let time = task.isSubtask ? task?.parentTaskTimeLog : task?.totalTimeLog;\r\n\r\n    return (\r\n        <div\r\n            className=\"d-flex flex-wrap border-bottom pb-3 sp1_task_btn_group\"\r\n            style={{ gap: \"10px\" }}\r\n        >\r\n            {/* with permission */}\r\n            {timeControlPermision({ task, status, loggedUser }) ? (\r\n                <TimerControl\r\n                    task={task}\r\n                    timerStart={timerStart}\r\n                    setTimerStart={setTimerStart}\r\n                    auth={loggedUser}\r\n                />\r\n            ) : null}\r\n            {!timerStart && !isLoadingCompleteCheck &&\r\n            ENABLE_MARKASCOMPLETE_BUTTON && markAsCompletedButtonPermission({ task, status, loggedUser }) ? (\r\n                <MarkAsComplete task={task} auth={loggedUser} />\r\n            ) : null}\r\n\r\n\r\n            {/* develop */}\r\n            {approveButtonPermission({ task, status, loggedUser }) ? (\r\n                <ApproveTask task={task} status={status} auth={loggedUser} />\r\n            ) : null}\r\n\r\n            {needRevisionPermision({ task, status, loggedUser }) ? (\r\n                <RevisionControl task={task} auth={loggedUser} />\r\n            ) : null}\r\n\r\n            {/*  */}\r\n            {revisionButtonPermission({ task, status, loggedUser }) && (\r\n                <RevisionViewControl\r\n                    task={task}\r\n                    status={status}\r\n                    auth={loggedUser}\r\n                />\r\n            )}\r\n            {/* <TimeExtension task={task} /> */}\r\n            <ClientApproval task={task} status={status} auth={loggedUser} />\r\n\r\n             {/* daily submission control */}\r\n             {_.includes([5, 9, 10], loggedUser?.getRoleId()) && isEnable && (\r\n                <DailySubmissionControl />\r\n             )}\r\n\r\n\r\n\r\n            {/* right side button container */}\r\n            <div style={{display:'inline-flex',marginLeft:'auto',gap:'0 10px'}}>\r\n\r\n                {/* Subtask creation guideline */}\r\n                {_.includes([6, 4, 1], loggedUser?.getRoleId()) && !task?.isSubtask &&  <SubtaskCreationControl />}\r\n\r\n\r\n                {/*********** Report Control ***********/}\r\n                {_.includes([6, 5, 9, 10], loggedUser?.getRoleId()) && (\r\n                    <ReportControl task={task} />\r\n                )}\r\n\r\n\r\n                {/* {taskEditPermision({ task, status, auth: loggedUser }) && (\r\n                    <Link\r\n                        to={`?modal=edit&task=${task?.id}`}\r\n                        onClick={onModalEditButtonClick}\r\n                        className=\"cnx__btn cnx__btn_sm cnx__btn_primary sp1_task-edit-button\"\r\n                        style={{\r\n                            marginLeft: 'none'\r\n                        }}\r\n                    >\r\n                        {isFetching ? (\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgb(255, 255, 255)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                }}\r\n                            />\r\n                        ) : (\r\n                            <i className=\"fa-regular fa-pen-to-square\"></i>\r\n                        )}\r\n                        <span className=\"ml-1 mr-2\">Edit</span>\r\n                    </Link>\r\n                )} */}\r\n\r\n                {/* {task &&  task.boardColumn.id === 2 && !(_.includes([5, 6], loggedUser?.getRoleId()))  &&\r\n                    <Link\r\n                        to={`?modal=edit&task=${task?.id}`}\r\n                        className=\"cnx__btn cnx__btn_sm cnx__btn_primary sp1_task-edit-button\"\r\n                        style={{\r\n                            marginLeft: 'none'\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-regular fa-pen-to-square\" />\r\n                        Edit\r\n                    </Link>\r\n                } */}\r\n            </div>\r\n\r\n            {/* {{-- 3 dot --}} */}\r\n            {/* <button type=\"button\" className=\"d-flex align-items-center btn btn-sm btn-outline-dark mr-2 border-0 ml-auto\">\r\n                <i className=\"bi bi-three-dots\" ></i>\r\n            </button> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskAction;\r\n","import { User } from \"../../../utils/user-details\";\r\nimport dayjs from 'dayjs';\r\n\r\nconst TableRow = ({log}) => {\r\n    const user = log?.user ? new User(log.user) : null;\r\n    return(\r\n        <tr className='__tbody_tr'>\r\n            <td className='__tbody_td _tbody_td_employee'>\r\n                <img src={user?.getAvatar()} alt={user?.getName()} />\r\n                <span className='px-2'>{user?.getName()}</span>\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_start_time'>\r\n                {dayjs(log?.start_time).format('MMM DD, YYYY')} <br/>\r\n                {dayjs(log?.start_time).format('hh:mm a')}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_start_time _tbody_td_start_end'>\r\n                {log?.end_time ? <>\r\n                    {dayjs(log?.end_time).format('MMM DD, YYYY')} <br/>\r\n                    {dayjs(log?.end_time).format('hh:mm a')}\r\n                </> : <span className='text-success font-weight-bold'>Active</span>}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_memo'>\r\n                {log?.memo}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_hour_logged'>\r\n                {log?.hours_logged}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow\r\n","import React from \"react\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from '../../components/Modal';\r\n\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport TableRow from \"./InnerTableRow\";\r\nimport _ from \"lodash\";\r\nimport Avatar from \"../../../global/Avatar\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\nimport Button from \"../../components/Button\";\r\n\r\n\r\n\r\n\r\nconst Table = ({data}) => {\r\n    return(\r\n        <table className=\"sp1_subtask_log-tbl\">\r\n            <thead className=\"__thead\">\r\n                <tr>\r\n                    <th>Employee</th>\r\n                    <th>Start Time</th>\r\n                    <th>End Time</th>\r\n                    <th>Memo</th>\r\n                    <th>Hours Logged</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"__tbody\">\r\n                {data\r\n                    ? data.map((log) => (\r\n                        <TableRow key={log.id} log={log} />\r\n                    ))\r\n                    : null}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\n\r\nconst Card = ({log, className}) => {\r\n    const user = new User(log.user);\r\n    return(\r\n        <div className={`border-bottom ${className}`}>\r\n            <div className=\"d-flex align-items-center\" style={{gap:'10px'}}>\r\n                <Avatar \r\n                    src={user?.getAvatar()} \r\n                    name={user?.getName()} \r\n                    alt={user?.getName()} \r\n                    type=\"circle\"\r\n                /> \r\n                <h6>{user?.getName()}</h6>\r\n            </div>\r\n            <div className=\"d-flex flex-column flex-wrap ml-5\" style={{gap: '4px'}}>\r\n                <span><span className=\"font-weight-bold\">Memo:</span> {log?.memo}</span>\r\n                <span><span className=\"font-weight-bold\">Hours Logged:</span> {log?.hours_logged}</span>\r\n                <span><span className=\"font-weight-bold\">Start Time:</span> {dayjs(log?.start_time).format('MMM DD, YYYY hh:mm a')} </span>\r\n                <span><span className=\"font-weight-bold\">End Time:</span> {dayjs(log?.end_time).format('MMM DD, YYYY hh:mm a')} </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CardView = ({data}) => {\r\n    return(\r\n        <div className=\"d-flex flex-column\" style={{gap: '10px'}}>\r\n            {_.map(data, (log) =>(\r\n                    <Card log={log} key={log.id} className=\"w-100 py-2\" />\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\nconst TimeLogTable = ({ isOpen, close, toggle, data = [] }) => {\r\n    const ref = React.useRef(null);\r\n    const {width: deviceWidth} = useWindowSize();\r\n    useClickAway(ref, close);\r\n\r\n\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\"> \r\n                <div className='sp1-subtask-form --modal-panel-header'> \r\n                    <h6>Session Logs</h6> \r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button> \r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <div className=\"mt-3\">\r\n                        {deviceWidth > 800 ? <Table data={data} />: <CardView data={data} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if(deviceWidth > 1200){\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </CustomModal>\r\n        );\r\n    }else{\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </Modal>\r\n        );\r\n    }\r\n\r\n};\r\nexport default TimeLogTable;\r\n","import React from 'react'\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst TimeLogItemLoader = ({}) => {\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item py-2\" style={{gap: '10px', height: '30px'}}>\r\n        <div className='d-flex align-items-center'>\r\n            <Placeholder width=\"24px\" height=\"24px\" type='circle' className='mr-2' />\r\n            <span className='sp1_time_log_emplyee_name'>\r\n                <Placeholder width='100px' />\r\n            </span>\r\n        </div> \r\n\r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div> \r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div>\r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeLogItemLoader","import React, {lazy, Suspense} from 'react'\r\nconst TimeLogItem = lazy(() => import('./TimeLogItem'));\r\nimport TimeLogTable from './TimeLogTable';\r\nimport { useDispatch, useSelector } from 'react-redux'; \r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport { storeTimeLogs } from '../../../services/features/subTaskSlice';\r\nimport { Placeholder } from '../../../global/Placeholder';\r\nimport TimeLogItemLoader from './TimeLogItemLoader';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\n\r\nconst TimeLogSection = () => {\r\n  const {task, timeLogs} = useSelector(s => s.subTask);\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n  // get data\r\n    // fetch all task \r\n    const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n      skip: timeLogs?.length\r\n    }) \r\n  \r\n    // if task notes fetch completed store data into redux store\r\n    React.useEffect(()=> {\r\n      if(task && task.id){\r\n        getTaskDetails(`/${task?.id}/json?mode=task_time_log`)\r\n        .unwrap()\r\n        .then(res => {\r\n          if(res){\r\n            dispatch(storeTimeLogs(res));\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      } \r\n    }, [task]); \r\n    \r\n\r\n    // control modal\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const close = () => setIsOpen(false);\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3'  \r\n    ref={setModalRefButton} style={{zIndex: isOpen ? '99' : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Session Logs</span> \r\n        {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n        {_.size(timeLogs) > 0 &&\r\n          <button \r\n              aria-label='openCommentModalButton'\r\n              className='sp1_task_right_dl_toggle'\r\n              onClick={toggle}\r\n              style={{zIndex: isOpen ? 110 : ''}}\r\n            >\r\n              <i \r\n                className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n                style={{color: \"#276fec\"}} \r\n              />\r\n          </button>}\r\n        {/* side drop toggle button end */}\r\n\r\n\r\n          <TimeLogTable\r\n            isOpen={isOpen}\r\n            close={close}\r\n            toggle={modalRefButton}\r\n            data={timeLogs}\r\n          />\r\n\r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          { _.size(timeLogs) > 0 ?\r\n            _.map(timeLogs, log => (\r\n              <React.Fragment key={log.id}>\r\n                <Suspense fallback={<TimeLogItemLoader />}>\r\n                  <TimeLogItem log={log}/>\r\n                </Suspense>\r\n              </React.Fragment>\r\n            )):\r\n            <div\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{\r\n                    color: \"#B4BCC4\",\r\n                    fontSize: \"15px\",\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                No Logged Session is Available\r\n            </div>\r\n          } \r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeLogSection","import dayjs from \"dayjs\";\r\nimport _ from \"lodash\";\r\nimport * as React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useErrorHandler } from \"../context/ErrorHandleServiceContextProvider\";\r\nimport FileUploader from \"../file-upload/FileUploader\";\r\nimport Toaster from \"../global/Toaster\";\r\nimport {\r\n    useGetTaskStatusQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n    useLazyGetWorkingEnvironmentQuery\r\n} from \"../services/api/SingleTaskPageApi\";\r\nimport { storeTask } from \"../services/features/subTaskSlice\";\r\nimport { BoardColumn, SingleTask } from \"../utils/single-task\";\r\nimport { User } from \"../utils/user-details\";\r\nimport Accordion from \"./components/Accordion\";\r\nimport Guideline from \"./components/Guideline\";\r\nimport Loading from \"./components/Loading\";\r\nimport RevisionText from \"./components/RevisionText\";\r\nimport GenarelLoader from \"./components/loader/GenarelLoader\";\r\nimport { singleTaskPagePermission } from \"./permissions\";\r\nimport CommentSection from \"./section/comments/CommentsSection\";\r\nimport DailySubmissionSection from \"./section/daily-submission/DailySubmissionSection\";\r\nimport HistorySection from \"./section/history/HistorySection\";\r\nimport NoteSection from \"./section/notes/NoteSection\";\r\nimport RevisionSection from \"./section/revisions/RevisionSection\";\r\nimport SubTaskEditModal from \"./section/sub-task/SubTaskEditModal\";\r\nimport SubTaskSection from \"./section/sub-task/SubTaskSection\";\r\nimport TaskEditForm from \"./section/sub-task/TaskEditForm\";\r\nimport SubmittedWork from \"./section/submitted-work/SubmittedWork\";\r\nimport TaskAction from \"./section/task-actions/TaskAction\";\r\nimport TimeLogSection from \"./section/time-logs/TimeLogSection\";\r\n\r\nconst RefetchTaskProvider = React.createContext({});\r\nexport const useRefetchTaskDetails = () => {\r\n    const { setRefetchTask } = React.useContext(RefetchTaskProvider);\r\n    return () => {\r\n        setRefetchTask((prev) => !prev);\r\n    };\r\n};\r\n\r\nconst SingleIndependentTask = () => {\r\n    const { task: Task } = useSelector((s) => s.subTask);\r\n    const [refetchTask, setRefetchTask] = React.useState(false);\r\n    const { throwError } = useErrorHandler();\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n\r\n    // lazily get task details\r\n    const [\r\n        getTaskDetails,\r\n        { isFetching: isTaskFetching, isLoading: isTaskLoading },\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    // get task status query\r\n    const { data: taskStatus } = useGetTaskStatusQuery(params?.taskId);\r\n\r\n    // lazily get task working environment\r\n    const [\r\n        getWorkingEnv,\r\n        { isFetching: isWorkingEnvFetching, isLoading: isWorkingEnvLoading },\r\n    ] = useLazyGetWorkingEnvironmentQuery();\r\n\r\n    const task = new SingleTask(Task); // task instance\r\n    const loggedUser = new User(window?.Laravel?.user); // logged users data\r\n\r\n    // console.log(task);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const CurrentTask = {};\r\n\r\n            await getTaskDetails(`/${params?.taskId}/json?mode=basic`)\r\n                .unwrap()\r\n                .then(\r\n                    ({\r\n                        task,\r\n                        parent_task_heading,\r\n                        parent_task_action,\r\n                        subtasks,\r\n                        task_guideline,\r\n                        revisions,\r\n                        Sub_Tasks,\r\n                        ppTaskFiles,\r\n                    }) => {\r\n                        for (const key in task) {\r\n                            CurrentTask[key] = task[key];\r\n                        }\r\n                        CurrentTask.parent_task_title =\r\n                            parent_task_heading?.heading || null;\r\n                        CurrentTask.parent_task_action = parent_task_action;\r\n                        CurrentTask.subtask = subtasks;\r\n                        CurrentTask.pm_task_guideline = task_guideline;\r\n                        CurrentTask.task_revisions = revisions;\r\n                        CurrentTask.taskSubTask = Sub_Tasks;\r\n                        CurrentTask.taskFiles = [...ppTaskFiles];\r\n                    }\r\n                );\r\n\r\n            // console.log(CurrentTask.subtask_id);\r\n\r\n            await getWorkingEnv(\r\n                CurrentTask.subtask_id\r\n                    ? CurrentTask.parent_task_id\r\n                    : CurrentTask.id\r\n            )\r\n                .unwrap()\r\n                .then(({ task_working_environment }) => {\r\n                    CurrentTask.working_environment_data =\r\n                        task_working_environment;\r\n                });\r\n\r\n            // console.log({ CurrentTask });\r\n\r\n            const _task = new SingleTask(CurrentTask);\r\n\r\n            // console.log({ _task });\r\n\r\n            let hasPermission = singleTaskPagePermission(_task, loggedUser);\r\n\r\n            if (!hasPermission) {\r\n                return throwError({\r\n                    title: \"Access Denied\",\r\n                    message:\r\n                        \"Access to this resource is forbidden. Please contact the administrator for assistance.\",\r\n                    code: 403,\r\n                });\r\n            } else {\r\n                // const task = _task;\r\n                dispatch(storeTask(CurrentTask));\r\n            }\r\n        })();\r\n    }, [refetchTask]);\r\n\r\n    const loadingClass =\r\n        isTaskFetching || isTaskLoading ? \"skeleton-loading\" : \"\";\r\n\r\n    if (\r\n        isTaskFetching ||\r\n        isTaskLoading ||\r\n        isWorkingEnvFetching ||\r\n        isWorkingEnvLoading\r\n    ) {\r\n        return <Loading isLoading={true} />;\r\n    }\r\n\r\n    const _taskStatus = new BoardColumn(taskStatus);\r\n\r\n    if (!task) return null;\r\n\r\n    // console.log(\"task revision\", task?.revisions);\r\n\r\n    return (\r\n        <RefetchTaskProvider.Provider value={{ setRefetchTask }}>\r\n            <div className=\"position-relative content-wrapper\">\r\n                <div className=\"mb-3\">\r\n                    <div className={`f-18 ${loadingClass}`}>\r\n                        <span>\r\n                            {\" \"}\r\n                            <strong>Task: </strong>{\" \"}\r\n                        </span>\r\n                        <a href={`/account/tasks/${task?.id}`}>\r\n                            {task?.getSubtaskTitle()}\r\n                        </a>\r\n                        {_.includes(\r\n                            [1, 4, 6, 7, 8],\r\n                            loggedUser?.getRoleId()\r\n                        ) && (\r\n                            <span className=\"ml-2\">\r\n                                (\r\n                                <a\r\n                                    href={`/account/projects/${task.projectId}?tab=tasks`}\r\n                                    className=\"f-14\"\r\n                                >\r\n                                    See All Tasks\r\n                                </a>\r\n                                )\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {isTaskFetching || isTaskLoading ? (\r\n                        <GenarelLoader />\r\n                    ) : (\r\n                        <React.Fragment>\r\n                            <div className=\"col-12 col-md-7 col-lg-8 mb-3\">\r\n                                <div className=\"bg-white rounded-lg p-3\">\r\n                                    <TaskAction\r\n                                        task={task}\r\n                                        status={taskStatus}\r\n                                    />\r\n\r\n                                    {/* task information */}\r\n                                    <div>\r\n                                        <div\r\n                                            className=\"d-flex flex-column py-3\"\r\n                                            style={{ gap: \"10px\" }}\r\n                                        >\r\n                                            {task?.isSubtask && (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        {\" \"}\r\n                                                        Parent Task:{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        <a\r\n                                                            href={`/account/tasks/${task?.parentTaskId}`}\r\n                                                            className=\"text-hover-underline\"\r\n                                                        >\r\n                                                            {\r\n                                                                task?.parentTaskTitle\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n\r\n                                            {/* project name */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">Project : </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <span className=\"dot-color bg-danger mr-2\" />\r\n                                            <a href={`/account/projects/${task?.projectId}`} className=\"text-hover-underline\">\r\n                                                {task?.projectName}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* client name */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Client :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <span className=\"dot-color bg-info mr-2\" />\r\n                                                    <span>\r\n                                                        {Task?.ind_clientId\r\n                                                            ? Task?.ind_client_name\r\n                                                            : Task?.independent_client_name}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* project manager */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">Project Manager: </div>\r\n\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                                <img\r\n                                                    src={`/user-uploads/avatar/${task?.projectManagerAvatar}`}\r\n                                                    alt={task?.projectManagerName}\r\n                                                    width=\"32px\"\r\n                                                    height=\"32px\"\r\n                                                    className=\"rounded-circle\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"ml-2\">\r\n                                                <span\r\n                                                    className={`d-block f-14 font-weight-bold`}\r\n                                                >\r\n                                                    <a\r\n                                                        href={`/account/employees/${task?.projectManagerId}`}\r\n                                                        className=\"hover-underline\"\r\n                                                    >\r\n                                                        {task?.projectManagerName}</a>\r\n                                                    {Number(task?.projectManagerId) ===\r\n                                                        Number(loggedUser?.getId()) && (\r\n                                                        <sup\r\n                                                            className=\"rounded-pill bg-dark text-white px-1 ml-1\"\r\n                                                            style={{ fontSize: \"10px\", whiteSpace: 'nowrap' }}\r\n                                                        >\r\n                                                            It's You\r\n                                                        </sup>\r\n                                                    )}\r\n                                                </span>\r\n\r\n                                                <span style={{ fontSize: \"12px\" }}>\r\n                                                   {task?.projectManagerDesignation}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* milestone */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">\r\n                                            Milestone :{\" \"}\r\n                                        </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <span className=\"dot-color bg-primary mr-2\" />\r\n                                            {task?.milestoneTitle}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* assignee to */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Assigned To :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            width: \"32px\",\r\n                                                            height: \"32px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <img\r\n                                                            src={task?.assigneeTo?.getAvatar()}\r\n                                                            alt={task?.assigneeTo?.getName()}\r\n                                                            width=\"32px\"\r\n                                                            height=\"32px\"\r\n                                                            className=\"rounded-circle\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"ml-2\">\r\n                                                        <span\r\n                                                            className={`d-block f-14 font-weight-bold`}\r\n                                                        >\r\n                                                            <a\r\n                                                                href={task?.assigneeTo?.getUserLink()}\r\n                                                                className=\"hover-underline\"\r\n                                                            >\r\n                                                                {task?.assigneeTo?.getName()}\r\n                                                            </a>\r\n                                                            {Number(\r\n                                                                task?.assigneeTo?.getId()\r\n                                                            ) ===\r\n                                                                Number(\r\n                                                                    loggedUser?.getId()\r\n                                                                ) && (\r\n                                                                <sup\r\n                                                                    className=\"rounded-pill bg-dark text-white px-1 ml-1\"\r\n                                                                    style={{\r\n                                                                        fontSize:\r\n                                                                            \"10px\",\r\n                                                                        whiteSpace:\r\n                                                                            \"nowrap\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    It's You\r\n                                                                </sup>\r\n                                                            )}\r\n                                                        </span>\r\n\r\n                                                        <span\r\n                                                            style={{\r\n                                                                fontSize:\r\n                                                                    \"12px\",\r\n                                                            }}\r\n                                                        >\r\n                                                            {task?.assigneeTo?.getDesignationName()}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* assignee by */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Assigned by:{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            width: \"32px\",\r\n                                                            height: \"32px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <img\r\n                                                            src={task?.assigneeBy?.getAvatar()}\r\n                                                            alt={task?.assigneeBy?.getName()}\r\n                                                            width=\"32px\"\r\n                                                            height=\"32px\"\r\n                                                            className=\"rounded-circle\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"ml-2\">\r\n                                                        <span\r\n                                                            className={`d-block f-14 font-weight-bold`}\r\n                                                        >\r\n                                                            <a\r\n                                                                href={task?.assigneeBy?.getUserLink()}\r\n                                                                className=\"hover-underline\"\r\n                                                            >\r\n                                                                {task?.assigneeBy?.getName()}\r\n                                                            </a>\r\n                                                            {Number(\r\n                                                                task?.assigneeBy?.getId()\r\n                                                            ) ===\r\n                                                                Number(\r\n                                                                    loggedUser?.getId()\r\n                                                                ) && (\r\n                                                                <sup\r\n                                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                                    style={{\r\n                                                                        fontSize:\r\n                                                                            \"10px\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    It's You\r\n                                                                </sup>\r\n                                                            )}\r\n                                                        </span>\r\n\r\n                                                        <span\r\n                                                            style={{\r\n                                                                fontSize:\r\n                                                                    \"12px\",\r\n                                                            }}\r\n                                                        >\r\n                                                            {task?.assigneeBy?.getDesignationName()}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* TASK CATEGORY */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Task Category :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {task.category.name}\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* PRIORITY */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Priority :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    />\r\n                                                    {task?.priority}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* login url */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Login URL :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n\r\n                                                        <a\r\n                                                            target=\"__blank\"\r\n                                                            href={\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.loginURL\r\n                                                            }\r\n                                                        >\r\n                                                            {\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.loginURL\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* username */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Username :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {\r\n                                                            task.additionalInfo\r\n                                                                .username\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* password */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Password :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {\r\n                                                            task.additionalInfo\r\n                                                                .password\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* ref site */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Reference page :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        <a\r\n                                                            target=\"__blank\"\r\n                                                            href={\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.refSite\r\n                                                            }\r\n                                                        >\r\n                                                            {\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.refSite\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* category */}\r\n                                            {task?.isSubtask && (\r\n                                                <>\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Task Category :{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.category\r\n                                                                ?.name ?? \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    {/* task type */}\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Task Type:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.taskType ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Type:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageType ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Name:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageName ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Url:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageUrl ? (\r\n                                                                <a\r\n                                                                    href={\r\n                                                                        task?.pageUrl\r\n                                                                    }\r\n                                                                >\r\n                                                                    ( view )\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <span>--</span>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        {/* project manager guideline */}\r\n                                        {(!_.isEmpty(task?.workEnvData) ||\r\n                                            !_.isEmpty(task?.guidelines)) && (\r\n                                            <Accordion\r\n                                                expendable={false}\r\n                                                title=\"General Guidelines\"\r\n                                            >\r\n                                                {/* {task?.hasProjectManagerGuideline && <PMGuideline guideline={task?.PMTaskGuideline} /> } */}\r\n\r\n                                                {!_.isEmpty(\r\n                                                    task?.workEnvData\r\n                                                ) && (\r\n                                                    <div className=\"sp1_task_card--sub-card\">\r\n                                                        <div\r\n                                                            className=\"px-4 py-3\"\r\n                                                            style={{\r\n                                                                background:\r\n                                                                    \"#F3F5F9\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <h6 className=\"mb-2\">\r\n                                                                Working\r\n                                                                Environment\r\n                                                            </h6>\r\n                                                            <hr />\r\n                                                            <div className=\"row\">\r\n                                                                {/* working/staging site's url */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            URL\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.site_url\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* frontend password */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Frontend\r\n                                                                            Password\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.frontend_password\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* working/staging site's login url */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            Login\r\n                                                                            URL\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.login_url\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>{\" \"}\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* working/staging site's username/email */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            Username/Email\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {task\r\n                                                                            ?.workEnvData\r\n                                                                            ?.email ||\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.user_name}\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* password */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Password\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.password\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* Reference Page */}\r\n                                                                {/* <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Reference\r\n                                                                            Page\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.reference_site\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                <Guideline\r\n                                                    text={task?.guidelines}\r\n                                                    workEnv={task?.workEnvData}\r\n                                                />\r\n                                            </Accordion>\r\n                                        )}\r\n\r\n                                        {/* task revision */}\r\n                                        {_.size(task?.revisions) > 0 && (\r\n                                            <Accordion\r\n                                                title={\r\n                                                    _.last(task?.revisions)\r\n                                                        ?.revisionStatus\r\n                                                }\r\n                                                headingClass=\"d-flex align-items-center justify-content-between\"\r\n                                                headingStyle={{\r\n                                                    background:\r\n                                                        \"rgba(227,62,79,1)\",\r\n                                                    color: \"#fff\",\r\n                                                }}\r\n                                            >\r\n                                                {_.map(\r\n                                                    task?.revisions,\r\n                                                    (revision, index) => (\r\n                                                        <RevisionText\r\n                                                            key={revision?.id}\r\n                                                            index={index + 1}\r\n                                                            date={dayjs(\r\n                                                                revision.createdAt\r\n                                                            ).format(\r\n                                                                \"MMM DD, YYYY\"\r\n                                                            )}\r\n                                                            time={dayjs(\r\n                                                                revision.createdAt\r\n                                                            ).format(\"hh:mm a\")}\r\n                                                            text={\r\n                                                                revision?.comment ||\r\n                                                                revision?.devComment ||\r\n                                                                revision?.pmComment\r\n                                                            }\r\n                                                            revision={revision}\r\n                                                        />\r\n                                                    )\r\n                                                )}\r\n                                            </Accordion>\r\n                                        )}\r\n\r\n                                        {/* task description */}\r\n                                        <Accordion\r\n                                            expendable={false}\r\n                                            title=\"Task Descriptions\"\r\n                                        >\r\n                                            <Guideline\r\n                                                text={task?.description}\r\n                                            />\r\n\r\n                                            {_.size(task?.attachments) > 0 ? (\r\n                                                <div className=\"mt-3\">\r\n                                                    <h4 className=\"mb-2\">\r\n                                                        Task Attachments:{\" \"}\r\n                                                    </h4>\r\n                                                    <FileUploader>\r\n                                                        {_.map(\r\n                                                            task?.attachments,\r\n                                                            (attachment) =>\r\n                                                                attachment?.pp_task_file_name ? (\r\n                                                                    <FileUploader.Preview\r\n                                                                        key={\r\n                                                                            attachment?.pp_task_file_id\r\n                                                                        }\r\n                                                                        fileName={\r\n                                                                            attachment?.pp_task_file_name\r\n                                                                        }\r\n                                                                        downloadAble={\r\n                                                                            true\r\n                                                                        }\r\n                                                                        deleteAble={\r\n                                                                            false\r\n                                                                        }\r\n                                                                        downloadUrl={\r\n                                                                            attachment?.pp_task_file_url\r\n                                                                        }\r\n                                                                        previewUrl={\r\n                                                                            attachment?.pp_task_file_url\r\n                                                                        }\r\n                                                                        fileType={\r\n                                                                            _.includes(\r\n                                                                                [\r\n                                                                                    \"png\",\r\n                                                                                    \"jpeg\",\r\n                                                                                    \"jpg\",\r\n                                                                                    \"svg\",\r\n                                                                                    \"webp\",\r\n                                                                                    \"gif\",\r\n                                                                                ],\r\n                                                                                attachment?.pp_task_file_icon\r\n                                                                            )\r\n                                                                                ? \"images\"\r\n                                                                                : \"others\"\r\n                                                                        }\r\n                                                                        classname=\"comment_file\"\r\n                                                                        ext={\r\n                                                                            attachment?.pp_task_file_icon\r\n                                                                        }\r\n                                                                    />\r\n                                                                ) : null\r\n                                                        )}\r\n                                                    </FileUploader>\r\n                                                </div>\r\n                                            ) : null}\r\n                                        </Accordion>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )}\r\n\r\n                    <div className=\"col-12 col-md-5 col-lg-4\">\r\n                        <div className=\"d-flex flex-column\">\r\n                            {/* period */}\r\n                            <div\r\n                                className=\"sp1_task_right_card mb-3\"\r\n                                style={{ maxHeight: \"450px\" }}\r\n                            >\r\n                                <div className=\"d-flex align-items-center font-weight-bold border-bottom pl-2 pb-2 mb-2\">\r\n                                    <span\r\n                                        style={{\r\n                                            display: \"block\",\r\n                                            width: \"10px\",\r\n                                            height: \"10px\",\r\n                                            borderRadius: \"100%\",\r\n                                            background: taskStatus?.label_color,\r\n                                            marginRight: \"6px\",\r\n                                            boxShadow:\r\n                                                \"0 0 10px rgba(0,0,0,.1)\",\r\n                                        }}\r\n                                    />\r\n\r\n                                    {_taskStatus.getTaskStatusName(\r\n                                        loggedUser?.getRoleId(),\r\n                                        task.isSubtask\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Start Date: </div>\r\n                                    <div\r\n                                        className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                    >\r\n                                        {task?.getStartDate(\"MMM DD, YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Due Date */}\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Due Date: </div>\r\n                                    <div\r\n                                        className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                    >\r\n                                        {task?.getDueDate(\"MMM DD, YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n                                {/* End Due Date */}\r\n\r\n                                {/* Time Estimate */}\r\n                                {/* <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">Time Estimate: </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.getEstimateTime()}\r\n                                </div>\r\n                            </div> */}\r\n                                {/* End Time Estimate */}\r\n\r\n                                {/* <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">\r\n                                    Parent Task Hours Logged:\r\n                                </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.parentTaskTimeLog || \"--\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">Subtask Hours Logged: </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold ml-2 pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.subTaskTimeLog || \"--\"}\r\n                                </div>\r\n                            </div> */}\r\n\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Total Hours Logged: </div>\r\n                                    <div className=\"d-flex align-items-center font-weight-bold pl-2\">\r\n                                        {(task.isSubtask\r\n                                            ? task?.parentTaskTimeLog\r\n                                            : task?.totalTimeLog) || \"--\"}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* comments */}\r\n                            {task && task?.id && <SubmittedWork task={task} />}\r\n                            {!task.isSubtask && (\r\n                                <SubTaskSection status={taskStatus} />\r\n                            )}\r\n                            {task && task?.id && (\r\n                                <DailySubmissionSection task={task} />\r\n                            )}\r\n                            {task && task?.id && (\r\n                                <CommentSection\r\n                                    task={task}\r\n                                    isLoading={isTaskFetching || isTaskLoading}\r\n                                />\r\n                            )}\r\n                            <NoteSection />\r\n                            <TimeLogSection />\r\n                            {task && task?.id && <HistorySection />}\r\n                            {task && task?.id && (\r\n                                <RevisionSection task={task} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Toaster />\r\n                <ShowEditModals task={task} auth={loggedUser} />\r\n            </div>\r\n        </RefetchTaskProvider.Provider>\r\n    );\r\n};\r\n\r\nexport default SingleIndependentTask;\r\n\r\nconst ShowEditModals = ({ auth, task }) => {\r\n    let hasAccess = false;\r\n\r\n    let time = task.isSubtask ? task?.parentTaskTimeLog : task?.totalTimeLog;\r\n\r\n    if (auth.getRoleId() === 1) {\r\n        hasAccess = true;\r\n    } else if (\r\n        auth.getId() === task.assigneeBy.id &&\r\n        task.boardColumn.id === 2\r\n    ) {\r\n        hasAccess = true;\r\n    } else hasAccess = false;\r\n\r\n    if (hasAccess) {\r\n        if (task.isSubtask) {\r\n            return <SubTaskEditModal task={task} />;\r\n        } else {\r\n            return <TaskEditForm task={task} />;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({\r\n    children, \r\n    type=\"button\",\r\n    disabled=false, \r\n    className = '', \r\n    variant='primary',\r\n    size=\"sm\",\r\n    onClick,\r\n    ...props\r\n}) => {\r\n    const classes = `cnx__btn cnx__btn_${variant} ${disabled ? 'cnx__btn_disabled': ''} cnx__btn_${size} ${className}`\r\n\r\n    const handleOnClick = (e) => {\r\n        onClick && onClick(e)\r\n    }\r\n\r\n\r\n    return (\r\n        <button \r\n            type='button' \r\n            className={classes} \r\n            disabled={disabled} \r\n            onClick={handleOnClick} \r\n            {...props}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    children: PropTypes.node.isRequired || PropTypes.string.isRequired || PropTypes.array.isRequired,\r\n    disabled: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    variant: PropTypes.oneOf(['primary', 'secondary', 'tertiary', 'success', 'danger']),\r\n    size: PropTypes.oneOf(['sm', 'md', 'lg']),\r\n    onClick: PropTypes.func,\r\n    href: PropTypes.string\r\n}\r\n\r\nexport default Button;","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {usePopper} from 'react-popper';\r\nimport {motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst DropdownContext = React.createContext();\r\n\r\n\r\nconst DropdownProvider = ({children}) => {\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [element, setElement] = React.useState(null);\r\n    const [reference, setReference] = React.useState(null);\r\n\r\n    return (\r\n        <DropdownContext.Provider value={{\r\n            element,\r\n            setElement,\r\n            reference,\r\n            setReference,\r\n            isOpen,\r\n            setIsOpen\r\n        }}>\r\n            {children}\r\n        </DropdownContext.Provider>\r\n    )\r\n}\r\n\r\n// dropdown hooks\r\nconst useDropdown = () => {\r\n    const context = React.useContext(DropdownContext);\r\n    if(!context) {\r\n        throw new Error('useDropdown must be used within a DropdownProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\n\r\n// dropdown item\r\nconst DropdownItem = ({children, className, onClick, disabled=false, ...props}) => {\r\n    const {setIsOpen} = useDropdown();\r\n    return(\r\n        <div \r\n            onMouseUp={() => disabled ? null : setIsOpen(false)}\r\n            onClick={(e) => disabled ? null : onClick ? onClick(e): null}\r\n            className={`cnx_dropdown__item ${disabled ? 'cnx_dropdown__item_disabled}': ''} ${className}`}\r\n            {...props}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DropdownToggle = ({children, icon=true, className}) => {\r\n    const {setIsOpen, isOpen, setReference} = useDropdown();\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    return(\r\n        <div\r\n            ref={setReference}\r\n            className={`cnx_dropdown__toggle ${className}`}\r\n            onClick={toggle}\r\n        >\r\n\r\n            {children}\r\n            {icon && <i className={`fas fa-caret-${isOpen ? 'up' : 'down'} cnx_dropdown__toggle_icon`}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n// dropdown menu\r\nconst DropdownMenu = ({children, className, placement=\"bottom-start\", offset=[0, 3], ...props}) => {\r\n    const { reference, setIsOpen, isOpen} = useDropdown();\r\n    const [popperElement , setPopperElement] = React.useState(null);\r\n    const [width, setWidth] = React.useState(100);\r\n    \r\n    // generate random id for dropdown menu\r\n    const id = React.useMemo(() => Math.random().toString(36).substr(2, 9), []);\r\n\r\n\r\n    let DOM = document.getElementById(id);\r\n    const {styles, attributes} = usePopper(reference, popperElement, {\r\n        placement,\r\n        modifiers: [\r\n            {\r\n                name: 'offset',\r\n                options: {\r\n                    offset,\r\n                },\r\n            },\r\n            {\r\n                name: 'flip',\r\n                options: {\r\n                    fallbackPlacements: ['bottom', 'left', 'right', 'top' ],\r\n                },\r\n            }\r\n        ],\r\n    });\r\n\r\n\r\n    // min width\r\n    React.useEffect(() => {\r\n        if(reference){\r\n            setWidth(reference.offsetWidth);\r\n        }\r\n    }, [reference])\r\n\r\n\r\n    // outside click\r\n\r\n    React.useEffect(() => {\r\n        let timeout;\r\n        const handleClickOutside = (event) => {\r\n            if (popperElement && !popperElement.contains(event.target)) {\r\n                setIsOpen(false);\r\n                clearTimeout(timeout);\r\n                window.removeEventListener('click', handleClickOutside);\r\n            }\r\n        };\r\n\r\n\r\n        if(isOpen) {\r\n            timeout = setTimeout(() => {\r\n                window.addEventListener('click', handleClickOutside);\r\n            }, 100);\r\n        } else {\r\n            window.removeEventListener('click', handleClickOutside);\r\n        }\r\n        return () => {\r\n            window.removeEventListener('click', handleClickOutside);\r\n            clearTimeout(timeout);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isOpen, popperElement])\r\n\r\n    // create element in html body\r\n    React.useEffect(() => {\r\n        const el = document.createElement('div');\r\n        el.id = id;\r\n        document.body.appendChild(el);\r\n        \r\n        setPopperElement(el);\r\n        return () => {\r\n            document.body.removeChild(el);\r\n        }\r\n    }, [])\r\n\r\n    \r\n    if(!DOM) {\r\n        return null\r\n    }\r\n\r\n    return(\r\n       ReactDOM.createPortal(\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1 }}\r\n                        exit={{opacity: 0}}\r\n                        className={`cnx_dropdown__menu ${isOpen ? 'cnx_dropdown__menu_open' : ''} ${className}`}\r\n                        ref={setPopperElement}\r\n                        style={{...styles.popper, minWidth: width}}\r\n                        {...attributes.popper}\r\n                        {...props}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>, \r\n            DOM\r\n       )\r\n    )\r\n} \r\n\r\n\r\n\r\nconst Dropdown = ({children, className=''}) => {\r\n    return(\r\n        <div className={`cnx_dropdown ${className}`}>\r\n            <DropdownProvider>\r\n                {children}\r\n            </DropdownProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nDropdown.Item = DropdownItem;\r\nDropdown.Toggle = DropdownToggle;\r\nDropdown.Menu = DropdownMenu;\r\n\r\nexport default Dropdown;\r\n\r\n\r\n// type\r\n\r\nDropdownProvider.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\nDropdownItem.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    onClick: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    className: PropTypes.string,\r\n}\r\n\r\nDropdownToggle.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    icon: PropTypes.bool,\r\n    className: PropTypes.string,\r\n}\r\n\r\n\r\nDropdownMenu.propTypes = {\r\n    children: PropTypes.node.isRequired || PropTypes.arrayOf(PropTypes.node).isRequired,\r\n    className: PropTypes.string,\r\n    placement: PropTypes.string,\r\n    offset: PropTypes.arrayOf(PropTypes.number),\r\n}\r\n\r\nDropdown.propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.node.isRequired || PropTypes.arrayOf(PropTypes.node).isRequired,\r\n}","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ children, isOpen, className }) => {\r\n    const [isBrowser, setIsBrowser] = React.useState(false);\r\n    // generate random id for dropdown menu\r\n    const id = React.useMemo(() => Math.random().toString(36).substr(2, 9), []);\r\n    let DOM = document.getElementById(id);\r\n \r\n  \r\n    React.useEffect(() => {\r\n        setIsBrowser(true);\r\n        const el = document.createElement('div');\r\n        el.id = id;\r\n        document.body.appendChild(el);\r\n        return () => {\r\n            document.body.removeChild(el);\r\n        }\r\n    }, []);\r\n\r\n\r\n    // React.useEffect(() => {\r\n    //     if(isOpen){\r\n    //         document.body.classList.add('cnx_body-overflow-hidden')\r\n    //     }else{\r\n    //         document.body.classList.remove('cnx_body-overflow-hidden')\r\n    //     }\r\n    // }, [isOpen]) \r\n\r\n    if(!DOM) return;\r\n \r\n\r\n    const modalContent = isOpen ? (\r\n        <div className={`cnx_modal ${className}`}>\r\n            {children}\r\n        </div>\r\n    ) : null;\r\n\r\n    if (isBrowser) {\r\n        return ReactDOM.createPortal(\r\n            modalContent,\r\n            DOM\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nModal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    isOpen: PropTypes.bool.isRequired,\r\n    className: PropTypes.string,\r\n}\r\n\r\n\r\nexport default Modal;","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst SubmitButton = ({onClick, isLoading, className, variant=\"primary\", children, title}) => {\r\n    let body = document.querySelector('#body');\r\n\r\n    const handleOnClick = (e) => {\r\n        e.stopPropagation();\r\n        onClick(e)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(isLoading){\r\n            body.style.cursor = 'progress';\r\n        }else{\r\n            body.style.cursor = 'default';\r\n        }\r\n    }, [isLoading])\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {!isLoading ? (\r\n                <Button variant={variant} onClick={handleOnClick} className={className}>\r\n                    {children || title}\r\n                </Button>\r\n            ) : (\r\n                <div className=\"cursor-processing cnx__btn cnx__btn_sm cnx__btn_primary\">\r\n                    <div\r\n                        className=\"spinner-border text-white\"\r\n                        role=\"status\"\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                        }}\r\n                    ></div>\r\n                    Processing...\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from 'styled-components';\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useReplyTaskCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst AttachmentUpload = ({ comment, onReply, close }) => {\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = React.useState(null);\r\n    const [replyTaskComment, { isLoading }] = useReplyTaskCommentMutation();\r\n\r\n    const visibleToScreenRef = React.useRef(null);\r\n    // update on layout change\r\n    React.useLayoutEffect(() => {\r\n        if (visibleToScreenRef && visibleToScreenRef.current) {\r\n            visibleToScreenRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, []);\r\n\r\n    // handle update\r\n    const onUpdate = async (e) => {\r\n\r\n        // if not select any file show error message\r\n        if(_.size(files) === 0){\r\n           setError(p => ({...p, fileError: \"Please select at least one file.\"}));\r\n           return;\r\n        }\r\n\r\n        // create form data\r\n        const formData = new FormData();\r\n        formData.append(\"reply_text\", \"\");\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"parent_comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n        // submit form\r\n        try {\r\n            const response = await replyTaskComment({ formData, commentId: comment.id });\r\n            if(response){\r\n                toast.success(\"Your files has been successfully uploaded.\");\r\n                onReply();\r\n                close();\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        <UploadFilesInLine\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        />\r\n\r\n                        {error && error.fileError ? <ErrorText> {error.fileError} </ErrorText> :''}\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Processing..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onUpdate}>\r\n                                Reply\r\n                            </Button>\r\n                            <Button variant=\"secondary\" onClick={close}>\r\n                                Close\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n\r\n            <div ref={visibleToScreenRef} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AttachmentUpload;\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n`;\r\n","import { Menu } from \"@headlessui/react\";\r\nimport * as React from \"react\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\nimport { timeCalculate } from \"../../../utils/timeCalculate\";\r\nimport { User } from \"../../../utils/user-details\";\r\n\r\nconst Comment = ({ comment, onDelete }) => {\r\n    const auth = useAuth();\r\n    const user = comment?.user ? new User(comment.user) : null;\r\n    const [showDeletedComment, setShowDeletedComment] = React.useState(false);\r\n\r\n    if (comment.is_deleted && !showDeletedComment) {\r\n        return (\r\n            <div className=\"sp1_comment_deleted_status w-100\">\r\n                This Comment has been deleted\r\n                {auth.getRoleId() === 1 ? (\r\n                    <button onClick={() => setShowDeletedComment(!showDeletedComment)}>\r\n                        <i className=\"fa-solid fa-eye-slash\" />\r\n                    </button>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deletedClass = comment.is_deleted ? \"sp1_comment_deleted_status\" : \"\";\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`w-100 d-flex align-items-center  ${deletedClass}`}>\r\n                <div className=\"mr-2\">\r\n                    <div className=\"rounded-circle\">\r\n                        <img\r\n                            src={user?.getAvatar()}\r\n                            alt={user?.getName()}\r\n                            width=\"32px\"\r\n                            height=\"32px\"\r\n                            className=\"rounded-circle\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"w-100 d-flex align-items-center justify-between\">\r\n                    <div className=\"sp1_comment\">\r\n                        <span className=\"sp1_comment_user--name\">\r\n                            {user?.getName()} ({user?.getDesignationName()})\r\n                        </span>\r\n                        <span\r\n                            className=\"sp1_comment_time\"\r\n                            style={{ color: \"#888\" }}\r\n                        >\r\n                            {timeCalculate(comment.last_updated_date)}\r\n                        </span>\r\n                    </div>\r\n\r\n                    {comment.is_deleted && auth.getRoleId() === 1 ? (\r\n                        <button className=\"ml-auto\" onClick={() => setShowDeletedComment(!showDeletedComment)}>\r\n                            <i className=\"fa-solid fa-eye\" />\r\n                        </button>\r\n                    ) : null}\r\n                </div>\r\n\r\n\r\n\r\n                {/* <Dropdown className=\"sp1_comment_extend_menu_dd\">\r\n                    <Dropdown.Toggle icon={false}>\r\n                        <i className=\"fa-solid fa-ellipsis\"></i>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu placement=\"bottom-end\" className=\"sp1_comment_extend_menu\">\r\n                        <Dropdown.Item>Edit</Dropdown.Item>\r\n                        <Dropdown.Item>Delete</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown> */}\r\n                {comment.is_deleted || user.getId() !== auth.getId() ? null : (\r\n                    <Menu as=\"div\" className=\"sp1_comment_extend_menu\">\r\n                        <Menu.Button\r\n                            as=\"button\"\r\n                            className=\"sp1_comment_extend_menu-btn\"\r\n                        >\r\n                            <i className=\"fa-solid fa-ellipsis\"></i>\r\n                        </Menu.Button>\r\n                        <Menu.Items\r\n                            as=\"div\"\r\n                            placement=\"bottom-end\"\r\n                            className=\"sp1_comment_extend_menu__items\"\r\n                        >\r\n                            <Menu.Item\r\n                                as=\"div\"\r\n                                className=\"sp1_comment_extend_menu__item --disabled\"\r\n                            >\r\n                                Edit\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                as=\"div\"\r\n                                className=\"sp1_comment_extend_menu__item --delete\"\r\n                                onClick={(e) => onDelete(e, comment.id)}\r\n                            >\r\n                                Delete\r\n                            </Menu.Item>\r\n                        </Menu.Items>\r\n                    </Menu>\r\n                )}\r\n            </div>\r\n            {comment?.comment ? (\r\n                <div className=\"__box __reply_text w-100 my-1 text-dark border-rounded\">\r\n                    <div\r\n                        className=\"sp1_ck_content sp1_message--body\"\r\n                        style={{ overflow: \"hidden\" }}\r\n                        dangerouslySetInnerHTML={{ __html: comment?.comment }}\r\n                    />\r\n                </div>\r\n            ) : null}\r\n\r\n            <div className=\"comment_files mt-2\">\r\n                <FileUploader>\r\n                    {comment?.files_data?.map((file) => (\r\n                        <FileUploader.Preview\r\n                            key={file?.name}\r\n                            fileName={file?.name}\r\n                            downloadAble={true}\r\n                            deleteAble={false}\r\n                            downloadUrl={file?.url}\r\n                            previewUrl={file?.url}\r\n                            fileType={file?.icon}\r\n                            classname=\"comment_file\"\r\n                            ext=\"\"\r\n                        />\r\n                    ))}\r\n                </FileUploader>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default Comment;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useRemoveCommentPreviousUploadedFileMutation, useUpdateCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst EditComment = ({ comment, updateComments, close }) => {\r\n    const [text, setText] = React.useState(comment.comment);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [previousFiles, setPreviousFiles] = React.useState([\r\n        ..._.map(comment.files_data, (file) => ({ id: file.name, ...file })),\r\n    ]);\r\n\r\n    const [updateComment, { isLoading }] = useUpdateCommentMutation();\r\n    const [removeCommentPreviousUploadedFile, {isLoading: uploadingFileDeleting}] = useRemoveCommentPreviousUploadedFileMutation();\r\n\r\n    // const isLoading = false;\r\n\r\n    const handleEditor = (e, editor) => {\r\n        const data = editor.getData();\r\n        setText(data);\r\n    };\r\n\r\n    // handle previous uploaded file delete\r\n    const handlePreviousFileDeleted = (e, file) => {\r\n        console.log(\"deleted: \", file);\r\n        const data = {\r\n            task_id: comment.task_id,\r\n            comment_id: comment.id,\r\n            file_details: file\r\n        }\r\n        removeCommentPreviousUploadedFile(data)\r\n        .unwrap()\r\n        .then(res => {\r\n            console.log(res)\r\n        })\r\n        .catch(err => {console.log(err)})\r\n    };\r\n\r\n    // handle update\r\n    const onUpdate = (e) => {\r\n        const formData = new FormData();\r\n        formData.append(\"comment\", text);\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n\r\n        updateComment({ data: formData, commentId: comment.id })\r\n            .unwrap()\r\n            .then((res) => {\r\n                toast.success(\"Successfully Updated!\");\r\n                updateComments(res.data);\r\n\r\n                close();\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent\r\n                            data={text}\r\n                            onChange={handleEditor}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        {/* <UploadFilesInLine\r\n                            onPreviousFileDelete={handlePreviousFileDeleted}\r\n                            previous={previousFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        /> */}\r\n\r\n                        <FileUploader files={files} setFiles={setFiles}>\r\n                            <FileUploader.Input />\r\n                            {comment?.files_data?.map((file) => (\r\n                                <FileUploader.Preview\r\n                                    id={file}\r\n                                    key={file?.name}\r\n                                    fileName={file?.name}\r\n                                    downloadAble={true}\r\n                                    deleteAble={true}\r\n                                    onRemove={handlePreviousFileDeleted}\r\n                                    downloadUrl={file?.url}\r\n                                    previewUrl={file?.url}\r\n                                    fileType={file?.icon}\r\n                                    ext=\"\"\r\n                                />\r\n                            ))}\r\n\r\n                            <FileUploader.SelectedFiles>\r\n                                {({previews, onDelete}) => (\r\n                                   _.map(previews, (preview, index) => (\r\n                                        <FileUploader.Preview\r\n                                            id={index}\r\n                                            key={index}\r\n                                            fileName={preview?.name}\r\n                                            downloadAble={true}\r\n                                            deleteAble={true}\r\n                                            onRemove={onDelete}\r\n                                            previewUrl={preview.preview}\r\n                                            fileType={preview.type}\r\n                                            ext={preview.ext}\r\n                                        />\r\n                                   ))\r\n                                )}\r\n                            </FileUploader.SelectedFiles>\r\n                        </FileUploader>\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Updating..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onUpdate}>\r\n                                Update\r\n                            </Button>\r\n                            <Button variant=\"secondary\">Close</Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditComment;\r\n","import * as React from \"react\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\nimport Dropdown from \"../../components/Dropdown\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport EditComment from \"./EditComment\";\r\nimport ReplyComment from \"./ReplyComment\";\r\nimport AttachmentUpload from \"./AttachmentUpload\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\nimport _, { compact } from \"lodash\";\r\nimport AvatarGroup from \"../../../global/AvatarGroup\";\r\nimport {\r\n    useDeleteCommentMutation,\r\n    useGetTaskCommentRepliesQuery,\r\n} from \"../../../services/api/TaskCommentApiSlice\";\r\nimport Loader from \"../../../global/Loader\";\r\nimport { BsFillPlusCircleFill } from \"react-icons/bs\";\r\nimport Comment from \"./Comment\";\r\nimport ReplyCommentPreview from \"./ReplyCommentPreview\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst InnerComment = ({ comment, updateComments }) => {\r\n    const [showReplies, setShowReplies] = React.useState(false);\r\n    const [replyMode, setReplyMode] = React.useState(false);\r\n    const [activeEditMode, setActiveEditModal] = React.useState(false);\r\n    const [uploadAttachment, setUploadAttachment] = React.useState(false);\r\n    const [selectedEmoji, setSelectedEmoji] = React.useState(\"\");\r\n    const user = comment?.user ? new User(comment.user) : null;\r\n    const auth = useAuth();\r\n\r\n    const [isRepliesLoading, setIsRepliesLoading] = React.useState(false);\r\n\r\n    // api hook\r\n    // handle delete\r\n    const [deleteComment, { isLoading: isDeleting }] =\r\n        useDeleteCommentMutation();\r\n\r\n    const handleReplyButtonClick = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(true);\r\n        setActiveEditModal(false);\r\n        setUploadAttachment(false);\r\n    };\r\n\r\n    // handle edit\r\n    const handleEditButton = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(false);\r\n        setUploadAttachment(false);\r\n        setActiveEditModal(true);\r\n    };\r\n\r\n    const handleUploadAttachment = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(false);\r\n        setActiveEditModal(false);\r\n        setUploadAttachment(true);\r\n    };\r\n\r\n    // handle comment delete\r\n    // delete comment\r\n    const handleDeleteComment = (e, commentId) => {\r\n        e.preventDefault();\r\n\r\n        Swal.fire({\r\n            icon: \"warning\",\r\n            title: `Are you sure you want to delete this comment?`,\r\n            html: \"This action cannot be undone. Deleting this comment will permanently remove it from the discussion.\",\r\n            showDenyButton: true,\r\n            denyButtonText: \"Cancel\",\r\n            // denyButtonColor: '#ffffff',\r\n\r\n            showConfirmButton: true,\r\n            confirmButtonText: \"Yes, Delete It!\",\r\n            confirmButtonColor: \"#E73819\",\r\n            customClass: {\r\n                confirmButton: \"delete-confirm-button\",\r\n                denyButton: \"delete-deny-button\",\r\n            },\r\n            buttonsStyling: false,\r\n        }).then((res) => {\r\n            if (res.isConfirmed) {\r\n                deleteCommentData();\r\n            }\r\n        });\r\n\r\n        // delete\r\n        const deleteCommentData = async () => {\r\n            const response = await deleteComment(commentId).unwrap();\r\n            if (response) {\r\n                toast.success(\"Comment Deleted Successfully\");\r\n            }\r\n        };\r\n    };\r\n\r\n    // emoji selection control\r\n    const handleEmojiSelect = (emojiData, event) => {\r\n        setSelectedEmoji(emojiData.unified);\r\n    };\r\n\r\n    // permission\r\n    const CAN_EDIT_COMMENT = auth.getId() === user.getId();\r\n\r\n    // console.log({ comment });\r\n\r\n    return (\r\n        <div className=\"sp1_task_comment_send_box sp1_task_comment_replied pl-2 pr-3 pb-2\">\r\n            <div\r\n                className=\"__send-box flex-column align-items-start\"\r\n                style={{ maxWidth: \"100%\" }}\r\n            >\r\n                {/* show comment details */}\r\n                <Comment comment={comment} onDelete={handleDeleteComment} />\r\n\r\n                <Switch>\r\n                    <Switch.Case\r\n                        condition={\r\n                            !comment.is_deleted || auth.getRoleId() === 1\r\n                        }\r\n                    >\r\n                        <div className=\"sp1_task_comment_actions\">\r\n                            {/* <Dropdown>\r\n                                <Dropdown.Toggle icon={false}>\r\n                                    <i className=\"fa-regular fa-face-smile\"></i>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    <EmojiPicker lazyLoadEmojis={true} />\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n\r\n                            <span>•</span> */}\r\n                            <Switch.Case condition={!comment.is_deleted}>\r\n                                <a href=\"#\" onClick={handleReplyButtonClick}>\r\n                                    Reply\r\n                                </a>\r\n                                <span>•</span>\r\n                                <a href=\"#\" onClick={handleUploadAttachment}>\r\n                                    <i className=\"fa-solid fa-paperclip\"></i>\r\n                                </a>\r\n                            </Switch.Case>\r\n\r\n                            {/* <Switch>\r\n                                <Switch.Case condition={CAN_EDIT_COMMENT}>\r\n                                    <a href=\"#\" onClick={handleEditButton}>\r\n                                        Edit\r\n                                    </a>\r\n                                    <span>•</span>\r\n                                </Switch.Case>\r\n                            </Switch>\r\n                            */}\r\n\r\n                            {/* <a href=\"#\">Delete</a>\r\n                <span>•</span> */}\r\n\r\n                            <Switch>\r\n                                <Switch.Case\r\n                                    condition={comment?.total_replies > 0}\r\n                                >\r\n                                    <div\r\n                                        className=\"replies_count\"\r\n                                        onClick={() =>\r\n                                            setShowReplies(!showReplies)\r\n                                        }\r\n                                    >\r\n                                        <AvatarGroup\r\n                                            users={_.map(\r\n                                                comment?.replies_users,\r\n                                                (user) => ({\r\n                                                    ...user,\r\n                                                    src: user.image_url,\r\n                                                })\r\n                                            )}\r\n                                        />\r\n                                        <div className=\"ml-1 mr-2\">\r\n                                            {comment.total_replies} replies\r\n                                        </div>\r\n                                        {isRepliesLoading ? (\r\n                                            <Loader title=\"\" />\r\n                                        ) : null}\r\n                                    </div>\r\n                                    {/* </div> */}\r\n                                </Switch.Case>\r\n                            </Switch>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n\r\n                {/* reply box */}\r\n\r\n                {showReplies ? (\r\n                    <>\r\n                        <ReplyCommentPreview\r\n                            comment={comment}\r\n                            onReply={handleReplyButtonClick}\r\n                            showReplyButton={!replyMode}\r\n                            onDelete={handleDeleteComment}\r\n                            cb={(loading) => setIsRepliesLoading(loading)}\r\n                        />\r\n                    </>\r\n                ) : null}\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={activeEditMode}>\r\n                        <EditComment\r\n                            comment={comment}\r\n                            updateComments={updateComments}\r\n                            close={() => setActiveEditModal(false)}\r\n                        />\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={replyMode}>\r\n                        <ReplyComment\r\n                            comment={comment}\r\n                            onReply={() => {\r\n                                setShowReplies(true);\r\n                            }}\r\n                            close={() => setReplyMode(false)}\r\n                        />\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={uploadAttachment}>\r\n                        <AttachmentUpload\r\n                            comment={comment}\r\n                            onReply={() => setShowReplies(true)}\r\n                            close={() => setUploadAttachment(false)}\r\n                        />\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InnerComment;\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from 'styled-components';\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useReplyTaskCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst ReplyComment = ({ comment, close, onReply }) => {\r\n    const [text, setText] = React.useState(\"\");\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = React.useState(null);\r\n\r\n    // comment reply api hook from redux toolkit\r\n    const [replyTaskComment, { isLoading }] = useReplyTaskCommentMutation();\r\n\r\n    const visibleToScreenRef = React.useRef(null); // reference element\r\n    // update on layout change\r\n    React.useLayoutEffect(() => {\r\n        if (visibleToScreenRef && visibleToScreenRef.current) {\r\n            // scroll into view on visible\r\n            visibleToScreenRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, []);\r\n\r\n    // handle ck editor text change\r\n    const handleEditor = (e, editor) => {\r\n        const data = editor.getData(); // get editor text\r\n        setText(data);\r\n    };\r\n\r\n    // handle update\r\n    const onReplied = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // if text not provide show error message\r\n        if(!text){\r\n            setError(s => ({...s, comment: \"Please provide a comment before submitting.\"}));\r\n            return;\r\n        }\r\n\r\n        // make form\r\n        const formData = new FormData();\r\n        formData.append(\"reply_text\", text);\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"parent_comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n        // show formData\r\n        // for(const [key, value] of formData.entries()){\r\n        //     console.log(key, ': ', value)\r\n        // }\r\n\r\n\r\n        // submit form\r\n        await replyTaskComment({ formData, commentId: comment.id }).then(\r\n            (res) => {\r\n                toast.success(\"Your reply has been successfully submitted.\");\r\n                onReply();\r\n                close();\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <h6>Reply: <sup >(<span className=\"text-danger\"> Require </span>)</sup></h6>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent\r\n                            data={text}\r\n                            onChange={handleEditor}\r\n                        />\r\n                    </div>\r\n                    {error?.comment ? <ErrorText>{error?.comment}</ErrorText> : null }\r\n\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        <UploadFilesInLine\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        />\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Processing..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onReplied}>\r\n                                Reply\r\n                            </Button>\r\n                            <Button onClick={close} variant=\"secondary\">\r\n                                Close\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n\r\n            <div ref={visibleToScreenRef} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReplyComment;\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n    padding: 10px 0;\r\n`;\r\n","import * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useGetTaskCommentRepliesQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport { BsFillPlusCircleFill } from \"react-icons/bs\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst ReplyCommentPreview = ({\r\n    comment,\r\n    cb,\r\n    onReply,\r\n    showReplyButton,\r\n    onDelete,\r\n}) => {\r\n    const { data, isLoading } = useGetTaskCommentRepliesQuery(comment.id, {\r\n        refetchOnMountOrArgChange: true,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        cb(isLoading);\r\n    }, [isLoading]);\r\n\r\n    return (\r\n        <div className=\"sp1_task_replies_comment_list ml-3 w-100\">\r\n            {_.map(data, (r, i) => (\r\n                <div\r\n                    key={i}\r\n                    className=\"pl-3 pr-4 border-left border__left py-3 w-100\"\r\n                >\r\n                    <Comment comment={r} onDelete={onDelete} />\r\n                </div>\r\n            ))}\r\n\r\n            {!comment.is_deleted && !isLoading && showReplyButton ? (\r\n                <div className=\"border-left border__left reply_button pl-3\">\r\n                    <button onClick={onReply}>\r\n                        {/* <BsFillPlusCircleFill className=\"fs-16 icon\" /> */}\r\n                        <span>+ Reply</span>\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReplyCommentPreview;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { CompareDate } from '../../utils/dateController';\r\n\r\nconst d = new CompareDate();\r\nexport const useDailySubmission = () => {\r\n    const [isEnable, setIsEnable] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                // Fetch server time\r\n                let response = await axios.get('/server-time-status');\r\n                const date = response.data.data;\r\n\r\n                // Get the current day abbreviation (e.g., 'Sat', 'Sun', 'Mon', etc.)\r\n                const dayAbbreviation = d.dayjs(date).format('ddd');\r\n\r\n                // Define the cutoff times\r\n                const saturdayCutoffTime = d.dayjs(date).set('hour', 12).set('minute', 45);\r\n                const otherDaysCutoffTime = d.dayjs(date).set('hour', 16).set('minute', 45);\r\n\r\n                // Get the current time\r\n                const currentTime = d.dayjs(date);\r\n\r\n                // Check if it's Saturday or not\r\n                if (dayAbbreviation === 'Sat') {\r\n                    // Check if the current time is greater than 12:30 PM on Saturday\r\n                    if (currentTime.isSameOrAfter(saturdayCutoffTime)) {\r\n                       setIsEnable(true);\r\n                    }else{\r\n                        setIsEnable(false);\r\n                    }\r\n                } else {\r\n                    // Check if the current time is greater than 4:30 PM on other days\r\n                    if (currentTime.isSameOrAfter(otherDaysCutoffTime)) {\r\n                        setIsEnable(true);\r\n                    }else setIsEnable(false);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n    return {isEnable}\r\n}\r\n","import dayjs from \"dayjs\";\r\n\r\nexport const timeCalculate = (date) => {\r\n    const providedDate = dayjs(date);\r\n    const currentDate = dayjs();\r\n    const diff = currentDate.diff(providedDate, 'minute');\r\n    if (diff < 1) {\r\n        return 'Just now';\r\n    } else if (diff < 60) {\r\n        return `${diff} minute${diff > 1 ? 's' : ''} ago`;\r\n    } else if (diff < 1440) { // Less than 24 hours\r\n        const hours = Math.floor(diff / 60);\r\n        return `${hours} hour${hours > 1 ? 's' : ''} ago`;\r\n    } else if (diff < 10080) { // Less than 7 days\r\n        const days = Math.floor(diff / 1440);\r\n        return `${days} day${days > 1 ? 's' : ''} ago`\r\n    } else {\r\n        return providedDate.format('MMM DD, YYYY [at] h:mm A');\r\n    }\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp1_checkbox--label.disable{color:#aaa}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/UI/form/checkbox.css\"],\"names\":[],\"mappings\":\"AAAA,6BACI,UACJ\",\"sourcesContent\":[\".sp1_checkbox--label.disable {\\r\\n    color: #aaa;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".fpsqco3G\\\\+Hf7gF1vYUOU9Q\\\\=\\\\={flex-direction:row-reverse;margin:auto;width:-moz-fit-content;width:fit-content}.rpJ2L0Uklhu0QGtrM7rb3Q\\\\=\\\\=,.fpsqco3G\\\\+Hf7gF1vYUOU9Q\\\\=\\\\={display:flex;padding:0}.rpJ2L0Uklhu0QGtrM7rb3Q\\\\=\\\\={align-items:center;background-color:#ededed;border:2px solid #f4f4f4;border-radius:100%;box-shadow:0 0 2px rgba(0,0,0,.1);height:24px;justify-content:center;margin-left:-10px;width:24px}.N71c75OLkFHuPvS5HeIkpQ\\\\=\\\\={border-radius:100%;height:100%;object-fit:fill;-o-object-fit:fill;width:100%}.\\\\+F5c8j7QS2thczRvvUXBlw\\\\=\\\\={background-color:#276fec;color:#fff;text-decoration:none!important}.\\\\+F5c8j7QS2thczRvvUXBlw\\\\=\\\\= span{font-size:12px;text-decoration:none!important}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/global/AvatarGroup.module.css\"],\"names\":[],\"mappings\":\"AAAA,6BAKI,0BAA2B,CAF3B,WAAY,CAFZ,sBAAkB,CAAlB,iBAKJ,CAEA,yDANI,YAAa,CAEb,SAgBJ,CAZA,4BAQI,kBAAmB,CAFnB,wBAAyB,CAFzB,wBAAqC,CADrC,kBAAmB,CAQnB,iCAAoC,CATpC,WAAY,CAOZ,sBAAuB,CACvB,iBAAkB,CATlB,UAWJ,CAGA,4BAGI,kBAAmB,CADnB,WAAY,CAEZ,eAAgB,CAChB,kBAAmB,CAJnB,UAKJ,CAGA,6BACI,wBAAmC,CACnC,UAAW,CACX,8BACJ,CAEA,kCACI,cAAe,CACf,8BACJ\",\"sourcesContent\":[\".avatar_group{\\r\\n    width: fit-content;\\r\\n    display: flex;\\r\\n    margin: auto;\\r\\n    padding: 0;\\r\\n    flex-direction: row-reverse;\\r\\n}\\r\\n\\r\\n.avatar{\\r\\n    width: 24px;\\r\\n    height: 24px;\\r\\n    border-radius: 100%;\\r\\n    border: 2px solid rgb(244, 244, 244) ;\\r\\n    padding: 0;\\r\\n    background-color: #ededed;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-left: -10px;\\r\\n    box-shadow: 0 0 2px rgb(0 0 0 / 10%);\\r\\n}\\r\\n\\r\\n\\r\\n.avatar_image{\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    border-radius: 100%;\\r\\n    object-fit: fill;\\r\\n    -o-object-fit: fill;\\r\\n}\\r\\n\\r\\n\\r\\n.empty_avatar{\\r\\n    background-color: rgb(39, 111, 236);\\r\\n    color: #fff;\\r\\n    text-decoration:none !important;\\r\\n}\\r\\n\\r\\n.empty_avatar span{\\r\\n    font-size: 12px;\\r\\n    text-decoration:none !important;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"avatar_group\": \"fpsqco3G+Hf7gF1vYUOU9Q==\",\n\t\"avatar\": \"rpJ2L0Uklhu0QGtrM7rb3Q==\",\n\t\"avatar_image\": \"N71c75OLkFHuPvS5HeIkpQ==\",\n\t\"empty_avatar\": \"+F5c8j7QS2thczRvvUXBlw==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._8xXZnlhj3eHMkUUObnMmZw\\\\=\\\\={margin:2rem auto;max-width:90%;min-height:10rem;padding:1rem}._7n-CpR1Fy19zjUlU6WsThQ\\\\=\\\\={margin:0 auto}.SxO-JfljZkxUGDLmlQviZg\\\\=\\\\= th{background-color:#222;color:#fff;font-weight:700;padding:15px 25px;text-align:center}.YQAkXuuhsOlsr6ZIt378wQ\\\\=\\\\= td{padding:15px;text-align:center}.A5JA7hH72pS6vSurU7mqwQ\\\\=\\\\={padding:2rem 15px 15px}.A5JA7hH72pS6vSurU7mqwQ\\\\=\\\\=,.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={background-color:#fff}.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={border-radius:5px;margin-bottom:16px}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=,.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={position:relative}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\={background-color:transparent;border:1px solid rgba(0,0,0,.37);border-radius:4px;color:rgba(0,0,0,.85);display:block;font-size:16px;height:40px;margin:0 auto;outline:none!important;padding:6px 4px 4px 14px;transition:all .2s ease-in-out;width:100%}.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\={background:#fff;color:rgba(0,0,0,.519);cursor:text;display:inline-block;font-size:14px;font-weight:700;height:14px;left:12px;line-height:14px;margin:0 auto;padding:0 4px;position:absolute;text-align:left;top:30%;transition:all .15s ease-in-out}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:focus,.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:hover{border:1px solid #000}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:focus+.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\=,.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:valid+.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\={color:#000;font-weight:700;top:-6px}.sU7OfO8z\\\\+2G5bBnOIGPJmA\\\\=\\\\={background-color:inherit;color:#e32b2b;padding:0 0 0 3px}.sU7OfO8z\\\\+2G5bBnOIGPJmA\\\\=\\\\=:after{content:\\\"*\\\"}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css\"],\"names\":[],\"mappings\":\"AAIA,6BAGE,gBAAiB,CADjB,aAAc,CAEd,gBAAiB,CAHjB,YAIF,CAEA,6BACE,aACF,CAEA,+BACE,qBAAiC,CAGjC,UAAY,CACZ,eAAiB,CAHjB,iBAAkB,CAClB,iBAGF,CAMA,+BAEE,YAAa,CADb,iBAEF,CAGA,4BAGE,sBAEF,CAGA,wDAJE,qBASF,CALA,4BAIE,iBAAkB,CAHlB,kBAIF,CACA,0DAJE,iBAkBF,CAdA,8BAME,4BAA6B,CAF7B,gCAAiC,CACjC,iBAAkB,CAOlB,qBAAuB,CAVvB,aAAc,CASd,cAAe,CAFf,WAAY,CAFZ,aAAgB,CAGhB,sBAAwB,CAFxB,wBAAyB,CAKzB,8BAA+B,CAV/B,UAWF,CAEA,4BAWE,eAAiB,CACjB,sBAA2B,CAE3B,WAAY,CATZ,oBAAqB,CAIrB,cAAe,CACf,eAAiB,CAHjB,WAAY,CAJZ,SAAU,CAKV,gBAAiB,CAKjB,aAAgB,CAPhB,aAAc,CALd,iBAAkB,CAGlB,eAAgB,CAFhB,OAAQ,CAaR,+BACF,CACA,wEAA6B,qBAAwB,CAErD,gIAEE,UAAW,CACX,eAAiB,CAFjB,QAGF,CACA,6BACI,wBAAyB,CACzB,aAAc,CAEd,iBACJ,CACA,mCACI,WACJ\",\"sourcesContent\":[\".bdr{\\r\\n  /* border: solid; */\\r\\n}\\r\\n\\r\\n.container{\\r\\n  padding: 1rem;\\r\\n  max-width: 90%;\\r\\n  margin: 2rem auto;\\r\\n  min-height: 10rem;\\r\\n}\\r\\n\\r\\n.myTable{\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.headerRow th{\\r\\n  background-color: rgb(34, 34, 34);\\r\\n  padding: 15px 25px;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.bodyRow tr{\\r\\n  /* border-radius: 5px; */\\r\\n}\\r\\n\\r\\n.bodyRow td{\\r\\n  text-align: center;\\r\\n  padding: 15px;\\r\\n}\\r\\n\\r\\n\\r\\n.form{\\r\\n  /* border: solid; */\\r\\n  padding: 15px;\\r\\n  padding-top: 2rem;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n/* floating .label input field */\\r\\n.wrapper {\\r\\n  margin-bottom: 16px;\\r\\n  position: relative;\\r\\n  background-color: white;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n.input {\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  border: 1px solid rgba(0,0,0,.37);\\r\\n  border-radius: 4px;\\r\\n  background-color: transparent;\\r\\n  margin: 0px auto;\\r\\n  padding: 6px 4px 4px 14px;\\r\\n  height: 40px;\\r\\n  outline: none !important;\\r\\n  font-size: 16px;\\r\\n  color: rgba(0,0,0,0.85);\\r\\n  transition: all .2s ease-in-out;\\r\\n}\\r\\n\\r\\n.label {\\r\\n  position: absolute;\\r\\n  top: 30%; \\r\\n  left: 12px;\\r\\n  text-align: left;\\r\\n  display: inline-block;\\r\\n  padding: 0 4px;\\r\\n  height: 14px;\\r\\n  line-height: 14px;\\r\\n  font-size: 14px;\\r\\n  font-weight: bold;\\r\\n  background: white;\\r\\n  color: rgba(0, 0, 0, 0.519);\\r\\n  margin: 0px auto;\\r\\n  cursor: text;\\r\\n  transition: all .15s ease-in-out;\\r\\n}\\r\\n.input:hover, .input:focus { border: 1px solid #000; }\\r\\n\\r\\n.input:valid + .label, .input:focus + .label { \\r\\n  top: -6px;\\r\\n  color: #000;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.formAsterisk {\\r\\n    background-color: inherit;\\r\\n    color: #e32b2b;\\r\\n    padding: 0;\\r\\n    padding-left: 3px;\\r\\n}\\r\\n.formAsterisk:after {\\r\\n    content: \\\"*\\\";\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"_8xXZnlhj3eHMkUUObnMmZw==\",\n\t\"myTable\": \"_7n-CpR1Fy19zjUlU6WsThQ==\",\n\t\"headerRow\": \"SxO-JfljZkxUGDLmlQviZg==\",\n\t\"bodyRow\": \"YQAkXuuhsOlsr6ZIt378wQ==\",\n\t\"form\": \"A5JA7hH72pS6vSurU7mqwQ==\",\n\t\"wrapper\": \"sHn0ikpJ-siiyePWSQMFFA==\",\n\t\"input\": \"YRqnDsOCvlyUNmnxtR++ug==\",\n\t\"label\": \"P-INSzqztmJ-mpd7zZK14w==\",\n\t\"formAsterisk\": \"sU7OfO8z+2G5bBnOIGPJmA==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp1_tlr_tbl_wrapper{overflow-y:auto}.sp1_tlr_table{width:100%}.sp1_tlr_th{border-bottom:2px solid #dbe4ff;color:#373737;height:36px;padding:3px 10px;position:sticky;text-align:center;top:0;z-index:10}.sp1_tlr_td{border-bottom:1px solid #dbe4ff;max-width:350px;min-width:150px;padding:10px;text-align:center}.sp1_tlr_tbody>.sp1_tlr_tr:hover .sp1_tlr_td{background-color:rgba(233,235,240,.349)}.sp1_tlr_tr .sp1_tlr_td_marged{background-color:rgba(243,244,248,.349);border-inline:1px solid #dbe4ff}.sp1_tlr_tr .sp1_tlr_td_marged:first-child,.sp1_tlr_tr .sp1_tlr_td_marged:nth-child(2){border-left-color:transparent}.sp1_tlr_td_border{border-bottom:2px solid #dbe4ff}.sp1_drag_th.__dragging{background-color:hsla(222,6%,69%,.222)}.sp1_drag_th.__drop-area{background-color:rgba(34,45,71,.349)}.from_body{padding:2rem 1rem 3rem}.openRow_bg{background-color:hsla(218,7%,78%,.32)!important;border:none!important;overflow:visible}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css\"],\"names\":[],\"mappings\":\"AAAA,qBACI,eACJ,CAEA,eACI,UACJ,CAEA,YAII,+BAA2C,CAK3C,aAAsB,CARtB,WAAY,CACZ,gBAAiB,CAGjB,eAAgB,CAGhB,iBAAkB,CADlB,KAAM,CADN,UAIJ,CAEA,YAII,+BAA2C,CAF3C,eAAgB,CAChB,eAAgB,CAFhB,YAAa,CAIb,iBACJ,CAEA,6CACI,uCACJ,CAEA,+BACI,uCAA2C,CAC3C,+BACJ,CAEA,uFAEI,6BACJ,CAEA,mBACI,+BACJ,CAQA,wBACI,sCACJ,CAEA,yBACI,oCACJ,CAEA,WACI,sBACJ,CAGA,YACI,+CAAqD,CACrD,qBAAuB,CACvB,gBACJ\",\"sourcesContent\":[\".sp1_tlr_tbl_wrapper{\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n.sp1_tlr_table{\\r\\n    width: 100%; \\r\\n}\\r\\n\\r\\n.sp1_tlr_th {\\r\\n    height: 36px;\\r\\n    padding: 3px 10px;\\r\\n    /* background-color: rgb(55, 55, 55); */\\r\\n    border-bottom: 2px solid rgb(219, 228, 255);\\r\\n    position: sticky;\\r\\n    z-index: 10;\\r\\n    top: 0;\\r\\n    text-align: center;\\r\\n    color: rgb(55, 55, 55);\\r\\n}\\r\\n\\r\\n.sp1_tlr_td{\\r\\n    padding: 10px;\\r\\n    max-width: 350px;\\r\\n    min-width: 150px;\\r\\n    border-bottom: 1px solid rgb(219, 228, 255);\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.sp1_tlr_tbody > .sp1_tlr_tr:hover .sp1_tlr_td{\\r\\n    background-color:rgba(233, 235, 240, 0.349);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged{\\r\\n    background-color:rgba(243, 244, 248, 0.349);\\r\\n    border-inline: 1px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged:first-child,\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged:nth-child(2){\\r\\n    border-left-color: transparent;\\r\\n}\\r\\n\\r\\n.sp1_tlr_td_border{\\r\\n    border-bottom: 2px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n/* .sp1_tlr_tbody > .sp1_tlr_tr:hover .sp1_tlr_td_hover-disable{\\r\\n   background-color: #fff !important; \\r\\n} */\\r\\n\\r\\n\\r\\n\\r\\n.sp1_drag_th.__dragging {\\r\\n    background-color: rgba(170, 173, 180, 0.222);\\r\\n}\\r\\n\\r\\n.sp1_drag_th.__drop-area {\\r\\n    background-color: rgba(34, 45, 71, 0.349);\\r\\n}\\r\\n\\r\\n.from_body{\\r\\n    padding: 2rem 1rem 3rem;\\r\\n}\\r\\n\\r\\n\\r\\n.openRow_bg{\\r\\n    background-color:rgba(194, 197, 202, 0.32) !important;\\r\\n    border: none !important;\\r\\n    overflow: visible;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".QWT8SKIOKp3nCIlWnmqvlA\\\\=\\\\={box-shadow:0 10px 16px rgba(0,0,0,.2);font-family:Inter;font-weight:400;left:50%;max-width:800px;position:absolute;top:50%;transform:translate(-50%,-50%);width:100%}._7q1rGYYnwZMgY33fyvn5Rw\\\\=\\\\={background-color:#f3f3f3}._7q1rGYYnwZMgY33fyvn5Rw\\\\=\\\\= h6{font-weight:600;margin:0}.xFa21Dq-VWzqARlTwQw6ug\\\\=\\\\=:not(:last-child){border-bottom:1px dashed rgba(0,0,0,.1)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css\"],\"names\":[],\"mappings\":\"AAAA,4BASI,qCAAwC,CAFxC,iBAAkB,CAClB,eAAgB,CAHhB,QAAS,CAJT,eAAgB,CAEhB,iBAAkB,CAClB,OAAQ,CAER,8BAAgC,CAJhC,UAQJ,CAGA,6BACI,wBACJ,CAEA,gCAEI,eAAgB,CADhB,QAEJ,CAEA,6CACI,uCACJ\",\"sourcesContent\":[\".form_card{\\r\\n    max-width: 800px;\\r\\n    width: 100%;\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n    font-family: Inter;\\r\\n    font-weight: 400;\\r\\n    box-shadow: 0 10px 16px rgb(0 0 0 / 20%);\\r\\n}\\r\\n\\r\\n\\r\\n.form_card_head{\\r\\n    background-color: rgb(243, 243, 243);\\r\\n}\\r\\n\\r\\n.form_card_head h6{\\r\\n    margin: 0;\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.list_border:not(:last-child){\\r\\n    border-bottom: 1px dashed rgb(0 0 0 / 10%);\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"form_card\": \"QWT8SKIOKp3nCIlWnmqvlA==\",\n\t\"form_card_head\": \"_7q1rGYYnwZMgY33fyvn5Rw==\",\n\t\"list_border\": \"xFa21Dq-VWzqARlTwQw6ug==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["_ref","fullScreenView","width","toggleRef","isOpen","children","_jsx","Modal","style","position","top","left","padding","height","className","maxHeight","paddingTop","margin","handleContainer","_ref$toggleRef","close","_ref$comments","task","comments","taskId","onCommentPost","singleCommentId","_ref$showCommentEdito","showCommentEditor","_ref$showSearchBtn","showSearchBtn","_ref$showFullScreenBt","showFullScreenBtn","_ref$height","commentState","useCommentStore","param","useParams","useWindowSize","_useState2","_slicedToArray","useState","setFullScreenView","_useGetCommentsQuery","useGetCommentsQuery","data","isFetching","isLoading","refetch","useEffect","CommentContainerDecider","CommentsBody","filter","comment","id","loading","fetching","options","locals","value","onChange","label","checked","_ref$className","_ref$labelClassName","labelClassName","_ref$disabled","disabled","_objectWithoutProperties","_excluded","_jsxs","concat","type","_ref$users","users","_ref$show","show","len","_","avatars","splice","styles","avatar_group","avatar","empty_avatar","user","i","src","alt","avatar_image","rating","iconClassName","_Fragment","_toConsumableArray","Array","map","r","idx","parseInt","color","useRevision","_task$category","taskType","category","getLeadDeveloperAcknowladgementOptions","revision","isDeniable","getProjectManagerAcknowladgementOptions","_regeneratorRuntime","e","t","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","key","input","hint","prim","toPrimitive","undefined","res","String","Number","_toPrimitive","_toPropertyKey","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","err","arr","isArray","_arrayWithHoles","_iterableToArrayLimit","minLen","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","arr2","useSingleTask","User","_window","window","Laravel","_useLazyGetTaskDetail2","useLazyGetTaskDetailsQuery","getTaskDetails","taskDetailsIsFetching","getTaskById","_callee","_res$parent_task_head","_context","unwrap","taskFiles","parent_task_action","parent_task_title","parent_task_heading","heading","working_environment","working_environment_data","pm_task_guideline","task_guideline","task_revisions","revisions","taskSubTask","Sub_Tasks","t0","console","log","_x","_useLazyGetSubmittedT2","useLazyGetSubmittedTaskQuery","getSubmittedTask","submittionInfoIsFetching","getSubmittionInfo","_ref2","_callee2","_context2","_x2","_useApproveSubmittedT2","useApproveSubmittedTaskMutation","approveSubmittedTask","approveTaskLoadingStatus","approveTask","_ref3","_callee3","callback","_context3","Swal","mixin","toast","showConfirmButton","timer","timerProgressBar","fire","icon","title","_x3","_x4","taskCommentApiSlice","apiSlice","injectEndpoints","endpoints","build","getTaskComments","query","providesTags","getTaskCommentReplies","commentId","getTaskCommentWidgetData","getPreviewCommentData","updateComment","mutation","url","body","formData","invalidatesTags","removeCommentPreviousUploadedFile","task_id","comment_id","_token","document","querySelector","getAttribute","replyTaskComment","result","deleteComment","useGetTaskCommentsQuery","useGetTaskCommentRepliesQuery","useUpdateCommentMutation","useGetTaskCommentWidgetDataQuery","useLazyGetTaskCommentWidgetDataQuery","useGetPreviewCommentDataQuery","useRemoveCommentPreviousUploadedFileMutation","useReplyTaskCommentMutation","useDeleteCommentMutation","_ref$expendable","expendable","headingClass","headingStyle","_React$useState2","React","expend","setExpend","init","onClick","cursor","AnimatePresence","motion","div","initial","animate","exit","text","editorContainerClass","workEnv","useSelector","subTask","isLong","showText","ref","useRef","useClickAway","dangerouslySetInnerHTML","__html","href","preventDefault","background","target","site_url","frontend_password","login_url","email","password","index","date","time","minHeight","revisionAcknowledgement","isDeny","isAccept","textIndent","gap","Placeholder","singleTaskPagePermission","auth","getRoleId","projectManagerId","getId","timeControlPermision","status","loggedUser","statusPermission","assigneePermission","statusId","assignedUser","assigneeTo","_loggedUser","includes","subtask","markAsCompletedButtonPermission","approveButtonPermission","assigneeBy","needRevisionPermision","_ref4","revisionButtonPermission","_ref5","submitForClientApproval","_ref6","clientApproveConfirmationButtonPermission","_ref7","subTaskCreationPermision","_ref9","assignedBy","styled","_templateObject","modalRef","setModalRef","_usePopper","usePopper","placement","modifiers","offset","attributes","popper","pointerEvents","zIndex","opacity","Shadow","ReactDOM","maxWidth","Button","minWidth","CKEditorComponent","WidgetItem","setIsOpen","overflow","is_deleted","mention","timeCalculate","deleted_at","created_date","CommentsContainer","skip","sortedComments","sort","b","a_day","dayjs","diff","handleOrdering","modalIsOpen","setModalIsOpen","_React$useState4","openAddCommentModal","setOpenAddCommentModal","_React$useState6","modalToggleRef","setModalToggleRef","toggleModalButton","_useGetTaskCommentsQu","unshift","role","border","borderRightColor","variant","fontSize","CommentWritingModal","Widget","item","setModalData","modalData","verticalAlign","textAlign","developer_name","submission_creation_date","format","AiFillEyeInvisible","AiFillEye","toggle","content","singleData","DailySubmissionItem","CustomModal","timeFormatter","_time$split$0$split2","split","year","month","month_name","columnSchema","header","draggable","accessorKey","cell","getValue","convertTime","DataTable","tableData","tableColumns","tableName","_data$daily_submissio","_useState4","modalTableIsOpen","setModalTableIsOpen","_useState6","modalRefButton","setModalRefButton","_useState8","singleUserSubmissionTableDrawerRef","setSingleUserSubmissionTableDrawerRef","_useState10","_useGetDailyTasksSubm","useGetDailyTasksSubmissionQuery","modalTableClose","DailysubmissionDrawerTable","daily_submissions","SingleUserSubmissionTableDrawer","InnerHistoryItem","lazy","_ref$data","fallback","InnerHistoryItemLoader","history","HistoryItem","fetcher","axios","get","_useSelector","histories","dispatch","useDispatch","_useSWR","useSWR","refreshInterval","storeHistories","Histories","marginRight","Suspense","note","Link","to","_ref$readOnly","readOnly","_ref$placeholder","placeholder","_ref$inputClass","inputClass","_ref$labelClass","labelClass","_ref$type","defaultValue","rest","htmlFor","required","onWheel","currentTarget","blur","notes","files","setFiles","setTitle","errTitle","setErrTitle","_React$useState8","setNote","deviceWidth","_useCrateNoteMutation2","useCrateNoteMutation","crateNote","handleSubmit","fd","FormData","append","file","_notes","storeNotes","handleEditorChange","editor","getData","Input","setState","handleChange","UploadFilesInLine","_React$useState10","attachedFiles","setAttachedFiles","searchParams","useSearchParams","noteId","_useUpdateNoteMutatio2","useUpdateNoteMutation","updateNote","_useGetTaskDetailsQue","useGetTaskDetailsQuery","refetchOnMountOrArgChange","clearField","handleClose","_notes2","_res$note","message","getElementsByTagName","deleteNoteUploadedFile","useDeleteNoteUploadedFileMutation","handleFileDelete","previousFile","indexOf","previous","onPreviousFileDelete","getAvatar","getName","getDesignationName","mode","setMode","navigate","useNavigate","paramType","CreateNote","EditNote","NoteView","Note","setToggleRef","cmt","commentLength","Rating","deadline_meet","submission_quality","req_fullfillment","overall_tasks","ViewComment","setDate","selected","minDate","maxDate","placeholderText","DatePicker","dateFormat","SearchBox","_ref$autoFocus","autoFocus","props","current","focus","xmlns","viewBox","propTypes","PropTypes","isRequired","_ref$title","onSelect","setQuery","params","categories","filteredData","cat","category_name","toLowerCase","Combobox","displayValue","Options","Loader","catIdx","Option","active","employees","employee","_useDeveloperInProgre","useDeveloperInProgressTaskQuery","isOverloaded","image_url","objectFit","developer_status","priority","setSelected","Listbox","CompareDate","isVisible","location","useLocation","pathname","replace","_useEditSubtaskMutati2","useEditSubtaskMutation","editSubtask","_useEditSubtaskMutati3","Card","form_card","Head","onClose","form_card_head","Body","form_card_body","SubTaskEditModal","onSubmit","success","warn","_required_error$title","_required_error$start","_required_error$start2","_required_error$due_d","_required_error$due_d2","editDataIsFetching","milestoneID","milestone_title","milestoneTitle","milestone","parentTaskTitle","Date","startDate","setStateDate","dueDate","setDueDate","_useState12","projectName","_useState14","taskCategory","setTaskCategory","_useState16","assignedTo","setAssignedTo","_useState18","description","setDescription","_useState20","setPriority","_useState22","estimateHours","estimateTimeHour","_useState24","estimateMinutes","estimateTimeMin","_useState26","_useState28","setError","required_error","_useGetMilestoneDetai","useGetMilestoneDetailsQuery","projectId","deleteUplaodedFile","useDeleteUplaodedFileMutation","start_date","toDate","due_date","TaskCategorySelectionBox","AssignedToSelection","PrioritySelection","_milestone$deliverabl","count","errorMessages","showError","_startDate","_dueDate","parentTaskId","boardColumn","deliverable_type","subtaskId","requiredField","overloadedUser","gender","field","genderPronoun","_task$assigneeTo","_task$assigneeTo2","_task$assigneeTo3","_task$assigneeTo4","_task$assigneeTo5","_task$assigneeTo6","_task$assigneeBy","_task$assigneeBy2","_task$assigneeBy3","_task$assigneeBy4","_task$assigneeBy5","_task$assigneeBy6","_task$boardColumn","_$last","GenarelLoader","getSubtaskTitle","isSubtask","getUserLink","labelColor","columnName","getStartDate","getDueDate","parentTaskTimeLog","size","Accordion","last","revisionStatus","RevisionText","createdAt","Guideline","SubmittedWorkItem","submittedWork","timeLog","TableRow","colSpan","TimeLog","getStartTime","endTime","getEndTime","memo","hoursLogged","review","ContentLoader","speed","backgroundColor","foregroundColor","x","rx","ry","HistoryLoader","parentTask","setTask","taskID","setSubmittedWork","setTimeLog","setReview","setHistories","_React$useState12","_React$useState14","isCommentShow","setIsCommentShow","_useSingleTask","detailFetchingStateLoading","subTaskComments","commentsFetching","commentsLoading","commentsRefetch","SingleTask","fetchData","cb","fetchSubmittedWork","fetchTimeLogData","fetchHistories","fetchReviewData","Genarel","SubmittedWork","showCloseBtn","History","TaskReview","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","showApproveForm","setShowApproveForm","completedWithInDeadline","setCompletedWithInDeadline","submittedStar","setSubmittedStar","fullfilledStar","setFullfilledStar","setComment","oldSubmittion","setOldSubmittion","latestSubmittion","setLatestSubmittion","_useGetSubmittedTaskQ","useGetSubmittedTaskQuery","setErr","sortBy","latest","old","handleOnSubmit","rating2","rating3","user_id","HiOutlineSelector","SubmittedWorkCard","submission_no","action","radius","SubmitButton","_data$text","_ref3$latest","_ref3$className","_ref3$isLoading","links","compact","attaches","submission_date","listStyle","link","FileUploader","Preview","fileName","downloadAble","deleteAble","downloadUrl","previewUrl","fileType","ext","toggleEditForm","_useLazyCheckSubTaskT2","useLazyCheckSubTaskTimerQuery","checkSubTaskTimer","useCheckEditableSubTaskQuery","isEditable","stopPropagation","hasEditPermission","added_by","PreviewSubtask","onConfirm","buttonVisible","setButtonVisible","countDown","setCountDown","timeIntervelId","setInterval","timeOutId","setTimeout","clearInterval","clearTimeout","marginLeft","siteUrl","setSiteUrl","frontendPassword","setFrontendPassword","loginUrl","setLoginUrl","siteLoginCredentialUserNameOrEmail","setSiteLoginCredentialUserNameOrEmail","setPassword","_useWorkingEnvironmen2","useWorkingEnvironmentMutation","workingEnvironment","project_id","checkIsURL","username","isConfirmed","_required_error$pageT","_required_error$pageT2","_ref12","_required_error$page_","_required_error$page_2","_required_error$descr","_required_error$descr2","_ref$isFirstSubtask","isFirstSubtask","refetchTask","useRefetchTaskDetails","taskDetails","isWorkingEnvironmentSubmit","setParentTask","pageType","setPageType","pageTypeOthers","setPageTypeOthers","pageName","setPageName","pageURL","setPageURL","numberOfPage","setNumberOfPage","existingDesignLink","setExistingDesignLink","_React$useState16","pageTypePriority","setPageTypePriority","_React$useState18","pageTypeName","setPageTypeName","_useCreateSubtaskMuta2","useCreateSubtaskMutation","createSubtask","_useCreateSubtaskMuta3","_useLazyGetTaskDetail3","_React$useState20","showForm","setShowForm","_React$useState22","isValid","pageUrl","_res$sub_task","_res$sub_task2","_subtask","sub_task","storeSubTasks","isHasRolePermission","setWorkingEnvironmentStatus","WorkingEnvironmentForm","LeadConfirmationModal","AssginedToSelection","_ref8","_ref10","_ref11","_ref13","_ref14","page_type","page_url","editId","setMilestone","project","setProject","setEstimateTimeHour","setEstimateTimeMin","_useState30","editSubTask","find","estimation","formatedDate","_res$users","project_name","task_category","estimate_hours","estimate_minutes","_err$estimate_hours","_err$estimate_minutes","errText","hoursErr","minErr","hours_left","minutes_left","milestone_id","board_column_id","subtask_id","_subtask2","edit","setEdit","formMode","setFormMode","isTaskModalOpen","setIsTaskModalOpen","subtaskModalToggleRef","setSubtaskModalToggleRef","_useLazyGetInProgress2","useLazyGetInProgressTaskStatusQuery","inProgressTaskStatus","toggleAddButton","closeAddModal","closeEditForm","Task","SubtTaskEditForm","SubTaskForm","workEnvData","SubTaskFsorm","sub","SubTask","_useUpdateTaskMutatio2","useUpdateTaskMutation","updateTask","_useUpdateTaskMutatio3","TaskEditForm","_milestone$milestone_","_$find","projects","isFetchingMilestone","milestones","list_border","_data$name","image","previewId","SubmitionView","styte","InnerWorkItem","preview","modal","state","SubmittedModalView","WorkItem","_data$client_name","open","setOpen","attachmentLink","setAttachmentLink","setChecked","taskDescription","setTaskDescription","completedSection","setCompletedSection","_useSubmitDailySubmis2","useSubmitDailySubmissionMutation","submitDailySubmission","isSubmitting","attachmentLinkError","setAttachmentLinkError","taskDescriptionError","setTaskDescriptionError","completedSectionError","setCompletedSectionError","task_title","total_time_spent","client_name","daily_submission_status","borderTop","borderRadius","SelectedFiles","_Array$from","previews","onDelete","onRemove","Checkbox","_window$Laravel","valid","clientId","mark_as_complete","today","_useGetDailySubmissio","useGetDailySubmissionQuery","TodaysUpdateModalTableRow","setTodaysUpdateModalisOpen","URLSearchParams","search","TodaysUpdateModalTable","setLinks","linkErr","setLinkErr","isModalUrl","setIsModalUrl","commentErr","setCommentErr","_useMarkAsCompleteMut2","useMarkAsCompleteMutation","markAsComplete","_useLazyCheckSubTaskS2","useLazyCheckSubTaskStateQuery","checkSubTaskState","markAsCompleteModaIsOpen","setMarkAsCompleteModalIsOpen","_links","handleOnLinkInputChange","class","reason","setReason","reasonError","setReasonError","commentError","setCommentError","_useRevision","revisionOptions","_useCreateRevisionMut2","useCreateRevisionMutation","createRevision","option","marginTop","marginBottom","_reason$revision","_reason$isDeniable","errorCount","revision_acknowledgement","acknowledgement_id","is_deniable","revisionModal","setRevisionModal","singleTask","RevisionCreationModal","AcceptAndContinueButton","RevisionAcceptAndContinue","_ref2$isSubmitting","onNext","role_id","roleId","_revision$revision_ac","onAccept","onDeny","onContinue","isContinue","pm_comment","lead_comment","revision_reason","_task$taskSubTask","onBack","_ref$isSubmitting","setComments","subtasks","setSubtasks","setSubtaskError","SubtaskSelectionMenu","subTasks","_reason$id","_reason$id2","_comments","findIndex","hanldeEditorTextChange","NextAndContinueButton","_task$taskSubTask2","_task$taskSubTask3","multiple","overflowY","tabIndex","assigned_to_name","denyOptions","denyReason","setShow","accept","setAccept","_useGetRevisionDetail","useGetRevisionDetailsQuery","isFetchingRevision","_useRevisionAcceptOrD2","useRevisionAcceptOrDenyMutation","revisionAcceptOrDeny","isLoadingRevisionReview","handleAcceptAndContinueSubmission","_data$comment","_data$denyReason","_data","deny_reason","revision_id","setTaskStatus","task_status","RevisionView","continue","DenyAndContinue","setDenyReason","useRevisionAcceptOrDenyByLeadDeveloperMutation","_comment$comment","_data$reason","_data$is_deniable","fdata","hanldeAcceptAndContinueSubmition","AssigneeRevisionToDev","hanldeDenyAndContinueSubmition","hasSubtask","RevisionViewModal","DeveloperRevisionView","GuideLineText","SubtaskCreationControl","subtaskCreationModalIsOpen","setSubtaskCreationModalIsOpen","fontStyle","fontWeight","StopTimerConfrimationPopUp","stopTimer","startTimer","lessTrackModal","lessTrackModalFor","setLessTrackModal","handleTemporarilyStopTimer","StartTimerWorkingReport","Title","Text","h1","_taggedTemplateLiteral","_templateObject2","_templateObject3","_task$ranningTimer","timerStart","setTimerStart","timerId","setTimerId","seconds","setSeconds","isOpenConfirmationModal","setIsOpenConfirmationModal","timerStatus","ranningTimer","taskRunning","useMemo","_task$ranningTimer2","_task$ranningTimer3","serverTime","unix","interval","hours","minutes","sec","min","hr","Toast","startTimerFirstCheck","startTimerFirstCheckIsFetching","_useStartTimerApiMuta2","useStartTimerApiMutation","startTimerApi","timerStartStatusIsLoading","_useStopTimerApiMutat2","useStopTimerApiMutation","stopTimerApi","timerStopStatusIsLoading","checkWorkReport","useCheckWorkingReportMutation","startTimerControl","workReport","_window2","check_in_check_out","check_in_status","daily_task_report","hours_log_report","hours_log_report_status","withReactContent","html","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","reload","timeId","_useLazyGetUserTrackT2","useLazyGetUserTrackTimeQuery","getUserTrackTime","trackTimerFetcing","Math","floor","currentTime","current_time","set","day","check","isBefore","isDev","tracked_times","target_time","is_first_task","StartTimerConfirmationModal","LessTrackTimerModal","SubmitForClientApproval","closeModal","_useSubmitForClientAp2","useSubmitForClientApprovalMutation","transform","_useConfirmClientAppr2","useConfirmClientApprovalMutation","confirmClientApproval","projectManagerAcknowladgement","createDispute","additionalPaid","setAdditionalPaid","additionalInfo","setAdditionalInfo","additionalAmount","setAdditionalAmount","additionalError","setAdditionalError","hasAdditionalPayment","isPay","onBlur","disputeCreate","_additionalInfo$info","additional_amount","additional_status","additional_comment","dispute_create","_useStoreClientRevisi2","useStoreClientRevisionTaskMutation","storeClientRevisionTask","AssigneeToLeadFromClientRevision","fData","ClientAcceptedTask","ClientRevision","ReportForm","reportModalOpen","setReportModalOpen","isEnable","useDailySubmission","_useDeveloperCanCompl","useDeveloperCanCompleteTaskQuery","checkMarkAsCompleteEnableStatus","isLoadingCompleteCheck","ENABLE_MARKASCOMPLETE_BUTTON","totalTimeLog","TimerControl","MarkAsComplete","ApproveTask","RevisionControl","RevisionViewControl","ClientApproval","DailySubmissionControl","display","ReportControl","start_time","end_time","hours_logged","Table","Avatar","CardView","_ref4$data","_objectDestructuringEmpty","TimeLogItem","timeLogs","storeTimeLogs","TimeLogTable","TimeLogItemLoader","RefetchTaskProvider","setRefetchTask","_task$additionalInfo","_task$additionalInfo2","_task$additionalInfo3","_task$additionalInfo4","_task$category$name","_task$taskType","_task$pageType","_task$pageName","_task$workEnvData","_task$workEnvData2","_task$workEnvData3","_task$workEnvData4","_task$workEnvData5","_task$workEnvData6","throwError","useErrorHandler","isTaskFetching","isTaskLoading","taskStatus","useGetTaskStatusQuery","_useLazyGetWorkingEnv2","useLazyGetWorkingEnvironmentQuery","getWorkingEnv","_useLazyGetWorkingEnv3","isWorkingEnvFetching","isWorkingEnvLoading","CurrentTask","ppTaskFiles","parent_task_id","task_working_environment","code","storeTask","loadingClass","Loading","_taskStatus","BoardColumn","Provider","TaskAction","ind_clientId","ind_client_name","independent_client_name","whiteSpace","loginURL","refSite","guidelines","user_name","devComment","pmComment","attachments","attachment","pp_task_file_name","pp_task_file_url","pp_task_file_icon","classname","pp_task_file_id","label_color","boxShadow","getTaskStatusName","SubTaskSection","DailySubmissionSection","CommentSection","NoteSection","TimeLogSection","HistorySection","RevisionSection","Toaster","ShowEditModals","_ref$variant","_ref$size","classes","DropdownContext","DropdownProvider","element","setElement","reference","setReference","useDropdown","context","DropdownItem","_ref2$disabled","onMouseUp","DropdownToggle","_ref3$icon","_useDropdown2","DropdownMenu","_ref4$placement","_ref4$offset","_excluded2","_useDropdown3","popperElement","setPopperElement","setWidth","random","substr","DOM","getElementById","fallbackPlacements","offsetWidth","timeout","handleClickOutside","event","contains","removeEventListener","addEventListener","el","createElement","appendChild","removeChild","Dropdown","_ref5$className","Item","Toggle","Menu","isBrowser","setIsBrowser","modalContent","onReply","_useReplyTaskCommentM2","visibleToScreenRef","scrollIntoView","behavior","onUpdate","fileError","uploadInputClass","fileWrapperClass","ErrorText","Switch","Case","condition","loaderTitle","_comment$files_data","useAuth","showDeletedComment","setShowDeletedComment","deletedClass","last_updated_date","as","Items","files_data","updateComments","setText","_React$useState5","_useUpdateCommentMuta2","_useRemoveCommentPrev2","handlePreviousFileDeleted","file_details","showReplies","setShowReplies","replyMode","setReplyMode","activeEditMode","setActiveEditModal","uploadAttachment","setUploadAttachment","isRepliesLoading","setIsRepliesLoading","_useDeleteCommentMuta2","handleReplyButtonClick","handleDeleteComment","showDenyButton","denyButtonText","confirmButtonColor","denyButton","buttonsStyling","deleteCommentData","Comment","total_replies","AvatarGroup","replies_users","ReplyCommentPreview","showReplyButton","EditComment","ReplyComment","AttachmentUpload","onReplied","_useGetTaskCommentRep","setIsEnable","response","dayAbbreviation","saturdayCutoffTime","otherDaysCutoffTime","isSameOrAfter","providedDate","days","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}