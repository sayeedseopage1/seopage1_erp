{"version":3,"file":"js/react/973.js","mappings":"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","sources":["webpack:///./resources/js/react/UI/comments/CommentsContainer.jsx","webpack:///./resources/js/react/UI/form/checkbox.css?a080","webpack:///./resources/js/react/UI/form/Cheeckbox.jsx","webpack:///./resources/js/react/global/AvatarGroup.module.css?7b6f","webpack:///./resources/js/react/global/AvatarGroup.jsx","webpack:///./resources/js/react/global/Rating.jsx","webpack:///./resources/js/react/hooks/useRevision.jsx","webpack:///./resources/js/react/hooks/useSingleTask.jsx","webpack:///./resources/js/react/services/api/TaskCommentApiSlice.js","webpack:///./resources/js/react/single-independent-task/components/Accordion.jsx","webpack:///./resources/js/react/single-independent-task/components/Guideline.jsx","webpack:///./resources/js/react/single-independent-task/components/RevisionText.jsx","webpack:///./resources/js/react/single-independent-task/components/loader/GenarelLoader.jsx","webpack:///./resources/js/react/single-independent-task/permissions.js","webpack:///./resources/js/react/single-independent-task/section/comments/CommentSendBox.jsx","webpack:///./resources/js/react/single-independent-task/components/CustomModal.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentWritingModal.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/Widget.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentsSection.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailySubmissionItem.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailysubmissionDrawerTable.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/drawer-table-support/Single_user_submission_table_column.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/SingleUserSubmissionTableDrawer.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailySubmissionSection.jsx","webpack:///./resources/js/react/single-independent-task/section/history/InnerHistoryItemLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/history/Histories.jsx","webpack:///./resources/js/react/single-independent-task/section/history/HistorySection.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/Note.jsx","webpack:///./resources/js/react/single-independent-task/components/form/Input.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/CreateNote.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/EditNote.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/NoteView.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/NoteSection.jsx","webpack:///./resources/js/react/single-independent-task/section/revisions/ViewComment.jsx","webpack:///./resources/js/react/single-independent-task/section/revisions/RevisionSection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css?78f7","webpack:///./resources/js/react/single-independent-task/section/comments/DatePicker.jsx","webpack:///./resources/js/react/single-independent-task/components/form/Searchbox.jsx","webpack:///./resources/js/react/single-independent-task/components/Loader.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/TaskCategorySelectionBox.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/AssignedToSelection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/PrioritySelection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskEditModal.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/Genarel.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/SubmittedWork.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/TimeLog.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/TaskReview.jsx","webpack:///./resources/js/react/single-independent-task/components/HistoryLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/History.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/PreviewSubtask.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/approve-task/ApproveTask.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTask.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/LeadConfirmationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/WorkingEnvironmentForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskEditForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskSection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/TaskEditForm.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmitionView.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/WorkItem.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/InnerWorkItem.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmittedModalView.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmittedWork.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/TodaysUpdateModalTableRow.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css?c214","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css?09ae","webpack:///./resources/js/react/single-independent-task/section/daily-submission/TodaysUpdateModalTable.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/DailySubmissionControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/MarkAsComplete.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionCreationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionAcceptAndContinue.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionView.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/AssigneeRevisionToDev.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/DenyAndContinue.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/DeveloperRevisionView.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionViewModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionViewControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/subtask_creation_guide/GuideLineText.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/SubtaskCreationControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/StartTimerConfirmationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/stop-timer/LessTrackTimerModal.jsx","webpack:///./resources/js/react/single-independent-task/components/StartTimerWorkingReportPopup.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/TimerControl.jsx","webpack:///./resources/js/react/single-independent-task/section/helper/timer-start-working-report-error-toaster.js","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/SubmitForClientApproval.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/ClientAcceptedTask.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/AssigneeToLeadFromClientRevision.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/ClientRevision.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/ClientApproval.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/report/Report.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/TaskAction.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/InnerTableRow.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogTable.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogItemLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogSection.jsx","webpack:///./resources/js/react/single-independent-task/SingleIndependentTask.jsx","webpack:///./resources/js/react/single-independent-task/components/Button.jsx","webpack:///./resources/js/react/single-independent-task/components/Dropdown.jsx","webpack:///./resources/js/react/single-independent-task/components/Modal.jsx","webpack:///./resources/js/react/single-independent-task/components/SubmitButton.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/AttachmentUpload.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/Comment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/EditComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/InnerComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/ReplyComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/ReplyCommentPreview.jsx","webpack:///./resources/js/react/single-task/hooks/useDailySubmission.jsx","webpack:///./resources/js/react/utils/timeCalculate.js","webpack:///./resources/js/react/UI/form/checkbox.css","webpack:///./resources/js/react/global/AvatarGroup.module.css","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css","webpack:///./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css"],"sourcesContent":["import React from \"react\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport CustomModal from \"./components/CustomModal\";\r\nimport Modal from \"./components/Modal\";\r\nimport CommentsBody from \"./CommentsBody\";\r\nimport { useState, useEffect } from \"react\";\r\nimport commentDemoData from \"./_Data/commentDemoData\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGetCommentsQuery } from \"../../services/api/commentsApiSlice\";\r\nimport CommentContainerDecider from \"./CommentContainerDecider\";\r\nimport _ from \"lodash\";\r\nimport { useCommentStore } from \"./zustand/store\";\r\n\r\nconst CommentsContainer = ({\r\n    toggleRef = null,\r\n    isOpen,\r\n    close,\r\n    task,\r\n    comments = null,\r\n    onCommentPost,\r\n    taskId,\r\n    singleCommentId,\r\n    showCommentEditor = true,\r\n    showSearchBtn = true,\r\n    showFullScreenBtn = true,\r\n    height = \"89vh\",\r\n}) => {\r\n    const { commentState } = useCommentStore();\r\n    // ---------------------------------------------------------\r\n    const param = useParams();\r\n\r\n    // ---------------------------------------------------------\r\n\r\n    const { width } = useWindowSize();\r\n    const [fullScreenView, setFullScreenView] = useState(false);\r\n    const { data, isFetching, isLoading, refetch } = useGetCommentsQuery(\r\n        param?.taskId\r\n    );\r\n\r\n    // useEffect hook to call refetch when commentState changes\r\n    useEffect(() => {\r\n        refetch();\r\n    }, [commentState]);\r\n\r\n    return (\r\n        <CommentContainerDecider\r\n            fullScreenView={fullScreenView}\r\n            isOpen={isOpen}\r\n            toggleRef={toggleRef}\r\n            width={width}\r\n        >\r\n            {/* {isOpen && ( */}\r\n            <CommentsBody\r\n                fullScreenView={fullScreenView}\r\n                setFullScreenView={setFullScreenView}\r\n                isOpen={isOpen}\r\n                close={close}\r\n                // comments={param?.taskId ? data : comments}\r\n                comments={\r\n                    param?.taskId\r\n                        ? singleCommentId\r\n                            ? data?.filter(\r\n                                  (comment) => comment.id === singleCommentId\r\n                              )\r\n                            : data\r\n                        : comments\r\n                }\r\n                // comments={demoComments}\r\n                loading={isLoading}\r\n                fetching={isFetching}\r\n                refetch={refetch}\r\n                taskId={taskId ? taskId : param?.taskId}\r\n                showFullScreenBtn={width <= 991 ? false : showFullScreenBtn}\r\n                height={height}\r\n                showCommentEditor={showCommentEditor}\r\n                showSearchBtn={showSearchBtn}\r\n            />\r\n            {/* )} */}\r\n        </CommentContainerDecider>\r\n    );\r\n};\r\n\r\nexport default CommentsContainer;\r\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./checkbox.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import \"./checkbox.css\";\r\n\r\nconst Checkbox = ({\r\n    value,\r\n    onChange,\r\n    label,\r\n    checked,\r\n    className = \"\",\r\n    labelClassName = \"\",\r\n    disabled = false,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <label\r\n            className={`d-flex align-items-center sp1_checkbox--label ${labelClassName}${\r\n                disabled ? \" disable\" : \"\"\r\n            }`}\r\n        >\r\n            <input\r\n                type=\"checkbox\"\r\n                value={value}\r\n                checked={checked}\r\n                disabled={disabled}\r\n                onChange={onChange}\r\n                className={`sp1_checkbox mr-2 ${className}`}\r\n            />\r\n            {label}\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Checkbox;\r\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./AvatarGroup.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from \"react\";\r\nimport styles from \"./AvatarGroup.module.css\";\r\nimport _ from \"lodash\";\r\n\r\nconst AvatarGroup = ({ users = [], className = \"\", show=2 }) => {\r\n\r\n    const len = _.size(users);\r\n\r\n    const avatars = len > show ? users.splice(0, show) : users;\r\n\r\n    return (\r\n        <div className={styles.avatar_group}>\r\n\r\n\r\n            {len > show && (\r\n                <div  className={`${styles.avatar} ${className} ${styles.empty_avatar}`} >\r\n                    <span> +{len}</span>\r\n                </div>\r\n            )}\r\n            {_.map(avatars, (user, i) => (\r\n                <div key={i} className={`${styles.avatar} ${className}`}>\r\n                    <img\r\n                        src={user.src}\r\n                        alt=\"\"\r\n                        className={styles.avatar_image}\r\n                    />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvatarGroup;\r\n","const Rating = ({\r\n    rating,\r\n    className = '',\r\n    iconClassName = '',\r\n}) => {\r\n    return (\r\n        <>\r\n            {[...Array(5)].map((r, idx) =>\r\n                idx <= parseInt(rating) - 1 ? (\r\n                    <i key={idx} className=\"fa-solid fa-star\" style={{color:'#FFA500'}} />\r\n                ) : rating - parseInt(rating) > 0 &&\r\n                  idx === parseInt(rating) ? (\r\n                    <i key={idx} className=\"fa-solid fa-star-half-stroke\" style={{color:'#FFA500'}} />\r\n                ) : (\r\n                    <i key={idx} className=\"fa-regular fa-star\" style={{color: '#b9b9b9'}} />\r\n                ),\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Rating;","import _ from \"lodash\";\r\n\r\nexport const useRevision = (task) => {\r\n    const taskType = _.includes([5, 7], task?.category?.id)\r\n        ? \"design\"\r\n        : \"development\";\r\n\r\n    const isIndependent = task?.isIndependentTask;\r\n\r\n    // project menager acknowladgement options\r\n    const getProjectManagerAcknowladgementOptions = () => {\r\n        const isAlreadyAccepted = false;\r\n\r\n        if (isAlreadyAccepted) {\r\n            return [];\r\n        }\r\n\r\n        if (isIndependent) {\r\n            return [\r\n                {\r\n                    id: \"PLRx01\",\r\n                    revision:\r\n                        \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right\",\r\n                    isDeniable: false,\r\n                },\r\n                {\r\n                    id: \"PLRx02\",\r\n                    revision:\r\n                        \"The work done is aligned with my instruction, but after seeing it, I want to give some minor changes\",\r\n                    isDeniable: false,\r\n                },\r\n                {\r\n                    id: \"PLRx3\",\r\n                    revision: `The Lead ${\r\n                        taskType === \"design\" ? \"designer\" : \"developer\"\r\n                    }/project coordinator’s delivered work doesn’t match my shared requirement`,\r\n                    isDeniable: true,\r\n                },\r\n                {\r\n                    id: \"PLRx04\",\r\n                    revision: `The instruction was followed, but the lead ${\r\n                        taskType === \"design\" ? \"designer\" : \"developer\"\r\n                    } missed out some default/basic things or best practices which are not essential to write in instruction`,\r\n                    isDeniable: true,\r\n                },\r\n            ];\r\n        }\r\n\r\n        return [\r\n            {\r\n                id: \"PLRx01\",\r\n                revision:\r\n                    \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right\",\r\n                isDeniable: false,\r\n            },\r\n            {\r\n                id: \"PLRx02\",\r\n                revision:\r\n                    \"The work done is aligned with my instruction, but after seeing it, I want to give some minor changes\",\r\n                isDeniable: false,\r\n            },\r\n            {\r\n                id: \"PLRx3\",\r\n                revision: `The Lead ${\r\n                    taskType === \"design\" ? \"designer\" : \"developer\"\r\n                }/project coordinator’s delivered work doesn’t match my shared requirement`,\r\n                isDeniable: true,\r\n            },\r\n            {\r\n                id: \"PLRx04\",\r\n                revision: `The instruction was followed, but the lead ${\r\n                    taskType === \"design\" ? \"designer\" : \"developer\"\r\n                } missed out some default/basic things or best practices which are not essential to write in instruction`,\r\n                isDeniable: true,\r\n            },\r\n            {\r\n                id: \"PLRx05\",\r\n                revision: \"I have some general revisions\",\r\n                isDeniable: false,\r\n                type: \"GENERAL_REVISION\",\r\n            },\r\n        ];\r\n    };\r\n\r\n    // lead developer acknowladgement Options\r\n    const getLeadDeveloperAcknowladgementOptions = () => {\r\n        const isAlreadyAccepted = false;\r\n        // if already accepted\r\n        if (isAlreadyAccepted) {\r\n            return [];\r\n        } else {\r\n            return [\r\n                {\r\n                    id: \"LDRx1\",\r\n                    revision: `The concerned ${\r\n                        taskType === \"design\" ? \"designer’s\" : \"developer’s\"\r\n                    }  delivered work doesn’t match my shared requirement`,\r\n                    isDeniable: true,\r\n                },\r\n                {\r\n                    id: \"LDRx2\",\r\n                    revision:\r\n                        \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right.\",\r\n                    isDeniable: false,\r\n                },\r\n                {\r\n                    id: \"LDRx3\",\r\n                    revision:\r\n                        \"The work done is aligned with my instruction but after seeing it, I want to give some minor changes.\",\r\n                    isDeniable: false,\r\n                },\r\n\r\n                {\r\n                    id: \"LDRx4\",\r\n                    revision: `The instruction was followed but the ${\r\n                        taskType === \"design\" ? \"designer\" : \"developer\"\r\n                    } missed out on some default/basic things or best practices which are not essential to mention in instruction.`,\r\n                    isDeniable: true,\r\n                },\r\n            ];\r\n        }\r\n    };\r\n\r\n    return {\r\n        getLeadDeveloperAcknowladgementOptions,\r\n        getProjectManagerAcknowladgementOptions,\r\n    };\r\n};\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {\r\n    useApproveSubmittedTaskMutation,\r\n    useLazyGetSubmittedTaskQuery,\r\n    useLazyGetTaskDetailsQuery\r\n} from '../services/api/SingleTaskPageApi';\r\nimport { User } from '../utils/user-details';\r\n\r\nexport const useSingleTask = () => {\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    /* ********************************** */\r\n    /* ********* Get Task by task ID ********* */\r\n    const [\r\n        getTaskDetails,\r\n        {isFetching: taskDetailsIsFetching}\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    const getTaskById = async (taskId) => {\r\n        try{\r\n            const res = await getTaskDetails(`/${taskId}/json?mode=basic`).unwrap();\r\n            if(res){\r\n                const task = {\r\n                    ...res.task,\r\n                    taskFiles: res?.taskFiles,\r\n                    parent_task_action: res.parent_task_action,\r\n                    parent_task_title: res.parent_task_heading?.heading || null,\r\n                    working_environment: res.working_environment,\r\n                    working_environment_data: res.working_environment_data,\r\n                    pm_task_guideline: res.task_guideline,\r\n                    task_revisions: res.revisions,\r\n                    taskSubTask: res.Sub_Tasks,\r\n                }\r\n                return task;\r\n            }\r\n        }catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n     /* *************************************************** */\r\n    /* ********* Get Task submittion Information ********* */\r\n\r\n    const [getSubmittedTask, {isFetching: submittionInfoIsFetching} ] = useLazyGetSubmittedTaskQuery();\r\n\r\n    // method\r\n    const getSubmittionInfo = async (taskId) => {\r\n        try{\r\n            const res = await getSubmittedTask(taskId).unwrap();\r\n            if(res){\r\n                let data = _.orderBy(res, ['task_id', 'submission_no'], ['desc', 'desc']);\r\n                return data;\r\n            }\r\n        }catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    /* ********************************** */\r\n    /* ********* Approved Task ********* */\r\n    const [\r\n        approveSubmittedTask,\r\n        {isLoading: approveTaskLoadingStatus}\r\n    ] = useApproveSubmittedTaskMutation();\r\n\r\n    // method\r\n    const approveTask = async (data, callback) => {\r\n        if(!data || _.isEmpty(data)) return;\r\n        try{\r\n            const res = await approveSubmittedTask(data).unwrap();\r\n\r\n            if(res){\r\n                callback &&callback();\r\n                const Toast = Swal.mixin({\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n                })\r\n\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'Task Approved Successfully'\r\n                })\r\n            }\r\n        }catch(err){ console.log(err) }\r\n    }\r\n\r\n\r\n    return {\r\n        getTaskById,\r\n        approveTask,\r\n        getSubmittionInfo,\r\n        taskDetailsIsFetching,\r\n        approveTaskLoadingStatus,\r\n        submittionInfoIsFetching\r\n    }\r\n}\r\n","import { apiSlice } from \"./apiSlice\";\r\n\r\nconst taskCommentApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: (build) => ({\r\n        // get task comments\r\n        getTaskComments: build.query({\r\n            query: (taskId) => `/account/tasks/${taskId}/comments`,\r\n            providesTags: (result = [], error, arg) => [\r\n                \"TASK_COMMENTS\",\r\n                \"TASK_COMMENT\",\r\n                ...result.map(({ id }) => ({ type: \"TASK_COMMENT\", id })),\r\n            ],\r\n        }),\r\n\r\n        // get task comments\r\n        getTaskCommentReplies: build.query({\r\n            query: (commentId) =>\r\n                `/account/tasks/comments/${commentId}/replies`,\r\n            providesTags: [\"TASK_COMMENT_REPLIES\"],\r\n        }),\r\n\r\n        // widget data\r\n        getTaskCommentWidgetData: build.query({\r\n            query: (taskId) => `/account/tasks/comments-widget-data/${taskId}`,\r\n            providesTags: [\"TASK_COMMENTS_WIDGET\"],\r\n        }),\r\n\r\n        // preview a comment\r\n        getPreviewCommentData: build.query({\r\n            query: (commentId) =>\r\n                `/account/tasks/comments/${commentId}/preview`,\r\n            providesTags: [\"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // update comment\r\n        updateComment: build.mutation({\r\n            query: ({ data }) => ({\r\n                url: `/account/tasks/comment-edit`,\r\n                method: \"POST\",\r\n                body: data,\r\n                formData: true,\r\n            }),\r\n            invalidatesTags: [\"TASK_COMMENTS_WIDGET\", \"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // remove file\r\n        removeCommentPreviousUploadedFile: build.mutation({\r\n            query: (data) => ({\r\n                url: `/account/tasks/${data.task_id}/comments/${data.comment_id}/delete-attach-file`,\r\n                method: \"DELETE\",\r\n                body: {\r\n                    ...data,\r\n                    _token: document\r\n                        .querySelector(\"meta[name='csrf-token']\")\r\n                        .getAttribute(\"content\"),\r\n                },\r\n            }),\r\n            invalidatesTags: [\"TASK_COMMENTS_WIDGET\", \"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // reply comment\r\n        replyTaskComment: build.mutation({\r\n            query: (data) => ({\r\n                url: `/account/tasks/comment-reply`,\r\n                method: \"POST\",\r\n                body: data.formData,\r\n                formData: true,\r\n            }),\r\n            invalidatesTags: (result, error, arg) => [\r\n                { type: \"TASK_COMMENT\", id: arg.commentId },\r\n                \"TASK_COMMENT_REPLIES\",\r\n                \"TASK_COMMENTS_WIDGET\",\r\n                \"TASK_COMMENT_PREVIEW\",\r\n            ],\r\n        }),\r\n\r\n        deleteComment: build.mutation({\r\n            query: (commentId) => ({\r\n                url: `/account/tasks/comments/${commentId}/delete`,\r\n                method: \"DELETE\",\r\n                body: {\r\n                    _token: document\r\n                        .querySelector(\"meta[name='csrf-token']\")\r\n                        .getAttribute(\"content\"),\r\n                },\r\n            }),\r\n\r\n            invalidatesTags: (_result = [], _error, arg) => [\r\n                { type: \"TASK_COMMENT\", id: arg },\r\n                \"TASK_COMMENT_REPLIES\",\r\n                \"TASK_COMMENTS_WIDGET\",\r\n                \"TASK_COMMENT_PREVIEW\",\r\n            ],\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n    useGetTaskCommentsQuery,\r\n    useGetTaskCommentRepliesQuery,\r\n    useGetTaskCommentWidgetDataQuery,\r\n    useLazyGetTaskCommentWidgetDataQuery,\r\n    useGetPreviewCommentDataQuery,\r\n    useUpdateCommentMutation,\r\n    useRemoveCommentPreviousUploadedFileMutation,\r\n    useReplyTaskCommentMutation,\r\n    useDeleteCommentMutation,\r\n} = taskCommentApiSlice;\r\n","import * as React from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\n\r\nconst Accordion = ({expendable=true, children, title, headingClass, headingStyle}) => {\r\n    const [expend,setExpend] = React.useState(false);\r\n\r\n    const toggle = () => {\r\n        setExpend(!expend);\r\n    }\r\n\r\n    const init = expendable ? 0 : 300;\r\n\r\n  return (\r\n    <div className='sp1_task_card mb-4'>\r\n        <div \r\n            className={`sp1_task_card--head ${headingClass}` }\r\n            onClick={ () => expendable ? toggle() : null}\r\n            style={{...headingStyle, cursor: expendable ? 'pointer': 'default'}}\r\n        > {title} \r\n\r\n            {expendable ? expend ? \r\n                <span className=\"__icon\">\r\n                    <i className=\"fa-solid fa-chevron-up\"></i>\r\n                </span>\r\n            : <span className=\"__icon\">\r\n                    <i className=\"fa-solid fa-chevron-down\"></i>\r\n                </span>: null\r\n            }\r\n        </div>\r\n\r\n\r\n        <AnimatePresence>\r\n            {expendable ? expend && (\r\n                <motion.div\r\n                    initial={{ height: init }}\r\n                    animate={{height: 800}}\r\n                    exit={{height: 0}}\r\n                    className='sp1_task_card--body'\r\n                >\r\n                    {children}\r\n                </motion.div> \r\n            ): <div className='sp1_task_card--body'>\r\n               {children}  \r\n            </div>\r\n        }\r\n        </AnimatePresence>\r\n\r\n\r\n       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Accordion","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport { useClickAway } from \"react-use\";\r\nimport _ from \"lodash\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Guideline = ({ text, editorContainerClass, workEnv }) => {\r\n    const { task } = useSelector((s) => s.subTask);\r\n    const [expend, setExpend] = useState(false);\r\n    let isLong = text?.length > 400;\r\n    const showText = isLong ? text.slice(0, 400) + \"...\" : text;\r\n    const ref = useRef();\r\n\r\n    const handleExpend = (e) => {\r\n        e.preventDefault();\r\n        setExpend(!expend);\r\n    };\r\n\r\n    useClickAway(ref, () => {\r\n        setExpend(false);\r\n    });\r\n\r\n    return (\r\n        <div className=\"sp1_task_card--sub-card\">\r\n            <div\r\n                className={`sp1_ck_content sp1_guideline_text ${editorContainerClass}`}\r\n                dangerouslySetInnerHTML={{ __html: showText }}\r\n            ></div>\r\n            {isLong ? (\r\n                <a href=\"#\" onClick={handleExpend} className=\"\">\r\n                    {\" \"}\r\n                    Read full description{\" \"}\r\n                </a>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n\r\n            <Modal className=\"sp1_task_card--sub-card-modal\" isOpen={expend}>\r\n                <div\r\n                    ref={ref}\r\n                    className=\"sp1_task_card--sub-card-modal-content\"\r\n                >\r\n                    <div className=\"d-flex align-items-center justify-content-between __header\">\r\n                        <button onClick={() => setExpend(false)}>\r\n                            <i className=\"fa-solid fa-xmark\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n                    {!_.isEmpty(workEnv) ? (\r\n                        <div className=\"sp1_task_card--sub-card m-4\">\r\n                            <div\r\n                                className=\"px-4 py-3\"\r\n                                style={{ background: \"#F3F5F9\" }}\r\n                            >\r\n                                <h6 className=\"mb-2\">Working Environment</h6>\r\n                                <hr />\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's URL\r\n                                            </strong>\r\n                                            : <br />{\" \"}\r\n                                            <a\r\n                                                target=\"__blank\"\r\n                                                href={workEnv?.site_url}\r\n                                            >\r\n                                                View on new tab\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>Frontend Password</strong>:{\" \"}\r\n                                            <br /> {workEnv?.frontend_password}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's Login URL\r\n                                            </strong>\r\n                                            : <br />{\" \"}\r\n                                            <a\r\n                                                target=\"__blank\"\r\n                                                href={workEnv?.login_url}\r\n                                            >\r\n                                                View on new tab\r\n                                            </a>{\" \"}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's\r\n                                                Username/Email\r\n                                            </strong>\r\n                                            : <br /> {workEnv?.email}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>Password</strong>: <br />{\" \"}\r\n                                            {workEnv?.password}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <div className=\"__content\">\r\n                        <div\r\n                            className={`sp1_ck_content word-break ${editorContainerClass}`}\r\n                            dangerouslySetInnerHTML={{ __html: text }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\" __footer\">\r\n                        <button\r\n                            className=\"btn btn-sm py-1 btn-primary ml-auto\"\r\n                            onClick={() => setExpend(false)}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Guideline;\r\n","import * as React from \"react\";\r\nimport Modal from \"../../Insights/ui/Modal\";\r\nimport { useClickAway } from \"react-use\";\r\nimport Button from \"./Button\";\r\nimport dayjs from \"dayjs\";\r\nimport { useUsers } from \"../../hooks/useUsers\";\r\nimport { User } from \"../../utils/user-details\";\r\n\r\n// const RevisionText = ({text, index, date, time, revision}) => {\r\n//     const [expend, setExpend] = React.useState(false);\r\n//     const ref = React.useRef();\r\n\r\n//     let isLong = text?.length > 800;\r\n//     const showText = isLong ? text?.slice(0, 800) + '...' : text;\r\n\r\n//     const toggleModal = (e) => {\r\n//         e.preventDefault();\r\n//         setExpend(!expend)\r\n//     }\r\n\r\n//     useClickAway(ref, () => {\r\n//         setExpend(false)\r\n//     })\r\n\r\n//   return (\r\n//     <div className=\"sp1_task_card--sub-card\" style={{minHeight: '110px'}}>\r\n//         <div className=\"sp1_tc_sc-inx\">\r\n//             <h2>{index}</h2>\r\n//             <span className=\"d-block\"><strong>Date</strong> {date} </span>\r\n//             <span className=\"d-block\"><strong>Time</strong>: {time}</span>\r\n//         </div>\r\n//         <div className=\"\">\r\n//             {revision?.revisionAcknowledgement ?\r\n//                 <span className='d-block mb-2'>\r\n//                     <span className='font-weight-bold text-danger'> <strong>Reason: </strong>  </span>\r\n//                     {revision?.revisionAcknowledgement} {\" \"}\r\n//                     {revision?.isDeny ? <span className='badge badge-danger'>Rejected By Developer</span> : null}\r\n//                     {revision?.isAccept ? <span className='badge badge-success'>Accepted By Developer</span> : null}\r\n//                 </span>\r\n//             : null}\r\n//             <div>\r\n//                 <span className='font-weight-bold text-success'>Statement:</span>\r\n//                 <div className='sp1_ck_content' style={{textIndent: '2rem'}} dangerouslySetInnerHTML={{__html: showText}} />\r\n//             </div>\r\n\r\n//             {isLong ? <a href=\"#\" className='ml-2' onClick={toggleModal}>Read full guideline</a> : ''}\r\n\r\n//             <Modal className=\"sp1_task_card--sub-card-modal\" isOpen={expend}>\r\n//                 <div ref={ref} className='sp1_task_card--sub-card-modal-content'>\r\n//                     <div className='d-flex align-items-center justify-content-between __header'>\r\n//                         <button onClick={() => setExpend(false)}>\r\n//                         <i className=\"fa-solid fa-xmark\"></i>\r\n//                         </button>\r\n//                     </div>\r\n//                     <div className='__content'>\r\n//                         <div className=\"sp1_tc_sc-inx\">\r\n//                             <h2>{index}</h2>\r\n//                             <span className=\"d-block\"><strong>Date</strong> {date} </span>\r\n//                             <span className=\"d-block\"><strong>Time</strong>: {time}</span>\r\n//                         </div>\r\n//                         <div>\r\n//                         <span className='d-block mb-2'> <span className='font-weight-bold text-danger'><strong>Reason: </strong></span> {revision?.revisionAcknowledgement}</span>\r\n//                             <span className='font-weight-bold text-success'>Commitment:</span>\r\n//                             <div className='sp1_ck_content' style={{textIndent: '2rem'}} dangerouslySetInnerHTML={{__html: text}} />\r\n//                         </div>\r\n//                     </div>\r\n\r\n//                     <div className=' __footer'>\r\n//                         <button className='btn btn-sm py-1 btn-primary ml-auto' onClick={() => setExpend(false)}>\r\n//                             Close\r\n//                         </button>\r\n//                     </div>\r\n//                 </div>\r\n//             </Modal>\r\n//         </div>\r\n\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nconst RevisionText = ({ index, revision }) => {\r\n    const [expend, setExpend] = React.useState(false);\r\n    const ref = React.useRef();\r\n    console.log(\"revision\", revision);\r\n    const toggleModal = (e) => {\r\n        e.preventDefault();\r\n        setExpend(!expend);\r\n    };\r\n\r\n    useClickAway(ref, () => {\r\n        setExpend(false);\r\n    });\r\n\r\n    const getComment = (key) => {\r\n        switch (key) {\r\n            case \"PLR\":\r\n                return revision?.pmComment;\r\n            case \"SPR\":\r\n                return revision?.pmComment;\r\n            case \"CPR\":\r\n                return revision?.pmComment;\r\n            case \"LDR\":\r\n                return revision?.leadComment;\r\n            default:\r\n                return revision?.pmComment || revision?.leadComment;\r\n        }\r\n    };\r\n    const text = getComment(revision?.disputeBetween);\r\n    let isLong = text?.length > 800;\r\n    const showText = isLong ? text?.slice(0, 800) + \"...\" : text;\r\n\r\n    const date = dayjs(revision?.createdAt).format(\"MMM DD, YYYY\");\r\n    const time = dayjs(revision?.createdAt).format(\"hh:mm A\");\r\n\r\n    return (\r\n        <div className=\"sp1_task_card--sub-card\" style={{ minHeight: \"110px\" }}>\r\n            <div className=\"sp1_tc_sc-inx\">\r\n                <h2>{index < 10 ? `0${index}` : index}</h2>\r\n                <span className=\"d-block\">\r\n                    <strong>Date: </strong>\r\n                    {date}\r\n                </span>\r\n                <span className=\"d-block\">\r\n                    <strong>Time</strong>: {time}\r\n                </span>\r\n            </div>\r\n            <div className=\"px-3\">\r\n                {revision?.revisionAcknowledgement ? (\r\n                    <span className=\"d-block mb-2\">\r\n                        <span className=\"font-weight-bold text-danger\">\r\n                            {\" \"}\r\n                            <strong>Reason: </strong>{\" \"}\r\n                        </span>\r\n                        {revision?.revisionAcknowledgement}\r\n                        {revision?.isDeny ? (\r\n                            <span className=\"badge badge-danger\">\r\n                                Rejected By Developer\r\n                            </span>\r\n                        ) : null}\r\n                        {revision?.isAccept ? (\r\n                            <span className=\"badge badge-success\">\r\n                                Accepted By Developer\r\n                            </span>\r\n                        ) : null}\r\n                    </span>\r\n                ) : null}\r\n                <div>\r\n                    <span className=\"font-weight-bold text-success\">\r\n                        Statement:\r\n                    </span>\r\n                    <div\r\n                        className=\"sp1_ck_content\"\r\n                        dangerouslySetInnerHTML={{ __html: showText }}\r\n                    />\r\n                </div>\r\n\r\n                {isLong ? (\r\n                    <a href=\"#\" className=\"ml-2\" onClick={toggleModal}>\r\n                        View more\r\n                    </a>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n\r\n                <Modal\r\n                    className=\"sp1_task_card--sub-card-modal\"\r\n                    isOpen={expend}\r\n                >\r\n                    <div\r\n                        ref={ref}\r\n                        className=\"sp1_task_card--sub-card-modal-content\"\r\n                    >\r\n                        <div className=\"d-flex align-items-center justify-content-between __header\">\r\n                            <button onClick={() => setExpend(false)}>\r\n                                <i className=\"fa-solid fa-xmark\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"__content\">\r\n                            <div className=\"sp1_tc_sc-inx\">\r\n                                <h2>{index}</h2>\r\n                                <span className=\"d-block\">\r\n                                    <strong>Date: </strong> {date}\r\n                                </span>\r\n                                <span className=\"d-block\">\r\n                                    <strong>Time</strong>: {time}\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                {/* <span className=\"d-block mb-2\">\r\n                                    {\" \"}\r\n                                    <span className=\"font-weight-bold text-danger\">\r\n                                        <strong>Reason: </strong>\r\n                                    </span>{\" \"}\r\n                                    {revision?.revisionAcknowledgement}\r\n                                </span>\r\n                                <span className=\"font-weight-bold text-success\">\r\n                                    Commitment:\r\n                                </span> */}\r\n                                <div\r\n                                    className=\"sp1_ck_content\"\r\n                                    style={{ textIndent: \"2rem\" }}\r\n                                    dangerouslySetInnerHTML={{ __html: text }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\" __footer\">\r\n                            <button\r\n                                className=\"btn btn-sm py-1 btn-primary ml-auto\"\r\n                                onClick={() => setExpend(false)}\r\n                            >\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RevisionText;\r\n","import React from \"react\"; \r\nimport {Placeholder} from '../../../global/Placeholder';\r\n\r\nconst GenarelLoader = () => { \r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-6 pb-3 pb-xl-0\">\r\n                <div className=\"d-flex flex-column\" style={{ gap: \"10px\" }}>\r\n                    <h6 className=\"\">\r\n                       <Placeholder width=\"220px\" />\r\n                    </h6> \r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" /> \r\n                        </div>\r\n                    </div> \r\n\r\n                    {/* <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* asignee to */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                <Placeholder\r\n                                    width=\"32px\"\r\n                                    height=\"32px\"\r\n                                    type=\"circle\"\r\n                                    className=\"rounded-circle\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"ml-2\">\r\n                                <Placeholder width=\"130px\" /> \r\n                                <Placeholder width=\"70px\" height=\"10px\" className=\"mt-2\" /> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* assignee by */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                <Placeholder\r\n                                    width=\"32px\"\r\n                                    height=\"32px\"\r\n                                    type=\"circle\"\r\n                                    className=\"rounded-circle\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"ml-2\">\r\n                                <Placeholder width=\"130px\" /> \r\n                                <Placeholder width=\"70px\" height=\"10px\" className=\"mt-2\" /> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* PRIORITY */}\r\n\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* category */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"100px\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenarelLoader;\r\n","import _ from \"lodash\";\r\nimport { User } from \"../utils/user-details\";\r\n\r\n// * task page permission\r\n\r\nexport function singleTaskPagePermission(task, auth) {\r\n    let hasPermission = false;\r\n    // check is auth\r\n    const isAuth = auth.getRoleId() === 1;\r\n    const pmPermission = task.projectManagerId === auth.getId();\r\n    hasPermission = true;\r\n\r\n    return hasPermission;\r\n}\r\n\r\n// permission for timer control\r\nexport function timeControlPermision({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = loggedUser;\r\n\r\n    // if status id 2 or 3 show timer start button\r\n    if ([2, 3].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    }\r\n    return (\r\n        statusPermission && assigneePermission && _.size(task?.subtask) === 0\r\n    );\r\n}\r\n\r\n// mark as completed button permission controller\r\nexport function markAsCompletedButtonPermission({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n        if (_loggedUser?.getRoleId() === 6) {\r\n            if ([8].includes(Number(statusId))) {\r\n                statusPermission = true;\r\n            }\r\n        } else {\r\n            if ([2, 3].includes(Number(statusId))) {\r\n                statusPermission = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// approve button permission\r\nexport function approveButtonPermission({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if status id 6 show timer start button\r\n    if ([6].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    } else if (_loggedUser?.getRoleId() === 1) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// approve button permission\r\nexport function needRevisionPermision({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if status id 6 show timer start button\r\n    if ([6].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    } else if (_loggedUser?.getRoleId() === 1) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// revision button\r\nexport function revisionButtonPermission({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = loggedUser;\r\n    //    console.log(statusId)\r\n    // if status id 6 show timer start button\r\n    if ([1].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// submit for client approval button permission\r\n\r\nexport function submitForClientApproval({ task, status, auth }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([8].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (\r\n        (assignedUser?.getId() === auth?.getId() && auth?.getRoleId() === 4) ||\r\n        auth?.getRoleId() === 1\r\n    ) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\nexport function clientApproveConfirmationButtonPermission({\r\n    task,\r\n    status,\r\n    auth,\r\n}) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([9].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (\r\n        (assignedUser?.getId() === auth?.getId() && auth?.getRoleId() === 4) ||\r\n        auth?.getRoleId() === 1\r\n    ) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\nexport function taskEditPermision({ task, status, auth }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([1, 2, 3].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser?.getId() === auth?.getId() || auth?.getRoleId() === 1) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// sub task creation permission\r\n\r\nexport function subTaskCreationPermision({ task, status, auth }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let assignedBy = task?.assignedBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([1, 2, 3].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (\r\n        assignedUser?.getId() === auth?.getId() ||\r\n        (assignedBy?.getId() === auth?.getId() &&\r\n            _.includes([5, 6, 9, 10], auth?.getRoleId()))\r\n        // ||\r\n        // auth?.getRoleId() === 1\r\n    ) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n","import dayjs from 'dayjs';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport CKEditorComponent from '../../../ckeditor';\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine';\r\nimport { useStoreCommentMutation } from '../../../services/api/SingleTaskPageApi';\r\nimport { User } from '../../../utils/user-details';\r\nimport Button from '../../components/Button';\r\n\r\nconst CommentSendBox = ({onCommentPost, task}) => {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const [comment, setComment] = React.useState('');\r\n  const [files, setFiles] = React.useState([]);\r\n  const [error, setError] = React.useState(null);\r\n\r\n  const auth = new User(window?.Laravel?.user);\r\n\r\n  const [storeComment, {isLoading}] = useStoreCommentMutation();\r\n\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setComment(data);\r\n  }\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // if text not provide show error message\r\n    if(!comment){\r\n        setError(s => ({...s, comment: \"Please provide a comment before submitting.\"}));\r\n        return;\r\n    }\r\n\r\n    // make form data\r\n    const fd = new FormData();\r\n    fd.append('comment', comment);\r\n    fd.append('task_id', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    await storeComment({data: fd, task_id: task?.id})\r\n    .unwrap()\r\n    .then(res=>{\r\n      setEditMode(false);\r\n      setComment(\"\");\r\n      setFiles('');\r\n      let comment = {...res}\r\n      comment.last_updated_at = dayjs(res?.last_updated_at).unix();\r\n      onCommentPost(comment);\r\n    }).catch(err => console.log(err))\r\n\r\n  }\r\n\r\n  const commentMode = () => {\r\n    if(editMode){\r\n      return (\r\n        <div className='w-100'>\r\n            <div className='ck-editor-holder'>\r\n              <CKEditorComponent data={comment} onChange={handleEditorChange} />\r\n            </div>\r\n            {error?.comment ? <ErrorText>{error?.comment}</ErrorText> : null }\r\n\r\n            <div className='mt-2'>\r\n              <h6>Attach Files</h6>\r\n              <UploadFilesInLine\r\n                files={files}\r\n                setFiles={setFiles}\r\n                uploadInputClass='comment-file-upload'\r\n                fileWrapperClass='comment-uploaded-file'\r\n              />\r\n            </div>\r\n          <div className='mt-3 d-flex align-items-center'>\r\n            {isLoading ?\r\n                  <Button className='cursor-processing mr-2'>\r\n                      <div\r\n                          className=\"spinner-border text-white\"\r\n                          role=\"status\"\r\n                          style={{width: '18px', height: '18px' }}\r\n                      >\r\n                      </div>\r\n                      Processing...\r\n                  </Button> :\r\n                <Button className='mr-2' onClick={handleSubmit}>Send</Button>}\r\n\r\n            <Button\r\n              variant='secondary'\r\n              onClick={() => setEditMode(false)}\r\n            >Close</Button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return <div\r\n      onClick={() => setEditMode(true)}\r\n      className='__box'\r\n    ><span>Write a comment ...</span></div>\r\n  }\r\n\r\n  return (\r\n    <div className='sp1_task_comment_send_box'>\r\n        <>\r\n            <div className='__avatar rounded-circle mr-2' style={{width: '36px', height: '36px'}}>\r\n                <img\r\n                  src={auth?.getAvatar()}\r\n                  alt='sender_name'\r\n                  width=\"36px\"\r\n                  height=\"36px\"\r\n                  className='rounded-circle'\r\n                />\r\n            </div>\r\n        </>\r\n          <div className='__send-box'>\r\n            {commentMode()}\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentSendBox\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n    padding: 10px 0;\r\n`;\r\n","import * as React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { usePopper } from 'react-popper';\r\nimport { motion, AnimatePresence } from 'framer-motion'; \r\n  \r\n\r\nconst CustomModal = ({toggleRef = null,  isOpen, close, children}) => {\r\n    const [modalRef, setModalRef] = React.useState(null); \r\n    const { styles, attributes } = usePopper(toggleRef, modalRef,{\r\n        placement: 'left-start',\r\n        modifiers: [ \r\n            {name: 'offset', options: {offset: [0, 0]}},\r\n        ]\r\n    })\r\n\r\n  return ( \r\n        <div \r\n            ref={setModalRef}\r\n            style={{\r\n                ...styles.popper,\r\n                pointerEvents: isOpen ? 'all' : 'none', \r\n                zIndex: 99,\r\n            }} \r\n            {...attributes.popper}\r\n        >   \r\n\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        exit={{opacity: 0}}\r\n                        className=''\r\n                    >\r\n                        {children} \r\n\r\n                        <Shadow/>\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </div> \r\n  )\r\n}\r\n\r\nexport default CustomModal \r\n\r\nconst Shadow = () => {\r\n    return ReactDOM.createPortal(\r\n        <div\r\n            style={{\r\n                width: '100vw',\r\n                height: '100vh',\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                zIndex: 90,\r\n                background: 'rgba(0,0,0,.1)'\r\n            }} \r\n        />,\r\n        document.querySelector('#sp1SingleTaskPageModal')\r\n    )\r\n}","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\nimport CKEditorComponent from '../../../ckeditor'\r\n\r\nconst CommentWritingModal = ({isOpen, close}) => {\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"sp1_st_cnt_modal\">\r\n        <div className='sp1_st_comment_preview'>\r\n            <div className='sp1_st_comment_panel' style={{maxWidth: '60vw', minHeight: '50vh'}}> \r\n                <div className='border-bottom pb-2 d-flex'>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div> \r\n\r\n\r\n                {/* comment */}\r\n                <div className='mt-3 w-100'>\r\n                   <div className=\"sp1_st_write_comment-sendbox\">\r\n                       <div style={{minWidth: '48px'}}>\r\n                            <img \r\n                                src=\"/user-uploads/avatar/40164f31bc7d575c7dbe99b24b408d75.png\" \r\n                                alt=\"\"\r\n                                width={48}\r\n                                height={48}\r\n                                className='rounded-circle'\r\n                            />\r\n                       </div> \r\n                         \r\n                        <div> \r\n                            <div className='sp1_st_write_comment_editor'>\r\n                                <CKEditorComponent/>\r\n                            </div> \r\n                            <div className='py-3'>\r\n                                <div>Attach Files here (if need) <i className='fa-solid fa-paperclip ml-1 text-primary' /></div>\r\n                                <div className='sp1_st_write_comment_editor_attach'>\r\n                                    <i className=\"fa-solid fa-cloud-arrow-up\"></i>\r\n                                    <span>Attach Files</span>\r\n                                </div> \r\n                            </div>\r\n                        </div> \r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CommentWritingModal","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useGetTaskCommentWidgetDataQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport dayjs from \"dayjs\";\r\nimport { timeCalculate } from \"../../../utils/timeCalculate\";\r\nimport Modal from \"../../components/Modal\";\r\nimport CommentPreview from \"./CommentPreview\";\r\nimport CommentsContainer from \"../../../UI/comments/CommentsContainer\";\r\nimport { useGetCommentsQuery } from \"../../../services/api/commentsApiSlice\";\r\n\r\n// widget item\r\n\r\nconst WidgetItem = ({ comment }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    if (!comment) return null;\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"d-flex justify-content-between sp1_tark_right_item align-items-start pt-1 pb-2\">\r\n                <div\r\n                    className=\"w-100 sp1_st_comment-view\"\r\n                    style={{ overflow: \"hidden\" }}\r\n                >\r\n                    <p className=\"mb-0 pb-0\">\r\n                        <a\r\n                            href={`/account/employees/${comment.user.id}`}\r\n                            className=\"hover-underline text-primary\"\r\n                        >\r\n                            {comment.user.name}\r\n                        </a>{\" \"}\r\n                        {comment.is_deleted\r\n                            ? \"deleted \"\r\n                            : comment.mention\r\n                            ? \"replied to \"\r\n                            : \"added \"}{\" \"}\r\n                        a comment\r\n                    </p>\r\n                    <p\r\n                        className=\"text-ellipsis d-flex align-items-center mb-0 pb-0\"\r\n                        style={{ color: \"#AEAFB9\" }}\r\n                    >\r\n                        {comment.is_deleted\r\n                            ? timeCalculate(comment.deleted_at)\r\n                            : timeCalculate(comment.created_date)}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"d-flex align-items-center\">\r\n                    <a\r\n                        href=\"#\"\r\n                        className={`mr-2 py-2 sp1_task_righ_action_btn ${\r\n                            isOpen ? \"text-primary\" : \"\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setIsOpen(true);\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-regular fa-eye\"></i>\r\n                    </a>\r\n                    {/* <a href=\"#\" className=\"mr-2 py-2 sp1_task_righ_action_btn\"><i className=\"fa-regular fa-pen-to-square\"></i></a> */}\r\n                </div>\r\n            </div>\r\n\r\n            {/* <Modal isOpen={isOpen}>\r\n                <CommentPreview\r\n                    isOpen={isOpen}\r\n                    close={() => setIsOpen(false)}\r\n                    commentId={comment.id}\r\n                />\r\n            </Modal> */}\r\n            <CommentsContainer\r\n                singleCommentId={comment.id}\r\n                close={() => setIsOpen(false)}\r\n                isOpen={isOpen}\r\n                showCommentEditor={false}\r\n                showFullScreenBtn={false}\r\n                showSearchBtn={false}\r\n                height=\"50vh\"\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst Widget = ({ task }) => {\r\n    // console.log(task);\r\n    // const { data, isLoading } = useGetTaskCommentWidgetDataQuery(task.id, {\r\n    //     skip: !task.id,\r\n    // });\r\n    const { data: comments, isLoading } = useGetCommentsQuery(task.id, {\r\n        skip: !task.id,\r\n    });\r\n\r\n    const handleOrdering = (comments = []) => {\r\n        const sortedComments = [...comments];\r\n\r\n        sortedComments.sort((a, b) => {\r\n            if (a.is_deleted && b.is_deleted) {\r\n                const a_day = dayjs(a.deleted_at);\r\n                const b_day = dayjs(b.deleted_at);\r\n                return b_day.diff(a_day);\r\n            } else if (a.is_deleted) {\r\n                const a_day = dayjs(a.deleted_at);\r\n                const b_day = dayjs(b.created_date);\r\n                return b_day.diff(a_day);\r\n            } else if (b.is_deleted) {\r\n                const a_day = dayjs(a.created_date);\r\n                const b_day = dayjs(b.deleted_at);\r\n                return b_day.diff(a_day);\r\n            } else {\r\n                const a_day = dayjs(a.created_date);\r\n                const b_day = dayjs(b.created_date);\r\n                return b_day.diff(a_day);\r\n            }\r\n        });\r\n\r\n        return sortedComments;\r\n    };\r\n\r\n    // console.log({ widget: data });\r\n    return (\r\n        <React.Fragment>\r\n            {_.map(handleOrdering(comments), (comment) => (\r\n                <WidgetItem key={comment.id} comment={comment} />\r\n            ))}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Widget;\r\n","import * as React from \"react\";\r\nimport Comment from \"./Comment\";\r\nimport CommentModal from \"./CommentModal\";\r\nimport Button from \"../../components/Button\";\r\nimport CommentWritingModal from \"./CommentWritingModal\";\r\nimport { useLazyGetTaskDetailsQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport _ from \"lodash\";\r\nimport Widget from \"./Widget\";\r\nimport { useGetTaskCommentsQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport CommentsContainer from \"../../../UI/comments/CommentsContainer\";\r\n\r\nconst CommentSection = ({ task, isLoading }) => {\r\n    // const [comments, setComments] = React.useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = React.useState(false);\r\n    const [openAddCommentModal, setOpenAddCommentModal] = React.useState(false);\r\n    const [modalToggleRef, setModalToggleRef] = React.useState(null);\r\n\r\n    const toggleModalButton = () => setModalIsOpen(!modalIsOpen);\r\n    const toggleAddCommentModal = () =>\r\n        setOpenAddCommentModal(!openAddCommentModal);\r\n    const closeAddCommentModal = () => setOpenAddCommentModal(false);\r\n\r\n    // const [getTaskDetails, { isFetching }] = useLazyGetTaskDetailsQuery();\r\n    const { data, isLoading: isFetching } = useGetTaskCommentsQuery(task.id, {\r\n        skip: !task.id,\r\n    });\r\n\r\n    const comments = _.orderBy(data, \"id\", \"desc\");\r\n\r\n    // console.log({comments})\r\n    // // if task notes fetch completed store data into redux store\r\n    // React.useEffect(() => {\r\n    //     if (task && task.id) {\r\n    //         getTaskDetails(`/${task?.id}/json?mode=task_comment`)\r\n    //             .unwrap()\r\n    //             .then((res) => {\r\n    //                 let r = _.orderBy([...res], \"id\", \"desc\");\r\n    //                 setComments(r);\r\n    //             })\r\n    //             .catch((err) => {\r\n    //                 console.log(err);\r\n    //             });\r\n    //     }\r\n    // }, []);\r\n\r\n    // on comment post\r\n    const onCommentPost = (comment) => {\r\n        const _comments = [...comments];\r\n        _comments.unshift(comment);\r\n        // setComments(_comments);\r\n    };\r\n\r\n    const updateComments = (comment) => {\r\n        let _comments = comments;\r\n        _comments = _.map(_comments, (c) =>\r\n            c.id === comment.id ? comment : c\r\n        );\r\n        // setComments(_comments);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"sp1_task_right_card mb-3\"\r\n                ref={setModalToggleRef}\r\n                style={{ zIndex: modalIsOpen ? \"99\" : \"\" }}\r\n            >\r\n                {/* <CommentModal\r\n                    isOpen={modalIsOpen}\r\n                    toggleRef={modalToggleRef}\r\n                    comments={comments}\r\n                    task={task}\r\n                    isLoading={isFetching}\r\n                    close={() => setModalIsOpen(false)}\r\n                    onCommentPost={onCommentPost}\r\n                    updateComments={updateComments}\r\n                /> */}\r\n\r\n                <CommentsContainer\r\n                    isOpen={modalIsOpen}\r\n                    toggleRef={modalToggleRef}\r\n                    comments={comments}\r\n                    task={task}\r\n                    close={() => setModalIsOpen(false)}\r\n                    onCommentPost={onCommentPost}\r\n                />\r\n\r\n                <button\r\n                    aria-label=\"openCommentModalButton\"\r\n                    className=\"sp1_task_right_dl_toggle\"\r\n                    onClick={toggleModalButton}\r\n                    style={{ zIndex: modalIsOpen ? \"110\" : \"\" }}\r\n                >\r\n                    <i\r\n                        className={`fa-solid fa-circle-chevron-${\r\n                            modalIsOpen ? \"right\" : \"left\"\r\n                        }`}\r\n                        style={{ color: \"#276fec\" }}\r\n                    />\r\n                </button>\r\n\r\n                <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n                    <h6 className=\"f-16 mb-0\">Comment</h6>\r\n                    {(isLoading || isFetching) && (\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2 mr-auto\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        />\r\n                    )}\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        className=\"sp1_tark_add_item\"\r\n                        aria-label=\"addButton\"\r\n                        onClick={toggleModalButton}\r\n                    >\r\n                        <i\r\n                            className=\"fa-solid fa-plus\"\r\n                            style={{ fontSize: \"12px\" }}\r\n                        />\r\n                        Comment\r\n                    </Button>\r\n\r\n                    <CommentWritingModal\r\n                        isOpen={openAddCommentModal}\r\n                        close={closeAddCommentModal}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"sp1_task_right_card--body\">\r\n                    <Widget task={task} />\r\n\r\n                    {/*\r\n                    {!isFetching && !isLoading ? (\r\n                        comments?.length > 0 ? (\r\n                            comments?.map((comment) => (\r\n                                <Comment key={comment.id} comment={comment} />\r\n                            ))\r\n                        ) : (\r\n                            <div\r\n                                className=\"d-flex align-items-center justify-content-center\"\r\n                                style={{\r\n                                    color: \"#B4BCC4\",\r\n                                    fontSize: \"15px\",\r\n                                    textAlign: \"center\",\r\n                                    height: \"100%\",\r\n                                    width: \"100%\",\r\n                                }}\r\n                            >\r\n                                No Comment is Available\r\n                            </div>\r\n                        )\r\n                    ) : (\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{\r\n                                color: \"#5A6169\",\r\n                                fontSize: \"15px\",\r\n                                textAlign: \"center\",\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                            }}\r\n                        >\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                    marginRight: \"10px\",\r\n                                }}\r\n                            />\r\n                            Loading...\r\n                        </div>\r\n                    )} */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CommentSection;\r\n","import dayjs from \"dayjs\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst DailySubmissionItem = ({ item, setModalData, modalData }) => {\r\n    // const [show,setShow] = useState(false);\r\n    const { task } = useSelector((s) => s.subTask);\r\n\r\n    if (!item) return null;\r\n\r\n    return (\r\n        <tr\r\n            onClick={() => {\r\n                setModalData((prev) => {\r\n                    if (prev?.id === item.id) {\r\n                        return null;\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n            }}\r\n            className=\"sp1_tlr_tr\"\r\n            style={{\r\n                verticalAlign: \"middle\",\r\n                margin: \"0 auto\",\r\n                cursor: \"pointer\",\r\n            }}\r\n        >\r\n            <td\r\n                className=\"sp1_tlr_td\"\r\n                style={{ minWidth: \"100px\", textAlign: \"left\" }}\r\n            >\r\n                <span className=\"singleline-ellipsis\">\r\n                    <span className=\"text-primary\">Task#{task.id}</span>\r\n                    {\" submitted by \"}\r\n                    <span className=\"text-primary\">{item.developer_name}</span>\r\n                </span>\r\n            </td>\r\n            <td className=\"sp1_tlr_td\" style={{ minWidth: \"100px\" }}>\r\n                {dayjs(item.submission_creation_date).format(\"MMM DD, YYYY\")}\r\n            </td>\r\n            <td className=\"sp1_tlr_td\" style={{ minWidth: \"50px\" }}>\r\n                {modalData?.id === item.id ? (\r\n                    <AiFillEyeInvisible\r\n                        style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <AiFillEye\r\n                        style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    />\r\n                )}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default DailySubmissionItem;\r\n","import { useRef } from \"react\";\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport Button from \"../../components/Button\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { get_data_dailySubmission } from \"./fake-data/data_dailySubmission\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\n\r\nconst DailysubmissionDrawerTable = ({ isOpen, close, toggle, data, modalData, setModalData }) => {\r\n    const ref = useRef(null);\r\n    const { width: deviceWidth } = useWindowSize();\r\n    // useClickAway(ref, close);\r\n\r\n    // console.log(get_data_dailySubmission());\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\">\r\n                <div className='sp1-subtask-form --modal-panel-header'>\r\n                    <h6>Daily Submission</h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <table className=\"mt-3 sp1_tlr_table sp1_tlr_tbody\">\r\n                        {/* {deviceWidth > 800 ? <Table data={data} />: <CardView data={data} />} */}\r\n                        {\r\n                            data?.map((singleData) => (\r\n                                <DailySubmissionItem key={singleData.id} item={singleData} setModalData={setModalData} modalData={modalData} />\r\n                            ))\r\n                        }\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if (deviceWidth > 1200) {\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        );\r\n    } else {\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                {content()}\r\n            </Modal>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DailysubmissionDrawerTable;","import { convertTime } from \"../../../../utils/converTime\";\r\n\r\nconst timeFormatter = (time = '') => {\r\n    // console.log(time);\r\n    const [year, month, date] = time.split(\" \")[0].split(\"-\");\r\n    let month_name = '';\r\n    switch (month) {\r\n        case '01':\r\n            month_name = \"Jan\";\r\n            break;\r\n\r\n        case '02':\r\n            month_name = \"Feb\";\r\n            break;\r\n\r\n        case '03':\r\n            month_name = \"Mar\";\r\n            break;\r\n\r\n        case '04':\r\n            month_name = \"Apr\";\r\n            break;\r\n\r\n        case '05':\r\n            month_name = \"May\";\r\n            break;\r\n\r\n        case '06':\r\n            month_name = \"Jun\";\r\n            break;\r\n\r\n        case '07':\r\n            month_name = \"Jul\";\r\n            break;\r\n\r\n        case '08':\r\n            month_name = \"Aug\";\r\n            break;\r\n\r\n        case '09':\r\n            month_name = \"Sep\";\r\n            break;\r\n\r\n        case '10':\r\n            month_name = \"Oct\";\r\n            break;\r\n\r\n        case '11':\r\n            month_name = \"Nov\";\r\n            break;\r\n\r\n        case '12':\r\n            month_name = \"Dec\";\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return `${month_name} ${date}, ${year}`\r\n}\r\n\r\n\r\nexport const columnSchema = [\r\n    {\r\n        id: 'report_date',\r\n        header: 'Report Date',\r\n        draggable: true,\r\n        // accessor: 'report_date',\r\n        accessorKey: 'submission_creation_date',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {timeFormatter(cell.getValue())}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'page_link',\r\n        header: 'Page Link',\r\n        draggable: true,\r\n        // accessor: 'page_link',\r\n        accessorKey: 'link_name',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\">\r\n                View Link\r\n                </a>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'sections',\r\n        header: 'Sections',\r\n        draggable: true,\r\n        // accessor: 'sections',\r\n        accessorKey: 'section_name',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {cell.getValue()}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'comment',\r\n        header: 'Comment',\r\n        draggable: true,\r\n        // accessor: 'comment',\r\n        accessorKey: 'comment',\r\n        cell: (cell) => (\r\n            <div style={{ minWidth: '20rem', maxWidth: '20rem', width: '100%' }} dangerouslySetInnerHTML={{__html:cell.getValue()}}/>\r\n        )\r\n    },\r\n    {\r\n        id: 'total_time_spent',\r\n        header: 'Total Time Spent',\r\n        draggable: true,\r\n        // accessor: 'total_time_spent',\r\n        accessorKey: 'hours_spent',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {convertTime(cell.getValue())}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'attachment_url',\r\n        header: 'Screenshots/Screen records of the sections',\r\n        draggable: true,\r\n        // accessor: 'attachment_url',\r\n        accessorKey: 'attachments',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\"></a>\r\n                View Link\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'site_url',\r\n        header: `Working/Staging Site's URL`,\r\n        draggable: true,\r\n        // accessor: 'site_url',\r\n        accessorKey: 'site_url',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\">\r\n                    View Link\r\n                </a>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'frontend_password',\r\n        header: 'Frontend Password',\r\n        draggable: true,\r\n        // accessor: 'frontend_password',\r\n        accessorKey: 'frontend_password',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {cell.getValue()?cell.getValue():'No Password'}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'submission_date',\r\n        header: 'Report Submission Date',\r\n        draggable: true,\r\n        // accessor: 'submission_date',\r\n        accessorKey: 'submission_creation_date',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {timeFormatter(cell.getValue())}\r\n            </div>\r\n        )\r\n    }\r\n]","import { useRef } from \"react\";\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport Button from \"../../components/Button\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { get_data_dailySubmission } from \"./fake-data/data_dailySubmission\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\nimport DataTable from \"../../../global/table/DataTable\";\r\nimport { columnSchema } from \"./drawer-table-support/Single_user_submission_table_column\";\r\n\r\nconst SingleUserSubmissionTableDrawer = ({ isOpen, close, toggle, data, setModalData }) => {\r\n    const ref = useRef(null);\r\n    const { width: deviceWidth } = useWindowSize();\r\n    // useClickAway(ref, close);\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\">\r\n                <div className='sp1-subtask-form --modal-panel-header'>\r\n                    <h6>Daily Submission</h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={() => {\r\n                            setModalData(null);\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <DataTable\r\n                        tableData={data?[data]:[]}\r\n                        tableColumns={columnSchema}\r\n                        tableName=\"single-user-submission-table\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if (deviceWidth > 1200) {\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        );\r\n    } else {\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                {content()}\r\n            </Modal>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SingleUserSubmissionTableDrawer;","import { useEffect, useState } from \"react\";\r\nimport DailysubmissionDrawerTable from \"./DailysubmissionDrawerTable\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\nimport SingleUserSubmissionTableDrawer from \"./SingleUserSubmissionTableDrawer\";\r\nimport { useGetDailyTasksSubmissionQuery } from \"../../../services/api/dailySubmissionApiSlice\";\r\n\r\n\r\nconst DailySubmissionSection = ({ task }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [modalTableIsOpen, setModalTableIsOpen] = useState(false);\r\n  const [modalRefButton, setModalRefButton] = useState(null);\r\n  const [singleUserSubmissionTableDrawerRef, setSingleUserSubmissionTableDrawerRef] = useState(null);\r\n  const [modalData, setModalData] = useState(null);\r\n\r\n\r\n  const { data, isLoading } = useGetDailyTasksSubmissionQuery(task?.id);\r\n    // control modal\r\n  const toggle = () => setIsOpen(prev => !prev);\r\n  const close = () => setIsOpen(false);\r\n\r\n  // const modalTableToggle = () => setModalTableIsOpen(prev=> !prev);\r\n  const modalTableOpen = () => setModalTableIsOpen(true);\r\n  const modalTableClose = () => setModalTableIsOpen(false);\r\n\r\n  useEffect(() => {\r\n    if (modalData) {\r\n      modalTableOpen();\r\n    } else {\r\n      modalTableClose();\r\n    }\r\n  }, [modalData])\r\n\r\n  const handleModalRef = (ref) => {\r\n    setModalRefButton(ref);\r\n    setSingleUserSubmissionTableDrawerRef(ref);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='sp1_task_right_card mb-3'\r\n      ref={handleModalRef}\r\n      style={{ zIndex: isOpen ? '99' : '' }}>\r\n\r\n      <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Daily Submission</span>\r\n        {isLoading &&\r\n          <div\r\n            className=\"spinner-border text-dark ml-2 mr-auto\"\r\n            role=\"status\"\r\n            style={{\r\n              width: '16px',\r\n              height: '16px',\r\n              border: '0.14em solid rgba(0, 0, 0, .25)',\r\n              borderRightColor: 'transparent'\r\n            }}\r\n          />\r\n        }\r\n      </div>\r\n\r\n\r\n      {/* side drop toggle button */}\r\n      {/* {_.size(timeLogs) > 0 && } */}\r\n      <button\r\n        aria-label='openCommentModalButton'\r\n        className='sp1_task_right_dl_toggle'\r\n        onClick={toggle}\r\n        style={{ zIndex: isOpen ? 110 : '' }}\r\n      >\r\n        <i\r\n          className={`fa-solid fa-circle-chevron-${isOpen ? 'right' : 'left'}`}\r\n          style={{ color: \"#276fec\" }}\r\n        />\r\n      </button>\r\n      {/* side drop toggle button end */}\r\n\r\n\r\n      <DailysubmissionDrawerTable\r\n        isOpen={isOpen}\r\n        close={close}\r\n        toggle={modalRefButton}\r\n        data={data?.daily_submissions}\r\n        modalData={modalData}\r\n        setModalData={setModalData} />\r\n\r\n      <SingleUserSubmissionTableDrawer\r\n        isOpen={modalTableIsOpen}\r\n        close={modalTableClose}\r\n        toggle={singleUserSubmissionTableDrawerRef}\r\n        data={modalData}\r\n        setModalData={setModalData} />\r\n\r\n\r\n      <div className=\"sp1_task_right_card--body\">\r\n        {data?.daily_submissions.length > 0 ?\r\n          <table className=\"sp1_tlr_table\">\r\n            <tbody className=\"sp1_tlr_tbody\">\r\n              {!isLoading &&\r\n                data?.daily_submissions?.map((singleData) => (\r\n                  <DailySubmissionItem key={singleData.id} item={singleData} setModalData={setModalData} modalData={modalData} />\r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n          :\r\n          <div\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{\r\n              color: \"#B4BCC4\",\r\n              fontSize: \"15px\",\r\n              textAlign: \"center\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            No Submission is Available\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailySubmissionSection;","import React from 'react'\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst InnerHistoryItemLoader = () => {\r\n  return (\r\n    <div className=\"d-flex align-items-center sp1_tark_right_item py-2\">\r\n        <div className=''>\r\n            <Placeholder\r\n              width={48}\r\n              height={48}\r\n            />\r\n        </div>\r\n        <div className='px-3 w-100'>\r\n            <Placeholder className='mb-2'/>  \r\n            <Placeholder/>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default InnerHistoryItemLoader ","import React, {lazy} from 'react'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport Button from '../../components/Button';\r\nconst InnerHistoryItem = lazy(() => import('./InnerHistoryItem'));\r\nimport InnerHistoryItemLoader from './InnerHistoryItemLoader';\r\nimport Modal from '../../components/Modal';\r\nimport { useWindowSize } from \"react-use\";\r\n\r\n\r\nconst Histories = ({isOpen, close, toggle, data = []}) => {\r\n  const {width: deviceWidth} = useWindowSize();\r\n  \r\n  const content = () => {\r\n    return (\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6> History </h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='mt-3'>\r\n                    {data ? data.map(d => (\r\n                        <React.Fragment key={d.id}>\r\n                            <React.Suspense fallback={<InnerHistoryItemLoader />}>\r\n                                <InnerHistoryItem history={d} />\r\n                            </React.Suspense>\r\n                        </React.Fragment>\r\n                    )):null}\r\n                </div>      \r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n \r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n            <React.Fragment>{content()}</React.Fragment>       \r\n        </CustomModal>\r\n    );\r\n    }else{\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Histories\r\n","import React, {lazy, Suspense} from 'react'\r\nconst HistoryItem = lazy(() => import('./HistoryItem'));\r\nimport { Placeholder } from '../../../global/Placeholder';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { storeHistories } from '../../../services/features/subTaskSlice';\r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport Histories from './Histories';\r\nimport useSWR from 'swr';\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst HistorySection = () => {\r\n  const {task, histories} = useSelector(s => s.subTask);\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, error, isLoading:isFetching } = useSWR(`/account/task/${task.id}/json?mode=task_history`, fetcher, {\r\n    refreshInterval: 5000\r\n  });\r\n\r\n  //fetch all task \r\n  // const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n  //   skip: histories?.length\r\n  // })\r\n\r\n   //if task notes fetch completed store data into redux store\r\n  //  React.useEffect(()=> {\r\n  //   if(task && task.id){\r\n  //     getTaskDetails(`/${task?.id}/json?mode=task_history`)\r\n  //     .unwrap()\r\n  //     .then(res => {\r\n  //       if(res){\r\n  //         dispatch(storeHistories(res));\r\n  //       }\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(err)\r\n  //     })\r\n  //   } \r\n  // }, [task]); \r\n\r\n  React.useEffect(()=> {\r\n    if(!isFetching && data){\r\n      dispatch(storeHistories(data));\r\n    }  \r\n  }, [data, isFetching]); \r\n  \r\n\r\n  // control modal\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const close = () => setIsOpen(false);\r\n\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3' ref={setModalRefButton} style={{zIndex: isOpen ? 99 : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">History</span> \r\n        {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n          <button \r\n            aria-label='openCommentModalButton'  \r\n            className='sp1_task_right_dl_toggle'\r\n            onClick={toggle}\r\n            style={{zIndex: isOpen ? '110' : ''}}\r\n          >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>\r\n        {/* side drop toggle button end */}\r\n \r\n          {/* histories details */}\r\n          <Histories\r\n            isOpen={isOpen}\r\n            close={close}\r\n            data={histories} \r\n            toggle={modalRefButton}\r\n          />\r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          {!isFetching ? histories ? histories.map( history => (\r\n            <React.Fragment key={history.id}>\r\n              <Suspense fallback={<div className='sp1_tark_right_item py-2 '> <Placeholder /> </div>}>\r\n                <HistoryItem history={history} />\r\n              </Suspense>\r\n            </React.Fragment>\r\n          )):<div\r\n            className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#B4BCC4',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          >\r\n              Empty History\r\n          </div> : \r\n          <div className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#5A6169',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          > \r\n              <div \r\n                    className=\"spinner-border text-dark ml-2\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent',\r\n                        marginRight: '10px'\r\n                    }}\r\n                />\r\n              Loading...\r\n          </div> }\r\n        </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default HistorySection","import { Link } from \"react-router-dom\"\r\n\r\nconst Note = ({note}) => {\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\">\r\n        <div className='w-100 text-ellipsis'>\r\n          {note?.title || 'Untitled'} \r\n        </div>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?note=${note.id}&type=view`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n            <Link to={`?note=${note.id}&type=edit`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-pen-to-square\"></i>\r\n            </Link>\r\n        </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Input = ({\r\n    label,\r\n    id,\r\n    readOnly=false,\r\n    placeholder='',\r\n    inputClass='',\r\n    labelClass='',\r\n    type='text',\r\n    className='',\r\n    value,\r\n    defaultValue,\r\n    onChange,\r\n    error,\r\n    ...rest\r\n}) => {\r\n  return (\r\n    <div className={`form-group my-3 w-100 ${className}`}>\r\n        <label\r\n            htmlFor={id}\r\n            className={`f-14 text-dark-gray mb-1 ${labelClass}`}\r\n            data-label=\"true\"\r\n        >\r\n            {label}\r\n            {rest.required && <sup className='f-14 mr-1'>*</sup> }\r\n        </label>\r\n        <input\r\n            type={type}\r\n            className={`form-control singleline-ellipsis height-35 w-100 f-14 ${inputClass}`}\r\n            placeholder={placeholder}\r\n            id={id}\r\n            value={value}\r\n            defaultValue={defaultValue}\r\n            onChange={onChange}\r\n            readOnly={readOnly}\r\n            onWheel={e => e.currentTarget.blur()}\r\n            {...rest}\r\n        />\r\n\r\n        {error? <div className='' style={{color: 'red'}}> {error} </div> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import * as React from 'react' \r\nimport Button from '../../components/Button' \r\nimport _ from 'lodash'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useCrateNoteMutation } from '../../../services/api/SingleTaskPageApi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeNotes } from '../../../services/features/subTaskSlice'\r\nimport Input from '../../components/form/Input'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from '../../components/Modal'\r\n\r\n\r\n\r\n\r\n\r\nconst CreateNote = ({isOpen, close,toggleRef}) => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [files, setFiles] = React.useState([]);\r\n  const [title, setTitle] = React.useState('');\r\n  const [errTitle, setErrTitle] = React.useState(null);\r\n  const [note,setNote] = React.useState('');\r\n  const dispatch = useDispatch();  \r\n  const { width: deviceWidth} = useWindowSize();\r\n\r\n\r\n const [crateNote, {isLoading}] = useCrateNoteMutation();\r\n\r\n  // handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n  const handleSubmit = e => { \r\n    e.preventDefault();\r\n    if(!title){\r\n        setErrTitle('Title name required');\r\n        return null;\r\n    }\r\n    const fd = new FormData(); \r\n    fd.append('title', title);\r\n    fd.append('note', note);\r\n    fd.append('taskId', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    \r\n    crateNote(fd).unwrap().then(res => {\r\n            if(res?.status === 'success'){\r\n                let _notes = [...notes];\r\n                _notes.push(res?.note);\r\n                dispatch(storeNotes(_notes));\r\n\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: \"Data has been stored Successfully\",\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                }) \r\n\r\n                close();\r\n            }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setNote(data);\r\n  }  \r\n\r\n  const content = () => {\r\n    return (  \r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6>Write Notes</h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <div className='py-3'>\r\n                        <Input \r\n                            id='title'\r\n                            label=\"Title\"\r\n                            type=\"text\" \r\n                            placeholder='Enter a task title'\r\n                            name='title'\r\n                            required={true}\r\n                            value={title}\r\n                            error= {errTitle}\r\n                            onChange={e => handleChange(e, setTitle)}\r\n                        />\r\n\r\n                        <div className='sp1_st_write_comment_editor' style={{minHeight: '100px'}}>\r\n                            <h6 className='mb-3 f-14' style={{color:'#777'}}>Write Note</h6>\r\n                            <CKEditorComponent onChange={handleEditorChange}/>\r\n                        </div>\r\n\r\n                        <div className='mt-3'>\r\n                            <h6 className='mb-3 f-14' style={{color:'#777'}}>Upload Files</h6>\r\n                            <UploadFilesInLine  \r\n                                files={files} \r\n                                setFiles={setFiles} \r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"mt-5\"> \r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <Button\r\n                                        variant='secondary'\r\n                                        className='mr-2'\r\n                                        onClick={close}\r\n                                    > \r\n                                        Cancel\r\n                                    </Button> \r\n        \r\n                                    {!isLoading ? (\r\n                                        <Button onClick={handleSubmit}>\r\n                                            <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                            Keep as Notes\r\n                                        </Button>\r\n                                    ) : (\r\n                                    <Button className='cursor-processing'>\r\n                                        <div \r\n                                            className=\"spinner-border text-white\" \r\n                                            role=\"status\"\r\n                                            style={{\r\n                                                width: '18px',\r\n                                                height: '18px', \r\n                                            }}\r\n                                        >\r\n                                        </div>\r\n                                        Processing...\r\n                                    </Button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n    )\r\n  }\r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n           <React.Fragment>\r\n            {content()}\r\n           </React.Fragment>\r\n        </CustomModal>\r\n      )\r\n }else{\r\n    return (\r\n        <Modal isOpen={isOpen}> \r\n            <React.Fragment>\r\n                {content()}\r\n            </React.Fragment>\r\n        </Modal>\r\n      )\r\n }\r\n\r\n}\r\n\r\nexport default CreateNote ","import * as React from 'react' \r\nimport Button from '../../components/Button' \r\nimport _ from 'lodash'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useCrateNoteMutation, useDeleteNoteUploadedFileMutation, useGetTaskDetailsQuery, useUpdateNoteMutation } from '../../../services/api/SingleTaskPageApi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeNotes } from '../../../services/features/subTaskSlice'\r\nimport Input from '../../components/form/Input'\r\nimport { useEffect } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport { useWindowSize } from 'react-use' \r\nimport Modal from '../../components/Modal'\r\n\r\nconst EditNote = ({isOpen, close, toggleRef}) => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [files, setFiles] = React.useState([]);\r\n  const [title, setTitle] = React.useState('');\r\n  const [errTitle, setErrTitle] = React.useState(null);\r\n  const [note,setNote] = React.useState('');\r\n  const [attachedFiles, setAttachedFiles] = React.useState([]);\r\n  const dispatch = useDispatch();\r\n  const { width: deviceWidth} = useWindowSize();\r\n  const [searchParams] = useSearchParams();\r\n  const noteId = searchParams.get('note');\r\n  const type = searchParams.get('type');\r\n\r\n\r\n\r\n   const [updateNote, {isLoading}] = useUpdateNoteMutation();\r\n\r\n  // fetch all task \r\n  const {data, isFetching} = useGetTaskDetailsQuery(`/${noteId}/json?mode=task_note_edit`, {\r\n    skip: type ? (type !== 'edit' || !noteId) : true,\r\n    refetchOnMountOrArgChange: true\r\n  }) \r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    clearField();\r\n    if(!isFetching && data){ \r\n        setTitle(data?.title);\r\n        setNote(data?.note);\r\n        setAttachedFiles(data?.files || []);\r\n    }\r\n  }, [data, noteId, isFetching]);\r\n\r\n  const clearField = () => {\r\n    setTitle('');\r\n    setNote('');\r\n    setAttachedFiles([]);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    clearField();\r\n    close();\r\n  }\r\n\r\n\r\n // handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n\r\n// handle submittion\r\n  const handleSubmit = e => { \r\n    e.preventDefault();\r\n    if(!title){\r\n        setErrTitle('Title name required');\r\n        return null;\r\n    }\r\n    const fd = new FormData(); \r\n    fd.append('title', title);\r\n    fd.append('note', note);\r\n    fd.append('taskId', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    fd.append('_method', 'PUT');\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    \r\n    updateNote({data: fd, id: noteId}).unwrap().then(res => { \r\n            if(res?.status === 'success'){  \r\n                let _notes = [...notes];\r\n                _notes = _notes?.map(note => {\r\n                    if(Number(note?.id) === Number(res?.note?.id)){\r\n                        return res?.note;\r\n                    }else return note\r\n                })\r\n  \r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: res?.message,\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                }) \r\n\r\n                dispatch(storeNotes(_notes)); \r\n\r\n                handleClose();\r\n            }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  // handle editor\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setNote(data);\r\n  }  \r\n\r\n  // handle loading state\r\nReact.useEffect(() => { \r\n    if (isLoading || isFetching) {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'progress';\r\n      } else {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'default';\r\n      }\r\n}, [isLoading, isFetching])\r\n\r\n\r\n\r\n\r\n  // handle uplaoded file delete request\r\nconst [deleteNoteUploadedFile] = useDeleteNoteUploadedFileMutation();\r\n\r\nconst handleFileDelete = (e, file) => { \r\n    // delete\r\n    deleteNoteUploadedFile(file?.id).unwrap();\r\n   \r\n    // delete form ui\r\n    let previousFile = [...attachedFiles];\r\n    let index = previousFile?.indexOf(file);\r\n    previousFile.splice(index,1);\r\n    setAttachedFiles(previousFile);\r\n}\r\n\r\n\r\n    const content = () => {\r\n        return (\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6>Update Notes\r\n                        {isFetching && <div \r\n                            className=\"spinner-border text-dark ml-2\" \r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent' \r\n                            }}\r\n                        />}\r\n                  </h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={handleClose}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                {isFetching && \r\n                    <div className='w-100' style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        zIndex: 1\r\n                    }}/>\r\n                }\r\n                <div className='py-3'>\r\n                    <Input \r\n                        id='title'\r\n                        label=\"Title\"\r\n                        type=\"text\" \r\n                        placeholder='Enter a task title'\r\n                        name='title'\r\n                        required={true}\r\n                        value={title}\r\n                        error= {errTitle}\r\n                        onChange={e => handleChange(e, setTitle)}\r\n                    />\r\n\r\n                    <div className='sp1_st_write_comment_editor pr-0' style={{minHeight: '100px'}}>\r\n                        <h6 className='mb-3 f-14' style={{color:'#777'}}>Write Note</h6>\r\n                        <CKEditorComponent data={note} onChange={handleEditorChange}/>\r\n                    </div>\r\n\r\n                    <div className='mt-3'>\r\n                        <h6 className='mb-3 f-14' style={{color:'#777'}}>Upload Files</h6>\r\n                        <UploadFilesInLine  \r\n                            files={files} \r\n                            setFiles={setFiles} \r\n                            previous={attachedFiles}\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"mt-5\"> \r\n                            <div className=\"d-flex align-items-center\">\r\n                                <Button\r\n                                    variant='secondary'\r\n                                    className='mr-2'\r\n                                    onClick={handleClose}\r\n                                > \r\n                                    Cancel\r\n                                </Button> \r\n    \r\n                                {!isLoading ? (\r\n                                    <Button onClick={handleSubmit}>\r\n                                        <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                        Update\r\n                                    </Button>\r\n                                ) : (\r\n                                <Button className='cursor-processing'>\r\n                                    <div \r\n                                        className=\"spinner-border text-white\" \r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: '18px',\r\n                                            height: '18px', \r\n                                        }}\r\n                                    >\r\n                                    </div>\r\n                                    Processing...\r\n                                </Button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </CustomModal>\r\n      )\r\n }else{\r\n    return (\r\n        <Modal isOpen={isOpen}> \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </Modal>\r\n      )\r\n }\r\n}\r\n\r\nexport default EditNote;","import * as React from 'react'\r\nimport Button from '../../components/Button'\r\nimport CustomModal from '../../components/CustomModal' \r\nimport { useGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport { User } from '../../../utils/user-details'\r\nimport ContentLoader from \"react-content-loader\"\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from '../../components/Modal'\r\n\r\n\r\nconst NoteView = ({close, isOpen, toggleRef}) => {\r\n    const [searchParams] = useSearchParams();\r\n    const noteId = searchParams.get('note');\r\n    const type = searchParams.get('type');\r\n    const { width: deviceWidth} = useWindowSize();\r\n\r\n    // fetch all task \r\n    const {data, isFetching} = useGetTaskDetailsQuery(`/${noteId}/json?mode=task_note_edit`, {\r\n        skip: type ? (type !== 'view' || !noteId) : true,\r\n        refetchOnMountOrArgChange: true\r\n    }) \r\n    \r\n  const user = data ?  new User(data.user) : null;\r\n\r\n  const content = () =>{\r\n    return(\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                <h6>Notes</h6> \r\n                {isFetching && <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent'\r\n                    }}\r\n                />} \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='py-3'>\r\n                    <div>\r\n                        {isFetching ? <>Loading...</> : \r\n                        <>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div className=''>\r\n                                    <img src={user?.getAvatar()} alt=\"\" width={40} height={40} />\r\n                                </div>\r\n                                <div className='px-3'>\r\n                                    <h6 className='mb-0'>{user?.getName()}</h6>\r\n                                    <span className='' style={{color: '#A5ACB5'}}>{user?.getDesignationName()}</span>\r\n                                </div>\r\n                            </div> \r\n                            <div className='mt-4'>\r\n                                <h6 className='font-weight-bold'>{data?.title}</h6>\r\n                                <div className='sp1_ck_content mb-5' dangerouslySetInnerHTML={{__html: data?.note}} />\r\n                                {data?.files && <UploadFilesInLine previous={data?.files} mode='preview'/>}\r\n                            </div>\r\n                        </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </CustomModal>\r\n    )\r\n  }else{\r\n    return <Modal isOpen={isOpen} > \r\n        <React.Fragment>\r\n            {content()}\r\n        </React.Fragment>\r\n     </Modal>\r\n  }\r\n}\r\n\r\nexport default NoteView","import React from 'react'\r\nimport Note from './Note'\r\nimport CreateNote from './CreateNote';\r\nimport Button from '../../components/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { storeNotes } from '../../../services/features/subTaskSlice';\r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport EditNote from './EditNote';\r\nimport NoteView from './NoteView';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\n\r\nconst NoteSection = () => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [mode, setMode] = React.useState('');\r\n\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n\r\n  const dispatch = useDispatch();   \r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const paramType = searchParams.get('type');\r\n\r\n\r\n  // fetch all task \r\n  const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n    skip: notes?.length\r\n  })\r\n\r\n  // control mode \r\n  React.useEffect(() => {\r\n    let _mode = paramType ? paramType : '';\r\n    setMode(_mode);\r\n  }, [paramType])\r\n\r\n\r\n  // if task notes fetch completed store data into redux store\r\n  React.useEffect(()=> {\r\n    if(task && task.id){\r\n      getTaskDetails(`/${task?.id}/json?mode=task_note`)\r\n      .unwrap()\r\n      .then(res => {\r\n        if(res){\r\n          dispatch(storeNotes(res));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    } \r\n  }, [task]);\r\n \r\n \r\n  // close modal\r\n  const close = (e) => { \r\n    navigate(`/account/tasks/${task.id}`); \r\n  }\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3' ref={setModalRefButton} style={{zIndex: mode ? '99' : ''}}>\r\n       <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n          <span className=\"f-16\">Notes</span>\r\n          {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n          <Button\r\n              variant='tertiary'\r\n              className=\"sp1_tark_add_item\" \r\n              aria-label=\"addButton\"\r\n              onClick={() => navigate(`?type=create`)}\r\n          > \r\n              {mode === 'create' ? (\r\n                <> <i className=\"fa-solid fa-xmark\" style= {{fontSize: '12px'}}/> Close </> \r\n                ) :\r\n                (\r\n                  <> <i className=\"fa-solid fa-plus\"  style= {{fontSize: '12px'}} /> Note  </>\r\n                )\r\n              }\r\n          </Button>\r\n        </div>\r\n\r\n        {/* left dropdown */}\r\n        {mode && <button \r\n          aria-label='openCommentModalButton'  \r\n          \r\n          className='sp1_task_right_dl_toggle'\r\n          onClick={close}\r\n          style={{zIndex: mode ? '110' : ''}}\r\n        >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ mode ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>}\r\n      {/* left dropdown */}\r\n\r\n        {/* create new */} \r\n        <CreateNote \r\n            close={close}  \r\n            isOpen={mode === 'create'} \r\n            toggleRef={modalRefButton}\r\n        /> \r\n\r\n        {/* edit note */} \r\n        <EditNote \r\n          close={close} \r\n          isOpen={ mode === 'edit'}   \r\n          toggleRef={modalRefButton}\r\n        />  \r\n\r\n\r\n        {/* note view */}\r\n        <NoteView \r\n          close={close}\r\n          isOpen={mode === 'view'} \r\n          toggleRef={modalRefButton}\r\n        /> \r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          { !isFetching ? notes?.length > 0 ? notes.map(note => (\r\n            <Note \r\n              key={note.id} \r\n              note={note}  \r\n            /> \r\n          )): <div\r\n            className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#B4BCC4',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          >\r\n              Empty Notes\r\n            </div> : \r\n            <div className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#5A6169',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          > \r\n              <div \r\n                    className=\"spinner-border text-dark ml-2\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent',\r\n                        marginRight: '10px'\r\n                    }}\r\n                />\r\n              Loading...\r\n            </div> }\r\n        </div>\r\n\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default NoteSection","import * as React from 'react'\r\nimport Button from '../../components/Button'\r\nimport CustomModal from '../../components/CustomModal' \r\n\r\n\r\nconst  ViewComment = ({close, isOpen, toggleRef, comment}) => { \r\n  return (\r\n    <CustomModal isOpen={isOpen} toggleRef={toggleRef}>\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal ml-auto'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='py-3'>\r\n                    <div>\r\n                        {/* comment here... */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </CustomModal>\r\n    \r\n  )\r\n}\r\n\r\nexport default ViewComment \r\n\r\n","import React from 'react'\r\nimport Rating from '../../../global/Rating'\r\nimport useSWR from 'swr';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux'\r\nimport ViewComment from './ViewComment';\r\n\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst RevisionSection = ({task}) => { \r\n  const [toggleRef, setToggleRef] = React.useState(null);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const toggle = (e) => {\r\n    e.preventDefault();\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  const close = e => {\r\n    setIsOpen(false);\r\n  }\r\n\r\n\r\n  const { data, error, isLoading } = useSWR(`/account/task/${task.id}/json?mode=task_approve`, fetcher);\r\n\r\n\r\n  const cmt = data?.comment;\r\n  const commentLength = cmt?.length > 250; \r\n  let comment = commentLength ? cmt?.slice(0, 250): cmt;  \r\n  comment = comment || `<span className='' style=\"color: #A7A9B2\">No Comment is Available</span>`\r\n \r\n  return (\r\n    <div className=\"sp1_task_right_card mb-3\" ref={setToggleRef} style={{maxHeight:'450px'}}>  \r\n\r\n        {/* side drop toggle button */}\r\n        {isOpen && (\r\n            <button \r\n                aria-label='openCommentModalButton'  \r\n                \r\n                className='sp1_task_right_dl_toggle'\r\n                onClick={toggle}\r\n                style={{zIndex: isOpen ? '110' : ''}}\r\n            >\r\n                <i \r\n                className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n                style={{color: \"#276fec\"}} \r\n                />\r\n            </button>\r\n        )}\r\n        {/* side drop toggle button end */}\r\n\r\n        <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n            <span className=\"f-16\">Task Review</span> \r\n        </div> \r\n       \r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Deadline Meet : </div>\r\n            <div className=\"d-flex align-items-center\">\r\n                <Rating rating={Number(data?.deadline_meet)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Submission Quality: </div>\r\n            <div className=\"d-flex align-items-center\">  \r\n                <Rating rating={Number(data?.submission_quality)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Req. Fullfillment: </div>\r\n            <div className=\"d-flex align-items-center\"> \r\n            <Rating rating={Number(data?.req_fullfillment)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Overall Task Ratings: </div>\r\n            <div className=\"d-flex align-items-center\"> \r\n                <Rating rating={Number(data?.overall_tasks)} /> \r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"mb-2\">\r\n            <span className=\"font-weight-bold d-block mb-1\">Comments:</span>\r\n            <div style={{color:'#777', fontSize: '13px'}}>\r\n                <div className='sp1_ck_content' dangerouslySetInnerHTML={{__html: comment}}></div> \r\n                { commentLength && <a href=\"#\" onClick={toggle} >Read More</a>}\r\n            </div>\r\n        </div> \r\n        <ViewComment isOpen={isOpen} toggleRef={toggleRef} close={close} comment={data?.comment} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RevisionSection","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./task-edit-form.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import * as React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nconst DatePickerComponent = ({date, selected, setDate, minDate, maxDate, placeholderText,...rest}) => {\r\n\r\n  return (\r\n        <DatePicker\r\n            selected={date}\r\n            dateFormat='dd-MM-yyyy'\r\n            onChange={(d) => setDate(d)}\r\n            className='w-100 border-0 py-2'\r\n            minDate={minDate}\r\n            maxDate={maxDate}\r\n            placeholderText={placeholderText}\r\n            {...rest}\r\n        />\r\n  )\r\n}\r\n\r\nexport default DatePickerComponent;\r\n","/* eslint-disable react/display-name */\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nconst SearchBox = ({value, onChange, placeholder=\"Search\", autoFocus=false, className=\"\", ...props}) => {\r\n        const ref = React.useRef(null);\r\n        React.useEffect(() => {\r\n            if (autoFocus) {\r\n                ref.current.focus();\r\n            }\r\n        }, [autoFocus, ref])\r\n        return (\r\n            <div className='cnx__ins__ui_search'>\r\n                <input \r\n                    type='text' \r\n                    placeholder= {placeholder}\r\n                    value={value}\r\n                    className={`cnx__ins__ui_search_input ${className}`}\r\n                    onChange={e => onChange(e.currentTarget.value)}  \r\n                    ref={ref}   \r\n                    {...props}\r\n                />\r\n\r\n                {/* search icons */}\r\n                    <div className='cnx__ins__ui_search_icon'>\r\n                        <svg \r\n                            xmlns=\"http://www.w3.org/2000/svg\" \r\n                            className='cnx__ins__ui_search_icon_svg mb-1'\r\n                            viewBox=\"0 0 24 24\" width=\"15\" height=\"15\">\r\n                            <path d=\"M23.707,22.293l-5.969-5.969a10.016,10.016,0,1,0-1.414,1.414l5.969,5.969a1,1,0,0,0,1.414-1.414ZM10,18a8,8,0,1,1,8-8A8.009,8.009,0,0,1,10,18Z\"/>\r\n                        </svg>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nSearchBox.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    placeholder: PropTypes.string,\r\n    className: PropTypes.string,\r\n    autoFocus: PropTypes.bool,\r\n}\r\n\r\n\r\nexport default SearchBox;","const Loader = ({title =\"Loading...\"}) => {\r\n  return (\r\n        <div className='d-flex align-items-center'>\r\n            <div\r\n                className=\"spinner-border text-dark mr-2\"\r\n                role=\"status\"\r\n                style={{\r\n                    width: \"16px\",\r\n                    height: \"16px\",\r\n                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                    borderRightColor: \"transparent\",\r\n                }}\r\n            /> \r\n            <span>{title}</span>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import { Combobox } from '@headlessui/react'\r\nimport * as React from 'react'\r\nimport SearchBox from '../../components/form/Searchbox';\r\nimport _  from 'lodash';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from '../../components/Loader';\r\nimport { useGetTaskDetailsQuery } from '../../../../react-latest/services/api/SingleTaskPageApi';\r\n\r\n\r\n\r\nconst TaskCategorySelectionBox = ({selected, onSelect, taskId}) => {\r\n    const [query, setQuery] = React.useState('');\r\n\r\n    const params = useParams();\r\n    const {\r\n        data:categories,\r\n        isFetching\r\n    } = useGetTaskDetailsQuery(`/${params?.taskId || taskId}/json?mode=category`);\r\n\r\n\r\n    const filteredData =\r\n    query === ''\r\n      ? categories\r\n      : categories?.filter((cat) => {\r\n          return cat?.category_name.toLowerCase().includes(query.toLowerCase())\r\n        })\r\n\r\n  return (\r\n    <Combobox value={selected} onChange={onSelect}>\r\n        <div className=\"form-group position-relative my-3\">\r\n            <label htmlFor=\"\">Task category<sup>*</sup></label>\r\n            <Combobox.Button className=\"d-flex align-items-center w-100 sp1-selection-display-button\">\r\n                <Combobox.Input\r\n                    onChange={e => setQuery(e.target.value)}\r\n                    placeholder='--'\r\n                    displayValue={(value) => value?.category_name || ''}\r\n                    className=\"form-control height-35 f-14 sp1-selection-display w-100\"\r\n                />\r\n                <div className='__icon'>\r\n                    <i className=\"fa-solid fa-sort\"></i>\r\n                </div>\r\n            </Combobox.Button>\r\n\r\n            <Combobox.Options className=\"sp1-select-options\">\r\n\r\n                {isFetching && (\r\n                    <div className='sp1-select-option-nodata'>\r\n                        <Loader />\r\n                    </div>\r\n                )}\r\n\r\n                {filteredData?.length===0 ?\r\n                    <div className='sp1-select-option-nodata'>\r\n                         Nothing found.\r\n                    </div>\r\n                :filteredData?.map((cat, catIdx) => (\r\n                <Combobox.Option\r\n                    key={catIdx}\r\n                    className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                    value={cat}\r\n                >\r\n                    {({ selected }) => (\r\n                        <>\r\n                            <span\r\n                                className={`block truncate ${\r\n                                selected ? 'font-medium' : 'font-normal'\r\n                                }`}\r\n                            >\r\n                                {cat?.category_name}\r\n                            </span>\r\n                            {selected ? (\r\n                                <span className=\"ml-auto\"> <i className='fa-solid fa-check'/> </span>\r\n                            ) : null}\r\n                        </>\r\n                    )}\r\n                </Combobox.Option>\r\n            ))}\r\n            </Combobox.Options>\r\n        </div>\r\n    </Combobox >\r\n  )\r\n}\r\n\r\nexport default TaskCategorySelectionBox\r\n","import { Combobox } from \"@headlessui/react\";\r\nimport * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n    useDeveloperInProgressTaskQuery,\r\n    useGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst AssginedToSelection = ({ selected, onSelect }) => {\r\n    const [query, setQuery] = React.useState(\"\");\r\n\r\n    const params = useParams();\r\n    const { data: employees, isFetching } = useGetTaskDetailsQuery(\r\n        `/${params?.taskId}/json?mode=employees`\r\n    );\r\n\r\n    const filteredData =\r\n        query === \"\"\r\n            ? employees\r\n            : employees?.filter((employee) => {\r\n                  return employee?.name\r\n                      .toLowerCase()\r\n                      .includes(query.toLowerCase());\r\n              });\r\n\r\n    return (\r\n        <Combobox value={selected} onChange={onSelect}>\r\n            <div className=\"form-group position-relative my-3\">\r\n                <label htmlFor=\"\">Assigned To</label>\r\n                <Combobox.Button className=\"d-flex align-items-center w-100 sp1-selection-display-button\">\r\n                    <Combobox.Input\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        placeholder=\"--\"\r\n                        displayValue={(value) => value?.name || \"\"}\r\n                        className=\"form-control height-35 f-14 sp1-selection-display w-100\"\r\n                    />\r\n                    <div className=\"__icon\">\r\n                        <i className=\"fa-solid fa-sort\"></i>\r\n                    </div>\r\n                </Combobox.Button>\r\n\r\n                <Combobox.Options className=\"sp1-select-options\">\r\n                    {isFetching && (\r\n                        <div className=\"sp1-select-option-nodata\">\r\n                            <Loader />\r\n                        </div>\r\n                    )}\r\n\r\n                    {filteredData?.length === 0 ? (\r\n                        <div className=\"sp1-select-option-nodata\">\r\n                            Nothing found.\r\n                        </div>\r\n                    ) : (\r\n                        filteredData?.map((employee) => (\r\n                            <Option key={employee.id} employee={employee} />\r\n                        ))\r\n                    )}\r\n                </Combobox.Options>\r\n            </div>\r\n        </Combobox>\r\n    );\r\n};\r\n\r\nexport default AssginedToSelection;\r\n\r\nconst Option = ({ employee }) => {\r\n    const { data, isLoading } = useDeveloperInProgressTaskQuery(\r\n        employee?.id,\r\n        { skip: !employee?.id }\r\n    );\r\n  \r\n    if(isLoading){\r\n        return <div className=\"sp1-select-option mb-2\">\r\n            <div className=\"d-flex align-items-center px-3\"> \r\n                <Placeholder />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <Combobox.Option\r\n            key={employee?.id}\r\n            className={({ active }) =>\r\n                `sp1-select-option ${active ? \"active\" : \"\"}`\r\n            }\r\n            value={{\r\n                ...employee,\r\n                isOverloaded: data?.status === 400,\r\n            }}\r\n        >\r\n            {({ selected }) => (\r\n                <div\r\n                    className=\"d-flex align-items-center\"\r\n                    style={{ gap: \"10px\" }}\r\n                >\r\n                    <div\r\n                        className=\"rounded-circle\"\r\n                        style={{\r\n                            width: \"28px\",\r\n                            height: \"28px\",\r\n                            overflow: \"hidden\",\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src={employee?.image_url}\r\n                            alt={employee?.name}\r\n                            width={100}\r\n                            height={100}\r\n                            className=\"rounded-circle\"\r\n                            style={{\r\n                                width: \"100%\",\r\n                                height: \"100%\",\r\n                                objectFit: \"fill\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <span\r\n                        className={`block truncate ${\r\n                            selected ? \"font-medium\" : \"font-normal\"\r\n                        }`}\r\n                    >\r\n                        <span className=\"mr-2\">{employee?.name}</span>\r\n                        {data?.status === 400 ? <span className=\"badge badge-danger\">Overloaded</span> : \r\n                        employee?.developer_status === 1 ? (\r\n                            <span className=\"badge badge-warning\">\r\n                                Working...\r\n                            </span>\r\n                        ) : (\r\n                            <span className=\"badge badge-primary\">\r\n                                Open to Work\r\n                            </span>\r\n                        )}\r\n\r\n\r\n                    </span>\r\n                    {selected ? (\r\n                        <span className=\"ml-auto\">\r\n                            <i className=\"fa-solid fa-check\"></i>\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n            )}\r\n        </Combobox.Option>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport { Listbox } from '@headlessui/react'\r\n\r\n\r\n\r\nconst priority = [\"Emergency\", \"Urgent\", \"Regular\"]\r\n\r\n\r\nconst PrioritySelection = ({selected, setSelected}) => { \r\n    return(\r\n        <Listbox value={selected} onChange={setSelected}>\r\n            <div className=\"form-group position-relative my-3\">\r\n                <label htmlFor=\"\"> Priority <sup>*</sup> </label>\r\n                    <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">{selected}\r\n                    \r\n                    <div className='__icon'>\r\n                        <i className=\"fa-solid fa-sort\"></i>\r\n                    </div>\r\n                </Listbox.Button>\r\n                <Listbox.Options  className=\"sp1-select-options\">\r\n                    {priority?.map((s, i) => (\r\n                        <Listbox.Option \r\n                            key={i}\r\n                            className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                            value={s}\r\n                        > {s} </Listbox.Option>\r\n                    ))}\r\n                </Listbox.Options>\r\n            </div>\r\n        </Listbox>\r\n    )\r\n}\r\n\r\nexport default PrioritySelection;","import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport Card from \"../../../global/Card\";\r\nimport styles from \"./task-edit-form.module.css\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport Button from '../../../global/Button';\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\nimport AssignedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\n\r\nimport {\r\n    useDeleteUplaodedFileMutation,\r\n    useGetTaskDetailsQuery,\r\n    useEditSubtaskMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useGetMilestoneDetailsQuery } from \"../../../services/api/projectApiSlice\";\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n// Edit form Provider\r\nconst EditFormProvider = ({ task }) => {\r\n    const [searchParams] = useSearchParams(); // get search params\r\n    const isVisible = searchParams.get(\"modal\") === \"edit\"; // check has modal\r\n    const taskId = searchParams.get(\"task\"); // get task id\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const close = () => navigate(location.pathname, {replace: true});\r\n\r\n\r\n    const [   editSubtask, { isLoading, error } ] = useEditSubtaskMutation();\r\n    // handle submission\r\n    const handleSubmission = (formData) => {\r\n        editSubtask({data: formData, id: task?.id}).unwrap().then(res => {\r\n            toast.success(\"Task Updated successfully!\");\r\n            close();\r\n        }).catch((err) => {\r\n            if(err?.status === 422){\r\n                toast.warn(\"Please fill out all required fields\")\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={isVisible}>\r\n            <Card className={styles.form_card}>\r\n                <Card.Head\r\n                  onClose={close}\r\n                  className={styles.form_card_head}\r\n                >\r\n                    <h6> Edit Task # {taskId} </h6>\r\n                </Card.Head>\r\n\r\n                <Card.Body className={styles.form_card_body}>\r\n                    <div className=\"\">\r\n                        {task && (\r\n                            <SubTaskEditModal\r\n                                task={task}\r\n                                onSubmit={handleSubmission}\r\n                                isLoading={isLoading}\r\n                                onClose={close}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditFormProvider;\r\n\r\nconst SubTaskEditModal = ({ task, onSubmit, isLoading, onClose}) => {\r\n    const editDataIsFetching = !task;\r\n    //form data\r\n    const [title, setTitle] = useState(task.title);\r\n    const [milestone, setMilestone] = useState({id: task.milestoneID, milestone_title: task.milestoneTitle});\r\n    const [parentTask, setParentTask] = useState(task.parentTaskTitle);\r\n    const [startDate, setStateDate] = useState(new Date(task.startDate));\r\n    const [dueDate, setDueDate] = useState(new Date(task.dueDate));\r\n    const [project, setProject] = useState(task.projectName);\r\n    const [taskCategory, setTaskCategory] = useState({\r\n        id: task.category.id,\r\n        category_name: task.category.name,\r\n    });\r\n    const [assignedTo, setAssignedTo] = useState({\r\n        id: task.assigneeTo.id,\r\n        name: task.assigneeTo.name,\r\n    });\r\n    const [description, setDescription] = useState(task.description);\r\n    const [priority, setPriority] = useState(task.priority);\r\n    const [estimateTimeHour, setEstimateTimeHour] = useState(\r\n        task.estimateHours\r\n    );\r\n    const [estimateTimeMin, setEstimateTimeMin] = useState(\r\n        task.estimateMinutes\r\n    );\r\n    const [attachedFiles, setAttachedFiles] = useState([]);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { data: estimation, isFetching } = useGetTaskDetailsQuery(\r\n        `/${task.id}/json?mode=estimation_time`\r\n    );\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n      let count = 0;\r\n      const err = new Object();\r\n\r\n      const errorMessages = {\r\n        requiredField: 'This field is required.',\r\n        startDate: 'Please select a start date.',\r\n        dueDate: 'Please select a due date.',\r\n        taskCategory: 'Please select a task category.',\r\n        assignedTo: 'Please select a user.',\r\n        overloadedUser: (name, gender) =>\r\n          `You cannot assign this task to ${name} because ${\r\n            gender === 'male' ? 'he ' : 'she '\r\n          } has more than 10 submittable tasks.`,\r\n        description: 'This field is required.',\r\n      };\r\n\r\n      const showError = (field) => {\r\n        err[field] = errorMessages[field];\r\n        count++;\r\n      }\r\n\r\n\r\n      if(!title) showError('title');\r\n      if(!startDate) showError('startDate');\r\n      if(!dueDate) showError('dueDate');\r\n      if(!taskCategory) showError('taskCategory');\r\n      if(!assignedTo) showError('assignedTo');\r\n\r\n      if (assignedTo && assignedTo?.isOverloaded) {\r\n        err.assignedTo = overloadedUser(assignedTo.name, genderPronoun);\r\n        count++;\r\n      }\r\n\r\n      if(!description) showError('description');\r\n\r\n      setError(error);\r\n      return count === 0;\r\n\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n         //form data\r\n         const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n         const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n         const fd = new FormData();\r\n         fd.append(\"milestone_id\", task?.milestoneID);\r\n         fd.append(\"task_id\", task?.parentTaskId);\r\n         fd.append(\"title\", title);\r\n         fd.append(\"start_date\", _startDate);\r\n         fd.append(\"due_date\", _dueDate);\r\n         fd.append(\"project_id\", task?.projectId);\r\n         fd.append(\"task_category_id\", taskCategory?.id);\r\n         fd.append(\"user_id\", assignedTo?.id);\r\n         fd.append(\"description\", description);\r\n         fd.append(\"board_column_id\", task?.boardColumn.id);\r\n         fd.append(\"priority\", _.lowerCase(priority));\r\n         fd.append(\"estimate_hours\", estimateTimeHour);\r\n         fd.append(\"estimate_minutes\", estimateTimeMin);\r\n         fd.append(\"deliverable_id\", milestone?.deliverable_type ?? '');\r\n         fd.append(\"image_url\", null);\r\n         fd.append(\"addedFiles\", null);\r\n         fd.append('subTaskID', task?.subtaskId);\r\n         fd.append(\"_method\", \"PUT\");\r\n         fd.append(\r\n             \"_token\",\r\n             document\r\n                 .querySelector(\"meta[name='csrf-token']\")\r\n                 .getAttribute(\"content\")\r\n         );\r\n         Array.from(files).forEach((file) => {\r\n             fd.append(\"file[]\", file);\r\n         });\r\n\r\n        if(isValid()){\r\n         onSubmit(fd);\r\n        }else{\r\n         toast.warn('Please fill out all required fields!');\r\n        }\r\n\r\n    };\r\n\r\n\r\n      const {data: projects, isFetching: isFetchingMilestone} = useGetMilestoneDetailsQuery(task?.projectId)\r\n\r\n\r\n\r\n    // handle uploaded file delete request\r\n    const [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\n    const handleFileDelete = (e, file) => {\r\n        // delete\r\n        deleteUplaodedFile(file?.id).unwrap();\r\n\r\n        // delete form ui\r\n        let previousFile = [...attachedFiles];\r\n        let index = previousFile?.indexOf(file);\r\n        previousFile.splice(index, 1);\r\n        setAttachedFiles(previousFile);\r\n    };\r\n\r\n    // handle loading state\r\n    React.useEffect(() => {\r\n        if (isLoading || editDataIsFetching) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading, editDataIsFetching]);\r\n\r\n    //   editor\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        let errText = \"\";\r\n        let hoursErr = err?.estimate_hours?.[0];\r\n        let minErr = err?.estimate_minutes?.[0];\r\n        if (hoursErr) errText += hoursErr;\r\n        if (minErr) errText += minErr;\r\n        return errText;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching && (\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            zIndex: 1,\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className=\"sp1-subtask-form --form row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Input\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter a task title\"\r\n                            name=\"title\"\r\n                            required={true}\r\n                            value={title}\r\n                            error={required_error?.title?.[0]}\r\n                            onChange={(e) => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* project */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* Project Milestone Selection Menu */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Milestone\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={milestone?.milestone_title}\r\n                            />\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* parent task */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Parent Task\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={task?.parentTaskTitle}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Start Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={dayjs\r\n                                        .dayjs(task?.start_date)\r\n                                        .toDate()}\r\n                                    maxDate={\r\n                                        dueDate ||\r\n                                        dayjs.dayjs(task?.due_date).toDate()\r\n                                    }\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.start_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.start_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Due Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={\r\n                                        startDate ||\r\n                                        dayjs.dayjs(task?.start_date).toDate()\r\n                                    }\r\n                                    maxDate={dayjs\r\n                                        .dayjs(task?.due_date)\r\n                                        .toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.due_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.due_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <TaskCategorySelectionBox\r\n                            selected={taskCategory}\r\n                            onSelect={setTaskCategory}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <AssignedToSelection\r\n                            selected={assignedTo}\r\n                            onSelect={setAssignedTo}\r\n                        />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <PrioritySelection\r\n                            selected={priority}\r\n                            setSelected={setPriority}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Set Estimate Time */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className=\"f-14 text-dark-gray\">\r\n                                Set Estimate Time{\" \"}\r\n                                <sup className=\"f-14\"> * </sup>\r\n                            </label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeHour)\r\n                                    }\r\n                                />{\" \"}\r\n                                hrs\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeMin)\r\n                                    }\r\n                                />{\" \"}\r\n                                min\r\n                            </div>\r\n\r\n                            <div style={{ color: \"red\" }}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{ color: \"red\" }}>\r\n                                Estimation time can't exceed{\" \"}\r\n                                {estimation?.hours_left} hours{\" \"}\r\n                                {estimation?.minutes_left} minutes\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div\r\n                                className=\"sp1_st_write_comment_editor\"\r\n                                style={{ minHeight: \"100px\" }}\r\n                            >\r\n                                <CKEditorComponent\r\n                                    data={description}\r\n                                    onChange={handleEditorChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3 mb-5\">\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                className=\"mr-2\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n\r\n                            <Button\r\n                              onClick={handleSubmit}\r\n                              isLoading={isLoading}\r\n                            >\r\n                                <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\"; \r\nimport { User } from \"../../../../utils/user-details\"; \r\nimport Accordion from \"../../../components/Accordion\";\r\nimport Guideline from \"../../../components/Guideline\";\r\nimport RevisionText from \"../../../components/RevisionText\";\r\nimport GenarelLoader from \"../../../components/loader/GenarelLoader\";\r\nimport ArticleLoader from \"../../../components/loader/ArticleLoader\";\r\nimport dayjs from \"dayjs\";\r\nimport { Placeholder } from \"../../../../global/Placeholder\";\r\n\r\nconst Genarel = ({task, isFetching}) => { \r\n    const loggedUser = new User(window?.Laravel?.user);\r\n\r\n    \r\n    return (\r\n        <div className=\"row\">\r\n            {isFetching ? <GenarelLoader /> : \r\n                <React.Fragment>\r\n                    <div className=\"col-12 col-xl-6 pb-3 pb-xl-0\">\r\n                        <div className=\"d-flex flex-column\" style={{ gap: \"10px\" }}>\r\n                            <h6 className=\"\">\r\n                                Task: <a target=\"__blank\" href={`/account/tasks/${task?.id}`} className=\"text-primary font-weight-normal\">\r\n                                    {task?.getSubtaskTitle()}\r\n                                </a>\r\n                            </h6>\r\n                            {\r\n                                task?.isSubtask && (\r\n                                    <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">\r\n                                            Parent Task :\r\n                                        </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <a href={`/account/tasks/${task?.parentTaskId}`} className=\"text-dark text-hover-underline\">\r\n                                                {task?.parentTaskTitle}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n                            {/* project name */}\r\n                            {/* <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">Project : </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span className=\"dot-color bg-danger mr-2\" />\r\n                                    <a href={`/account/projects/${task?.projectId}`} className=\"text-dark text-hover-underline\"> \r\n                                        {task?.projectName} \r\n                                    </a>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            {/* milestone */}\r\n                            {/* <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Milestone :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span className=\"dot-color bg-primary mr-2\" />\r\n                                    {task?.milestoneTitle}\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            {/* asignee to */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Assigned To :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                        <img\r\n                                            src={task?.assigneeTo?.getAvatar()}\r\n                                            alt={task?.assigneeTo?.getName()}\r\n                                            width=\"32px\"\r\n                                            height=\"32px\"\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"ml-2\">\r\n                                        <span\r\n                                            className={`d-block f-14 font-weight-bold`}\r\n                                        >\r\n                                            <a href={task?.assigneeTo?.getUserLink()} className=\"text-dark hover-underline\">{task?.assigneeTo?.getName()}</a> \r\n                                            {Number(task?.assigneeTo?.getId()) ===\r\n                                                Number(loggedUser?.getId()) && (\r\n                                                <sup\r\n                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                    style={{ fontSize: \"10px\" }}\r\n                                                >\r\n                                                    {\" \"}\r\n                                                    It's You{\" \"}\r\n                                                </sup>\r\n                                            )}\r\n                                        </span>\r\n\r\n                                        <span style={{ fontSize: \"12px\" }}>\r\n                                            {task?.assigneeTo?.getDesignationName()}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* assignee by */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Assigned by:{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                        <img\r\n                                            src={task?.assigneeBy?.getAvatar()}\r\n                                            alt={task?.assigneeBy?.getName()}\r\n                                            width=\"32px\"\r\n                                            height=\"32px\"\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"ml-2\">\r\n                                        <span\r\n                                            className={`d-block f-14 font-weight-bold`}\r\n                                        >\r\n                                            <a \r\n                                                href={task?.assigneeBy?.getUserLink()}\r\n                                                className=\"text-dark hover-underline\"\r\n                                            >\r\n                                                {task?.assigneeBy?.getName()}\r\n                                            </a>\r\n                                            {Number(task?.assigneeBy?.getId()) ===\r\n                                                Number(loggedUser?.getId()) && (\r\n                                                <sup\r\n                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                    style={{ fontSize: \"10px\" }}\r\n                                                >\r\n                                                    It's You\r\n                                                </sup>\r\n                                            )}\r\n                                        </span>\r\n\r\n                                        <span style={{ fontSize: \"12px\" }}>\r\n                                            {task?.assigneeBy?.getDesignationName()}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* PRIORITY */}\r\n\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">Priority : </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span\r\n                                        className=\"dot-color mr-2\"\r\n                                        style={{ background: \"rgba(252, 189, 1, 1)\" }}\r\n                                    />\r\n                                    {task?.priority}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* category */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Task Category :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    {task?.category?.name}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            }\r\n\r\n            <div\r\n                className=\"col-12 col-xl-6 d-flex flex-column py-3 px-3\"\r\n                style={{ gap: \"10px\", background: \"#F0F2F6\" }}\r\n            >\r\n                <div className=\"font-weight-bold d-block\"> Status: </div>\r\n\r\n                {\r\n                    isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    <div\r\n                    className=\"d-flex align-items-center\"\r\n                    style={{ gap: \"6px\" }}\r\n                >\r\n                    <span\r\n                        className=\"dot-color mr-2\"\r\n                        style={{ background: task?.boardColumn?.labelColor }}\r\n                    />\r\n                    <span className=\"font-weight-bold\">{task?.boardColumn.columnName}</span>\r\n                </div>\r\n                }\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Start Date{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.getStartDate(\"MMM DD, YYYY\")}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Due Date{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.getDueDate(\"MMM DD, YYYY\")}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Time Estimate */}\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Time Estimate{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.getEstimateTime()}\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                    Total Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.parentTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Parent Task Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.parentTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Subtask Hours Logged:{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.subTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Total Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.totalTimeLog || \"--\"}\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"col-12 border-top py-4 mt-4\">\r\n                {/* <Accordion expendable={false} title=\"General Guidelines\">\r\n                    {\r\n                        isFetching ? \r\n                        <ArticleLoader /> :\r\n                        <Guideline text={task?.guidelines} editorContainerClass=\"modal-guideline-editor-text\" />\r\n                    }\r\n                </Accordion> */}\r\n\r\n                {_.size(task?.revisions) > 0 &&\r\n                    <Accordion\r\n                        title={_.last(task?.revisions)?.revisionStatus}\r\n                        headingClass=\"d-flex align-items-center justify-content-between\"\r\n                        headingStyle={{\r\n                            background: \"rgba(227,62,79,1)\",\r\n                            color: \"#fff\",\r\n                        }}\r\n                    >\r\n\r\n                        {_.map(task?.revisions, (revision, index) => (\r\n                                <RevisionText\r\n                                    key={revision.id}\r\n                                    index={index + 1}\r\n                                    date={dayjs(revision.createdAt).format('MMM DD, YYYY')}\r\n                                    time={dayjs(revision.createdAt).format('hh:mm a')}\r\n                                    text={revision?.comment}\r\n                                />\r\n                            ))\r\n                        }\r\n                        \r\n                    </Accordion>\r\n                }\r\n\r\n                <Accordion expendable={false} title=\"Task Descriptions\">\r\n                    <Guideline text={task?.description} />\r\n                </Accordion>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Genarel;\r\n","import React, { Suspense, lazy } from 'react'\r\nimport Loader from '../../../components/Loader'\r\nconst SubmittedWorkItem = lazy(() => import('./SubmittedWorkItem'))\r\n\r\nconst SubmittedWork = ({task, submittedWork, loading}) => { \r\n  return (\r\n    <React.Fragment>\r\n        <h6 className='font-weight-bold'>Submitted Work</h6>\r\n        <div className='d-flex flex-column h-100' style={{gap:'10px'}}>\r\n\r\n            {loading && <div className='mt-3'><Loader /></div>}  \r\n            {submittedWork.length > 0 ? submittedWork.map((s) => (\r\n                <React.Fragment key={s?.task_id}>\r\n                    <Suspense fallback={<div className='mt-3'><Loader /></div>}>\r\n                        <SubmittedWorkItem data={s} task={task} />\r\n                    </Suspense>\r\n                </React.Fragment> \r\n            )): null}\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SubmittedWork","import React from \"react\";\r\nimport { TimeLog } from \"../../../../utils/single-task\"; \r\nimport Loader from \"../../../components/Loader\"; \r\n\r\nconst TimeLogContainer = ({ task, timeLog, isLoading }) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"sp1_modal_timelog_view\">\r\n            <div><h6> Session Logs </h6> </div>\r\n            <div>\r\n                <table className=\"sp1_subtask_log-tbl\">\r\n                        <thead className=\"__thead\">\r\n                            <tr>\r\n                                <th>Employee</th>\r\n                                <th>Start Time</th>\r\n                                <th>End Time</th>\r\n                                <th>Memo</th>\r\n                                <th>Hours Logged</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                </table>\r\n                <div className=\"sp1_modal_timelog_view-tbl-contanier\">  \r\n                    <table className=\"sp1_subtask_log-tbl\"> \r\n                        <tbody className=\"__tbody\"> \r\n                            {timeLog\r\n                                ? timeLog.map((log) => (\r\n                                    <TableRow key={log.id} log={log} />\r\n                                ))\r\n                                : null}\r\n\r\n                            {isLoading && <tr><td className=\"py-2 text-center\" colSpan={5}><Loader /></td></tr>}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeLogContainer;\r\n\r\nconst TableRow = ({ log }) => {\r\n    const timeLog = new TimeLog(log);\r\n    const user = timeLog?.user;\r\n\r\n\r\n    return (\r\n        <tr className=\"__tbody_tr\">\r\n            <td className=\"__tbody_td _tbody_td_employee\">\r\n                <img src={user?.getAvatar()} alt={user?.getName()} />\r\n                <span className=\"px-2\">{user?.getName()}</span>\r\n            </td> \r\n            <td className='__tbody_td _tbody_td_start_time'>\r\n                {timeLog?.getStartTime()} <br/>\r\n                {timeLog?.getStartTime('hh:mm a')}\r\n            </td>\r\n            \r\n            <td className='__tbody_td _tbody_td_start_time _tbody_td_start_end'>\r\n                {!timeLog?.endTime ? <span className=\"text-success font-weight-bold\">Active</span> :\r\n                    <>\r\n                        {timeLog?.getEndTime()} <br/>\r\n                        {timeLog?.getEndTime('hh:mm a')}\r\n                    </>\r\n                }\r\n\r\n            </td> \r\n            <td className=\"__tbody_td _tbody_td_memo\">{timeLog?.memo}</td> \r\n            <td className=\"__tbody_td _tbody_td_hour_logged\">{timeLog?.hoursLogged}</td>\r\n        </tr>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport Rating from '../../../../global/Rating';\r\nimport Loader from '../../../components/Loader';\r\n\r\nconst TaskReview = ({review, isLoading}) => {\r\n    const data = review; \r\n    let comment = data?.comment || `<span className='' style=\"color: #A7A9B2\">No Comment is Available</span>`;\r\n   \r\n    return (\r\n        <div className=\"sp1_task_right_card mb-3\" style={{maxHeight:'450px'}}>  \r\n          {/* side drop toggle button end */}\r\n          <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n              <span className=\"f-16\">Task Review</span> \r\n          </div> \r\n\r\n          {isLoading ? <Loader/> : <React.Fragment>\r\n            \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Deadline Meet : </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Rating rating={Number(data?.deadline_meet)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Submission Quality: </div>\r\n                <div className=\"d-flex align-items-center\">  \r\n                    <Rating rating={Number(data?.submission_quality)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Req. Fullfillment: </div>\r\n                <div className=\"d-flex align-items-center\"> \r\n                <Rating rating={Number(data?.req_fullfillment)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Overall Task Ratings: </div>\r\n                <div className=\"d-flex align-items-center\"> \r\n                    <Rating rating={Number(data?.overall_tasks)} /> \r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"mb-2\">\r\n                <span className=\"font-weight-bold d-block mb-1\">Comments:</span>\r\n                <div style={{color:'#777', fontSize: '13px'}}>\r\n                    <div className='sp1_ck_content' dangerouslySetInnerHTML={{__html: comment}}></div>\r\n                </div>\r\n            </div> \r\n            </React.Fragment>} \r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskReview","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nconst HistoryLoader = (props) => (\r\n    <ContentLoader\r\n        speed={2}\r\n        width={450}\r\n        height={45}\r\n        viewBox=\"0 0 450 45\"\r\n        backgroundColor=\"#f3f3f3\"\r\n        foregroundColor=\"#ecebeb\"\r\n        {...props}\r\n    >\r\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"46\" height=\"48\" />\r\n        <rect x=\"62\" y=\"29\" rx=\"0\" ry=\"0\" width=\"227\" height=\"12\" />\r\n        <rect x=\"60\" y=\"5\" rx=\"0\" ry=\"0\" width=\"344\" height=\"12\" />\r\n    </ContentLoader>\r\n);\r\n\r\nexport default HistoryLoader;\r\n","import React, {lazy, Suspense} from 'react'\r\nimport Loader from '../../../components/Loader' \r\nimport HistoryLoader from '../../../components/HistoryLoader';\r\nconst InnerHistoryItem = lazy(()=> import('../../history/InnerHistoryItem'));\r\n\r\nconst History = ({histories, isLoading}) => { \r\n  return (\r\n    <React.Fragment>\r\n        <h6 className='font-weight-bold'> Histories </h6> \r\n        <div className='mt-3 px-2'>  \r\n          {histories.length > 0 ? histories.map(d => (\r\n             <React.Fragment key={d.id}>\r\n               <Suspense fallback={<HistoryLoader />}>\r\n                  <InnerHistoryItem history={d} />\r\n              </Suspense>\r\n             </React.Fragment> \r\n          )):null} \r\n          {isLoading && <Loader />}\r\n        </div> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default History\r\n\r\n\r\n\r\n// history loader","import * as React from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Genarel from \"./preview/Genarel\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport {\r\n    useGetTaskDetailsQuery,\r\n    useLazyGetSubmittedTaskQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport SubmittedWork from \"./preview/SubmittedWork\";\r\nimport TimeLog from \"./preview/TimeLog\";\r\nimport TaskReview from \"./preview/TaskReview\";\r\nimport History from \"./preview/History\";\r\nimport Comments from \"./preview/Comments\";\r\nimport _ from \"lodash\";\r\nimport { useSingleTask } from \"../../../hooks/useSingleTask\";\r\nimport CommentsBody from \"../../../UI/comments/CommentsBody\";\r\nimport { useGetCommentsQuery } from \"../../../services/api/commentsApiSlice\";\r\n\r\nconst PreviewSubtask = ({ parentTask, subTask }) => {\r\n    const [task, setTask] = React.useState(null);\r\n    const taskID = subTask?.id;\r\n    const [submittedWork, setSubmittedWork] = React.useState([]);\r\n    const [timeLog, setTimeLog] = React.useState([]);\r\n    const [review, setReview] = React.useState(null);\r\n    const [histories, setHistories] = React.useState([]);\r\n    const [comments, setComments] = React.useState([]);\r\n    const [isCommentShow, setIsCommentShow] = React.useState(false);\r\n\r\n    const {\r\n        getTaskById,\r\n        getSubmittionInfo,\r\n        taskDetailsIsFetching,\r\n        submittionInfoIsFetching,\r\n    } = useSingleTask();\r\n\r\n    const [getTaskDetails, { isFetching: detailFetchingStateLoading }] =\r\n        useLazyGetTaskDetailsQuery();\r\n\r\n    const {\r\n        data: subTaskComments,\r\n        isFetching: commentsFetching,\r\n        isLoading: commentsLoading,\r\n        refetch: commentsRefetch,\r\n    } = useGetCommentsQuery(subTask?.id);\r\n\r\n    // fetch task details\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            let task = await getTaskById(taskID);\r\n            task = new SingleTask(task);\r\n            setTask(task);\r\n        })();\r\n    }, []);\r\n\r\n    //   fetch submitted rtk api\r\n    const fetchData = (url, cb) => {\r\n        getTaskDetails(`/${task?.id}/json?mode=${url}`)\r\n            .unwrap()\r\n            .then((res) => {\r\n                let d = _.orderBy(res, \"id\", \"desc\");\r\n                cb(d);\r\n            })\r\n            .catch((err) => console.error(err));\r\n    };\r\n\r\n    // fetch submitted works when submitted tab clieked\r\n    const fetchSubmittedWork = async (e) => {\r\n        e.preventDefault();\r\n        if (submittedWork.length === 0) {\r\n            const data = await getSubmittionInfo(taskID);\r\n            console.log({ data });\r\n            setSubmittedWork([...data]);\r\n        }\r\n    };\r\n\r\n    // fetch timelog data on tab click\r\n    const fetchTimeLogData = (e) => {\r\n        e.preventDefault();\r\n        if (timeLog.length === 0) {\r\n            fetchData(\"task_time_log\", setTimeLog);\r\n        }\r\n    };\r\n\r\n    // fetch review\r\n    const fetchReviewData = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_approve\", setReview);\r\n    };\r\n\r\n    // fetch histories\r\n    const fetchHistories = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_history\", setHistories);\r\n    };\r\n\r\n    // fetch comments\r\n    const fetchComments = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_comment\", setComments);\r\n    };\r\n\r\n    // on comment post\r\n    const onCommentPost = (comment) => {\r\n        const _comments = [...comments];\r\n        _comments.unshift(comment);\r\n        setComments(_comments);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* tab */}\r\n            <div\r\n                className=\"nav flex-column nav-pills sp1-subtask-modal-sidebar\"\r\n                id=\"v-pills-tab\"\r\n                role=\"tablist\"\r\n                aria-orientation=\"vertical\"\r\n            >\r\n                <a\r\n                    className=\"nav-link active\"\r\n                    id=\"v-pills-general-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-home\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-home\"\r\n                    aria-selected=\"true\"\r\n                    onClick={() => setIsCommentShow(false)}\r\n                >\r\n                    General\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-submitted-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-submitted-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-submitted-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchSubmittedWork(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Submitted Works\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-comments-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-comments\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-comments\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        commentsRefetch(e);\r\n                        setIsCommentShow(true);\r\n                    }}\r\n                >\r\n                    Comment\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-time-log-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-time-log-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-time-log-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchTimeLogData(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Time Logs\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-history-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-history\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-history\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchHistories(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    History\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-task-review-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-task-review-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-task-review-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchReviewData(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Task Review\r\n                </a>\r\n            </div>\r\n\r\n            <div\r\n                className={`tab-content ${\r\n                    isCommentShow ? \"p-0\" : \"p-3\"\r\n                } sp1-subtask-modal-tab-content`}\r\n                id=\"v-pills-tabContent\"\r\n            >\r\n                <div\r\n                    className=\"tab-pane fade show active sp1_st_tab_panel\"\r\n                    id=\"v-pills-home\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-general-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <Genarel\r\n                            isFetching={taskDetailsIsFetching}\r\n                            taskID={taskID}\r\n                            task={task}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-submitted-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-submitted-work-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <SubmittedWork\r\n                            task={task}\r\n                            submittedWork={submittedWork}\r\n                            loading={submittionInfoIsFetching}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-comments\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-comments-tab\"\r\n                >\r\n                    {/* <Comments\r\n                        task={task}\r\n                        comments={comments}\r\n                        onCommentPost={onCommentPost}\r\n                        isLoading={detailFetchingStateLoading}\r\n                    /> */}\r\n                    <CommentsBody\r\n                        close={() => {}}\r\n                        comments={subTaskComments}\r\n                        loading={commentsLoading}\r\n                        onSubmit={() => {}}\r\n                        isOpen={true}\r\n                        fullScreenView={false}\r\n                        setFullScreenView={() => {}}\r\n                        height={\"741px\"}\r\n                        fetching={commentsFetching}\r\n                        refetch={commentsRefetch}\r\n                        showFullScreenBtn={false}\r\n                        taskId={subTask?.id}\r\n                        showCloseBtn={false}\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-time-log-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-time-log-work-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <TimeLog\r\n                            task={task}\r\n                            timeLog={timeLog}\r\n                            isLoading={detailFetchingStateLoading}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-history\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-history-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <History\r\n                            histories={histories}\r\n                            isLoading={detailFetchingStateLoading}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-task-review-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-task-review-work-tab\"\r\n                >\r\n                    <TaskReview\r\n                        review={review}\r\n                        isLoading={detailFetchingStateLoading}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* end tab */}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PreviewSubtask;\r\n","import { Rating } from '@smastrom/react-rating';\r\nimport '@smastrom/react-rating/style.css';\r\nimport dayjs from 'dayjs';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { HiOutlineSelector } from 'react-icons/hi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport CKEditorComponent from '../../../../ckeditor/index';\r\nimport FileUploader from '../../../../file-upload/FileUploader';\r\nimport { Placeholder } from '../../../../global/Placeholder';\r\nimport { useSingleTask } from '../../../../hooks/useSingleTask';\r\nimport { useApproveSubmittedTaskMutation, useGetSubmittedTaskQuery } from '../../../../services/api/SingleTaskPageApi';\r\nimport Button from '../../../components/Button';\r\nimport Modal from '../../../components/Modal';\r\nimport SubmitButton from '../../../components/SubmitButton';\r\n\r\nconst ApproveTask = ({task, status, auth}) => {\r\n  const dispatch = useDispatch();\r\n  const [showApproveForm, setShowApproveForm] = useState(false);\r\n  const [completedWithInDeadline, setCompletedWithInDeadline] = useState(1);\r\n  const [submittedStar, setSubmittedStar] = useState(1);\r\n  const [fullfilledStar, setFullfilledStar] = useState(1);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const [oldSubmittion, setOldSubmittion] = useState([]);\r\n  const [latestSubmittion, setLatestSubmittion] = useState({});\r\n\r\n  const [approveSubmittedTask, {isLoading}] = useApproveSubmittedTaskMutation();\r\n  const { data: getSubmittedTask, isFetching  } = useGetSubmittedTaskQuery(task?.id);\r\n\r\n  const { approveTask,  approveTaskLoadingStatus } = useSingleTask();\r\n\r\n  const [err, setErr] = useState(null);\r\n\r\n \r\n useEffect(() => {\r\n    if(getSubmittedTask){\r\n        const data = _.sortBy(getSubmittedTask, ['submission_no']);\r\n        const latest = _.last(data);\r\n        const old = _.initial(data);\r\n        setOldSubmittion([...old]);\r\n        setLatestSubmittion(latest);\r\n    }\r\n }, [isFetching]);\r\n\r\n  const close = (e) => {\r\n    e.preventDefault();\r\n    setShowApproveForm(false)\r\n  }\r\n\r\n  // editor data \r\n  const onWriteOnEditor = (e, editor) => {\r\n    const data = editor.getData();\r\n    setComment(data);\r\n  }\r\n\r\n\r\n  const isValid = () =>{\r\n    let count = 0;\r\n    const error = new Object();\r\n\r\n    if(!comment){\r\n        error.comment = \"Please add a comment!\"\r\n        count ++;\r\n    }\r\n\r\n    setErr(error);\r\n    return !count;\r\n  }\r\n\r\n  // submit \r\n  const handleOnSubmit = async (e) =>{\r\n    e.preventDefault();\r\n    const data = {\r\n        rating: completedWithInDeadline,\r\n        rating2: submittedStar,\r\n        rating3: fullfilledStar,\r\n        comment,\r\n        task_id: task?.id,\r\n        user_id: auth?.getId()\r\n    }   \r\n\r\n    if(isValid()){ \r\n        const cb = () => setShowApproveForm(false);\r\n        await approveTask(data, cb ); \r\n    }else{\r\n        toast.warn(\"Please add a comment!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='success'\r\n            onClick={() => setShowApproveForm(true)}\r\n            className='d-flex align-items-center border-success'\r\n        >\r\n            <i className=\"fa-solid fa-handshake-angle\"></i>\r\n            <span className=\"d-inline ml-1\">Approve</span>\r\n        </Button>\r\n\r\n        <Modal isOpen={showApproveForm} className=\"sp1_single_task--modal w-100\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper w-100\">\r\n                <div\r\n                    className=\"sp1_single_task--modal-panel w-100\"\r\n                    style={{ maxWidth: '600px', minWidth: '320px' }}\r\n                >\r\n                    <div className=\"border-bottom pb-2 pl-3 pr-2 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <div className=\"font-weight-bold f-16\"> Approve Task </div>\r\n                        <Button onClick={close} className=\"\">\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"px-3\">\r\n                         { _.size(oldSubmittion) > 0 &&\r\n                            <div className='mb-3'>\r\n                                <div className=\"sp1_st--approve-card\"> \r\n                                    <div className=\"sp1_st--approve-card-header\" data-toggle=\"collapse\" href=\"#oldSubmittedSuccess\" role=\"button\"   aria-expanded=\"false\" aria-controls=\"oldSubmittedSuccess\">\r\n                                        Old Submitted Works ({_.size(oldSubmittion)})\r\n                                        <button>\r\n                                            <HiOutlineSelector />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"collapse multi-collapse shadow-none\" id=\"oldSubmittedSuccess\">\r\n                                    <div className=\"card card-body\">\r\n                                        {\r\n                                            _.size(oldSubmittion) > 0 ?\r\n                                            _.map(oldSubmittion, (task)=>(\r\n                                                <SubmittedWorkCard key={`${task.id}_${task?.submission_no}`} data={task} isLoading={isFetching}/>\r\n                                            )):\r\n                                            <span>\r\n                                                No Old Submittion!\r\n                                            </span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                         }\r\n                        {/* content */}\r\n                        {\r\n                            // getSubmittedTask?.submission_no === getSubmittedTask.\r\n                        }\r\n                        <SubmittedWorkCard data={latestSubmittion} latest={true} isLoading={isFetching} />\r\n                    </div>\r\n                    {\r\n                        !isFetching && \r\n                        <div className=\"mt-4 px-3\">\r\n                            <form action=\"\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>Is This Task Completed Within Deadline?<sup className='f-16'>*</sup></label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={completedWithInDeadline}\r\n                                            onChange={setCompletedWithInDeadline}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>How Beautifully The Task Is Submitted?<sup className='f-16'>*</sup></label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={submittedStar}\r\n                                            onChange={setSubmittedStar}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>\r\n                                        How Perfectly The Task Requirements Are Fullfilled?<sup className='f-16'>*</sup>\r\n                                    </label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={fullfilledStar}\r\n                                            onChange={setFullfilledStar}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>\r\n                                        Any Recommendations For Developer?<sup className='f-16'>*</sup>\r\n                                    </label>\r\n                                    <div className='ck-editor-holder'>\r\n                                        <CKEditorComponent onChange={onWriteOnEditor} />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"mt-3 d-flex align-items-center\">\r\n                                    <Button onClick={close} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                       Close \r\n                                    </Button>\r\n    \r\n                                    {/* {!isLoading ? (\r\n                                        <React.Fragment>\r\n                                            <Button onClick={handleOnSubmit}>Approve</Button>\r\n                                        </React.Fragment>\r\n                                    ) : (\r\n                                        <React.Fragment>\r\n                                            <Button className=\"cursor-processing\">\r\n                                                <div\r\n                                                    className=\"spinner-border text-white\"\r\n                                                    role=\"status\"\r\n                                                    style={{\r\n                                                        width: \"18px\",\r\n                                                        height: \"18px\",\r\n                                                    }}\r\n                                                />{\" \"}\r\n                                                Processing...\r\n                                            </Button>\r\n                                        </React.Fragment>\r\n                                    )} */}\r\n                                    <SubmitButton onClick={handleOnSubmit} title=\"Approve\" isLoading={approveTaskLoadingStatus} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ApproveTask\r\n\r\n\r\n// Submitted work\r\n\r\nconst SubmittedWorkCard = ({data, latest=false, className=\"\", style, isLoading = false}) => {\r\n\r\n    const links = _.compact(_.split(data?.links, ','));\r\n    const attaches =  _.compact(_.split(data?.attaches, ','));\r\n   \r\n\r\n    if(isLoading){\r\n        return <div className={`sp1_st--approve-card mb-3 ${className}`} style={style}> \r\n            <div className=\"sp1_st--approve-card-header\">\r\n                <Placeholder height=\"14px\" width='80px' className='mb-2' />\r\n                <Placeholder height=\"14px\" width='50px' className='mb-2' />\r\n            </div>\r\n\r\n            <div className='sp1_st--approve-card-body'>\r\n                <div className='mb-2'>\r\n                    <Placeholder height=\"14px\" width='80px' className='mb-2'/>\r\n\r\n                    <div className='ml-2'>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                    </div> \r\n                </div>\r\n\r\n                <div className='mb-2'>\r\n                    <Placeholder height=\"14px\" width='80px' className='mb-2'/>\r\n\r\n                    <div className='ml-2'>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='50%' className='mb-2'/>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    \r\n    return(\r\n        <div className={`sp1_st--approve-card mb-3 ${className}`} style={style}> \r\n            <div className=\"sp1_st--approve-card-header\">\r\n                <span>{latest ? 'Latest': \"Old\"} Submittion {!latest && `(${data?.submission_no})`}</span>\r\n                <span>\r\n                    {dayjs(data?.submission_date).format('MMM DD, YYYY hh:mm a')}\r\n                </span>\r\n            </div>\r\n\r\n            <div className='sp1_st--approve-card-body'>\r\n                <div className='mb-2'>\r\n                    <div className='font-weight-bold f-12' style={{color: '#81868E'}}> Links</div>\r\n                    <ol style={{listStyle: 'unset'}}>\r\n                        {_.map(links, (link, index) =>(\r\n                            <li key={`${link}_${index}`} style={{listStyle: 'numaric'}}>\r\n                                <a href={link}>{link}</a>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n\r\n                <div className='mb-2'>\r\n                    <div className=\"font-weight-bold f-12\" style={{color: '#81868E'}}>Description</div>\r\n                    <div className='sp1_ck_content p-2' dangerouslySetInnerHTML={{__html: data?.text ?? `<span style=\"color:rgb(180,188,196);\">Comment Not Available</span>`}}/>\r\n                </div>\r\n\r\n\r\n                <div className=\"mt-3\">\r\n                <span\r\n                    className=\"d-block f-12 font-weight-bold mb-2\"\r\n                    style={{ color: \"#767581\" }}\r\n                >\r\n                    Attached Files\r\n                </span>\r\n                {_.size(attaches) > 0 ? (\r\n                    <FileUploader>\r\n                        {_.map(attaches, (file, index) => (\r\n                            <FileUploader.Preview\r\n                                key={`${file}_${index}`}\r\n                                fileName={file}\r\n                                downloadAble={true}\r\n                                deleteAble={false}\r\n                                downloadUrl={`${file}`}\r\n                                previewUrl={`${file}`}\r\n                                fileType={_.includes([\"png\",\"jpg\", \"jpeg\", \"gif\", \"svg\"], _.last(_.split(file, '.'))) ? 'images' : 'others'}\r\n                                ext=\"\"\r\n                            />\r\n                        ))}\r\n                    </FileUploader>\r\n                    ) : (\r\n                        <span\r\n                            className=\"px-2\"\r\n                            style={{ color: \"rgb(180, 188, 196)\" }}\r\n                        >\r\n                            No Attachment is available\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useCheckEditableSubTaskQuery, useLazyCheckSubTaskTimerQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport Button from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport PreviewSubtask from \"./PreviewSubtask\";\r\nimport ApproveTask from \"../task-actions/approve-task/ApproveTask\";\r\n\r\nconst SubTask = ({ subTask, task, status, toggleEditForm }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    const [checkSubTaskTimer, {isFetching}] = useLazyCheckSubTaskTimerQuery()\r\n      // check task edit\r\n\r\n        const { data } = useCheckEditableSubTaskQuery(subTask?.id);\r\n        const isEditable = data?.task === 0;\r\n\r\n    const toggle = (e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setIsOpen(true);\r\n    }\r\n\r\n\r\n    const hasEditPermission = () => {\r\n        return Number(subTask?.added_by) === auth?.getId() && _.includes([1,2,3], status?.id);\r\n    }\r\n\r\n    const onEdit = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(subTask?.id)\r\n        .unwrap()\r\n        .then(res=>{\r\n            if(res?.status === 200){\r\n                toggleEditForm(e, subTask?.id)\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'You cannot edit the task because timer is already running',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const onModalEditButtonClick = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(subTask?.id)\r\n        .unwrap()\r\n        .then(res=>{\r\n            if(res?.status === 200){\r\n                window.location = `/account/tasks/${subTask?.id}/edit`\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'You cannot edit the task because timer is already running',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\"\r\n            style={{ gap: \"16px\" }}\r\n        >\r\n            <div className=\"w-100 text-ellipsis\">\r\n                <div onClick={toggle} className=\"hover-underline\" style={{cursor: 'pointer'}}>\r\n                    {subTask?.title}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <div\r\n                    onClick={toggle}\r\n                    className=\"mr-2 py-2 sp1_task_righ_action_btn\"\r\n                    style={{cursor: 'pointer'}}\r\n                >\r\n                    <i className=\"fa-regular fa-eye\"></i>\r\n                </div>\r\n                {\r\n                    isEditable && hasEditPermission() && <div\r\n                        onClick={onEdit}\r\n                        className=\"mr-2 py-2 sp1_task_righ_action_btn\"\r\n                        style={{cursor: 'pointer'}}\r\n                    >\r\n                        {isFetching ?  <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        /> :<i className=\"fa-regular fa-pen-to-square\"></i>}\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n            {/* task Preview Modal */}\r\n            <React.Fragment>\r\n                <Modal\r\n                    className={`sp1_subtask_offsetcanvas--modal`}\r\n                    isOpen={isOpen}\r\n                >\r\n                    <div\r\n                        className={`sp1_subtask_offsetcanvas ${\r\n                            isOpen ? \"open\" : \"\"\r\n                        }`}\r\n                    >\r\n                        <div className=\"d-flex align-items-center justify-content-between p-2 sp1_subtask_offsetcanvas--bar\">\r\n                            <div className=\"pl-3\">\r\n                                <span className=\"font-weight-bold f-16\">\r\n                                    Sub Task # {subTask?.id} :{\" \"}\r\n                                    <span className=\"font-weight-normal\">\r\n                                        {subTask?.title}\r\n                                    </span>{\" \"}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"d-flex align-items-center ml-auto\">\r\n                                {/* <ApproveTask\r\n                                    task={subTask}\r\n                                    auth={auth}\r\n                                />\r\n\r\n                                <Button variant=\"success\" onClick={() => setIsOpen(false)} className=\"mr-2 bg-danger\">\r\n                                    Revision\r\n                                </Button> */}\r\n\r\n                                {isEditable && hasEditPermission() && <a href=\"#\" onClick={onModalEditButtonClick} className=\"border text-dark mr-2 py-1 px-2\">\r\n                                    {isFetching ?  <div\r\n                                        className=\"spinner-border text-dark ml-2\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                            borderRightColor: \"transparent\",\r\n                                        }}\r\n                                    /> :<i className=\"fa-regular fa-pen-to-square\"></i>}\r\n                                </a>}\r\n                                <a\r\n                                    href={`/account/tasks/${subTask?.id}`}\r\n                                    target=\"_blank\"\r\n                                    className=\"border text-dark mr-2 py-1 px-2\"\r\n                                >\r\n                                    {/* <i className=\"fa-solid fa-up-right-and-down-left-from-center\" /> */}\r\n                                    <i className=\"fa-solid fa-arrow-up-right-from-square\"></i>\r\n                                </a>\r\n                                <Button onClick={() => setIsOpen(false)} className=\"\">\r\n                                    <i className=\"fa-solid fa-xmark\" />\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"sp1_subtask_offsetcanvas--body\">\r\n                            <PreviewSubtask\r\n                                parentTask={task}\r\n                                subTask={subTask}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubTask;\r\n","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\nimport {User} from '../../../utils/user-details';\r\n\r\nconst LeadConfirmationModal = ({isOpen, onConfirm}) => {\r\n  const [buttonVisible, setButtonVisible] = React.useState(false);\r\n  const [countDown, setCountDown] = React.useState(20);\r\n  const auth = new User(window.Laravel.user);\r\n\r\n  React.useEffect(() => { \r\n    if(auth.getRoleId() && auth.getRoleId() === 6){\r\n      let count = countDown ?? 0;\r\n\r\n      let timeIntervelId = setInterval(() => {\r\n          setCountDown(count--);\r\n      }, 1000);\r\n  \r\n  \r\n      let timeOutId = setTimeout(() => {\r\n        setButtonVisible(true);\r\n        clearInterval(timeIntervelId)\r\n      }, 22000);\r\n  \r\n      \r\n  \r\n      return () => {\r\n        clearTimeout(timeOutId);\r\n        clearInterval(timeIntervelId);\r\n      };\r\n    }\r\n    \r\n    \r\n    return () =>  onConfirm(); \r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"subtask-timer-confirmation--modal\">\r\n        <div className='subtask-timer-confirmation--panel'>\r\n           <div className=\"subtask-timer-confirmation--content\">\r\n                <h4 className='mb-3'> Do You Understand The Following Things? </h4>\r\n                \r\n                <ol type='A' style={{marginLeft: '30px'}}>\r\n                    <li> Your teams job is not to decide what the look and feel of a website will be based on a few reference websites </li>\r\n                    <li>Your teams job is not to research a theme based on an instruction shared by the PM. </li>\r\n                    <li>Your teams job is not to research a plugin based on a problem shared by PM.</li>\r\n                    <li>Your teams job is not to choose the color scheme of a website.</li>\r\n                    <li>Your teams job is not to talk to the support for example the shopify support team, theme support, plugin support and any other support for any solution.</li>\r\n                    <li>Your teams job is not to create the training videos for the client after the completion of a project. </li>\r\n                    <li>You understand that all your teams hours have to be logged/tracked and you team mates will questioned if each of them doesn’t log at least 7 hours for any reason.</li>\r\n                </ol>\r\n\r\n\r\n                <p>In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your teams job is to execute the work based on the defined requirements.  </p> \r\n\r\n                <p>If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily.</p>\r\n                \r\n                <p> Report immediately if you are asked to do any of these and if it was’t authorized by top management. You should see a text like “Authorized by top management” at the right side of the task title if it was authorized.In case, you don’t report, the extra time taken for these will be considered as your lackings (as they will remain unaccountable) and you will receive negative performance score.”</p>\r\n\r\n                <div className='d-flex align-items-center'>\r\n                     <Button \r\n                        onClick={onConfirm} \r\n                        className='ml-auto'\r\n                        disabled={!buttonVisible}\r\n                      > \r\n                        Yes, I Fully Understand This {!buttonVisible && `(${countDown})`}\r\n                      </Button> \r\n                </div>\r\n           </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default LeadConfirmationModal","import React, { useState } from \"react\";\r\nimport Input from \"../../components/form/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport { useWorkingEnvironmentMutation } from \"../../../services/api/SingleTaskPageApi\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport { toast } from \"react-toastify\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst WorkingEnvironmentForm = ({ task, onSubmit, close }) => {\r\n    const [siteUrl, setSiteUrl] = useState(\"\");\r\n    const [frontendPassword, setFrontendPassword] = useState(\"\");\r\n    const [loginUrl, setLoginUrl] = useState(\"\");\r\n    const [\r\n        siteLoginCredentialUserNameOrEmail,\r\n        setSiteLoginCredentialUserNameOrEmail,\r\n    ] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [err, setErr] = useState(null);\r\n\r\n    const [workingEnvironment, { isLoading }] = useWorkingEnvironmentMutation();\r\n\r\n    // handle input change\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        setState(e.target.value);\r\n    };\r\n\r\n    const isValid = () => {\r\n        let count = 0;\r\n        const error = new Object();\r\n\r\n        if (!siteUrl) {\r\n            count++;\r\n            error.siteUrl = \"You have to provide Working/Staging Site's URL\";\r\n        } else if (!checkIsURL(siteUrl)) {\r\n            count++;\r\n            error.siteUrl = \"Please enter a valid URL\";\r\n            toast.warn(\"Please enter a valid Working/Staging Site's URL\", {\r\n                position: \"top-right\",\r\n            });\r\n        }\r\n\r\n        if (!loginUrl) {\r\n            count++;\r\n            error.loginUrl =\r\n                \"You have to provide Working/Staging Site's Admin Panel URL\";\r\n        } else if (!checkIsURL(loginUrl)) {\r\n            count++;\r\n            error.loginUrl = \"Please enter a valid URL\";\r\n            toast.warn(\r\n                \"Please enter a valid Working/Staging Site's Admin Panel URL\",\r\n                { position: \"top-right\" }\r\n            );\r\n        }\r\n\r\n        if (!siteLoginCredentialUserNameOrEmail) {\r\n            count++;\r\n            error.username =\r\n                \"You have to provide Working/Staging Site's Admin Username/Email\";\r\n        }\r\n\r\n        if (!password) {\r\n            count++;\r\n            error.password =\r\n                \"You have to provide Working/Staging Site's Admin Password\";\r\n        }\r\n\r\n        if (!frontendPassword) {\r\n            count++;\r\n            error.frontendPassword =\r\n                \"You have to provide Working/Staging Site's Frontend Password\";\r\n        }\r\n\r\n        setErr(error);\r\n        return !count;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        const data = {\r\n            project_id: task?.projectId,\r\n            site_url: siteUrl,\r\n            login_url: loginUrl,\r\n            email: siteLoginCredentialUserNameOrEmail,\r\n            password: password,\r\n            task_id: task?.id,\r\n            frontend_password: frontendPassword,\r\n        };\r\n\r\n        if (isValid()) {\r\n            try {\r\n                await workingEnvironment(data)\r\n                    .unwrap()\r\n                    .then((res) => {\r\n                        close();\r\n                        Swal.fire(\r\n                            \"Working environment store successfully\",\r\n                            \"You can create subtask now\",\r\n                            \"success\"\r\n                        ).then(({ isConfirmed }) => {\r\n                            onSubmit();\r\n                        });\r\n                    });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            toast.error(\"Please provide all required fields\", {\r\n                position: \"top-right\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"sp1-subtask-form w-100 --form -row\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 lg:col-6\">\r\n                    <Input\r\n                        id=\"siteURL\"\r\n                        label=\"Working/Staging Site's URL\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's URL\"\r\n                        name=\"stie_url\"\r\n                        required={true}\r\n                        value={siteUrl}\r\n                        error={err?.siteUrl}\r\n                        onChange={(e) => handleChange(e, setSiteUrl)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 lg:col-6\">\r\n                    <Input\r\n                        id=\"frontendPassword\"\r\n                        label=\"Frontend Password\"\r\n                        type=\"text\"\r\n                        placeholder=\"Frontent Password\"\r\n                        name=\"frontend-end-password\"\r\n                        required={true}\r\n                        value={frontendPassword}\r\n                        error={err?.frontendPassword}\r\n                        onChange={(e) => handleChange(e, setFrontendPassword)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-4\">\r\n                    <Input\r\n                        id=\"loginUrl\"\r\n                        label=\"Working/Staging Site's Admin Panel URL\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's Admin Panel URL\"\r\n                        name=\"login_url\"\r\n                        required={true}\r\n                        value={loginUrl}\r\n                        error={err?.loginUrl}\r\n                        onChange={(e) => handleChange(e, setLoginUrl)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-5 h-100\">\r\n                    <Input\r\n                        id=\"siteLoginCredential\"\r\n                        label=\"Working/Staging Site's Admin Panel Username/Email\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's Admin Panel Username/Email\"\r\n                        name=\"site-login-credential\"\r\n                        required={true}\r\n                        value={siteLoginCredentialUserNameOrEmail}\r\n                        error={err?.username}\r\n                        onChange={(e) =>\r\n                            handleChange(\r\n                                e,\r\n                                setSiteLoginCredentialUserNameOrEmail\r\n                            )\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"h-100 d-md-flex align-items-end\">\r\n                        <Input\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"text\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            className=\"mt-md-auto\"\r\n                            required={true}\r\n                            value={password}\r\n                            error={err?.password}\r\n                            onChange={(e) => handleChange(e, setPassword)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 mt-3\">\r\n                <div className=\"d-flex align-items-center justify-content-end\">\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        className=\"mr-2\"\r\n                        onClick={close}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n\r\n                    <SubmitButton onClick={handleSubmit} isLoading={isLoading}>\r\n                        <i className=\"fa-regular fa-paper-plane\" />\r\n                        Create\r\n                    </SubmitButton>\r\n\r\n                    {/* {isLoading ? (\r\n                        <Button onClick={handleSubmit}>\r\n                            \r\n                        </Button>\r\n                    ) : (\r\n                        <Button className=\"cursor-processing\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"18px\",\r\n                                    height: \"18px\",\r\n                                }}\r\n                            ></div>\r\n                            Processing...\r\n                        </Button>\r\n                    )} */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkingEnvironmentForm;\r\n","import React, { useState } from \"react\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport AssginedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\n\r\nimport _ from \"lodash\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n    useCheckRestrictedWordsMutation,\r\n    useCreateSubtaskMutation,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\n\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n    setWorkingEnvironmentStatus,\r\n    storeSubTasks,\r\n} from \"../../../services/features/subTaskSlice\";\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport LeadConfirmationModal from \"./LeadConfirmationModal\";\r\nimport WorkingEnvironmentForm from \"./WorkingEnvironmentForm\";\r\nimport { useRefetchTaskDetails } from \"../../SingleIndependentTask\";\r\n\r\nconst SubTaskForm = ({ close, isFirstSubtask = false }) => {\r\n    const refetchTask = useRefetchTaskDetails();\r\n    const {\r\n        task: taskDetails,\r\n        subTask,\r\n        isWorkingEnvironmentSubmit,\r\n    } = useSelector((s) => s.subTask);\r\n    const dispatch = useDispatch();\r\n    const dayjs = new CompareDate();\r\n\r\n    //   form data\r\n    const [title, setTitle] = useState(\"\");\r\n    const [parentTask, setParentTask] = useState(\"\");\r\n    const [startDate, setStateDate] = useState(null);\r\n    const [dueDate, setDueDate] = useState(null);\r\n    const [taskCategory, setTaskCategory] = useState(\"\");\r\n    const [assignedTo, setAssignedTo] = useState(null);\r\n    // const [taskObserver, setTaskObserver] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    // const [status, setStatus] = useState(\"To Do\");\r\n    const [priority, setPriority] = useState(\"Regular\");\r\n\r\n    // const [estimateTimeHour, setEstimateTimeHour] = useState(0);\r\n    // const [estimateTimeMin, setEstimateTimeMin] = useState(0);\r\n\r\n    const [files, setFiles] = React.useState([]);\r\n\r\n    const [pageType, setPageType] = React.useState(\"\");\r\n    const [pageTypeOthers, setPageTypeOthers] = React.useState(\"\");\r\n    const [pageName, setPageName] = React.useState(\"\");\r\n    const [pageURL, setPageURL] = React.useState(\"\");\r\n    const [numberOfPage, setNumberOfPage] = React.useState(0);\r\n    const [existingDesignLink, setExistingDesignLink] = React.useState(\"\");\r\n    const [pageTypePriority, setPageTypePriority] = React.useState(\"\");\r\n    const [pageTypeName, setPageTypeName] = React.useState(\"\");\r\n\r\n    const [err, setErr] = useState(null);\r\n\r\n    const task = new SingleTask(taskDetails);\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n    // const params = useParams();\r\n    const [createSubtask, { isLoading, error }] = useCreateSubtaskMutation();\r\n    // const {  } = useGetTaskDetailsQuery(`/${task?.id}/json?mode=estimation_time`);\r\n    const [getTaskDetails, { data: estimation, isFetching }] =\r\n        useLazyGetTaskDetailsQuery();\r\n\r\n    const [showForm, setShowForm] = React.useState(false);\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n    const [containViolation, setContainViolation] = React.useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // const [\r\n    //     checkRestrictedWords,\r\n    //     {isLoading: checking}\r\n    // ] = useCheckRestrictedWordsMutation();\r\n    const checking = false;\r\n\r\n    // handle change\r\n    React.useEffect(() => {\r\n        setParentTask(task?.title);\r\n    }, [task]);\r\n\r\n    React.useEffect(() => {\r\n        getTaskDetails(`/${task?.id}/json?mode=estimation_time`).unwrap();\r\n    }, []);\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n    const isValid = () => {\r\n        let count = 0;\r\n        const error = new Object();\r\n\r\n        if (!title) {\r\n            error.title = \"The title field is required\";\r\n            count++;\r\n        }\r\n\r\n        if (!startDate) {\r\n            error.startDate = \"You have to select a start date\";\r\n            count++;\r\n        }\r\n\r\n        if (!dueDate) {\r\n            error.dueDate = \"You have to select a due date\";\r\n            count++;\r\n        }\r\n\r\n        if (!taskCategory) {\r\n            error.taskCategory = \"You have to select task category\";\r\n            count++;\r\n        }\r\n\r\n        if (!assignedTo) {\r\n            error.assignedTo = \"You have to select an user\";\r\n            count++;\r\n        }\r\n\r\n        if (assignedTo && assignedTo?.isOverloaded) {\r\n            toast.warn(\r\n                `You cannot assign this task to ${assignedTo?.name}  because ${\r\n                    assignedTo?.gender === \"male\" ? \"He \" : \"She \"\r\n                } has more than 04 Submittable tasks.`\r\n            );\r\n            count++;\r\n        }\r\n\r\n        if (!pageType) {\r\n            error.taskType = \"You have to Select task type\";\r\n            count++;\r\n        } else {\r\n            if (_.toLower(pageType) === _.toLower(\"New Page Design\")) {\r\n                if (!pageTypePriority) {\r\n                    error.pageTypePriority = \"You have to Select page type\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageName) {\r\n                    error.pageName = \"You have to Select page name\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageURL) {\r\n                    error.pageUrl = \"You have to provide page URL\";\r\n                    count++;\r\n                } else if (!checkIsURL(pageURL)) {\r\n                    error.pageUrl = \"You have to provide a valid page URL\";\r\n                    toast.warn(\"You have to provide a valid page URL\");\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if (_.toLower(pageType) === _.toLower(\"Others\")) {\r\n                if (!pageTypeOthers) {\r\n                    error.pageTypeOthers = \"You have to select an option\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageName) {\r\n                    error.pageName = \"You have to Select page name\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageURL) {\r\n                    error.pageUrl = \"You have to provide page URL\";\r\n                    count++;\r\n                } else if (!checkIsURL(pageURL)) {\r\n                    error.pageUrl = \"You have to provide a valid page URL\";\r\n                    toast.warn(\"You have to provide a valid page URL\");\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if (_.toLower(pageType) === _.toLower(\"Cloning Existing Design\")) {\r\n                if (!pageTypeName) {\r\n                    error.pageTypeName = \"You have to select an option\";\r\n                    count++;\r\n                }\r\n\r\n                if (!numberOfPage) {\r\n                    error.numberOfPage = \"The minimum required number is 1\";\r\n                    count++;\r\n                }\r\n\r\n                if (!existingDesignLink) {\r\n                    error.existingDesignLink =\r\n                        \"You have to provide Exiting Design Link\";\r\n                    count++;\r\n                } else if (!checkIsURL(existingDesignLink)) {\r\n                    error.existingDesignLink =\r\n                        \"You have to provide a valid Exiting Design Link\";\r\n                    toast.warn(\r\n                        \"You have to provide a valid Exiting Design Link\"\r\n                    );\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if (!description) {\r\n                error.description = \"The description field is required\";\r\n                count++;\r\n            }\r\n        }\r\n\r\n        setErr(error);\r\n        return !count;\r\n    };\r\n\r\n    // handle submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n        const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n        const fd = new FormData();\r\n        // fd.append(\"milestone_id\", task?.milestoneID);\r\n        fd.append(\"task_id\", task?.id);\r\n        fd.append(\"title\", title);\r\n        fd.append(\"start_date\", _startDate);\r\n        fd.append(\"due_date\", _dueDate);\r\n        // fd.append(\"project_id\", task?.projectId);\r\n        fd.append(\"task_category_id\", taskCategory?.id);\r\n        fd.append(\"user_id\", assignedTo?.id);\r\n        fd.append(\"description\", description);\r\n        fd.append(\"board_column_id\", task?.boardColumn?.id);\r\n        fd.append(\"priority\", _.lowerCase(priority));\r\n        // fd.append(\"estimate_hours\", estimateTimeHour);\r\n        // fd.append(\"estimate_minutes\", estimateTimeMin);\r\n        fd.append(\"image_url\", null);\r\n        fd.append(\"subTaskID\", null);\r\n        fd.append(\"addedFiles\", null);\r\n        fd.append(\"task_type\", pageType ?? null);\r\n        fd.append(\"page_type\", pageTypePriority);\r\n        fd.append(\"page_name\", pageName);\r\n        fd.append(\"page_url\", pageURL);\r\n        fd.append(\"task_type_other\", pageTypeOthers);\r\n        fd.append(\"page_type_name\", pageTypeName);\r\n        fd.append(\"number_of_pages\", numberOfPage);\r\n        fd.append(\"existing_design_link\", existingDesignLink);\r\n        fd.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            fd.append(\"file[]\", file);\r\n        });\r\n\r\n        // const submit = async () => {\r\n\r\n        if (isValid()) {\r\n            await createSubtask(fd)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    if (res?.status === \"success\") {\r\n                        let _subtask = [\r\n                            ...subTask,\r\n                            {\r\n                                id: res?.sub_task?.id,\r\n                                title: res?.sub_task?.title,\r\n                            },\r\n                        ];\r\n                        dispatch(storeSubTasks(_subtask));\r\n                        close();\r\n\r\n                        Swal.fire({\r\n                            position: \"center\",\r\n                            icon: \"success\",\r\n                            title: res.message,\r\n                            showConfirmButton: false,\r\n                            timer: 2500,\r\n                        });\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    if (err?.status === 422) {\r\n                        Swal.fire({\r\n                            position: \"center\",\r\n                            icon: \"error\",\r\n                            title: \"Please fill up all required fields\",\r\n                            showConfirmButton: true,\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (isLoading) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading]);\r\n\r\n    // editor data handle\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        const text = _.head(err?.errors?.hours);\r\n        return text;\r\n    };\r\n\r\n    useEffect(() => {\r\n        // const showEnv = _.size(task?.subtask) === 0 ? true : false;\r\n        if (auth.getRoleId() === 6 || auth.isHasRolePermission(13)) {\r\n            dispatch(setWorkingEnvironmentStatus(!isFirstSubtask));\r\n        }\r\n    }, [isFirstSubtask]);\r\n\r\n    // useEffect(()=>{\r\n    //   console.log({isFirstSubtask,isWorkingEnvironmentSubmit});\r\n    // },[isFirstSubtask,isWorkingEnvironmentSubmit]);\r\n\r\n    // useEffect(()=>{\r\n    //   console.log({isWorkingEnvironmentSubmit,isFirstSubtask,task});\r\n    // },[isWorkingEnvironmentSubmit,isFirstSubtask,task])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sp1-subtask-form --modal-panel\">\r\n                <div className=\"sp1-subtask-form --modal-panel-header\">\r\n                    <h6>\r\n                        {!isWorkingEnvironmentSubmit\r\n                            ? \"Working Environment\"\r\n                            : \"Create Sub Task\"}\r\n                    </h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className=\"_close-modal\"\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body sp1_subtask_form\">\r\n                    {/* working environment form */}\r\n                    {!isWorkingEnvironmentSubmit && (\r\n                        <WorkingEnvironmentForm\r\n                            task={task}\r\n                            onSubmit={() => {\r\n                                refetchTask();\r\n                            }}\r\n                            close={close}\r\n                        />\r\n                    )}\r\n                    {/* end working environment form */}\r\n\r\n                    {isWorkingEnvironmentSubmit && (\r\n                        <LeadConfirmationModal\r\n                            isOpen={!showForm}\r\n                            onConfirm={() => setShowForm(true)}\r\n                        />\r\n                    )}\r\n                    {showForm && (\r\n                        <div className=\"sp1-subtask-form --form row\">\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <Input\r\n                                    id=\"title\"\r\n                                    label=\"Title\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter a task title\"\r\n                                    name=\"title\"\r\n                                    required={true}\r\n                                    value={title}\r\n                                    error={\r\n                                        err?.title || required_error?.title?.[0]\r\n                                    }\r\n                                    onChange={(e) => handleChange(e, setTitle)}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Milestone */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Milestone\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={milestone}\r\n                                    />\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Parent Task\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={parentTask}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Project */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Project\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={project}\r\n                                    />\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\">\r\n                                        Start Date <sup className=\"f-14\">*</sup>\r\n                                    </label>\r\n                                    <div className=\"form-control height-35 f-14\">\r\n                                        <DatePicker\r\n                                            placeholderText={`Ex: ${dayjs\r\n                                                .dayjs()\r\n                                                .format(\"DD-MM-YYYY\")}`}\r\n                                            minDate={dayjs\r\n                                                .dayjs(task?.startDate)\r\n                                                .toDate()}\r\n                                            maxDate={\r\n                                                dueDate ||\r\n                                                dayjs\r\n                                                    .dayjs(task?.dueDate)\r\n                                                    .toDate()\r\n                                            }\r\n                                            date={startDate}\r\n                                            setDate={setStateDate}\r\n                                        />\r\n                                    </div>\r\n                                    {required_error?.start_date?.[0] && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {required_error?.start_date?.[0]}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {err?.startDate && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.startDate}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\">\r\n                                        Due Date <sup className=\"f-14\">*</sup>\r\n                                    </label>\r\n                                    <div className=\"form-control height-35 f-14\">\r\n                                        <DatePicker\r\n                                            placeholderText={`Ex: ${dayjs\r\n                                                .dayjs()\r\n                                                .format(\"DD-MM-YYYY\")}`}\r\n                                            minDate={\r\n                                                startDate ||\r\n                                                dayjs\r\n                                                    .dayjs(task?.startDate)\r\n                                                    .toDate()\r\n                                            }\r\n                                            maxDate={dayjs\r\n                                                .dayjs(task?.dueDate)\r\n                                                .toDate()}\r\n                                            date={dueDate}\r\n                                            setDate={setDueDate}\r\n                                        />\r\n                                    </div>\r\n                                    {required_error?.due_date?.[0] && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {required_error?.due_date?.[0]}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {err?.dueDate && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.dueDate}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <TaskCategorySelectionBox\r\n                                    selected={taskCategory}\r\n                                    onSelect={setTaskCategory}\r\n                                />\r\n\r\n                                {err?.taskCategory && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.taskCategory}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <AssginedToSelection\r\n                                    selected={assignedTo}\r\n                                    onSelect={setAssignedTo}\r\n                                />\r\n\r\n                                {err?.assignedTo && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.assignedTo}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {assignedTo?.isOverloaded && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {`You cannot assign this task to ${\r\n                                            assignedTo?.name\r\n                                        }  because ${\r\n                                            assignedTo?.gender === \"male\"\r\n                                                ? \"He \"\r\n                                                : \"She \"\r\n                                        } has more than 10 Submittable tasks.`}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            {/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <StatusSelection />\r\n                            </div> */}\r\n\r\n                            {/* Page Type  */}\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <Listbox\r\n                                    value={pageType}\r\n                                    onChange={setPageType}\r\n                                >\r\n                                    <div className=\"form-group position-relative my-3\">\r\n                                        <label htmlFor=\"\">\r\n                                            {\" \"}\r\n                                            Task Type <sup>*</sup>{\" \"}\r\n                                        </label>\r\n                                        <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                            <span className=\"singleline-ellipsis pr-3\">\r\n                                                {pageType ?? \"--\"}\r\n                                            </span>\r\n\r\n                                            <div className=\"__icon\">\r\n                                                <i className=\"fa-solid fa-sort\"></i>\r\n                                            </div>\r\n                                        </Listbox.Button>\r\n                                        <Listbox.Options className=\"sp1-select-options\">\r\n                                            {[\r\n                                                \"New Page Design\",\r\n                                                \"Cloning Existing Design\",\r\n                                                \"Others\",\r\n                                            ]?.map((s, i) => (\r\n                                                <Listbox.Option\r\n                                                    key={i}\r\n                                                    className={({ active }) =>\r\n                                                        `sp1-select-option ${\r\n                                                            active\r\n                                                                ? \"active\"\r\n                                                                : \"\"\r\n                                                        }`\r\n                                                    }\r\n                                                    value={s}\r\n                                                >\r\n                                                    {({ selected }) => (\r\n                                                        <>\r\n                                                            {s}\r\n\r\n                                                            {selected ? (\r\n                                                                <i className=\"fa-solid fa-check ml-2\" />\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </>\r\n                                                    )}\r\n                                                </Listbox.Option>\r\n                                            ))}\r\n                                        </Listbox.Options>\r\n                                    </div>\r\n                                </Listbox>\r\n\r\n                                {required_error?.pageType?.[0] && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {required_error?.pageType?.[0]}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {err?.taskType && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.taskType}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {pageType === \"New Page Design\" ? (\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <Listbox\r\n                                        value={pageTypePriority}\r\n                                        onChange={setPageTypePriority}\r\n                                    >\r\n                                        <div className=\"form-group position-relative my-3\">\r\n                                            <label htmlFor=\"\">\r\n                                                {\" \"}\r\n                                                Page Type <sup>*</sup>{\" \"}\r\n                                            </label>\r\n                                            <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                <span className=\"singleline-ellipsis pr-3\">\r\n                                                    {pageTypePriority ?? \"--\"}\r\n                                                </span>\r\n\r\n                                                <div className=\"__icon\">\r\n                                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                                </div>\r\n                                            </Listbox.Button>\r\n                                            <Listbox.Options className=\"sp1-select-options\">\r\n                                                {[\r\n                                                    \"Primary Page Development\",\r\n                                                    \"Secondary Page Development\",\r\n                                                ]?.map((s, i) => (\r\n                                                    <Listbox.Option\r\n                                                        key={i}\r\n                                                        className={({\r\n                                                            active,\r\n                                                        }) =>\r\n                                                            `sp1-select-option ${\r\n                                                                active\r\n                                                                    ? \"active\"\r\n                                                                    : \"\"\r\n                                                            }`\r\n                                                        }\r\n                                                        value={s}\r\n                                                    >\r\n                                                        {({ selected }) => (\r\n                                                            <>\r\n                                                                {s}\r\n\r\n                                                                {selected ? (\r\n                                                                    <i className=\"fa-solid fa-check ml-2\" />\r\n                                                                ) : (\r\n                                                                    \"\"\r\n                                                                )}\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Listbox.Option>\r\n                                                ))}\r\n                                            </Listbox.Options>\r\n                                        </div>\r\n                                    </Listbox>\r\n\r\n                                    {err?.pageTypePriority && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.pageTypePriority}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ) : null}\r\n\r\n                            {/* Others */}\r\n                            {pageType === \"Others\" ? (\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <Listbox\r\n                                        value={pageTypeOthers}\r\n                                        onChange={setPageTypeOthers}\r\n                                    >\r\n                                        <div className=\"form-group position-relative my-3\">\r\n                                            <label htmlFor=\"\">\r\n                                                {\" \"}\r\n                                                Others <sup>*</sup>{\" \"}\r\n                                            </label>\r\n                                            <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                <span className=\"singleline-ellipsis pr-3\">\r\n                                                    {pageTypeOthers ?? \"--\"}\r\n                                                </span>\r\n\r\n                                                <div className=\"__icon\">\r\n                                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                                </div>\r\n                                            </Listbox.Button>\r\n                                            <Listbox.Options className=\"sp1-select-options\">\r\n                                                {[\r\n                                                    \"Page Design Change\",\r\n                                                    \"Speed Optimization\",\r\n                                                    \"Fixing Issues/Bugs\",\r\n                                                    \"Responsiveness Issue Fixing/Making Something Responsive\",\r\n                                                ]?.map((s, i) => (\r\n                                                    <Listbox.Option\r\n                                                        key={i}\r\n                                                        className={({\r\n                                                            active,\r\n                                                        }) =>\r\n                                                            `sp1-select-option ${\r\n                                                                active\r\n                                                                    ? \"active\"\r\n                                                                    : \"\"\r\n                                                            }`\r\n                                                        }\r\n                                                        value={s}\r\n                                                    >\r\n                                                        {({ selected }) => (\r\n                                                            <>\r\n                                                                {s}\r\n\r\n                                                                {selected ? (\r\n                                                                    <i className=\"fa-solid fa-check ml-2\" />\r\n                                                                ) : (\r\n                                                                    \"\"\r\n                                                                )}\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Listbox.Option>\r\n                                                ))}\r\n                                            </Listbox.Options>\r\n                                        </div>\r\n                                    </Listbox>\r\n\r\n                                    {err?.pageTypeOthers && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.pageTypeOthers}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ) : null}\r\n\r\n                            {pageType ? (\r\n                                <React.Fragment>\r\n                                    {pageType === \"Cloning Existing Design\" ? (\r\n                                        <>\r\n                                            {/* <div className=\"col-12 col-md-6\">\r\n                                                    <Input\r\n                                                        id=\"page_type_name\"\r\n                                                        label=\"Page type name\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter page type name...\"\r\n                                                        name=\"pageTypeName\"\r\n                                                        required={true}\r\n                                                        value={pageTypeName}\r\n\r\n                                                        onChange={(e) => handleChange(e, setPageTypeName)}\r\n                                                    />\r\n                                                </div> */}\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Listbox\r\n                                                    value={pageTypeName}\r\n                                                    onChange={setPageTypeName}\r\n                                                >\r\n                                                    <div className=\"form-group position-relative my-3\">\r\n                                                        <label htmlFor=\"\">\r\n                                                            {\" \"}\r\n                                                            Page Type Name{\" \"}\r\n                                                            <sup>*</sup>{\" \"}\r\n                                                        </label>\r\n                                                        <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                            <span className=\"singleline-ellipsis pr-3\">\r\n                                                                {pageTypeName ??\r\n                                                                    \"--\"}\r\n                                                            </span>\r\n\r\n                                                            <div className=\"__icon\">\r\n                                                                <i className=\"fa-solid fa-sort\"></i>\r\n                                                            </div>\r\n                                                        </Listbox.Button>\r\n                                                        <Listbox.Options className=\"sp1-select-options\">\r\n                                                            {[\r\n                                                                \"Primary Page Development\",\r\n                                                                \"Secondary Page Development\",\r\n                                                            ]?.map((s, i) => (\r\n                                                                <Listbox.Option\r\n                                                                    key={i}\r\n                                                                    className={({\r\n                                                                        active,\r\n                                                                    }) =>\r\n                                                                        `sp1-select-option ${\r\n                                                                            active\r\n                                                                                ? \"active\"\r\n                                                                                : \"\"\r\n                                                                        }`\r\n                                                                    }\r\n                                                                    value={s}\r\n                                                                >\r\n                                                                    {({\r\n                                                                        selected,\r\n                                                                    }) => (\r\n                                                                        <>\r\n                                                                            {s}\r\n\r\n                                                                            {selected ? (\r\n                                                                                <i className=\"fa-solid fa-check ml-2\" />\r\n                                                                            ) : (\r\n                                                                                \"\"\r\n                                                                            )}\r\n                                                                        </>\r\n                                                                    )}\r\n                                                                </Listbox.Option>\r\n                                                            ))}\r\n                                                        </Listbox.Options>\r\n                                                    </div>\r\n                                                </Listbox>\r\n                                                {err?.pageTypeName ||\r\n                                                    required_error\r\n                                                        ?.page_type?.[0]}\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"page_name\"\r\n                                                    label=\"Page Name\"\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter page name\"\r\n                                                    name=\"page name\"\r\n                                                    required={true}\r\n                                                    value={pageName}\r\n                                                    error={err?.pageName}\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setPageName\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"page_url\"\r\n                                                    label=\"Page URL\"\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter page url\"\r\n                                                    name=\"page url\"\r\n                                                    required={true}\r\n                                                    value={pageURL}\r\n                                                    error={\r\n                                                        err?.pageUrl ||\r\n                                                        required_error\r\n                                                            ?.page_url?.[0]\r\n                                                    }\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setPageURL\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n\r\n                                    {pageType === \"Cloning Existing Design\" ? (\r\n                                        <>\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"number_of_pages\"\r\n                                                    label=\"Number of Pages\"\r\n                                                    type=\"number\"\r\n                                                    placeholder=\"--\"\r\n                                                    name=\"number_of_pages\"\r\n                                                    required={true}\r\n                                                    value={numberOfPage}\r\n                                                    error={err?.numberOfPage}\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setNumberOfPage\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"exiting_project_url\"\r\n                                                    label=\"Existing Design Link\"\r\n                                                    type=\"Link\"\r\n                                                    placeholder=\"--\"\r\n                                                    name=\"exiting_project_url\"\r\n                                                    required={true}\r\n                                                    value={existingDesignLink}\r\n                                                    error={\r\n                                                        err?.existingDesignLink\r\n                                                    }\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setExistingDesignLink\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                        </>\r\n                                    ) : null}\r\n                                </React.Fragment>\r\n                            ) : null}\r\n                            {/*  */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <PrioritySelection\r\n                                    selected={priority}\r\n                                    setSelected={setPriority}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Set Estimate Time */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        htmlFor=\"\"\r\n                                        className=\"f-14 text-dark-gray\"\r\n                                    >\r\n                                        Set Estimate Time{\" \"}\r\n                                        <sup className=\"f-14\"> * </sup>\r\n                                    </label>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control height-35 f-14 mr-2\"\r\n                                            value={estimateTimeHour}\r\n                                            onWheel={e => e.currentTarget.blur()}\r\n                                            onChange={(e) =>handleChange( e,setEstimateTimeHour)}\r\n                                        />{\" \"}\r\n                                        hrs\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                            value={estimateTimeMin}\r\n                                            onWheel={e => e.currentTarget.blur()}\r\n                                            onChange={(e) =>\r\n                                                handleChange(\r\n                                                    e,\r\n                                                    setEstimateTimeMin\r\n                                                )\r\n                                            }\r\n                                        />{\" \"}\r\n                                        min\r\n                                    </div>\r\n\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {estimateError(required_error)}\r\n                                    </div>\r\n\r\n                                    <div style={{ color: \"#F73B12\" }}>\r\n                                    Estimation time can't exceed {estimation?.hours_left} hours {estimation?.minutes_left} minutes\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\"> Description </label>\r\n                                    <div\r\n                                        className=\"sp1_st_write_comment_editor\"\r\n                                        style={{ minHeight: \"100px\" }}\r\n                                    >\r\n                                        <CKEditorComponent\r\n                                            onChange={handleEditorChange}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {required_error?.description?.[0] && (\r\n                                        <span className=\"text-danger\">\r\n                                            <small>\r\n                                                {\" \"}\r\n                                                {\r\n                                                    required_error\r\n                                                        ?.description?.[0]\r\n                                                }{\" \"}\r\n                                            </small>\r\n                                        </span>\r\n                                    )}\r\n                                    {err?.description && (\r\n                                        <span className=\"text-danger\">\r\n                                            <small> {err?.description} </small>\r\n                                        </span>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <UploadFilesInLine\r\n                                    files={files}\r\n                                    setFiles={setFiles}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* {err?.violationWord ? <div className=\"alert alert-danger mt-2 w-100 text-center\" dangerouslySetInnerHTML={{__html: err?.violationWord}} />: null} */}\r\n\r\n                            <div className=\"col-12 mt-3 pb-3\">\r\n                                <div className=\"d-flex align-items-center justify-content-end\">\r\n                                    <Button\r\n                                        variant=\"secondary\"\r\n                                        className=\"mr-2\"\r\n                                        onClick={close}\r\n                                    >\r\n                                        Cancel\r\n                                    </Button>\r\n\r\n                                    {!isLoading && !checking ? (\r\n                                        <Button onClick={handleSubmit}>\r\n                                            <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                            Create\r\n                                        </Button>\r\n                                    ) : (\r\n                                        <Button className=\"cursor-processing\">\r\n                                            <div\r\n                                                className=\"spinner-border text-white\"\r\n                                                role=\"status\"\r\n                                                style={{\r\n                                                    width: \"18px\",\r\n                                                    height: \"18px\",\r\n                                                }}\r\n                                            ></div>\r\n                                            Processing...\r\n                                        </Button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SubTaskForm;\r\n","import React, { useState } from 'react'\r\nimport Button from '../../components/Button'\r\nimport Input from '../../components/form/Input'\r\nimport TaskCategorySelectionBox from './TaskCategorySelectionBox'\r\nimport AssginedToSelection from './AssignedToSelection'\r\nimport PrioritySelection from './PrioritySelection'\r\nimport DatePicker from '../comments/DatePicker'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport _ from 'lodash'\r\nimport { useDeleteUplaodedFileMutation, useEditSubtaskMutation, useGetTaskDetailsQuery, useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeSubTasks } from '../../../services/features/subTaskSlice'\r\nimport { CompareDate } from '../../../utils/dateController'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n\r\nconst  SubtTaskEditForm= ({close, editId}) => {\r\n    const { task, subTask } = useSelector(s => s.subTask);\r\n    const dispatch = useDispatch();\r\n\r\n//   form data\r\n  const [title, setTitle] = useState('');\r\n  const [milestone, setMilestone] = useState('');\r\n  const [parentTask, setParentTask] = useState('');\r\n  const [startDate, setStateDate] = useState(new Date());\r\n  const [dueDate, setDueDate] = useState(new Date());\r\n  const [project, setProject] = useState(\"\");\r\n  const [taskCategory, setTaskCategory] = useState('')\r\n  const [assignedTo, setAssignedTo] = useState('');\r\n  const [taskObserver, setTaskObserver] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('To Do');\r\n  const [priority, setPriority] = useState('Medium');\r\n  const [estimateTimeHour, setEstimateTimeHour ] = useState('');\r\n  const [estimateTimeMin, setEstimateTimeMin ] = useState('');\r\n  const [attachedFiles, setAttachedFiles] = useState([]);\r\n  const [files, setFiles] = React.useState([]);\r\n\r\n    const params = useParams();\r\n\r\nconst [\r\n    editSubtask,\r\n    { isLoading, error }\r\n] = useEditSubtaskMutation();\r\n\r\nconst [\r\n    getTaskDetails,\r\n    { data: edit, isFetching: editDataIsFetching}\r\n] = useLazyGetTaskDetailsQuery();\r\n\r\n\r\n// find edited subtask\r\nconst editSubTask = subTask.find(d => d.id === editId);\r\n\r\nconst { data: estimation, isFetching } = useGetTaskDetailsQuery(`/${params?.taskId}/json?mode=estimation_time`);\r\n\r\n\r\nconst required_error = error?.status === 422 ? error?.data: null;\r\n\r\n\r\n// handle change\r\nReact.useEffect(() => {\r\n    const formatedDate = (d) => {\r\n        let day = dayjs.dayjs(d).toDate();\r\n        return day;\r\n    }\r\n    getTaskDetails(`/${editId}/json?mode=sub_task_edit`).unwrap().then(res => {\r\n        if(res){\r\n            const assigneeTo = res?.users?.[0];\r\n\r\n            setTitle(res.heading);\r\n            setMilestone(res.milestone_title);\r\n            setParentTask(task?.heading);\r\n            setStateDate(formatedDate(res.start_date));\r\n            setDueDate(formatedDate(res.due_date));\r\n            setProject(res.project_name);\r\n            setTaskCategory(res.task_category);\r\n            setAssignedTo(assigneeTo ? {id: assigneeTo?.id, name: assigneeTo?.name}: '');\r\n            setDescription(res.description);\r\n            setPriority(_.startCase(res.priority));\r\n            setEstimateTimeHour(res.estimate_hours);\r\n            setEstimateTimeMin(res.estimate_minutes);\r\n            setAttachedFiles(res.files);\r\n\r\n\r\n\r\n        }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    } )\r\n}, [task, editId])\r\n\r\n\r\n\r\n// handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n// handle submission\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  const _startDate = dayjs.dayjs(startDate).format('DD-MM-YYYY');\r\n  const _dueDate = dayjs.dayjs(dueDate).format('DD-MM-YYYY');\r\n\r\n  const fd = new FormData();\r\n    fd.append('milestone_id', task?.milestone_id);\r\n    fd.append('task_id', task?.id);\r\n    fd.append('title', title);\r\n    fd.append('start_date', _startDate);\r\n    fd.append('due_date', _dueDate);\r\n    fd.append('project_id', task?.project_id);\r\n    fd.append('task_category_id', taskCategory?.id);\r\n    fd.append('user_id', assignedTo?.id);\r\n    fd.append('description', description);\r\n    fd.append('board_column_id', task?.board_column_id);\r\n    fd.append('priority', _.lowerCase(priority));\r\n    fd.append('estimate_hours', estimateTimeHour);\r\n    fd.append('estimate_minutes', estimateTimeMin);\r\n    fd.append('image_url', null);\r\n    fd.append('subTaskID', editSubTask?.subtask_id);\r\n    fd.append('addedFiles', null);\r\n    fd.append('_method', 'PUT');\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    editSubtask({data: fd, id: editId}).unwrap().then(res => {\r\n            if(res?.status === 'success'){\r\n\r\n                 let _subtask = [...subTask];\r\n                 _subtask = _subtask?.map(s => {\r\n                    if(Number(s?.id) === Number(res?.sub_task?.id)){\r\n                        return res?.sub_task\r\n                    }else return s;\r\n                 })\r\n\r\n                dispatch(storeSubTasks(_subtask));\r\n\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: res?.message,\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                })\r\n\r\n                close();\r\n            }\r\n    }).catch((err) => {\r\n        if(err?.status === 422){\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'error',\r\n                title: \"Please fill out all required fields\",\r\n                showConfirmButton: true,\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n// handle uplaoded file delete request\r\nconst [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\nconst handleFileDelete = (e, file) => {\r\n    // delete\r\n    deleteUplaodedFile(file?.id).unwrap();\r\n\r\n    // delete form ui\r\n    let previousFile = [...attachedFiles];\r\n    let index = previousFile?.indexOf(file);\r\n    previousFile.splice(index,1);\r\n    setAttachedFiles(previousFile);\r\n}\r\n\r\n\r\n// handle loading state\r\nReact.useEffect(() => {\r\n    if (isLoading || editDataIsFetching) {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'progress';\r\n      } else {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'default';\r\n      }\r\n}, [isLoading, editDataIsFetching])\r\n\r\n\r\n\r\nconst handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setDescription(data);\r\n}\r\n\r\nconst estimateError= (err) =>{\r\n    let errText = '';\r\n    let hoursErr = err?.estimate_hours?.[0];\r\n    let minErr = err?.estimate_minutes?.[0];\r\n    if(hoursErr) errText += hoursErr;\r\n    if(minErr) errText += minErr;\r\n    return errText;\r\n}\r\n\r\n  return (\r\n    <>\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'>\r\n                 <h6>\r\n                        Edit Sub Task\r\n                        {editDataIsFetching && <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent'\r\n                            }}\r\n                        />}\r\n                </h6>\r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching &&\r\n                    <div className='w-100' style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        zIndex: 1\r\n                    }}/>\r\n                }\r\n                <div className='sp1-subtask-form --form row'>\r\n                    <div className=\"col-6\">\r\n                        <Input\r\n                            id='title'\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder='Enter a task title'\r\n                            name='title'\r\n                            required={true}\r\n                            value={title}\r\n                            error= {required_error?.title?.[0]}\r\n                            onChange={e => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Milestone\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={milestone}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Parent Task\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={parentTask}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">Start Date <sup className='f-14'>*</sup></label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs.dayjs().format('DD-MM-YYYY')}`}\r\n                                    minDate={dayjs.dayjs(task?.start_date).toDate()}\r\n                                    maxDate={dueDate || dayjs.dayjs(task?.due_date).toDate()}\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                required_error?.start_date?.[0] &&\r\n                               <div style={{color: 'red'}}>{required_error?.start_date?.[0]}</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-6'>\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">Due Date <sup className='f-14'>*</sup></label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs.dayjs().format('DD-MM-YYYY')}`}\r\n                                    minDate={startDate || dayjs.dayjs(task?.start_date).toDate()}\r\n                                    maxDate={dayjs.dayjs(task?.due_date).toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                required_error?.due_date?.[0] &&\r\n                               <div style={{color: 'red'}}>{required_error?.due_date?.[0]}</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <TaskCategorySelectionBox selected={taskCategory} onSelect={setTaskCategory}  />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <AssginedToSelection selected={assignedTo} onSelect={setAssignedTo} />\r\n                    </div>\r\n{/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-6\">\r\n                        <PrioritySelection selected={priority} setSelected={setPriority} />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className='f-14 text-dark-gray'>Set Estimate Time <sup className='f-14'> * </sup></label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type='number'\r\n                                    onWheel={e => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) => handleChange(e, setEstimateTimeHour)}\r\n                                /> hrs\r\n                                <input\r\n                                    type='number'\r\n                                    onWheel={e => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={e => handleChange(e, setEstimateTimeMin)}\r\n                                /> min\r\n                            </div>\r\n\r\n                            <div style={{color: 'red'}}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{color: 'red'}}>\r\n                            Estimation time can't exceed {estimation?.hours_left} hours {estimation?.minutes_left} minutes\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div className='sp1_st_write_comment_editor' style={{minHeight: '100px'}}>\r\n                                <CKEditorComponent data={description} onChange={handleEditorChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12'>\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3\">\r\n\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant='secondary'\r\n                                className='mr-2'\r\n                                onClick={close}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            {!isLoading ? (\r\n                                <Button onClick={handleSubmit}>\r\n                                    <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                    Update\r\n                                </Button>\r\n                            ) : (\r\n                            <Button className='cursor-processing'>\r\n                                <div\r\n                                    className=\"spinner-border text-white\"\r\n                                    role=\"status\"\r\n                                    style={{\r\n                                        width: '18px',\r\n                                        height: '18px',\r\n                                    }}\r\n                                >\r\n                                </div>\r\n                                Processing...\r\n                            </Button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SubtTaskEditForm\r\n","import React from \"react\";\r\nimport SubTask from \"./SubTask\";\r\nimport SubTaskForm from \"./SubTaskForm\";\r\nimport Button from \"../../components/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    useGetTaskDetailsQuery,\r\n    useLazyGetInProgressTaskStatusQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { storeSubTasks } from \"../../../services/features/subTaskSlice\";\r\nimport SubtTaskEditForm from \"./SubTaskEditForm\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport Modal from \"../../components/Modal\";\r\nimport _ from \"lodash\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { subTaskCreationPermision } from \"../../permissions\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst SubTaskSection = ({ status }) => {\r\n    const { task, subTask } = useSelector((s) => s.subTask);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [edit, setEdit] = React.useState(null);\r\n    const [formMode, setFormMode] = React.useState(\"add\");\r\n    const [isTaskModalOpen, setIsTaskModalOpen] = React.useState(false);\r\n    const [subtaskModalToggleRef, setSubtaskModalToggleRef] =\r\n        React.useState(null);\r\n    const { width } = useWindowSize();\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n    // check in progress task history\r\n    const [getInProgressTaskStatus, { isFetching: inProgressTaskStatus }] =\r\n        useLazyGetInProgressTaskStatusQuery();\r\n\r\n    const toggleAddButton = async () => {\r\n        // try{\r\n        //     const res = await getInProgressTaskStatus(`/${auth?.getId()}`).unwrap();\r\n        //     if(res.status === 400){\r\n        //         toast.error(res?.message, {theme: 'colored'})\r\n        //     }else{\r\n        //         setIsTaskModalOpen(!isTaskModalOpen);\r\n        //     }\r\n\r\n        // }catch(err){\r\n        //     console.log(err)\r\n        // }\r\n\r\n        setIsTaskModalOpen(!isTaskModalOpen);\r\n    };\r\n\r\n    const closeAddModal = () => {\r\n        setIsTaskModalOpen(false);\r\n        setFormMode(\"add\");\r\n        navigate(`/account/tasks/${task?.id}`);\r\n    };\r\n    const toggleEditButton = (e) => {\r\n        setFormMode(\"edit\");\r\n        setIsTaskModalOpen(!isTaskModalOpen);\r\n    };\r\n\r\n    // edit modal form control\r\n    const toggleEditForm = (e, id) => {\r\n        e.preventDefault();\r\n        setEdit(id);\r\n        setIsTaskModalOpen(true);\r\n    };\r\n\r\n    const closeEditForm = () => {\r\n        setEdit(null);\r\n        setIsTaskModalOpen(false);\r\n    };\r\n\r\n    // handle create new subtask\r\n    // const handleCreateSubTask = () => {\r\n    //     // if parent task has not already any subtask\r\n    //     // show the Working Environment form\r\n    //     // else create from\r\n    // };\r\n\r\n    // edit modal form control end\r\n    // const {\r\n    //   data,\r\n    //   isFetching\r\n    // } = useGetTaskDetailsQuery(`/${task?.id}/json?mode=sub_task`, {\r\n    //   skip: subTask?.length\r\n    // });\r\n\r\n    // fetch all task\r\n    const [getTaskDetails, { isFetching }] = useLazyGetTaskDetailsQuery(\"\", {\r\n        skip: subTask?.length,\r\n    });\r\n\r\n    // useEffect(()=>{\r\n    //     console.log({task,subTask,isFetching});\r\n    //   },[task,subTask,isFetching])\r\n\r\n    // if task notes fetch completed store data into redux store\r\n    React.useEffect(() => {\r\n        if (task && task.id) {\r\n            getTaskDetails(`/${task?.id}/json?mode=sub_task`)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    if (res) {\r\n                        dispatch(storeSubTasks(res));\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [task]);\r\n\r\n    // React.useEffect(() => {\r\n    //   if(!isFetching && data){\r\n    //     dispatch(storeSubTasks(data));\r\n    //   }\r\n    // },[data])\r\n\r\n    const Task = new SingleTask(task);\r\n\r\n    return (\r\n        <div\r\n            className=\"sp1_task_right_card mb-3\"\r\n            ref={setSubtaskModalToggleRef}\r\n            style={{ zIndex: isTaskModalOpen ? \"99\" : \"\" }}\r\n        >\r\n            {width > 1200 ? (\r\n                <React.Fragment>\r\n                    {/* modal */}\r\n                    <CustomModal\r\n                        toggleRef={subtaskModalToggleRef}\r\n                        isOpen={isTaskModalOpen}\r\n                        close={closeAddModal}\r\n                        formMode={formMode}\r\n                    >\r\n                        {!edit ? (\r\n                            <SubTaskForm\r\n                                close={closeAddModal}\r\n                                isFirstSubtask={!Task.workEnvData}\r\n                            />\r\n                        ) : (\r\n                            <SubtTaskEditForm\r\n                                close={closeEditForm}\r\n                                editId={edit}\r\n                            />\r\n                        )}\r\n                    </CustomModal>\r\n                </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                    {/* modal */}\r\n                    <Modal isOpen={isTaskModalOpen}>\r\n                        {!edit ? (\r\n                            <SubTaskForm\r\n                                close={closeAddModal}\r\n                                isFirstSubtask={!Task.workEnvData}\r\n                            />\r\n                        ) : (\r\n                            <SubtTaskEditForm\r\n                                close={closeEditForm}\r\n                                editId={edit}\r\n                            />\r\n                        )}\r\n                    </Modal>\r\n                </React.Fragment>\r\n            )}\r\n\r\n            {/* left dropdown */}\r\n\r\n            {isTaskModalOpen && (\r\n                <button\r\n                    aria-label=\"openCommentModalButton\"\r\n                    className=\"sp1_task_right_dl_toggle\"\r\n                    onClick={toggleAddButton}\r\n                    style={{ zIndex: isTaskModalOpen ? \"110\" : \"\" }}\r\n                >\r\n                    <i\r\n                        className={`fa-solid fa-circle-chevron-${\r\n                            isTaskModalOpen ? \"right\" : \"left\"\r\n                        }`}\r\n                        style={{ color: \"#276fec\" }}\r\n                    />\r\n                </button>\r\n            )}\r\n            {/* left dropdown */}\r\n\r\n            <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n                <div className=\"f-16\">\r\n                    <span>Sub Task</span>\r\n                    {isFetching && (\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        />\r\n                    )}\r\n                </div>\r\n\r\n                {subTaskCreationPermision({ task: Task, auth, status }) && (\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        className=\"sp1_tark_add_item\"\r\n                        aria-label=\"addButton\"\r\n                        onClick={toggleAddButton}\r\n                    >\r\n                        {isTaskModalOpen ? (\r\n                            <React.Fragment>\r\n                                <i\r\n                                    className=\"fa-solid fa-xmark\"\r\n                                    style={{ fontSize: \"12px\" }}\r\n                                />{\" \"}\r\n                                Close\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                {inProgressTaskStatus ? (\r\n                                    <Loader title=\"Loading...\" />\r\n                                ) : (\r\n                                    <>\r\n                                        <i\r\n                                            className=\"fa-solid fa-plus\"\r\n                                            style={{ fontSize: \"12px\" }}\r\n                                        />{\" \"}\r\n                                        Sub Task\r\n                                    </>\r\n                                )}\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Button>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"sp1_task_right_card--body\">\r\n                {!isFetching ? (\r\n                    _.size(subTask) !== 0 ? (\r\n                        subTask?.map((sub) => (\r\n                            <SubTask\r\n                                key={sub.id}\r\n                                subTask={sub}\r\n                                task={task}\r\n                                status={status}\r\n                                toggleEditForm={toggleEditForm}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{\r\n                                color: \"#B4BCC4\",\r\n                                fontSize: \"15px\",\r\n                                textAlign: \"center\",\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                            }}\r\n                        >\r\n                            Sub Task is Not Available\r\n                        </div>\r\n                    )\r\n                ) : (\r\n                    <div\r\n                        className=\"d-flex align-items-center justify-content-center\"\r\n                        style={{\r\n                            color: \"#5A6169\",\r\n                            fontSize: \"15px\",\r\n                            textAlign: \"center\",\r\n                            height: \"100%\",\r\n                            width: \"100%\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                                marginRight: \"10px\",\r\n                            }}\r\n                        />\r\n                        Loading...\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubTaskSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport Card from \"../../../global/Card\";\r\nimport styles from \"./task-edit-form.module.css\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport Button from  '../../../global/Button'\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\nimport AssignedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\n\r\nimport {\r\n    useDeleteUplaodedFileMutation,\r\n    useGetTaskDetailsQuery,\r\n    useEditSubtaskMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { storeSubTasks } from \"../../../services/features/subTaskSlice\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useUpdateTaskMutation } from \"../../../services/api/tasksApiSlice\";\r\nimport { useGetMilestoneDetailsQuery, useLazyGetMilestoneDetailsQuery } from \"../../../services/api/projectApiSlice\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport Loader from \"../../../global/Loader\";\r\nimport { convertTime } from \"../../../utils/converTime\";\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n// Edit form Provider\r\nconst EditFormProvider = ({ task }) => {\r\n    const [searchParams] = useSearchParams(); // get search params\r\n    const isVisible = searchParams.get(\"modal\") === \"edit\"; // check has modal\r\n    const taskId = searchParams.get(\"task\"); // get task id\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const close = () => navigate(location.pathname, {replace: true});\r\n\r\n\r\n    const [updateTask, { isLoading, error }] = useUpdateTaskMutation();\r\n    // handle submission\r\n    const handleSubmission = (formData) => {\r\n        updateTask(formData).unwrap().then(res => {\r\n            if(res?.status === 200){\r\n                toast.success(\"Task Updated successfully!\");\r\n                close();\r\n            }\r\n        }).catch((err) => {\r\n            if(err?.status === 422){\r\n                toast.warn(\"Please fill out all required fields\")\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={isVisible}>\r\n            <Card className={styles.form_card}>\r\n                <Card.Head\r\n                  onClose={close}\r\n                  className={styles.form_card_head}\r\n                >\r\n                    <h6> Edit Task # {taskId} </h6>\r\n                </Card.Head>\r\n\r\n                <Card.Body className={styles.form_card_body}>\r\n                    <div className=\"\">\r\n                        {task && (\r\n                            <TaskEditForm\r\n                                task={task}\r\n                                onSubmit={handleSubmission}\r\n                                isLoading={isLoading}\r\n                                onClose={close}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditFormProvider;\r\n\r\nconst TaskEditForm = ({ task, onSubmit, isLoading, onClose}) => {\r\n    const editDataIsFetching = !task;\r\n    //form data\r\n    const [title, setTitle] = useState(task.title);\r\n    const [milestone, setMilestone] = useState({id: task.milestoneID, milestone_title: task.milestoneTitle});\r\n    const [parentTask, setParentTask] = useState(task.parentTaskTitle);\r\n    const [startDate, setStateDate] = useState(new Date(task.startDate));\r\n    const [dueDate, setDueDate] = useState(new Date(task.dueDate));\r\n    const [project, setProject] = useState(task.projectName);\r\n    const [taskCategory, setTaskCategory] = useState({\r\n        id: task.category.id,\r\n        category_name: task.category.name,\r\n    });\r\n    const [assignedTo, setAssignedTo] = useState({\r\n        id: task.assigneeTo.id,\r\n        name: task.assigneeTo.name,\r\n    });\r\n    const [description, setDescription] = useState(task.description);\r\n    const [priority, setPriority] = useState(task.priority);\r\n    const [estimateTimeHour, setEstimateTimeHour] = useState(\r\n        task.estimateHours\r\n    );\r\n    const [estimateTimeMin, setEstimateTimeMin] = useState(\r\n        task.estimateMinutes\r\n    );\r\n    const [attachedFiles, setAttachedFiles] = useState([]);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { data: estimation, isFetching } = useGetTaskDetailsQuery(\r\n        `/${task.id}/json?mode=estimation_time`\r\n    );\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n      let count = 0;\r\n      const err = new Object();\r\n\r\n      const errorMessages = {\r\n        requiredField: 'This field is required.',\r\n        startDate: 'Please select a start date.',\r\n        dueDate: 'Please select a due date.',\r\n        taskCategory: 'Please select a task category.',\r\n        assignedTo: 'Please select a user.',\r\n        overloadedUser: (name, gender) =>\r\n          `You cannot assign this task to ${name} because ${\r\n            gender === 'male' ? 'he ' : 'she '\r\n          } has more than 10 submittable tasks.`,\r\n        description: 'This field is required.',\r\n      };\r\n\r\n      const showError = (field) => {\r\n        err[field] = errorMessages[field];\r\n        count++;\r\n      }\r\n\r\n\r\n      if(!title) showError('title');\r\n      if(!startDate) showError('startDate');\r\n      if(!dueDate) showError('dueDate');\r\n      if(!taskCategory) showError('taskCategory');\r\n      if(!assignedTo) showError('assignedTo');\r\n\r\n      if (assignedTo && assignedTo?.isOverloaded) {\r\n        err.assignedTo = overloadedUser(assignedTo.name, genderPronoun);\r\n        count++;\r\n      }\r\n\r\n      if(!description) showError('description');\r\n\r\n      setError(error);\r\n      return count === 0;\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = () => {\r\n         //form data\r\n         const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n         const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n         const fd = new FormData();\r\n         fd.append(\"milestone_id\", task?.milestoneID);\r\n         fd.append(\"task_id\", task?.id);\r\n         fd.append(\"heading\", title);\r\n         fd.append(\"start_date\", _startDate);\r\n         fd.append(\"due_date\", _dueDate);\r\n         fd.append(\"project_id\", task?.projectId);\r\n         fd.append(\"category_id\", taskCategory?.id);\r\n         fd.append(\"user_id\", assignedTo?.id);\r\n         fd.append(\"description\", description);\r\n         fd.append(\"board_column_id\", task?.boardColumn.id);\r\n         fd.append(\"priority\", _.lowerCase(priority));\r\n         fd.append(\"estimate_hours\", estimateTimeHour);\r\n         fd.append(\"estimate_minutes\", estimateTimeMin);\r\n         fd.append(\"deliverable_id\", milestone?.deliverable_type ?? '');\r\n         fd.append(\"image_url\", null);\r\n         fd.append(\"addedFiles\", null);\r\n         fd.append(\"_method\", \"POST\");\r\n         fd.append(\r\n             \"_token\",\r\n             document\r\n                 .querySelector(\"meta[name='csrf-token']\")\r\n                 .getAttribute(\"content\")\r\n         );\r\n         Array.from(files).forEach((file) => {\r\n             fd.append(\"file[]\", file);\r\n         });\r\n\r\n        if(isValid()){\r\n         onSubmit(fd);\r\n        }else{\r\n         toast.warn('Please fill out all required fields!');\r\n        }\r\n\r\n    };\r\n\r\n\r\n      const {data: projects, isFetching: isFetchingMilestone} = useGetMilestoneDetailsQuery(task?.projectId)\r\n\r\n\r\n\r\n    // handle uploaded file delete request\r\n    const [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\n    const handleFileDelete = (e, file) => {\r\n        // delete\r\n        deleteUplaodedFile(file?.id).unwrap();\r\n\r\n        // delete form ui\r\n        let previousFile = [...attachedFiles];\r\n        let index = previousFile?.indexOf(file);\r\n        previousFile.splice(index, 1);\r\n        setAttachedFiles(previousFile);\r\n    };\r\n\r\n    // handle loading state\r\n    React.useEffect(() => {\r\n        if (isLoading || editDataIsFetching) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading, editDataIsFetching]);\r\n\r\n    //   editor\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        let errText = \"\";\r\n        let hoursErr = err?.estimate_hours?.[0];\r\n        let minErr = err?.estimate_minutes?.[0];\r\n        if (hoursErr) errText += hoursErr;\r\n        if (minErr) errText += minErr;\r\n        return errText;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching && (\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            zIndex: 1,\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className=\"sp1-subtask-form --form row\">\r\n                    <div className=\"col-6\">\r\n                        <Input\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter a task title\"\r\n                            name=\"title\"\r\n                            required={true}\r\n                            value={title}\r\n                            error={required_error?.title?.[0]}\r\n                            onChange={(e) => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* Project Milestone Selection Menu */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Listbox value={milestone} onChange={setMilestone}>\r\n                            <div className=\"form-group position-relative my-3\">\r\n                                <label\r\n                                    className={`f-14 text-dark-gray mb-1`}\r\n                                    data-label=\"true\"\r\n                                >\r\n                                    Milestone\r\n                                </label>\r\n                                <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                    <span className=\"singleline-ellipsis\" >{milestone?.milestone_title ?? '--'}</span>\r\n                                    <div className='__icon'>\r\n                                        <i className=\"fa-solid fa-sort\"></i>\r\n                                    </div>\r\n                                </Listbox.Button>\r\n                                <Listbox.Options  className=\"sp1-select-options\">\r\n                                    {isFetchingMilestone && <span className=\"w-full d-block py-2 px-3\">Loading...</span>}\r\n\r\n                                    {_.map(projects?.milestones, (milestone) => (\r\n                                        <Listbox.Option\r\n                                            key={milestone.id}\r\n                                            className={({ active }) =>  `sp1-select-option ${styles.list_border}${ active ? 'active' : ''}`}\r\n                                            value={milestone}\r\n                                        >\r\n                                          {milestone?.milestone_title}\r\n                                        </Listbox.Option>\r\n                                    ))}\r\n                                </Listbox.Options>\r\n\r\n                                {error?.milestone && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {error?.milestone}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Listbox>\r\n                    </div>\r\n\r\n                    {/* Project Deliverable */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Project Deliverable\r\n                                    </label>\r\n                                    <div className=\"sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                        <span className=\"singleline-ellipsis\">{isFetchingMilestone ? 'Loading...' : _.find(projects?.milestones, d => d.id === milestone.id)?.deliverable_type}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                     {/*task.isSubtask && (\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group my-3\">\r\n                                <label\r\n                                    className={`f-14 text-dark-gray mb-1`}\r\n                                    data-label=\"true\"\r\n                                >\r\n                                    Parent Task\r\n                                </label>\r\n                                <input\r\n                                    className={`form-control height-35 f-14`}\r\n                                    readOnly\r\n                                    defaultValue={parentTask}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )} */}\r\n\r\n\r\n\r\n                    <div className=\"col-6\">\r\n\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Start Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={dayjs\r\n                                        .dayjs(task?.start_date)\r\n                                        .toDate()}\r\n                                    maxDate={\r\n                                        dueDate ||\r\n                                        dayjs.dayjs(task?.due_date).toDate()\r\n                                    }\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.start_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.start_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Due Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={\r\n                                        startDate ||\r\n                                        dayjs.dayjs(task?.start_date).toDate()\r\n                                    }\r\n                                    maxDate={dayjs\r\n                                        .dayjs(task?.due_date)\r\n                                        .toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.due_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.due_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <TaskCategorySelectionBox\r\n                            selected={taskCategory}\r\n                            onSelect={setTaskCategory}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <AssignedToSelection\r\n                            selected={assignedTo}\r\n                            onSelect={setAssignedTo}\r\n                        />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-6\">\r\n                        <PrioritySelection\r\n                            selected={priority}\r\n                            setSelected={setPriority}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className=\"f-14 text-dark-gray\">\r\n                                Set Estimate Time{\" \"}\r\n                                <sup className=\"f-14\"> * </sup>\r\n                            </label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeHour)\r\n                                    }\r\n                                />{\" \"}\r\n                                hrs\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeMin)\r\n                                    }\r\n                                />{\" \"}\r\n                                min\r\n                            </div>\r\n\r\n                            <div style={{ color: \"red\" }}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{ color: \"red\" }}>\r\n                                {/* {console.log({a: projects?.minutes_left})} */}\r\n                                Estimation time can't exceed{\" \"}\r\n                                {convertTime(Number(projects?.minutes_left) > 0 ? Number(projects?.minutes_left) : 0)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div\r\n                                className=\"sp1_st_write_comment_editor\"\r\n                                style={{ minHeight: \"100px\" }}\r\n                            >\r\n                                <CKEditorComponent\r\n                                    data={description}\r\n                                    onChange={handleEditorChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3 mb-5\">\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                className=\"mr-2\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n\r\n                            <Button\r\n                              onClick={handleSubmit}\r\n                              isLoading={isLoading}\r\n                            >\r\n                                <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Button from \"../../components/Button\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from \"../../components/Modal\";\r\n\r\nconst SubmitionView = ({ isOpen, close, toggle, data, isLoading }) => {\r\n    const links = _.compact(_.split(data?.links, ','));\r\n    const attaches = _.compact(_.split(data?.attaches, ',')); \r\n    const { width: deviceWidth } = useWindowSize();\r\n\r\n    const content = () => {\r\n        return(\r\n            <div className=\"sp1-subtask-form --modal-panel --modal-submitted\">\r\n                <div className=\"sp1-subtask-form --modal-panel-header\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <h6>Submitted Task </h6>\r\n                        {isLoading && (\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className=\"_close-modal\"\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body --modal-submitted-body\">\r\n                    <div className=\"mt-3 d-flex flex-column\" style={{ gap: \"10px\" }} >\r\n                        <div>\r\n                            <span className=\"fs-14 font-weight-bold d-block mb-3\" style={{ color: \"#767581\" }} >\r\n                                Submitted By\r\n                            </span>\r\n\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div>\r\n                                    {\r\n                                        data?.image ? (\r\n                                            <img\r\n                                            src={`/user-uploads/avatar/${data?.image}`}\r\n                                            alt={data?.name}\r\n                                            width={32}\r\n                                            height={32}\r\n                                            className=\"rounded-circle\"\r\n                                        />):(\r\n                                            <div className=\"sp1-item-center rounded-circle border\" style={{ width: '32px', height: '32px' }} >\r\n                                                <span className=\"font-weight-bold\" style={{fontSize:'1.2rem'}}>{data?.name?.slice(0,1)}</span>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"d-flex flex-column px-2\">\r\n                                    <a className=\"text-underline text-primary\" href={`/account/employees/${data?.user_id}`} style={{ color: \"#767581\" }} > {data?.name} </a>\r\n                                    <span className=\"d-block\" style={{ color: \"#767581\" }}>\r\n                                        {dayjs(data?.submission_date).format( \"MMM DD, YYYY\" )} at {dayjs(data?.submission_date).format(\"hh:mm a\" )}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex flex-column mt-3\" style={{ gap: \"10px\" }} >\r\n                            <span className=\"d-block fs-14 font-weight-bold\" style={{ color: \"#767581\" }} > Links </span>\r\n                            <ul style={{  listStyle: \"unset\", marginLeft: \"30px\"}} >\r\n                                {links?.map((link, i) => (\r\n                                    <li style={{ listStyle: \"unset\" }}  key={link + i} >\r\n                                        <a className=\"hover-underline text-primary\" target=\"_blank\" href={link} > {link} </a>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"mt-2 mt-3\">\r\n                            <span className=\"d-block fs-12 font-weight-bold mb-2\" style={{ color: \"#767581\" }}>\r\n                                Description\r\n                            </span>\r\n                            {data?.text ? (\r\n                                <div className=\"sp1_ck_content\" dangerouslySetInnerHTML={{ __html: data?.text }} />\r\n                            ) : (\r\n                                <span style={{ color: \"rgb(180, 188, 196)\" }}>\r\n                                    No description is available\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-3\">\r\n                            <span className=\"d-block fs-12 font-weight-bold mb-2\" style={{ color: \"#767581\" }}>\r\n                                Attached Files\r\n                            </span>\r\n\r\n                            {_.size(attaches) > 0 ? (\r\n                                <FileUploader>\r\n                                    {_.map(attaches, (file, index) => (\r\n                                        <FileUploader.Preview\r\n                                            key={`${file}_${index}`}\r\n                                            fileName={file}\r\n                                            downloadAble={true}\r\n                                            deleteAble={false}\r\n                                            downloadUrl={`${file}`}\r\n                                            previewUrl={`${file}`}\r\n                                            fileType={_.includes([\"png\",\"jpg\", \"jpeg\", \"gif\", \"svg\"], _.last(_.split(file, '.'))) ? 'images' : 'others'}\r\n                                            ext=\"\"\r\n                                        />\r\n                                    ))}\r\n                                </FileUploader>\r\n                                ) : (\r\n                                    <span\r\n                                        className=\"\"\r\n                                        style={{ color: \"rgb(180, 188, 196)\" }}\r\n                                    >\r\n                                        No Attachment is available\r\n                                    </span>\r\n                                )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(deviceWidth > 1200){\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        )\r\n    }else{\r\n        return (\r\n            <React.Fragment>\r\n                <Modal isOpen={isOpen}> { content() } </Modal> \r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SubmitionView;\r\n","import React from 'react'\r\nimport SubmitionView from './SubmitionView';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nconst WorkItem = ({data, toggle, modalRef, close, isLoading}) => { \r\n  const [searchParams] = useSearchParams();\r\n  const previewId = searchParams.get('submitted-work') || 0;\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\">\r\n        <div> \r\n            <a className='hover-underline text-primary' href={`/account/tasks/${data?.task_id}`}> Task#{data?.task_id} </a>\r\n            ({data?.submission_no}) submitted by <a className='hover-underline text-primary' href={`/account/employees/${data?.user_id}`}>{data?.name}</a> </div>\r\n\r\n        <div>{dayjs(data?.submission_date).format('MMM DD, YYYY')}</div>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?submitted-work=${data?.task_id}${data?.submission_no}`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n        </div> \r\n\r\n       {\r\n        Number(previewId) === Number(`${data?.task_id}${data?.submission_no}`) && \r\n        <SubmitionView\r\n            isOpen={Number(previewId) === Number(`${data?.task_id}${data?.submission_no}`)}\r\n            toggle={modalRef}\r\n            data={data}\r\n            close={close}\r\n            isLoading={isLoading}\r\n        />\r\n       } \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default WorkItem","import React from 'react'\r\nimport { User } from '../../../utils/user-details'\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nconst InnerWorkItem = ({data}) => { \r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item px-0 py-2\" styte={{gap: \"16px\"}}>\r\n        <div> \r\n            <a \r\n              className='hover-underline text-primary' \r\n              href={`/account/tasks/${data?.task_id}`}\r\n            > \r\n              Task#{data?.task_id} \r\n            </a>\r\n            ({data?.submission_no}) submitted by <a className='hover-underline text-primary' href={`/account/employees/${data?.user_id}`}>{data?.name}</a> </div>\r\n\r\n        <div>{dayjs(data?.submission_date).format('MMM DD, YYYY')}</div>  \r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?submitted-work=${data?.task_id}${data?.submission_no}`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n        </div> \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default InnerWorkItem","import React from 'react'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport Button from '../../components/Button'\r\nimport InnerWorkItem from './InnerWorkItem'\r\nimport Modal from '../../components/Modal'\r\nimport { useWindowSize } from 'react-use'\r\n\r\nconst SubmittedModalView = ({\r\n    isOpen, \r\n    toggle,\r\n    data,\r\n    close,\r\n    isLoading\r\n}) => {\r\n  const { width: deviceWidth } = useWindowSize();\r\n \r\n  const content = () => {\r\n        return(\r\n            <div className='sp1-subtask-form --modal-panel --modal-submitted'>\r\n                <div className='sp1-subtask-form --modal-panel-header'> \r\n                    <div className='d-flex align-items-center'>\r\n                        <h6>Submitted Task </h6>\r\n                        {isLoading && <div \r\n                            className=\"spinner-border text-dark ml-2\" \r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent' \r\n                            }}\r\n                        />}\r\n                    </div> \r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button> \r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body px-0\">\r\n                    {data?.map(d => (\r\n                        <InnerWorkItem key={`${d.task_id}_${d.submission_no}`} data={d} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n  }\r\n\r\n\r\n  return (\r\n        deviceWidth > 1200 ? \r\n        <React.Fragment>\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle} > {content()} </CustomModal>\r\n        </React.Fragment> : \r\n        <React.Fragment>\r\n            <Modal isOpen={isOpen}> { content() } </Modal> \r\n        </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SubmittedModalView","import * as React from 'react' \r\nimport WorkItem from './WorkItem';\r\nimport useSWR from 'swr';\r\nimport SubmitionView from './SubmitionView';\r\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport SubmittedModalView from './SubmittedModalView';\r\nimport _ from 'lodash';\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst SubmittedWork = ({task}) => { \r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const navigate = useNavigate(); \r\n  const location = useLocation();\r\n  const { data, error, isLoading } = useSWR(`/account/tasks/get-task-submissions/${task?.id}`, fetcher, {refreshInterval: 1000 * 3600});\r\n  const [searchParams] = useSearchParams();\r\n  const preview = searchParams.get('submitted-work');\r\n  const modal = searchParams.get('view-modal')\r\n    // control modal\r\n  const toggle = (e) => {\r\n    e.preventDefault();\r\n    if(preview || modal){\r\n      if(location.state && location.state.from){\r\n        navigate(location.state.from);\r\n      }else{navigate(`/account/tasks/${task?.id}`);} \r\n    }else{\r\n      navigate(`/account/tasks/${task?.id}?view-modal=submitted-work`) \r\n    }\r\n  };\r\n  const close = () => { \r\n    if(location.state && location.state.from){\r\n      navigate(location.state.from);\r\n    }else{navigate(`/account/tasks/${task?.id}`);} \r\n  }\r\n \r\n  return (\r\n    <div className='sp1_task_right_card mb-3'  \r\n    ref={setModalRefButton} \r\n    style={{zIndex:  (preview || modal === 'submitted-work') ? 99 : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Submitted Works</span> \r\n          {isLoading && \r\n            <div \r\n                className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                role=\"status\"\r\n                style={{\r\n                    width: '16px',\r\n                    height: '16px',\r\n                    border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                    borderRightColor: 'transparent' \r\n                }}\r\n            />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n       {\r\n        _.size(data) > 0 &&\r\n        <button \r\n            aria-label='openCommentModalButton'\r\n            className='sp1_task_right_dl_toggle'\r\n            onClick={toggle}\r\n            style={{zIndex:  (preview || modal === 'submitted-work') ? '110' : ''}}\r\n          >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ (preview || modal === 'submitted-work') ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>\r\n       } \r\n\r\n        <SubmittedModalView\r\n            isOpen={modal === 'submitted-work'}\r\n            toggle={modalRefButton}\r\n            data={_.orderBy(data, ['task_id', 'submission_no'], ['desc', 'desc'])}\r\n            close={close}\r\n            isLoading={isLoading}\r\n        />\r\n\r\n        {/* side drop toggle button end */} \r\n        <div className=\"sp1_task_right_card--body\"> \r\n        {\r\n          _.size(data) > 0 ? \r\n            _.map(_.orderBy(data, ['task_id', 'submission_no'], ['desc', 'desc']), item => (\r\n              <WorkItem \r\n                key={item?.submission_date + item?.submission_no} \r\n                data={item} \r\n                toggle={toggle} \r\n                close={close}\r\n                isLoading={isLoading}\r\n                modalRef={modalRefButton} \r\n              />\r\n            )):\r\n            <div\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{\r\n                    color: \"#B4BCC4\",\r\n                    fontSize: \"15px\",\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                No Submitted Work is Available\r\n            </div>\r\n        }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubmittedWork ","/* eslint-disable react/prop-types */\r\nimport { useState } from \"react\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport { convertTime } from \"../../../utils/converTime\";\r\nimport { Placeholder } from \"../../../global/Placeholder\";\r\nimport Checkbox from \"../../../UI/form/Cheeckbox\";\r\nimport { useSubmitDailySubmissionMutation } from \"../../../services/api/dailySubmissionApiSlice\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst TodaysUpdateModalTableRow = ({ data, date, index, open, setOpen, loading, refetch }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [attachmentLink, setAttachmentLink] = useState('');\r\n    const [checked, setChecked] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const [taskDescription, setTaskDescription] = useState('');\r\n    const [updatedValue,] = useState(null);\r\n    const [completedSection, setCompletedSection] = useState('');\r\n    const [submitDailySubmission, { isLoading: isSubmitting }] = useSubmitDailySubmissionMutation();\r\n    \r\n\r\n    // error state\r\n    const [attachmentLinkError, setAttachmentLinkError] = useState('');\r\n    const [taskDescriptionError, setTaskDescriptionError] = useState('');\r\n    const [completedSectionError, setCompletedSectionError] = useState('')\r\n\r\n    // check validation of attachmentLink and taskDescription\r\n    const isValid = () => {\r\n        let valid = true;\r\n        if (attachmentLink === '') {\r\n            setAttachmentLinkError('You must provide the link of your work');\r\n            valid = false;\r\n        }\r\n        if (taskDescription === '') {\r\n            setTaskDescriptionError(\"Please describe what you've done !\");\r\n            valid = false;\r\n        }\r\n        if (completedSection === '') {\r\n            setCompletedSectionError(\"You must provide at least one section name that you have completed\");\r\n            valid = false;\r\n        }\r\n        return valid;\r\n    }\r\n\r\n\r\n    // daily update submission function\r\n    const handleSubmit = () => {\r\n        if (!isValid()) {\r\n            return;\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('task_id', data.id);\r\n        formData.append('user_id', window.Laravel?.user?.id)\r\n        formData.append('project_id', data.projectId);\r\n        formData.append('task_heading', data.task_title);\r\n        formData.append('client_id', data.clientId);\r\n        formData.append('client_name', data.client_name);\r\n        formData.append('hours_spent', data.total_time_spent);\r\n        formData.append('link_name', attachmentLink);\r\n        formData.append('section_name', completedSection);\r\n        formData.append('comment', taskDescription);\r\n        formData.append('mark_as_complete', checked);\r\n        formData.append('report_date', date);\r\n        const _token = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\");\r\n        formData.append(\"_token\", _token);\r\n        files.forEach((file) => formData.append('file[]', file))\r\n\r\n\r\n        submitDailySubmission(formData)\r\n            .unwrap()\r\n            .then(res => {\r\n                // console.log(res);\r\n                if (res.mark_as_complete===\"true\" || res.mark_as_complete===true) {\r\n                    navigate(`${location.pathname}?modal=complete-task`);\r\n                }\r\n                const Toast = Swal.mixin({\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n                })\r\n\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'Submitted successfully'\r\n                })\r\n                setOpen(null);\r\n                refetch();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <tr\r\n                className={`sp1_tlr_tr ${open === index && 'openRow_bg'}`}\r\n                // style={{\r\n                //     backgroundColor: `${data.daily_submission_status ? 'lightgreen' : 'white'}`\r\n                // }}\r\n            >\r\n\r\n                <td className={`sp1_tlr_td`} style={{ minWidth: '50px' }}>{loading ? <Placeholder /> : index + 1}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : data?.task_title}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : \r\n                    data?.page_url ?\r\n                        <a href={data.page_url} title={data.page_url} target=\"_blank\">View Link</a>\r\n                        :\r\n                        'No Link attached'\r\n                }</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : convertTime(data.total_time_spent)}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : (data?.client_name ?? 'N/A')}</td>\r\n                <td className={`sp1_tlr_td`}>\r\n                    {\r\n                        loading ?\r\n                            <Placeholder />\r\n                            :\r\n                            <button\r\n                                onClick={() => {\r\n                                    if (data.daily_submission_status) {\r\n                                        return;\r\n                                    }\r\n                                    setOpen((prev) => {\r\n                                        if (prev === index) {\r\n                                            return null;\r\n                                        } else {\r\n                                            return index;\r\n                                        }\r\n                                    })\r\n                                }\r\n                                }\r\n                                className={`btn btn-sm ${data.daily_submission_status ? 'btn-success' : 'btn-outline-success'}`}\r\n                            >\r\n                                {\r\n                                    data.daily_submission_status ? 'Submitted' : 'Click To Submit'\r\n                                }\r\n                            </button>\r\n                    }\r\n                </td>\r\n            </tr>\r\n            {open === index && (\r\n                <tr className={``} style={{ border: \"solid gray 1px\", borderTop: \"none\" }}>\r\n                    <td colSpan={6}>\r\n                        <form className=\"from_body openRow_bg\">\r\n\r\n                            {/* completed section names */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionName\">\r\n                                    Completed Section Name <sup>*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Sections Name\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <input\r\n                                    value={completedSection}\r\n                                    type=\"text\"\r\n                                    id=\"sectionName\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        margin: '2px 0',\r\n                                        borderRadius: '3px',\r\n                                        border: 'none',\r\n                                        fontSize: '1.2rem',\r\n                                        padding: '10px',\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    onChange={(e) => setCompletedSection(e.target.value)}\r\n                                />\r\n                                {completedSectionError && <small className=\"form-text text-danger\">{completedSectionError}</small>}\r\n                            </div>\r\n\r\n                            {/* attachment url link */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionName\">\r\n                                    Screenshots/Screen records of the sections <sup>*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Sections Name\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <input\r\n                                    value={attachmentLink}\r\n                                    type=\"text\"\r\n                                    id=\"sectionName\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        margin: '2px 0',\r\n                                        borderRadius: '3px',\r\n                                        border: 'none',\r\n                                        fontSize: '1.2rem',\r\n                                        padding: '10px',\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    onChange={(e) => setAttachmentLink(e.target.value)}\r\n                                />\r\n                                {attachmentLinkError && <small className=\"form-text text-danger\">{attachmentLinkError}</small>}\r\n                            </div>\r\n\r\n                            {/* upload files */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput1\">\r\n                                    Attachments\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Attachment\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <FileUploader files={files} setFiles={setFiles}>\r\n                                    <FileUploader.Input />\r\n                                    <FileUploader.SelectedFiles>\r\n                                        {({ previews, onDelete }) =>\r\n                                            Array.from(previews)?.map(\r\n                                                (p, i) => (\r\n                                                    <FileUploader.Preview\r\n                                                        key={i}\r\n                                                        id={i}\r\n                                                        fileName={p.name}\r\n                                                        previewUrl={p.preview}\r\n                                                        fileType={p.type}\r\n                                                        onRemove={onDelete}\r\n                                                    />\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </FileUploader.SelectedFiles>\r\n                                </FileUploader>\r\n                            </div>\r\n                            {/* End Upload files */}\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput2\" style={{ maxWidth: '95%' }}>\r\n                                    Describe which sections you have worked on today <sup className=\"text-danger\">*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Describe What You've Done\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n\r\n                                <div\r\n                                    className=\"sp1_st_write_comment_editor\"\r\n                                    style={{ minHeight: \"100px\" }}\r\n                                >\r\n                                    <CKEditorComponent\r\n                                        value={taskDescription}\r\n                                        onChange={(e, editor) => {\r\n                                            const data = editor.getData();\r\n                                            setTaskDescription(data);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {taskDescriptionError && <small className=\"form-text text-danger\">{taskDescriptionError}</small>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <Checkbox checked={checked} onChange={(e) => setChecked(e.target.checked)} label={'Mark as Complete'} className=\"user-select-none\" />\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 d-flex align-items-center\" style={{ gap: '5px' }}>\r\n                                <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" />\r\n                                {/* <SubmitButton onClick={()=>{}} isLoading={false} title=\"Submit & Mark as Complete\"></SubmitButton> */}\r\n                            </div>\r\n                        </form>\r\n                    </td>\r\n                </tr>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodaysUpdateModalTableRow;\r\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./DailySubmission.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./DataTable.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { useState } from \"react\";\r\nimport TodaysUpdateModalTableRow from \"./TodaysUpdateModalTableRow\";\r\nimport style from \"./styles/DailySubmission.module.css\";\r\nimport \"./styles/DataTable.css\";\r\nimport { useGetDailySubmissionQuery } from \"../../../services/api/dailySubmissionApiSlice\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst TodaysUpdateModalTable = () => {\r\n    const [open, setOpen] = useState(null);\r\n    const [searchParams] = useSearchParams();\r\n    const date_type = searchParams.get(\"data_type\");\r\n\r\n    const loggedUser = new User(window.Laravel?.user);\r\n\r\n    const today = dayjs().format('YYYY-MM-DD');\r\n\r\n    const { data, isLoading, refetch } = useGetDailySubmissionQuery(\r\n        `${loggedUser?.id}?date_type=${today}`\r\n    ); \r\n     \r\n\r\n    return (\r\n        <div className={`sp1_tlr_tbl_wrapper`} style={{ overflow: \"auto\" }}>\r\n            <table className={`sp1_tlr_table`} style={{ minWidth: \"0\" }}>\r\n                <thead>\r\n                    <tr className={``}>\r\n                        <th className={`sp1_tlr_th`}>SL No.</th>\r\n                        <th className={`sp1_tlr_th`}>Task Name</th>\r\n                        <th className={`sp1_tlr_th`}>Page Link</th>\r\n                        <th className={`sp1_tlr_th`}>\r\n                            Total Time Spend on This Task Today\r\n                        </th>\r\n                        <th className={`sp1_tlr_th`}>Client Name</th>\r\n                        <th className={`sp1_tlr_th`} style={{ width: \"10rem\" }}>\r\n                            Action\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody className={`sp1_tlr_tbody`}>\r\n                    {/* {\r\n                        (isLoading ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] : data?.data).filter((d) => !d.daily_submission_status).map((d, i) => <TodaysUpdateModalTableRow data={d} key={i} index={i} open={open} setOpen={setOpen} loading={isLoading} />)\r\n                    } */}\r\n                    {(isLoading\r\n                        ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n                        : data?.data\r\n                    ).map((d, i) => (\r\n                        <TodaysUpdateModalTableRow\r\n                            data={d}\r\n                            date={data?.date}\r\n                            key={i}\r\n                            index={i}\r\n                            open={open}\r\n                            setOpen={setOpen}\r\n                            loading={isLoading}\r\n                            refetch={refetch}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodaysUpdateModalTable;\r\n","import { useState } from \"react\";\r\n// import { Button } from \"react-bootstrap\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport TodaysUpdateModalTable from \"../daily-submission/TodaysUpdateModalTable\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\"; \r\nimport dayjs from \"dayjs\";\r\n\r\nconst DailySubmissionControl = () => {\r\n    const [todaysUpdateModalisOpen, setTodaysUpdateModalisOpen] =\r\n        useState(false);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const url = new URLSearchParams(location.search);\r\n \r\n\r\n    const isOpen = url.get(\"modal\") === \"daily-submission\"; \r\n\r\n\r\n     \r\n\r\n    // console.log(location);\r\n\r\n    const close = () => {\r\n        if(url.get('trigger') === 'stop-button'){\r\n            Swal.fire({\r\n                icon: \"warning\",\r\n                title: \"If you don't submit the daily submission, you won't be able to start any task on next day.\",\r\n                showConfirmButton: true,\r\n            });\r\n        }\r\n\r\n        navigate(`${location.pathname}`);\r\n        setTodaysUpdateModalisOpen(false);\r\n    };\r\n    const open = () => navigate(`${location.pathname}?modal=daily-submission&data_type=today`);\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                // onClick={toggle}\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {/* {isFetching ? <Loader title=\"Processing...\" /> : <i className=\"fa-solid fa-check\" />} */}\r\n                <span className=\"d-inline ml-1\"> Submit Today's Update </span>\r\n            </Button>\r\n\r\n            <Modal isOpen={isOpen} className=\"sp1_mark-as--modal \">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_mark-as--modal-panel\"\r\n                        style={{ overflow: \"visible\", maxWidth: \"70rem\" }}\r\n                    >\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0\">Submit Today's Update</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"visible\" }}\r\n                        >\r\n                            <div className=\"alert alert-warning text-center\">\r\n                                If you don't submit the daily submission, you\r\n                                won't be able to start any task on next day.\r\n                            </div>\r\n\r\n                            {isOpen && <TodaysUpdateModalTable />}\r\n                            <div className=\"mt-3 d-flex align-items-center\">\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                    onClick={close}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                                {/* <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" /> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DailySubmissionControl;\r\n","import _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport CKEditorComponent from \"../../../ckeditor/index\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport {\r\n    useLazyCheckSubTaskStateQuery,\r\n    useMarkAsCompleteMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport Button from \"../../components/Button\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Modal from \"../../components/Modal\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\n\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport Swal from \"sweetalert2\";\r\n// import Swal from \"sweetalert2\";\r\n\r\nconst MarkAsComplete = ({ task, auth }) => {\r\n    // form data\r\n    const dispatch = useDispatch();\r\n    const [links, setLinks] = useState([\"\"]);\r\n    const [linkErr, setLinkErr] = useState(\"\");\r\n    const [isModalUrl, setIsModalUrl] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentErr, setCommentErr] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [markAsComplete, { isLoading: isSubmitting }] =\r\n        useMarkAsCompleteMutation();\r\n    const [checkSubTaskState, { isFetching }] = useLazyCheckSubTaskStateQuery();\r\n\r\n    const [markAsCompleteModaIsOpen, setMarkAsCompleteModalIsOpen] =\r\n        useState(false);\r\n\r\n    // open modal\r\n    const open = () => {\r\n        navigate(`${location.pathname}?modal=complete-task`);\r\n    };\r\n\r\n    // close modal\r\n    const close = () => {\r\n        navigate(`${location.pathname}`);\r\n    };\r\n\r\n    // const [err, setErr] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const url = new URLSearchParams(location.search);\r\n        if (url.get(\"modal\") === \"complete-task\") {\r\n            setIsModalUrl(true);\r\n        } else {\r\n            setIsModalUrl(false);\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        // const url = new URLSearchParams(location.search);\r\n\r\n        // if (url.get('modal')==='complete-task') {\r\n        if (isModalUrl) {\r\n            if (Number(auth.getRoleId()) === 6) {\r\n                checkSubTaskState(task?.id)\r\n                    .unwrap()\r\n                    .then((res) => {\r\n                        if (res.status === \"true\" || res.status === true) {\r\n                            // const htmlContent = (\r\n                            //     <div className=\"__tostar_modal\">\r\n                            //         <strong>\r\n                            //             You can't complete this task because you\r\n                            //             have some pending subtask?\r\n                            //         </strong>\r\n                            //         <ul className=\"py-1\">\r\n                            //             {res.subtasks.map((el, idx) => (\r\n                            //                 <li\r\n                            //                     key={el.id}\r\n                            //                     style={{\r\n                            //                         listStyle: \"unset\",\r\n                            //                         fontSize: \"13px\",\r\n                            //                     }}\r\n                            //                 >\r\n                            //                     <a\r\n                            //                         href={`/account/tasks/${el.id}`}\r\n                            //                     >\r\n                            //                         {idx + 1}. {el.heading}\r\n                            //                     </a>{\" \"}\r\n                            //                     (\r\n                            //                     <a\r\n                            //                         href={`/account/clients/${el.clientId}`}\r\n                            //                     >\r\n                            //                         {el.client_name}\r\n                            //                     </a>\r\n                            //                     )\r\n                            //                 </li>\r\n                            //             ))}\r\n                            //         </ul>\r\n                            //     </div>\r\n                            // );\r\n                            // toast.warn(htmlContent, {\r\n                            //     position: \"top-center\",\r\n                            //     icon: false,\r\n                            // });\r\n                            Swal.fire({\r\n                                icon:'warning',\r\n                                title:`You can't complete this task because you\r\n                                have some pending subtask?`\r\n                            })\r\n                            close();\r\n                        } else {\r\n                            setMarkAsCompleteModalIsOpen(true);\r\n                        }\r\n                    });\r\n            } else {\r\n                setMarkAsCompleteModalIsOpen(true);\r\n            }\r\n        } else {\r\n            setMarkAsCompleteModalIsOpen(false);\r\n        }\r\n        // }\r\n        // else{\r\n        //     setMarkAsCompleteModalIsOpen(false);\r\n        // }\r\n    }, [isModalUrl]);\r\n\r\n    // handle editor change\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // handle remove link\r\n    const handleRemoveLink = (e, index) => {\r\n        const _links = [...links];\r\n        _links.splice(index, 1);\r\n        setLinks(_links);\r\n    };\r\n\r\n    // handle link change\r\n    const handleOnLinkInputChange = (e, index) => {\r\n        const _links = [...links];\r\n        (_links[index] = e.target.value), setLinks(_links);\r\n    };\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n        let valid = true;\r\n        if (!_.size(links) || links[0] === \"\") {\r\n            setLinkErr(\"You must provide at least one link to your work\");\r\n            toast.warn(\"You must provide at least one link to your work\");\r\n            valid = false;\r\n        }\r\n\r\n        if (_.size(links)) {\r\n            _.forEach(links, (link) => {\r\n                if (!checkIsURL(link)) {\r\n                    toast.warn(\"Please provide a valid url\");\r\n                    setLinkErr(\"Please provide a valid url\");\r\n                    valid = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (comment === \"\") {\r\n            setCommentErr(\"Please describe what you've done !\");\r\n            toast.warn(\"Please describe what you've done!\");\r\n            valid = false;\r\n        }\r\n\r\n        return valid;\r\n    };\r\n\r\n    // handle submit\r\n    const handleSubmit = (e) => {\r\n        const formData = new FormData();\r\n        formData.append(\"text\", comment);\r\n        formData.append(\"user_id\", auth?.getId());\r\n        formData.append(\"task_id\", task?.id);\r\n        links.map((link) => formData.append(\"link[]\", link));\r\n        files?.map((file) => formData.append(\"file[]\", file));\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n\r\n        if (isValid()) {\r\n            markAsComplete(formData)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    // const Toast = Swal.mixin({\r\n                    //     toast: true,\r\n                    //     position: 'top-end',\r\n                    //     showConfirmButton: false,\r\n                    //     timer: 3000,\r\n                    //     timerProgressBar: true,\r\n                    // })\r\n\r\n                    // Toast.fire({\r\n                    //     icon: 'success',\r\n                    //     title: 'Task submitted successfully'\r\n                    // })\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: \"top-end\",\r\n                        showConfirmButton: false,\r\n                        timer: 3000,\r\n                        timerProgressBar: true,\r\n                    });\r\n\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: \"Task submitted successfully\",\r\n                    });\r\n                    close();\r\n                })\r\n                .catch((err)=>{\r\n                    close();\r\n                    console.log(err);\r\n                })\r\n                .finally(()=>{\r\n                  close();\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {isFetching ? (\r\n                    <Loader title=\"Processing...\" />\r\n                ) : (\r\n                    <i className=\"fa-solid fa-check\" />\r\n                )}\r\n                <span className=\"d-inline ml-1\">\r\n                    {\" \"}\r\n                    {isFetching ? \"\" : \"Mark As Complete\"}\r\n                </span>\r\n            </Button>\r\n\r\n            <Modal\r\n                isOpen={markAsCompleteModaIsOpen}\r\n                className=\"sp1_mark-as--modal\"\r\n            >\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div className=\"sp1_mark-as--modal-panel\">\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0\">Submit Task</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"unset\" }}\r\n                        >\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlInput1\">\r\n                                        Submit Links What You've Done\r\n                                        <sup>*</sup>\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Submit Links What You've Done\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n                                    {links?.map((link, i) => (\r\n                                        <div\r\n                                            key={i}\r\n                                            className=\"mark-as-compeleted-link mb-2\"\r\n                                        >\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control py-2\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                placeholder=\"--\"\r\n                                                value={link}\r\n                                                onChange={(e) =>\r\n                                                    handleOnLinkInputChange(\r\n                                                        e,\r\n                                                        i\r\n                                                    )\r\n                                                }\r\n                                            />\r\n\r\n                                            {links?.length > 1 && (\r\n                                                <button\r\n                                                    onClick={(e) =>\r\n                                                        handleRemoveLink(e, i)\r\n                                                    }\r\n                                                >\r\n                                                    <i className=\"fa-regular fa-trash-can\"></i>\r\n                                                </button>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n\r\n                                    {linkErr && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            class=\"form-text text-danger\"\r\n                                        >\r\n                                            {linkErr}\r\n                                        </small>\r\n                                    )}\r\n\r\n                                    <button\r\n                                        className=\"mt-2 d-flex align-items-center bg-transparent\"\r\n                                        style={{ gap: \"10px\" }}\r\n                                        onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            setLinks((prev) => [...prev, \"\"]);\r\n                                        }}\r\n                                    >\r\n                                        <i className=\"fa-solid fa-circle-plus\" />\r\n                                        Add Another Link\r\n                                    </button>\r\n                                </div>\r\n\r\n                                {/* upload files */}\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlInput1\">\r\n                                        Attachments\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Attachment\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n                                    <FileUploader\r\n                                        files={files}\r\n                                        setFiles={setFiles}\r\n                                    >\r\n                                        <FileUploader.Input />\r\n                                        <FileUploader.SelectedFiles>\r\n                                            {({ previews, onDelete }) =>\r\n                                                Array.from(previews)?.map(\r\n                                                    (p, i) => (\r\n                                                        <FileUploader.Preview\r\n                                                            key={i}\r\n                                                            id={i}\r\n                                                            fileName={p.name}\r\n                                                            previewUrl={\r\n                                                                p.preview\r\n                                                            }\r\n                                                            fileType={p.type}\r\n                                                            onRemove={onDelete}\r\n                                                        />\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        </FileUploader.SelectedFiles>\r\n                                    </FileUploader>\r\n                                </div>\r\n                                {/* End Upload files */}\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label\r\n                                        htmlFor=\"exampleFormControlInput1\"\r\n                                        style={{ maxWidth: \"95%\" }}\r\n                                    >\r\n                                        Mention clearly if anything asked in the\r\n                                        instruction couldn't be done or if there\r\n                                        is anything else your reporting boss\r\n                                        should know while approving or rejecting\r\n                                        this task<sup>*</sup>\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Describe What You've Done\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n\r\n                                    <div className=\"ck-editor-holder stop-timer-options\">\r\n                                        <CKEditorComponent\r\n                                            onChange={handleEditorChange}\r\n                                        />\r\n                                    </div>\r\n                                    {commentErr && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            class=\"form-text text-danger\"\r\n                                        >\r\n                                            {commentErr}\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"mt-3 d-flex align-items-center\">\r\n                                    <Button\r\n                                        variant=\"tertiary\"\r\n                                        className=\"ml-auto mr-2\"\r\n                                        onClick={close}\r\n                                    >\r\n                                        Close\r\n                                    </Button>\r\n                                    <SubmitButton\r\n                                        onClick={handleSubmit}\r\n                                        isLoading={isSubmitting}\r\n                                        title=\"Submit\"\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MarkAsComplete;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport { useRevision } from \"../../../../hooks/useRevision\";\r\nimport { useCreateRevisionMutation } from \"../../../../services/api/SingleTaskPageApi\";\r\nimport Button from \"../../../components/Button\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst RevisionCreationModal = ({ close, task, auth }) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [isDeniable, setIsDeniable] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const {\r\n        getLeadDeveloperAcknowladgementOptions,\r\n        getProjectManagerAcknowladgementOptions,\r\n    } = useRevision(task);\r\n    const { pathname } = useLocation();\r\n    const navigate = useNavigate();\r\n    // console.log({pathname});\r\n\r\n    const role = auth.getRoleId();\r\n\r\n    const revisionOptions =\r\n        role === 1 || role === 4 || role === 8\r\n            ? getProjectManagerAcknowladgementOptions()\r\n            : getLeadDeveloperAcknowladgementOptions();\r\n\r\n    const [createRevision, { isLoading }] = useCreateRevisionMutation();\r\n\r\n    // radio button change\r\n    const handleChange = (value) => {\r\n        setReason(value);\r\n    };\r\n\r\n    // editor change text\r\n    const handleEditorTextChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // validation\r\n    const validate = () => {\r\n        let errorCount = 0;\r\n\r\n        if (comment === \"\") {\r\n            errorCount++;\r\n            setCommentError(\r\n                \"You have to explain the revision in details, so that lead developer/developer can understand where they need to work.\"\r\n            );\r\n        }\r\n\r\n        if (!reason) {\r\n            errorCount++;\r\n            setReasonError(\"You have to select a reason from above options\");\r\n        }\r\n\r\n        return errorCount === 0;\r\n    };\r\n\r\n    // handle submission\r\n    const handleSubmission = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            task_id: task?.id,\r\n            user_id: auth?.id,\r\n            revision_acknowledgement: reason?.revision ?? \"\",\r\n            acknowledgement_id: reason?.id,\r\n            comment,\r\n            is_deniable: reason?.isDeniable ?? false,\r\n        };\r\n\r\n        if (validate()) {\r\n            createRevision(data)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: \"top-end\",\r\n                        showConfirmButton: false,\r\n                        timer: 3000,\r\n                        timerProgressBar: true,\r\n                    });\r\n\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: \"Task submitted for Revision successfully\",\r\n                    });\r\n                    navigate(`${pathname}`);\r\n                    close();\r\n                })\r\n                .catch((err) => console.log(err));\r\n        } else {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: \"top-end\",\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n            });\r\n\r\n            Toast.fire({\r\n                icon: \"error\",\r\n                title: \"Your forgot to fill up some required fields\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div\r\n                className=\"sp1_single_task--modal-panel\"\r\n                style={{ maxWidth: \"550px\" }}\r\n            >\r\n                <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                    <div className=\"font-weight-bold f-14\">\r\n                        Revision - Task: {task?.id}#\r\n                        {task?.title || task?.heading}\r\n                    </div>\r\n                    <Button onClick={close} className=\"\">\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <form className=\"px-3\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select Reason for Revision\r\n                            <sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {revisionOptions.map((option) => (\r\n                                <div\r\n                                    key={option.id}\r\n                                    className=\"form-check d-flex align-items-start mb-2\"\r\n                                >\r\n                                    <input\r\n                                        className=\"form-check-input mr-2\"\r\n                                        type=\"radio\"\r\n                                        name=\"exampleRadios\"\r\n                                        id={option.id}\r\n                                        required={true}\r\n                                        onChange={() => handleChange(option)}\r\n                                        value={option.revision}\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            marginTop: \"3px\",\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor={option.id}\r\n                                        style={{ marginBottom: \"3px\" }}\r\n                                    >\r\n                                        {option.revision}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {reasonError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {reasonError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Explain or Comment<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"ck-editor-holder\">\r\n                            <CKEditorComponent\r\n                                onChange={handleEditorTextChange}\r\n                            />\r\n                        </div>\r\n                        {commentError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {commentError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                onClick={close}\r\n                                variant=\"tertiary\"\r\n                                className=\"ml-auto mr-2\"\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                            <SubmitButton\r\n                                title=\"Submit\"\r\n                                onClick={handleSubmission}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RevisionCreationModal;\r\n","import React, { useState, lazy, Suspense } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport { SingleTask } from \"../../../../utils/single-task\";\r\nimport RevisionCreationModal from \"./RevisionCreationModal\";\r\n\r\nconst RevisionControl = ({ task, auth }) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    // const singleTask = new SingleTask(task)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={() => setRevisionModal(true)}\r\n                className=\"d-flex align-items-center sp1-st-revision-btn sp1-st-revision-btn\"\r\n            >\r\n                <i className=\"fa-solid fa-plus-minus\" />\r\n                <span className=\"d-inline ml-1\">Need Revision</span>\r\n            </Button>\r\n\r\n            <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <RevisionCreationModal\r\n                        auth={auth}\r\n                        task={task}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                </div>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RevisionControl;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport Button from \"../../../components/Button\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\n// button\r\nexport const AcceptAndContinueButton = ({ isLoading, onClick }) => {\r\n    if (!isLoading) {\r\n        return <Button onClick={onClick}>Accept & Continue</Button>;\r\n    } else {\r\n        <React.Fragment>\r\n            <Button className=\"cursor-processing\">\r\n                <div\r\n                    className=\"spinner-border text-white\"\r\n                    role=\"status\"\r\n                    style={{\r\n                        width: \"18px\",\r\n                        height: \"18px\",\r\n                    }}\r\n                />{\" \"}\r\n                Processing...\r\n            </Button>\r\n        </React.Fragment>;\r\n    }\r\n};\r\n\r\n// component\r\nexport const RevisionAcceptAndContinue = ({\r\n    task,\r\n    revision,\r\n    onSubmit,\r\n    close,\r\n    onNext,\r\n    isSubmitting = false,\r\n}) => {\r\n    const [comment, setComment] = useState(\"\");\r\n    const [err, setErr] = useState(\"\");\r\n\r\n    const handleEditorDataChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n        if(comment !== ''){\r\n            onSubmit({comment});\r\n        }else{\r\n            setErr(\"You have to Explain Why & How Did This Happen!\")\r\n        }\r\n    }\r\n\r\n    const auth = window?.Laravel?.user;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form action=\"\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Please Explain Why & How Did This Happen?{\" \"}\r\n                        <sup className=\"f-16 text-red\">*</sup>\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent onChange={handleEditorDataChange} />\r\n                    </div>\r\n                    {err && <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                        {err}\r\n                    </small>}\r\n\r\n                    <div className=\"mt-3 d-flex align-items-center\">\r\n                        <Button\r\n                            onClick={close}\r\n                            variant=\"tertiary\"\r\n                            className=\"ml-auto mr-2\"\r\n                        >\r\n                            Back\r\n                        </Button>\r\n\r\n                        {!isSubmitting ? (\r\n                            <React.Fragment>\r\n                                {_.includes([4, 6], auth?.role_id) ? (\r\n                                    <Button onClick={handleOnSubmit}>Next</Button>\r\n                                ): \r\n                                    <SubmitButton\r\n                                        title=\"Submit\" \r\n                                        isLoading={isSubmitting}\r\n                                        onClick={handleOnSubmit}\r\n                                    />\r\n                                }\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Button className=\"cursor-processing\">\r\n                                    <div\r\n                                        className=\"spinner-border text-white\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"18px\",\r\n                                            height: \"18px\",\r\n                                        }}\r\n                                    />{\" \"}\r\n                                    Processing...\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport { AcceptAndContinueButton } from \"./RevisionAcceptAndContinue\";\r\nimport { Placeholder } from \"../../../../global/Placeholder\";\r\nimport { User } from \"../../../../utils/user-details\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\nconst RevisionView = ({\r\n    revision,\r\n    isLoading,\r\n    onAccept,\r\n    onDeny,\r\n    onContinue,\r\n    isContinue,\r\n}) => {\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n    // const getComment = () => {\r\n    //     if (\r\n    //         auth?.isHasRolePermission(6) ||\r\n    //         auth?.isHasRolePermission(13) ||\r\n    //         auth?.isHasRolePermission(9) ||\r\n    //         auth?.isHasRolePermission(10)\r\n    //     ) {\r\n    //         return revision?.pm_comment;\r\n    //     } else {\r\n    //         return revision?.lead_comment;\r\n    //     }\r\n    // };\r\n\r\n    //new logic\r\n\r\n    const getComment = () => {\r\n        if (auth?.isHasRolePermission(6) || auth?.isHasRolePermission(13)) {\r\n            return revision?.pm_comment;\r\n        } else if (\r\n            auth?.isHasRolePermission(9) ||\r\n            auth?.isHasRolePermission(10) ||\r\n            auth?.isHasRolePermission(5)\r\n        ) {\r\n            if (\r\n                revision?.revision_status === \"Project Manager Revision\" ||\r\n                revision?.revision_status === \"Client Has Revision\"\r\n            ) {\r\n                return revision?.pm_comment;\r\n            } else {\r\n                return revision?.lead_comment;\r\n            }\r\n        } else {\r\n            return revision?.pm_comment;\r\n        }\r\n    };\r\n\r\n    const comment = getComment();\r\n    if (isLoading) {\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <div>\r\n                        <Placeholder width=\"450px\" className=\"mb-2\" />\r\n                        <Placeholder width=\"100px\" className=\"mb-3\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"st_revision_comment mb-4\">\r\n                    {isLoading && (\r\n                        <div>\r\n                            <Placeholder width=\"100%\" className=\"mb-2\" />\r\n                            <Placeholder width=\"100%\" className=\"mb-2\" />\r\n                            <Placeholder width=\"30%\" className=\"mb-2\" />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    } else if (!comment && !isLoading) {\r\n        return null;\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                {revision?.revision_acknowledgement && (\r\n                    <div>\r\n                        {!isLoading ? (\r\n                            <p>\r\n                                <span className=\"font-weight-bold text-danger f-16\">\r\n                                    Reason:{\" \"}\r\n                                </span>\r\n                                {revision?.revision_acknowledgement ??\r\n                                    revision?.revision_reason}\r\n                            </p>\r\n                        ) : (\r\n                            <div>\r\n                                <Placeholder width=\"450px\" className=\"mb-2\" />\r\n                                <Placeholder width=\"100px\" className=\"mb-3\" />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"st_revision_comment\">\r\n                    {!isLoading && (\r\n                        <div\r\n                            className=\"sp1_ck_content\"\r\n                            dangerouslySetInnerHTML={{ __html: comment }}\r\n                        />\r\n                    )}\r\n\r\n                    {isLoading && (\r\n                        <div>\r\n                            <Placeholder width=\"100%\" className=\"mb-2\" />\r\n                            <Placeholder width=\"100%\" className=\"mb-2\" />\r\n                            <Placeholder width=\"30%\" className=\"mb-2\" />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"mt-4 mb-2 d-flex align-items-center\">\r\n                    {!isLoading &&\r\n                        (revision?.is_deniable ? (\r\n                            <React.Fragment>\r\n                                <Button\r\n                                    onClick={onDeny}\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                >\r\n                                    Deny & Continue\r\n                                </Button>\r\n\r\n                                <AcceptAndContinueButton\r\n                                    onClick={onAccept}\r\n                                    isLoading={false}\r\n                                />\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <div className=\"ml-auto\">\r\n                                    <SubmitButton\r\n                                        onClick={onContinue}\r\n                                        variant=\"primary\"\r\n                                        isLoading={isContinue}\r\n                                        title=\"Continue\"\r\n                                    />\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default RevisionView;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport _ from \"lodash\";\r\n\r\nconst options = [\r\n    {\r\n        id: \"LDRx10\",\r\n        revision: \"I overlooked a few things while checking\",\r\n        isDeniable: true,\r\n    },\r\n    {\r\n        id: \"LDRx11\",\r\n        revision: \"I couldn't understand a few things in the instruction\",\r\n        isDeniable: false,\r\n    },\r\n];\r\n\r\nconst AssigneeRevisionToDev = ({\r\n    task,\r\n    onBack,\r\n    onSubmit,\r\n    revision,\r\n    type = false,\r\n    isSubmitting = false,\r\n}) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comments, setComments] = useState([]);\r\n    const [commentError, setCommentError] = useState(false);\r\n    const [subtasks, setSubtasks] = useState([]);\r\n    const [subtaskError, setSubtaskError] = useState(\"\");\r\n    const [isDeniable, setIsDeniable] = useState(false);\r\n\r\n    // radio button change\r\n    const handleChange = (value) => {\r\n        setReason(value);\r\n    };\r\n\r\n    // editor change text\r\n    const hanldeEditorTextChange = (e, editor, id) => {\r\n        const data = editor.getData();\r\n        const _comments = [...comments];\r\n\r\n        const index = _comments?.findIndex((d) => d.subtask_id === id);\r\n        if (index === -1) {\r\n            _comments.push({\r\n                id: id,\r\n                subtask_id: id,\r\n                comment: data,\r\n                acknowledgement_id: reason?.id ?? \"\",\r\n            });\r\n        } else {\r\n            _comments[index] = {\r\n                id: id,\r\n                subtask_id: id,\r\n                comment: data,\r\n                acknowledgement_id: reason?.id ?? \"\",\r\n            };\r\n        }\r\n\r\n        setComments([..._comments]);\r\n    };\r\n\r\n    // validation\r\n    const validate = () => {\r\n        let errorCount = 0;\r\n        if (reason === null && revision?.is_deniable && type) {\r\n            errorCount++;\r\n            setReasonError(\"You have to select a reason from below options\");\r\n        }\r\n\r\n        if (_.size(task?.subtask) > 0) {\r\n            if (subtasks.length === 0) {\r\n                errorCount++;\r\n                setSubtaskError(\r\n                    \"You need to selecd at least one sub task to continue.\"\r\n                );\r\n            }\r\n\r\n            if (comments.length === 0 || comments.length !== subtasks.length) {\r\n                errorCount++;\r\n                setCommentError(true);\r\n            }\r\n\r\n            comments?.map((comment) => {\r\n                if (comment?.comment === \"\") {\r\n                    errorCount++;\r\n                    setCommentError(true);\r\n                }\r\n            });\r\n        }\r\n\r\n        return errorCount === 0 ? true : false;\r\n    };\r\n\r\n    // handle submiton\r\n    const handleSubmition = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            task_id: task?.id,\r\n            reason: reason?.revision,\r\n            comments,\r\n            is_deniable: reason?.isDeniable ?? false,\r\n        };\r\n        if (validate()) {\r\n            onSubmit(data);\r\n        }\r\n    };\r\n\r\n    const onBackButtonClick = (e) => {\r\n        e.preventDefault();\r\n        onBack();\r\n    };\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form action=\"\">\r\n                {revision?.is_deniable !== 0 && type ? (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Revision Acknowledgement\r\n                            <sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {_.map(options, (revision) => (\r\n                                <div\r\n                                    key={revision.id}\r\n                                    className=\"form-check d-flex align-items-start mb-2\"\r\n                                >\r\n                                    <input\r\n                                        className=\"form-check-input mr-2\"\r\n                                        type=\"radio\"\r\n                                        name=\"exampleRadios\"\r\n                                        id={revision.id}\r\n                                        required={true}\r\n                                        onChange={() => handleChange(revision)}\r\n                                        value={revision.revision}\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            marginTop: \"3px\",\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor={revision.id}\r\n                                        style={{ marginBottom: \"3px\" }}\r\n                                    >\r\n                                        {revision.revision}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {reasonError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {reasonError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n                ) : null}\r\n\r\n                {task?.taskSubTask?.length > 0 && (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select SubTask\r\n                            <sup className=\"font-weight-bold f-16\">*</sup> :\r\n                        </label>\r\n                        <SubtaskSelectionMenu\r\n                            task={task}\r\n                            subTasks={subtasks}\r\n                            setSubtasks={setSubtasks}\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n                {subtasks?.length > 0 && (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Comment:\r\n                        </label>\r\n                        {subtasks.map((s, i) => (\r\n                            <React.Fragment key={s.subtask_id}>\r\n                                <div className=\"form-group\">\r\n                                    <label\r\n                                        htmlFor=\"\"\r\n                                        className=\"font-weight-bold\"\r\n                                    >\r\n                                        {i + 1}. Task: {s?.title}\r\n                                    </label>{\" \"}\r\n                                    <br />\r\n                                    <label className=\"font-weight-bold\">\r\n                                        Write Your Revision\r\n                                        <sup className=\"font-weight-bold f-16\">\r\n                                            *\r\n                                        </sup>\r\n                                        :{\" \"}\r\n                                    </label>\r\n                                    <div className=\"ck-editor-holder\">\r\n                                        <CKEditorComponent\r\n                                            onChange={(e, editor) =>\r\n                                                hanldeEditorTextChange(\r\n                                                    e,\r\n                                                    editor,\r\n                                                    s?.subtask_id\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    {commentError && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            className=\"form-text text-danger\"\r\n                                        >\r\n                                            You have to explain the revision in\r\n                                            details, so that Developer can\r\n                                            understand where they need to work.\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"mt-3 mb-3 d-flex align-items-center\">\r\n                    {/* <Button\r\n                        onClick={onBackButtonClick}\r\n                        variant=\"tertiary\"\r\n                        className=\"ml-auto mr-2\"\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                     */}\r\n                    <NextAndContinueButton\r\n                        onClick={handleSubmition}\r\n                        isLoading={isSubmitting}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AssigneeRevisionToDev;\r\n\r\nconst NextAndContinueButton = ({ onClick, isLoading }) => {\r\n    if (!isLoading) {\r\n        return (\r\n            <Button className=\"ml-auto\" onClick={onClick}>\r\n                {\" \"}\r\n                Continue\r\n            </Button>\r\n        );\r\n    } else {\r\n        return (\r\n            <Button className=\"cursor-processing ml-auto\">\r\n                <div\r\n                    className=\"spinner-border text-white mr-2\"\r\n                    role=\"status\"\r\n                    style={{\r\n                        width: \"18px\",\r\n                        height: \"18px\",\r\n                    }}\r\n                />\r\n                Processing...\r\n            </Button>\r\n        );\r\n    }\r\n};\r\n\r\n// sub task selection menu\r\nconst SubtaskSelectionMenu = ({ task, subTasks, setSubtasks }) => {\r\n    return (\r\n        <div className=\"position-relative\">\r\n            <Listbox value={subTasks} onChange={setSubtasks} multiple>\r\n                <Listbox.Button className=\"position-relative w-100 bg-white py-2 pl-2 pr-1 border d-flex align-items-center justify-content-between\">\r\n                    <span\r\n                        className=\"w-100 mr-auto text-left d-flex flex-wrap align-items-center\"\r\n                        style={{ gap: \"6px\" }}\r\n                    >\r\n                        {subTasks?.length > 0\r\n                            ? subTasks.map((s) => (\r\n                                  <span\r\n                                      key={s.subtask_id}\r\n                                      className=\"badge badge-light\"\r\n                                      style={{ fontSize: \"13px\" }}\r\n                                  >\r\n                                      {\" \"}\r\n                                      {s?.title}{\" \"}\r\n                                  </span>\r\n                              ))\r\n                            : \"Select Subtasks\"}\r\n                    </span>\r\n                    <HiOutlineSelector />\r\n                </Listbox.Button>\r\n                <Listbox.Options\r\n                    className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                    style={{\r\n                        zIndex: 10,\r\n                        maxHeight: \"350px\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {task?.taskSubTask?.length > 0 ? (\r\n                        task?.taskSubTask?.map((s) => (\r\n                            <Listbox.Option\r\n                                value={s}\r\n                                key={s.subtask_id}\r\n                                tabIndex={-1}\r\n                                className={({ active }) =>\r\n                                    active\r\n                                        ? \"task-selection-list-option active\"\r\n                                        : \"task-selection-list-option\"\r\n                                }\r\n                            >\r\n                                {({ selected }) => (\r\n                                    <React.Fragment>\r\n                                        <div>{s.title} <span className=\"badge badge-success\">{s.assigned_to_name}</span></div>\r\n                                        {selected && (\r\n                                            <div>\r\n                                                <i className=\"fa-solid fa-check\"></i>\r\n                                            </div>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                )}\r\n                            </Listbox.Option>\r\n                        ))\r\n                    ) : (\r\n                        <div>No Data Found</div>\r\n                    )}\r\n                </Listbox.Options>\r\n            </Listbox>\r\n        </div>\r\n    );\r\n};\r\n","import React, {useState} from 'react'\r\nimport Button from '../../../components/Button';\r\nimport CKEditorComponent from '../../../../ckeditor';\r\nimport SubmitButton from '../../../components/SubmitButton';\r\nimport { User } from '../../../../utils/user-details';\r\n\r\n\r\n\r\nconst denyOptions = (type) => {\r\n    switch(type){\r\n        case 'lead_dev': \r\n            return ([\r\n                {id: 'deny1', title: 'The project manager added new things in the instruction which was not part of the original instruction'},\r\n                {id: 'deny2', title: 'The way the project manager is interpreting his original instruction now was not possible to understand from what his writing'}\r\n            ])\r\n        case 'dev':\r\n            return([\r\n                {id: 'deny1', title: 'The lead developer added new things in the instruction which was not part of the original instruction'},\r\n                {id: 'deny2', title: 'The way the lead developer is interpreting his original instruction now was not possible to understand from what his writing'}\r\n            ])\r\n        default: []\r\n    }\r\n}\r\n\r\n\r\n\r\nconst DenyAndContinue = ({onSubmit, isSubmitting, onBack, task}) => {\r\n    const auth = new User(window?.Laravel?.user);\r\n    const [reason, setReason] = useState(\"\");\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [err, setErr] = useState(null);\r\n\r\n    const handleEditorDataChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // radio button change\r\n    const handleChange = (e) => {\r\n        setReason(e.target.value);\r\n    };\r\n\r\n     // validation\r\n     const validate = () => {\r\n        let errorCount = 0;\r\n        \r\n        if(comment === \"\"){\r\n             errorCount++;\r\n             setCommentError('You have to explain the revision in details, so that lead developer/developer can understand where they need to work.')     \r\n        }\r\n \r\n        if(reason === ''){\r\n             errorCount++;\r\n             setReasonError('You have to select a reason from above options')\r\n        }\r\n \r\n        return errorCount === 0; \r\n     }\r\n\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            onSubmit({\r\n                comment,\r\n                denyReason: reason\r\n            });\r\n        }else{\r\n            setErr(\"You have to Explain Why Did You Deny!\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const options = auth?.getRoleId() === 6 ? denyOptions('lead_dev') : denyOptions('dev');\r\n    return (\r\n        <React.Fragment>  \r\n            <form action=\"\">\r\n                {/* reason for deny */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Select reason for deny<sup className=\"f-16\">*</sup> :\r\n                    </label>\r\n                    <div className=\"px-3\">\r\n                        {options.map(option => (\r\n                            <div key={option.id} className=\"form-check d-flex align-items-start mb-2\">\r\n                                <input\r\n                                    className=\"form-check-input mr-2\"\r\n                                    type=\"radio\"\r\n                                    name=\"exampleRadios\"\r\n                                    id={option.id}\r\n                                    required= {true}\r\n                                    onChange={handleChange}\r\n                                    value={option.title}\r\n                                    style={{\r\n                                        width: \"16px\",\r\n                                        height: \"16px\",\r\n                                        marginTop: \"3px\",\r\n                                    }}\r\n                                    \r\n                                />\r\n                                <label\r\n                                    className=\"form-check-label\"\r\n                                    htmlFor={option.id}\r\n                                    style={{ marginBottom: \"3px\" }}\r\n                                >\r\n                                    {option.title}\r\n                                </label>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    {reasonError && <small id=\"emailHelp\" className=\"form-text text-danger\">{reasonError}</small>}\r\n                </div>\r\n\r\n\r\n                {/* rich editor  */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Please Explain Why Did You Deny? <sup className=\"f-16 text-red\">*</sup>\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent onChange={handleEditorDataChange} />\r\n                    </div>\r\n                    {commentError && <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                        {commentError}\r\n                    </small>} \r\n                </div>\r\n\r\n                <div className=\"mt-3 d-flex align-items-center\">\r\n                        <Button onClick={onBack} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                            Back\r\n                        </Button>\r\n\r\n                        {!isSubmitting ? (\r\n                            <React.Fragment>\r\n                                <React.Fragment>\r\n                                {_.includes([4, 6], auth?.getRoleId()) ? (\r\n                                    <Button onClick={handleOnSubmit}>Next</Button>\r\n                                ): \r\n                                    <SubmitButton\r\n                                        title=\"Submit\" \r\n                                        isLoading={isSubmitting}\r\n                                        onClick={handleOnSubmit}\r\n                                    />\r\n                                }\r\n                            </React.Fragment>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Button className=\"cursor-processing\">\r\n                                    <div\r\n                                        className=\"spinner-border text-white\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"18px\",\r\n                                            height: \"18px\",\r\n                                        }}\r\n                                    />{\" \"}\r\n                                    Processing...\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default DenyAndContinue","import React, { useState } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport RevisionView from \"./RevisionView\";\r\nimport { RevisionAcceptAndContinue } from \"./RevisionAcceptAndContinue\";\r\nimport AssigneeRevisionToDev from \"./AssigneeRevisionToDev\";\r\nimport DenyAndContinue from \"./DenyAndContinue\";\r\nimport {\r\n    useGetRevisionDetailsQuery,\r\n    useRevisionAcceptOrDenyMutation,\r\n} from \"../../../../services/api/SingleTaskPageApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setTaskStatus } from \"../../../../services/features/subTaskSlice\";\r\nimport { User } from \"../../../../utils/user-details\";\r\n\r\nconst DeveloperRevisionView = ({ task, close }) => {\r\n    const [show, setShow] = useState(\"REVISION\");\r\n    const [accept, setAccept] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const { data: revision, isFetching: isFetchingRevision } =\r\n        useGetRevisionDetailsQuery(task?.id);\r\n    const [revisionAcceptOrDeny, { isLoading: isLoadingRevisionReview }] =\r\n        useRevisionAcceptOrDenyMutation();\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n    // handle Accept and continue submission\r\n    const handleAcceptAndContinueSubmission = (data, type) => {\r\n        const _data = {\r\n            comment: data?.comment ?? \"\",\r\n            deny_reason: data?.denyReason ?? \"\",\r\n            task_id: task?.id,\r\n            user_id: auth?.getId(),\r\n            revision_id: revision?.id,\r\n            mode: data?.continue ? \"continue\" : accept,\r\n        };\r\n\r\n        revisionAcceptOrDeny(_data)\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (_.includes([4, 6], auth?.getRoleId())) {\r\n                    setShow(type);\r\n                } else {\r\n                    dispatch(setTaskStatus(res?.task_status));\r\n                    close();\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    // generate modal title by user role id\r\n\r\n    const generateModalTitle = () => {\r\n        if (auth.getRoleId() === 4) {\r\n            return show === \"ASSIGNEE_TO_DEV\"\r\n                ? \"Revision For Lead Developer\"\r\n                : \"Revision By Project Manager/Top Management\";\r\n        } else if (auth.getRoleId() === 6) {\r\n            return show === \"ASSIGNEE_TO_DEV\"\r\n                ? \"Revision For Developer\"\r\n                : \"Revision By Project Manager/Top Management\";\r\n        } else if (auth.getRoleId() === 9 || auth.getRoleId() === 10) {\r\n            if (\r\n                revision?.revision_status === \"Project Manager Revision\" ||\r\n                revision?.revision_status === \"Client Has Revision\"\r\n            ) {\r\n                return \"Revision By Project Manager /Top Management\";\r\n            } else {\r\n                return \"Revision By Lead Designer\";\r\n            }\r\n        } else return \"Revision By Lead Developer\";\r\n    };\r\n\r\n    console.log(\"revision\", revision);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div\r\n                className=\"sp1_single_task--modal-panel\"\r\n                style={{ maxWidth: \"550px\" }}\r\n            >\r\n                <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                    <div className=\"font-weight-bold f-16\">\r\n                        Task#{task?.id}: {generateModalTitle()}\r\n                    </div>\r\n                    <Button onClick={close} className=\"\">\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"px-3\">\r\n                    {show === \"REVISION\" && (\r\n                        <RevisionView\r\n                            revision={revision}\r\n                            isLoading={isFetchingRevision}\r\n                            isContinue={isLoadingRevisionReview}\r\n                            onAccept={() => {\r\n                                setAccept(\"accept\");\r\n                                setShow(\"ACCEPT_AND_CONTINUE\");\r\n                            }}\r\n                            onDeny={() => {\r\n                                setAccept(\"deny\");\r\n                                setShow(\"DENY_AND_CONTINUE\");\r\n                            }}\r\n                            onContinue={() => {\r\n                                setAccept(\"continue\");\r\n                                handleAcceptAndContinueSubmission(\r\n                                    { continue: true },\r\n                                    \"\"\r\n                                );\r\n                            }}\r\n                        />\r\n                    )}\r\n\r\n                    {show === \"ACCEPT_AND_CONTINUE\" && (\r\n                        <RevisionAcceptAndContinue\r\n                            task={task}\r\n                            isSubmitting={isLoadingRevisionReview}\r\n                            onSubmit={(data) =>\r\n                                handleAcceptAndContinueSubmission(\r\n                                    data,\r\n                                    \"ASSIGNEE_TO_DEV\"\r\n                                )\r\n                            }\r\n                            close={() => setShow(\"REVISION\")}\r\n                        />\r\n                    )}\r\n\r\n                    {show === \"DENY_AND_CONTINUE\" && (\r\n                        <DenyAndContinue\r\n                            task={task}\r\n                            onSubmit={(data) =>\r\n                                handleAcceptAndContinueSubmission(\r\n                                    data,\r\n                                    \"DENY_ASSIGNEE_TO_DEV\"\r\n                                )\r\n                            }\r\n                            isSubmitting={isLoadingRevisionReview}\r\n                            onBack={() => setShow(\"REVISION\")}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default DeveloperRevisionView;\r\n","import _ from 'lodash';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { useGetRevisionDetailsQuery, useRevisionAcceptOrDenyByLeadDeveloperMutation } from '../../../../services/api/SingleTaskPageApi';\r\nimport { User } from '../../../../utils/user-details';\r\nimport Button from '../../../components/Button';\r\nimport AssigneeRevisionToDev from './AssigneeRevisionToDev';\r\nimport DenyAndContinue from './DenyAndContinue';\r\nimport { RevisionAcceptAndContinue } from './RevisionAcceptAndContinue';\r\nimport RevisionView from './RevisionView';\r\n\r\n\r\nconst RevisionViewModal = ({task, close}) => {\r\n  const [show, setShow] = useState(\"REVISION\");\r\n  const [accept, setAccept] = useState('');\r\n  const [comment, setComment] = useState('');\r\n  const [denyReason, setDenyReason] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { data: revision, isFetching } = useGetRevisionDetailsQuery(task?.id);\r\n//   const [revisionAcceptOrDeny, {isLoading: isLoadingRevisionReview}] = useRevisionAcceptOrDenyMutation();\r\n  const auth = new User(window?.Laravel?.user);\r\n  const [\r\n    revisionAcceptOrDeny,\r\n    {isLoading: isLoadingRevisionReview}\r\n  ] = useRevisionAcceptOrDenyByLeadDeveloperMutation();\r\n\r\n  // handle Accept and continue submition\r\n  const hanldeAcceptAndContinueSubmition = (data, type) => {\r\n    setComment(data);\r\n    setShow(type);\r\n  }\r\n\r\n   // handle Accept and continue submition\r\n   const hanldeDenyAndContinueSubmition = (data, type) => {\r\n    setComment(data);\r\n    setDenyReason(data?.denyReason);\r\n    setShow(type);\r\n  }\r\n\r\n\r\n  const handleOnSubmit = async (data, type) =>{\r\n    let fdata ={\r\n        comment: comment?.comment ?? '',\r\n        task_id: data?.task_id,\r\n        project_id: task?.projectId,\r\n        user_id: auth?.getId(),\r\n        subTask: _.map(data?.comments, comment => ({...comment, is_deniable: data?.is_deniable})),\r\n        revision_acknowledgement: data?.reason ?? '',\r\n        revision_id: revision?.id,\r\n        mode: data?.continue ? 'continue' : accept,\r\n        deny_reason: denyReason ?? '',\r\n        is_deniable: data?.is_deniable ?? false,\r\n    }\r\n\r\n\r\n    const params = (!data?.continue && accept===\"deny\") ? 'deny-continue' :'accept-continue';\r\n\r\n    await revisionAcceptOrDeny({fdata, params})\r\n    .unwrap()\r\n    .then(res => {\r\n        toast.success('Your request has been successfully processed')\r\n        close();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  const handleContinueButton = () => {\r\n    setAccept('continue');\r\n    if(_.size(revision?.taskSubTask) === 0){\r\n        setShow('DENY_ASSIGNEE_TO_DEV');\r\n    }else{\r\n        handleOnSubmit({\r\n            continue: true,\r\n        }, '')\r\n    }\r\n  }\r\n\r\n\r\n  const generateModalTitle = () => {\r\n    if(auth.getRoleId() === 4){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Lead Developer\":\"Revision By Project Manager\";\r\n    }else if(auth.getRoleId() === 6){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Developer\":\"Revision By Project Manager\";\r\n    }else if(auth.getRoleId() === 9 || auth.getRoleId() === 10){\r\n        return \"Revision By Project Manager\";\r\n    }else return \"Revision By Lead Developer\"\r\n  }\r\n\r\n\r\n\r\n\r\n//   console.log({task})\r\n  return (\r\n    <React.Fragment>\r\n        <div\r\n            className=\"sp1_single_task--modal-panel\"\r\n            style={{ maxWidth: \"550px\" }}\r\n        >\r\n            <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                <div className=\"font-weight-bold f-16\">\r\n                    Task#{task?.id}:\r\n                    {generateModalTitle()}\r\n                </div>\r\n                <Button onClick={close} className=\"\">\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"px-3\">\r\n               {show === 'REVISION' &&\r\n                    <RevisionView\r\n                        revision={revision}\r\n                        isLoading= {isFetching}\r\n                        isContinue={isLoadingRevisionReview}\r\n                        onAccept={() => {\r\n                            setAccept('accept');\r\n                            setShow('ACCEPT_AND_CONTINUE');\r\n                        }}\r\n                        onDeny={() => {\r\n                            setAccept('deny');\r\n                            setShow('DENY_AND_CONTINUE')\r\n                        }}\r\n                        onContinue={handleContinueButton}\r\n                    />\r\n                }\r\n\r\n                {\r\n                    show === 'ACCEPT_AND_CONTINUE' &&\r\n                    <RevisionAcceptAndContinue\r\n                        task={task}\r\n                        isSubmitting={isLoadingRevisionReview}\r\n                        onSubmit={data => hanldeAcceptAndContinueSubmition(data, \"ASSIGNEE_TO_DEV\")}\r\n                        close={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n\r\n                {show === \"ASSIGNEE_TO_DEV\" &&\r\n                    <AssigneeRevisionToDev\r\n                        task={task}\r\n                        revision={revision}\r\n                        type={true}\r\n                        onSubmit={(data) =>handleOnSubmit( data, 'ASSIGNEE_TO_DEV' )}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"ACCEPT_AND_CONTINUE\")}\r\n                    />\r\n                }\r\n\r\n                {show === \"DENY_AND_CONTINUE\" &&\r\n                    <DenyAndContinue\r\n                        task={task}\r\n                        onSubmit={data => hanldeDenyAndContinueSubmition(data, \"DENY_ASSIGNEE_TO_DEV\")}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n\r\n\r\n                {_.size(task?.taskSubTask) > 0 && show === \"DENY_ASSIGNEE_TO_DEV\" &&\r\n                    <AssigneeRevisionToDev\r\n                        task={task}\r\n                        revision={revision}\r\n                        type={false}\r\n                        onSubmit={(data) => handleOnSubmit(data, 'DENY_ASSIGNEE_TO_DEV')}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"DENY_AND_CONTINUE\")}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default RevisionViewModal\r\n","import React, { useState } from 'react';\r\nimport Button from '../../../components/Button';\r\nimport Modal from '../../../components/Modal';\r\nimport DeveloperRevisionView from './DeveloperRevisionView';\r\nimport RevisionViewModal from './RevisionViewModal';\r\n\r\nconst RevisionViewControl = ({task, auth, status}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const singleTask = task;\r\n\r\n    console.log({task})\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn --view-revision'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Revision</span>\r\n        </Button>\r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                {\r\n                    // check is subtask\r\n                    task?.hasSubtask ?\r\n                    <RevisionViewModal\r\n                        task={singleTask}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                    :\r\n                    <DeveloperRevisionView\r\n                        task={task}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n        </Modal>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RevisionViewControl\r\n","import React from 'react'\r\n\r\nexport default function GuideLineText() {\r\n\r\n    const html = `<html><head><meta content=\"text/html; charset=UTF-8\" http-equiv=\"content-type\"><style type=\"text/css\">ol{margin:0;padding:0}table td,table th{padding:0}.c4{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c5{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c2{height:11pt}.c3{font-style:italic}.c1{font-weight:700}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class=\"c5 doc-content\"><p class=\"c0\"><span>Other than all the old fields, we have introduced the task type and page type fields in the new subtask creation form. Here is a guide for you so you know when to choose which one: <br><br></span><span class=\"c1\">1. New page design:</span><span>&nbsp;When you are going to need any new pages developed (except for cloning for example duplicating a service page to create 20 more service pages and cases like this), you should select this one. It has 2 subdivisions in the next field: <br><br></span><span class=\"c1\">A. Primary page development:</span><span class=\"c4\">&nbsp;All the pages on the website that are money pages (can generate money or revenue), require significant effort to be developed and clients usually remain very picky about them and don&rsquo;t want to compromise anything in those pages are what we are calling primary pages. Primary pages will have these elements mandatorily: <br> &nbsp; &nbsp; They have to be money pages like home, product, service, collection etc. </span></p><p class=\"c0\"><span class=\"c4\">&nbsp; &nbsp; &nbsp;*Most of the traffic will be on these pages <br> &nbsp; &nbsp; They have not less than 6 sections and every section has to be well designed<br> &nbsp; &nbsp; Homepage should be always counted as a primary page. <br> &nbsp; &nbsp; The developers will have to put significant effort to build them</span></p><p class=\"c0\"><span>&nbsp; &nbsp; &nbsp;*The clients will be serious/picky about these pages and won&#39;t accept unless they are perfect. <br><br></span><span class=\"c1\">Rough numbers of primary page on a website:</span><span>&nbsp;Not more than 3 (Except for very rare cases)<br><br></span><span class=\"c1\">Example:</span><span>&nbsp;Home, product page and collection pages for woocommerce/shopify; home, service category and service page for service websites; Home, property buy/sale listing pages for a real estate broker site and like this. <br><br><br>B. </span><span class=\"c1\">Secondary page development:</span><span class=\"c4\">&nbsp;All the relatively less important pages on the site should go to secondary pages. The characteristics include: <br> &nbsp;*They don&rsquo;t generate money necessarily, they are needed for customers&#39; trust, information and other things. For example, about us, shipping policy, FAQ, return policy etc. <br> &nbsp;*They have less than 6 sections, for example contact us. <br> &nbsp;*Require less efforts from the developers to develop them.<br> &nbsp;*In many cases, developers can directly use the template with minimum customization. For example, cart, checkout pages on ecommerce sites. </span></p><p class=\"c0\"><span>&nbsp; *The clients will be less serious about them as these pages are not super sensitive. <br><br><br>2. </span><span class=\"c1\">Cloning existing design: <br></span><span class=\"c4\">Any cloning/duplication job that needs to be done in bulk should go under this. Example include: <br><br>A. Creating 20 service pages from 1 service page just by changing the content and the picture. <br>B. Creating/uploading 300 products after the product page will be developed initially. </span></p><p class=\"c0\"><span class=\"c4\">C. Creating 70 location pages from 1 page template finalized initially. <br><br>These tasks can be assigned to junior most persons in the team as these are identical to data entry works. <br><br></span></p><p class=\"c0\"><span>3. </span><span class=\"c1\">Others: </span><span><br>Under others, there are some other work types which you can select depending on your needs. <br><br>Choosing any task as the primary task will require authorization from team lead/management and the task will be assigned to the developers after the authorization part will be done. Declare any page as a primary page carefully as we are going to set up a point system for the developers where developers will get more points for the primary pages when compared to the secondary pages. So declaring any page as a primary page when it will take almost no effort to create can give the respective developer an unfair edge over the rest of him team members. <br><br></span><span class=\"c1\">P.S. </span><span class=\"c1 c3\">Other than these, we have added a new field named page url in the subtask creation form. So from now, you have to define the urls where the developers will work when assigning a task. It&rsquo;s important that the developers don&#39;t choose urls/permalinks randomly and you declare them beforehand and they use them mandatorily. <br><br></span><span class=\"c1\">Naming Criteria<br></span><span class=\"c4\">Make sure the subtask names are self explanatory so you or anyone else from the management knows what the subtask was about from its name. <br><br>For example, if the task name is &ldquo;Homepage&rdquo;, and if you have to break it into parts for obvious reasons, the subtask names should be as below: <br>Homepage mockup design (XD)</span></p><p class=\"c0\"><span class=\"c4\">Creating a custom slider for the homepage</span></p><p class=\"c0\"><span class=\"c4\">Converting XD to wordpress for the homepage</span></p><p class=\"c0 c2\"><span class=\"c4\"></span></p><p class=\"c0 c2\"><span><br><br><br></span></p></body></html>`\r\n  return (\r\n    <div dangerouslySetInnerHTML={{__html: html}}/>\r\n  )\r\n}\r\n","import { useState } from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport GuideLineText from \"./subtask_creation_guide/GuideLineText\";\r\n\r\n\r\nexport default function SubtaskCreationControl({ className }) {\r\n  const [subtaskCreationModalIsOpen, setSubtaskCreationModalIsOpen] = useState(false);\r\n\r\n\r\n    // console.log(location);\r\n\r\n    const close = () => setSubtaskCreationModalIsOpen(false);\r\n    const open = () => setSubtaskCreationModalIsOpen(true);\r\n\r\n    return (\r\n        <div className={` ${className}`} >\r\n            <Button\r\n                variant=\"tertiary\"\r\n                // onClick={toggle}\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {/* {isFetching ? <Loader title=\"Processing...\" /> : <i className=\"fa-solid fa-check\" />} */}\r\n                <span className=\"d-inline ml-1\"> Subtask creation guide </span>\r\n            </Button>\r\n\r\n            <Modal isOpen={subtaskCreationModalIsOpen} className=\"sp1_mark-as--modal \">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_mark-as--modal-panel\"\r\n                        style={{ overflow: \"visible\", maxWidth: \"70rem\" }}\r\n                    >\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0 ml-2\" style={{fontStyle:'normal',fontWeight:'bold'}}>Subtask creation guide</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"visible\" }}\r\n                        >\r\n                            \r\n                            <div style={{maxHeight:'80vh',overflow:'auto',padding:'0 20px 0 0'}}>\r\n                                <GuideLineText />\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 d-flex align-items-center\">\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                    onClick={close}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                                {/* <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" /> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\n\r\nconst StartTimerConfirmationModal = ({isOpen, onConfirm}) => {\r\n  const [buttonVisible, setButtonVisible] = React.useState(false);\r\n  const [countDown, setCountDown] = React.useState(20);\r\n\r\n  React.useEffect(() => {\r\n    let count = countDown ?? 0;\r\n\r\n    let timeIntervelId = setInterval(() => {\r\n        setCountDown(count--);\r\n    }, 1000);\r\n\r\n\r\n    let timeOutId = setTimeout(() => {\r\n      setButtonVisible(true);\r\n      clearInterval(timeIntervelId)\r\n    }, 22000);\r\n\r\n    \r\n\r\n    return () => {\r\n      clearTimeout(timeOutId);\r\n      clearInterval(timeIntervelId);\r\n    };\r\n  }, []);\r\n\r\n  const text = `<html><head><meta content=\"text/html; charset=UTF-8\" http-equiv=\"content-type\"><style type=\"text/css\">ol{margin:0;padding:0}table td,table th{padding:0}.c0{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c2{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c3{height:11pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class=\"c2 doc-content\"><p class=\"c1\"><span class=\"c0\">Do You Understand The Following Things?</span></p><p class=\"c1\"><span class=\"c0\">A. Your job is not to decide what the look and feel of a website will be based on a few reference websites.</span></p><p class=\"c1\"><span class=\"c0\">B. Your job is not to research a theme based on an instruction shared by the PM.</span></p><p class=\"c1\"><span class=\"c0\">C. Your job is not to research a plugin based on a problem shared by PM.</span></p><p class=\"c1\"><span class=\"c0\">D. Your job is not to choose the color scheme of a website.</span></p><p class=\"c1\"><span class=\"c0\">E. Your job is not to talk to the support for example the Shopify support team, theme support, plugin support and any other support for any solution.</span></p><p class=\"c1\"><span class=\"c0\">F. Your job is not to create the training videos for the client after the completion of a project.</span></p><p class=\"c1\"><span class=\"c0\">G. You understand that all your hours have to be logged/tracked, and you will be questioned if you don&rsquo;t log at least 7 hours for any reason.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your job is to execute the work based on the defined requirements.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily. Report immediately if you are asked to do any of these and if it wasn&rsquo;t authorized by top management. You should see a text like &ldquo;Authorized by top management&rdquo; on the right side of the task title if it was authorized.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">In case, you don&rsquo;t report, the extra time taken for these will be considered as your lacking (as they will remain unaccountable) and you will receive negative performance score.&quot;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2438;&#2474;&#2472;&#2495; &#2453;&#2495; &#2472;&#2495;&#2478;&#2509;&#2472;&#2482;&#2495;&#2454;&#2495;&#2468; &#2476;&#2495;&#2487;&#2479;&#2492;&#2455;&#2497;&#2482;&#2495; &#2476;&#2497;&#2461;&#2503;&#2472;?</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2535;&#2404; &#2453;&#2527;&#2503;&#2453;&#2463;&#2495; &#2480;&#2503;&#2475;&#2494;&#2480;&#2503;&#2472;&#2509;&#2488; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; &#2451;&#2474;&#2480; &#2477;&#2495;&#2468;&#2509;&#2468;&#2495; &#2453;&#2480;&#2503; &#2453;&#2509;&#2482;&#2494;&#2527;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; Look &amp; Feel &#2453;&#2503;&#2478;&#2472; &#2489;&#2476;&#2503; &#2468;&#2494;&#2480; &#2476;&#2495;&#2487;&#2527;&#2503; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2536;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2439;&#2472;&#2509;&#2488;&#2463;&#2509;&#2480;&#2494;&#2453;&#2486;&#2472; &#2437;&#2472;&#2497;&#2479;&#2494;&#2527;&#2496; &#2480;&#2495;&#2488;&#2494;&#2480;&#2509;&#2458; &#2453;&#2480;&#2503; &#2469;&#2495;&#2478; &#2454;&#2497;&#2433;&#2460;&#2503; &#2476;&#2503;&#2480; &#2453;&#2480;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2537;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2439;&#2472;&#2509;&#2488;&#2463;&#2509;&#2480;&#2494;&#2453;&#2486;&#2472; &#2437;&#2472;&#2497;&#2479;&#2494;&#2527;&#2496; &#2480;&#2495;&#2488;&#2494;&#2480;&#2509;&#2458; &#2453;&#2480;&#2503; &#2474;&#2509;&#2482;&#2494;&#2455;&#2495;&#2472; &#2454;&#2497;&#2433;&#2460;&#2503; &#2476;&#2503;&#2480; &#2453;&#2480;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2538;&#2404; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; &#2453;&#2494;&#2482;&#2494;&#2480; &#2488;&#2509;&#2453;&#2495;&#2478; &#2453;&#2495; &#2489;&#2476;&#2503; &#2488;&#2503;&#2463;&#2494; &#2474;&#2459;&#2472;&#2509;&#2470; &#2453;&#2480;&#2494; &#2476;&#2494; &#2453;&#2507;&#2472; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2539;&#2404; &#2453;&#2507;&#2472; &#2471;&#2480;&#2472;&#2503;&#2480; &#2488;&#2478;&#2488;&#2509;&#2479;&#2494;&#2480; &#2488;&#2478;&#2494;&#2471;&#2494;&#2472;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2453;&#2507;&#2472; &#2474;&#2509;&#2480;&#2453;&#2494;&#2480; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;&#2503;&#2480; &#2488;&#2494;&#2469;&#2503; &#2479;&#2507;&#2455;&#2494;&#2479;&#2507;&#2455; &#2453;&#2480;&#2494; (&#2479;&#2503;&#2478;&#2472;, &#2486;&#2474;&#2495;&#2475;&#2494;&#2439; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;, &#2469;&#2495;&#2478; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463;, &#2474;&#2509;&#2482;&#2494;&#2455;&#2495;&#2472; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463;, &#2447;&#2476;&#2434; &#2437;&#2472;&#2509;&#2479; &#2453;&#2507;&#2472; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;) &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2540;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2486;&#2503;&#2487; &#2489;&#2476;&#2494;&#2480; &#2474;&#2480;&#2503; &#2453;&#2509;&#2482;&#2494;&#2527;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2453;&#2507;&#2472; &#2474;&#2509;&#2480;&#2453;&#2494;&#2480; &#2463;&#2509;&#2480;&#2503;&#2439;&#2472;&#2495;&#2434; &#2477;&#2495;&#2465;&#2495;&#2451; &#2476;&#2494;&#2472;&#2494;&#2472;&#2507; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2541;&#2404; &#2438;&#2474;&#2472;&#2495; &#2488;&#2509;&#2476;&#2496;&#2453;&#2494;&#2480; &#2453;&#2480;&#2459;&#2503;&#2472; &#2479;&#2503;, &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2488;&#2453;&#2482; &#2453;&#2494;&#2460;&#2503;&#2480; &#2488;&#2478;&#2527; Seopage1 &#2447;&#2480; &#2439; &#2438;&#2480; &#2474;&#2495; &#2488;&#2495;&#2488;&#2509;&#2463;&#2503;&#2478;&#2503; &#2463;&#2509;&#2480;&#2509;&#2479;&#2494;&#2453; &#2453;&#2480;&#2468;&#2503; &#2489;&#2476;&#2503; &#2447;&#2476;&#2434; &#2479;&#2470;&#2495; &#2438;&#2474;&#2472;&#2495; &#2453;&#2507;&#2472; &#2453;&#2494;&#2480;&#2467;&#2503; &#2453;&#2478;&#2474;&#2453;&#2509;&#2487;&#2503; 7 &#2456;&#2467;&#2509;&#2463;&#2494; &#2463;&#2509;&#2480;&#2509;&#2479;&#2494;&#2453; &#2472;&#2494; &#2453;&#2480;&#2503;&#2472; &#2468;&#2494;&#2489;&#2482;&#2503; &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2474;&#2509;&#2480;&#2486;&#2509;&#2472; &#2453;&#2480;&#2494; &#2489;&#2476;&#2503;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2488;&#2494;&#2471;&#2494;&#2480;&#2467;&#2477;&#2494;&#2476;&#2503;, &#2479;&#2503;&#2453;&#2507;&#2472;&#2507; &#2471;&#2480;&#2467;&#2503;&#2480; &#2474;&#2509;&#2480;&#2479;&#2492;&#2507;&#2460;&#2472;&#2496;&#2479;&#2492;&#2468;&#2494; &#2476;&#2494; Requirements &#2447;&#2480; &#2476;&#2495;&#2487;&#2527;&#2503; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; (&#2479;&#2503; &#2453;&#2507;&#2472; &#2471;&#2480;&#2467;&#2503;&#2480;) &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2453;&#2494;&#2460;&#2404; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2489;&#2458;&#2509;&#2459;&#2503;, &#2438;&#2474;&#2472;&#2494;&#2480; &#2441;&#2474;&#2480;&#2503; &#2447;&#2488;&#2494;&#2439;&#2472; &#2453;&#2480;&#2494; &#2453;&#2494;&#2460;&#2455;&#2497;&#2482;&#2507;&#2453;&#2503; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2470;&#2503;&#2527;&#2494; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2437;&#2472;&#2509;&#2479;&#2479;&#2494;&#2527;&#2496; &#2476;&#2494;&#2488;&#2509;&#2468;&#2476;&#2494;&#2527;&#2472; &#2453;&#2480;&#2494;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2479;&#2470;&#2495; &#2453;&#2507;&#2472; &#2453;&#2494;&#2480;&#2467;&#2503;, &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480; &#2447;&#2439; &#2453;&#2507;&#2472;&#2451; &#2453;&#2494;&#2460;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2488;&#2494;&#2489;&#2494;&#2479;&#2509;&#2479;&#2503;&#2480; &#2474;&#2509;&#2480;&#2479;&#2492;&#2507;&#2460;&#2472; &#2478;&#2472;&#2503; &#2453;&#2480;&#2503;, &#2468;&#2494;&#2489;&#2482;&#2503; &#2468;&#2495;&#2472;&#2495; &#2488;&#2503;&#2455;&#2497;&#2482;&#2495;&#2480; &#2460;&#2472;&#2509;&#2479; &#2438;&#2482;&#2494;&#2470;&#2494; &#2438;&#2482;&#2494;&#2470;&#2494; &#2476;&#2495;&#2486;&#2503;&#2487; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2494;&#2460; &#2468;&#2504;&#2480;&#2495; &#2453;&#2480;&#2468;&#2503; &#2489;&#2476;&#2503; &#2447;&#2476;&#2434; &#2448; &#2453;&#2494;&#2460;&#2455;&#2497;&#2482;&#2495; &#2437;&#2476;&#2486;&#2509;&#2479;&#2439; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2489;&#2468;&#2503; &#2489;&#2476;&#2503;&#2404; &#2479;&#2470;&#2495; &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2507;&#2472;&#2451; &#2453;&#2494;&#2460; &#2453;&#2480;&#2468;&#2503; &#2476;&#2482;&#2494; &#2489;&#2479;&#2492; &#2447;&#2476;&#2434; &#2488;&#2503;&#2439; &#2453;&#2494;&#2460;&#2463;&#2495; &#2479;&#2470;&#2495; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2472;&#2494; &#2489;&#2479;&#2492; &#2468;&#2476;&#2503; &#2468;&#2494; &#2437;&#2476;&#2495;&#2482;&#2478;&#2509;&#2476;&#2503; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2453;&#2494;&#2459;&#2503; &#2480;&#2495;&#2474;&#2507;&#2480;&#2509;&#2463;&#2503;&#2480; &#2478;&#2494;&#2471;&#2509;&#2479;&#2478;&#2503; &#2460;&#2494;&#2472;&#2494;&#2468;&#2503; &#2489;&#2476;&#2503;&#2404; &nbsp;&#2488;&#2494;&#2471;&#2494;&#2480;&#2467;&#2468;, &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2494;&#2460;&#2503;&#2480; &#2453;&#2509;&#2487;&#2503;&#2468;&#2509;&#2480;&#2503;, &#2488;&#2434;&#2486;&#2509;&#2482;&#2495;&#2487;&#2509;&#2463; &#2474;&#2503;&#2460;&#2503;&#2480; &#2465;&#2494;&#2472; &#2474;&#2494;&#2486;&#2503; &ldquo;Authorized by top management&rdquo; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2447;&#2453;&#2463;&#2495; &#2482;&#2503;&#2454;&#2494; &#2470;&#2503;&#2454;&#2468;&#2503; &#2474;&#2494;&#2480;&#2476;&#2503;&#2472; &#2479;&#2470;&#2495; &#2488;&#2503;&#2463;&#2495; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2489;&#2479;&#2492;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2447;&#2439;&#2471;&#2480;&#2467;&#2503;&#2480; &#2437;&#2472;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2453;&#2494;&#2460;&#2503;&#2480; &#2453;&#2509;&#2487;&#2503;&#2468;&#2509;&#2480;&#2503; &#2438;&#2474;&#2472;&#2495; &#2479;&#2470;&#2495; &#2480;&#2495;&#2474;&#2507;&#2480;&#2509;&#2463; &#2472;&#2494; &#2453;&#2480;&#2503;&#2472;, &#2468;&#2494;&#2489;&#2482;&#2503; &#2488;&#2503;&#2439; &#2453;&#2494;&#2460;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2438;&#2474;&#2472;&#2495; &#2479;&#2503;&#2439; &#2488;&#2478;&#2527; &#2476;&#2509;&#2479;&#2527; &#2453;&#2480;&#2476;&#2503;&#2472; &#2468;&#2494; &#2455;&#2509;&#2480;&#2489;&#2472;&#2479;&#2507;&#2455;&#2509;&#2479; &#2476;&#2482;&#2503; &#2476;&#2495;&#2476;&#2503;&#2458;&#2495;&#2468; &#2489;&#2476;&#2503; &#2472;&#2494; &#2447;&#2476;&#2434; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2437;&#2472;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2453;&#2494;&#2460;&#2503; &#2460;&#2524;&#2495;&#2468; &#2469;&#2494;&#2453;&#2494;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2474;&#2494;&#2480;&#2475;&#2480;&#2509;&#2478;&#2503;&#2472;&#2509;&#2488; &#2488;&#2509;&#2453;&#2507;&#2480;&#2503; &#2472;&#2503;&#2455;&#2503;&#2463;&#2495;&#2477; &#2474;&#2527;&#2503;&#2472;&#2509;&#2463; &#2479;&#2507;&#2455; &#2489;&#2476;&#2503;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p></body></html>`\r\n\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"subtask-timer-confirmation--modal\">\r\n        <div className='subtask-timer-confirmation--panel'>\r\n           <div className=\"subtask-timer-confirmation--content\">\r\n            <div dangerouslySetInnerHTML={{__html: text}} />\r\n\r\n            \r\n                {/* <h4 className='mb-3'> Do You Understand The Following Things? </h4>\r\n                \r\n                <ol type='A'>\r\n                    <li> Your job is not to decide what the look and feel of a website will be based on a few reference websites. </li>\r\n                    <li>Your job is not to research a theme based on an instruction shared by the PM.</li>\r\n                    <li>Your job is not to research a plugin based on a problem shared by PM.</li>\r\n                    <li>Your job is not to choose the color scheme of a website.</li>\r\n                    <li>Your job is not to talk to the support for example the Shopify support team, theme support, plugin support and any other support for any solution.</li>\r\n                    <li>Your job is not to create the training videos for the client after the completion of a project.</li>\r\n                    <li>You understand that all your hours have to be logged/tracked, and you will be questioned if you don’t log at least 7 hours for any reason.</li>\r\n                </ol>\r\n\r\n\r\n                <p>In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your job is to execute the work based on the defined requirements. </p> \r\n\r\n                <p>If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily. Report immediately if you are asked to do any of these and if it wasn’t authorized by top management. You should see a text like “Authorized by top management” on the right side of the task title if it was authorized.</p>\r\n                \r\n                <p> In case, you don’t report, the extra time taken for these will be considered as your lacking (as they will remain unaccountable) and you will receive negative performance score.”</p>\r\n                */}\r\n                <div className='d-flex align-items-center'>\r\n                     <Button \r\n                        onClick={onConfirm} \r\n                        className='ml-auto'\r\n                        disabled={!buttonVisible}\r\n                      > \r\n                        Yes, I Fully Understand This {!buttonVisible && `(${countDown})`}\r\n                      </Button> \r\n                </div> \r\n           </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StartTimerConfirmationModal","import * as React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLessTrackModal } from \"../../../../services/features/subTaskSlice\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport Loader from \"../../../components/Loader\";\r\n\r\nconst StopTimerConfrimationPopUp = React.lazy(() =>\r\n    import(\"./StopTimerConfrimationPopUp\")\r\n);\r\n\r\nconst LessTrackTimerModal = ({ stopTimer, startTimer }) => {\r\n    const { task, lessTrackModal, lessTrackModalFor } = useSelector(\r\n        (s) => s.subTask\r\n    );\r\n    const dispatch = useDispatch();\r\n\r\n    const close = () => {\r\n        dispatch(setLessTrackModal({ show: false, type: \"\" }));\r\n    };\r\n\r\n    // temporarily stop timer now\r\n    const stopTimerTemporarily = () => {\r\n        if (lessTrackModalFor === \"STOP_TIMER\") {\r\n            stopTimer();\r\n        }\r\n\r\n        if (lessTrackModalFor === \"START_TIMER\") {\r\n            startTimer();\r\n        }\r\n\r\n        close();\r\n    };\r\n    // lessTrackModal\r\n    return (\r\n        <Modal isOpen={lessTrackModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <React.Suspense\r\n                    fallback={\r\n                        <div className=\"sp1_single_task--modal-panel\">\r\n                            <Loader />\r\n                        </div>\r\n                    }\r\n                >\r\n                    <StopTimerConfrimationPopUp\r\n                        handleTemporarilyStopTimer={stopTimerTemporarily}\r\n                        close={close}\r\n                    />\r\n                </React.Suspense>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default LessTrackTimerModal;\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const StartTimerWorkingReport = () => {\r\n    return(\r\n       <div>\r\n            <Title>You haven't submitted the last day's working report.</Title>\r\n            <Text> Do you want to submit the working report?</Text>\r\n            <Note><strong>Note:</strong> If you didn't submit last day's working report, you won't be able to start the timer</Note>\r\n       </div>\r\n    )\r\n}\r\n\r\n\r\nconst Title = styled.h1`\r\n    font-weight: 600;\r\n    font-size: 1.5rem;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Text = styled.p`\r\n    font-size: 1.1rem;\r\n    color: #ee3f07;\r\n`\r\n\r\nconst Note = styled.p`\r\n    font-size: 13px;\r\n    margin-top: 5px;\r\n    color: rgb(0 0 0 / 50%);\r\n    & > strong{\r\n        color:  #ee3f07;;\r\n    }\r\n`;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Button from \"../../components/Button\";\r\nimport StartTimerConfirmationModal from \"./StartTimerConfirmationModal\";\r\nimport {\r\n    useCheckWorkingReportMutation,\r\n    useLazyGetTaskDetailsQuery,\r\n    useLazyGetUserTrackTimeQuery,\r\n    useStartTimerApiMutation,\r\n    useStopTimerApiMutation\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport _ from \"lodash\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLessTrackModal, setTaskStatus } from \"../../../services/features/subTaskSlice\";\r\nimport LessTrackTimerModal from \"./stop-timer/LessTrackTimerModal\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { workingReportError } from \"../helper/timer-start-working-report-error-toaster\";\r\n\r\n\r\n\r\n\r\n// component\r\nconst TimerControl = ({ task, timerStart, setTimerStart, auth }) => {\r\n    const [timerId, setTimerId] = useState(null);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [isOpenConfirmationModal, setIsOpenConfirmationModal] =\r\n        useState(false); \r\n\r\n    const dispatch = useDispatch(); \r\n    const dayjs = new CompareDate(); \r\n    const loggedUser = new User(window?.Laravel?.user);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const timerStatus = task?.ranningTimer?.status;\r\n    const taskRunning = useMemo(() => timerStatus, [timerStatus])\r\n\r\n\r\n\r\n    // check timer is already running\r\n    useEffect(() => {\r\n        if (taskRunning === \"running\") {\r\n            let serverTime = task?.ranningTimer?.time;\r\n            let localTime = dayjs.dayjs().unix();\r\n            let timer = localTime - serverTime;\r\n            setTimerStart(true);\r\n            setSeconds(timer);\r\n            setTimerId(task?.ranningTimer?.id);\r\n        }\r\n    }, [taskRunning]);\r\n\r\n    //   timer control\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (timerStart) {\r\n            //   interval for timer\r\n            interval = setInterval(() => {\r\n                setSeconds((s) => s + 1);\r\n            }, 1000);\r\n        } else clearInterval(interval); // clear interval\r\n        return () => clearInterval(interval); // clear interval\r\n    }, [timerStart]);\r\n\r\n    // time formating\r\n    const timer = () => {\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const s = Math.floor((seconds % 3600) % 60);\r\n\r\n        // format\r\n        let sec = s < 10 ? `0${s}` : s;\r\n        let min = minutes < 10 ? `0${minutes}` : minutes;\r\n        let hr = hours < 10 ? `0${hours}` : hours;\r\n        return `${hr}:${min}:${sec}`;\r\n    };\r\n\r\n    // tostar\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 5000,\r\n        timerProgressBar: true,\r\n    });\r\n\r\n    /******** Start timer control *********/\r\n\r\n    // timer start first timer : checking api\r\n    const [\r\n        startTimerFirstCheck,\r\n        { isFetching: startTimerFirstCheckIsFetching },\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    // start timer api slice\r\n    const [startTimerApi, { isLoading: timerStartStatusIsLoading }] =\r\n        useStartTimerApiMutation();\r\n\r\n    // stop timer api slice\r\n    const [stopTimerApi, { isLoading: timerStopStatusIsLoading }] =\r\n        useStopTimerApiMutation();\r\n    \r\n    const [checkWorkReport] = useCheckWorkingReportMutation();\r\n\r\n    // timer start control\r\n    const startTimerControl = async() => {\r\n        setIsOpenConfirmationModal(false);\r\n\r\n        // check is developer submit their daily working report on previous day\r\n\r\n        try {\r\n           // check \r\n           const workReport = await checkWorkReport().unwrap();\r\n\r\n           // if submit all required report start timer\r\n           if(\r\n                workReport&&\r\n                workReport.data &&\r\n                workReport.data.check_in_check_out.check_in_status &&\r\n                workReport.data.daily_task_report.daily_submission_status &&\r\n                workReport.data.hours_log_report.hours_log_report_status\r\n           ){\r\n                await startTimerApi({\r\n                    task_id: task?.id,\r\n                    project_id: task?.projectId,\r\n                    memo: task?.title,\r\n                    user_id: window?.Laravel?.user?.id,\r\n                })\r\n                .unwrap()\r\n                .then(res => {\r\n                    if (res?.status === \"success\" || res?.status === 200) {\r\n                        setTimerStart(true);\r\n                        setTimerId(res?.id);\r\n                        dispatch(setTaskStatus(res?.task_status));\r\n                        Toast.fire({\r\n                            icon: 'success',\r\n                            title: _.startCase(res?.message),\r\n                        });\r\n                    } else {\r\n                        Toast.fire({\r\n                            icon: 'warning',\r\n                            title: _.startCase(res?.message),\r\n                        });\r\n                    }\r\n                }) \r\n           }else{\r\n            workingReportError();\r\n           }\r\n\r\n        } catch (error) {\r\n          console.log(error);  \r\n        }\r\n\r\n        /*\r\n        startTimerApi({\r\n            task_id: task?.id,\r\n            project_id: task?.projectId,\r\n            memo: task?.title,\r\n            user_id: window?.Laravel?.user?.id,\r\n        })\r\n            .unwrap()\r\n            .then((res) => {\r\n                  if (res?.status === \"success\" || res?.status === 200) {\r\n                    setTimerStart(true);\r\n                    setTimerId(res?.id);\r\n                    dispatch(setTaskStatus(res?.task_status));\r\n                    Toast.fire({\r\n                        icon: 'success',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                } else {\r\n                    Toast.fire({\r\n                        icon: 'warning',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => { \r\n                if(err.status === 400){\r\n                    if(err.data.acknowledgement_submitted === false){\r\n                        Swal.fire({\r\n                            title:  \"You have not meet last day's minimum hour count. Please share the reasons!\",\r\n                            showDenyButton: true,\r\n                            confirmButtonText: 'Yes',\r\n                            denyButtonText: `Close`,\r\n                            icon: 'warning'\r\n                          }).then((result) => {\r\n                            // Read more about isConfirmed, isDenied below\r\n                            if (result.isConfirmed) {\r\n                                dispatch(setLessTrackModal({\r\n                                    show: true, \r\n                                    type: 'START_TIMER', \r\n                                    date: dayjs.dayjs(err?.data?.date).format(\"MMM DD, YYYY\"),\r\n                                }))\r\n                            } \r\n                          })\r\n                     }\r\n                     \r\n                     else if(err.data.daily_submission_submitted === false){\r\n                        Swal.fire({\r\n                            title:  \"You didn't submit last day daily submission\",\r\n                            showDenyButton: true,\r\n                            confirmButtonText: 'Yes',\r\n                            denyButtonText: `Close`,\r\n                            icon: 'warning'\r\n                          }).then((result) => {\r\n                            // Read more about isConfirmed, isDenied below \r\n                            if (result.isConfirmed) {\r\n                                navigate(`?modal=daily-submission&date_type=last-date`)\r\n                            } \r\n                          })\r\n                     }\r\n    \r\n                } \r\n            });\r\n        */\r\n    };\r\n\r\n    // start timer function\r\n    const startTimer = (e) => {\r\n        e.preventDefault();\r\n        \r\n        startTimerFirstCheck(\r\n            `/${task?.id}/json?mode=developer_first_task_check&project_id=${task?.projectId}`\r\n        )\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res.is_first_task) {\r\n                    setIsOpenConfirmationModal(true);\r\n                } else startTimerControl();\r\n            })\r\n    };\r\n\r\n    \r\n\r\n    /*********** End of Start Timer control ***************/\r\n\r\n    // stop timer\r\n    const stopTimer = () => { \r\n        //navigate(`/account/tasks/${task?.id}?modal=daily-submission&trigger=stop-button`); \r\n        stopTimerApi({ timeId: timerId })\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res?.status === \"success\" || res?.status === 200) {\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                    setTimerStart(false);\r\n                    setSeconds(0);\r\n                    timerId(null);\r\n                } else {\r\n                    Toast.fire({\r\n                        icon: 'warning',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                }\r\n            });\r\n    }; \r\n    const [getUserTrackTime, {\r\n        isFetching: trackTimerFetcing\r\n    }] = useLazyGetUserTrackTimeQuery();\r\n\r\n    // handle stop timer \r\n    const handleStopTimer = () => {\r\n        // fetch data\r\n        getUserTrackTime(loggedUser?.getId())\r\n        .unwrap()\r\n        .then(res => { \r\n            if(res){\r\n                let currentTime = dayjs.dayjs(res.current_time);\r\n                let target = currentTime.set('hour', 16).set('minute', 45).set('second', 0);\r\n                const isSaturday = currentTime.day() === 6;\r\n\r\n                if(isSaturday){\r\n                    target = currentTime.set('hour', 13).set('minute', 0).set('second', 0);\r\n                }\r\n\r\n                let check = dayjs.dayjs(currentTime).isBefore(target);\r\n                let isDev = _.includes([5, 9 , 10], Number(auth?.getRoleId()));\r\n                if(!check && isDev){\r\n                    res.tracked_times < res.target_time ?  dispatch(setLessTrackModal({show: true, type: 'STOP_TIMER', date: 'Today'})) : stopTimer()\r\n                }else{\r\n                    stopTimer();\r\n                }\r\n            }\r\n            \r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    // control loading states...\r\n    useEffect(() => {\r\n        if (startTimerFirstCheckIsFetching || timerStartStatusIsLoading) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [startTimerFirstCheckIsFetching, timerStartStatusIsLoading]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!timerStart ? (\r\n                <React.Fragment>\r\n                    {!timerStartStatusIsLoading &&\r\n                    !startTimerFirstCheckIsFetching ? (\r\n                        <Button\r\n                            variant=\"tertiary\"\r\n                            onClick={startTimer}\r\n                            className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                        >\r\n                            <i className=\"fa-solid fa-circle-play\" />\r\n                            <span>Start Timer</span> \r\n                        </Button>\r\n                    ) : (\r\n                        <Button className=\"cursor-processing mr-2\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{ width: \"18px\", height: \"18px\" }}\r\n                            ></div>\r\n                            Starting...\r\n                        </Button>\r\n                    )}\r\n                    <StartTimerConfirmationModal\r\n                        isOpen={isOpenConfirmationModal}\r\n                        onConfirm={startTimerControl}\r\n                    />\r\n                </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                    >\r\n                        <i className=\"fa-solid fa-stopwatch\" />\r\n                        <span className=\"d-inline ml-1\">{timer()}</span>\r\n                    </Button>\r\n\r\n                    {/* <StopTimerControl\r\n                        stopTimer={stopTimer}\r\n                        timerStopStatusIsLoading={timerStopStatusIsLoading}\r\n                    /> */}\r\n\r\n                    {\r\n                        trackTimerFetcing ? \r\n                        (\r\n                            <Button className=\"cursor-processing\">\r\n                                <div\r\n                                    className=\"spinner-border text-white\"\r\n                                    role=\"status\"\r\n                                    style={{ width: \"18px\", height: \"18px\" }}\r\n                                />\r\n                                Processing...\r\n                            </Button>\r\n                        ):\r\n\r\n                        !timerStopStatusIsLoading ? (\r\n                            <Button\r\n                                variant=\"tertiary\"\r\n                                onClick={handleStopTimer}\r\n                                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                            >\r\n                                <i className=\"fa-solid fa-pause\" />\r\n                                <span className=\"d-inline ml-1\">Stop Timer</span>\r\n                            </Button>\r\n                        ) : (\r\n                            <Button className=\"cursor-processing\">\r\n                                <div\r\n                                    className=\"spinner-border text-white\"\r\n                                    role=\"status\"\r\n                                    style={{ width: \"18px\", height: \"18px\" }}\r\n                                />\r\n                                Stopping...\r\n                            </Button>\r\n                        )\r\n                    } \r\n                </React.Fragment>\r\n            )}\r\n\r\n\r\n            {/* LessTrackTimerModal */}\r\n            <LessTrackTimerModal stopTimer={stopTimer} startTimer={startTimerControl} />\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TimerControl\r\n","import Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport { StartTimerWorkingReport } from '../../components/StartTimerWorkingReportPopup'\r\n\r\n\r\nexport const workingReportError = () => {\r\n    withReactContent(Swal).fire({\r\n        icon: 'error',\r\n        html: <StartTimerWorkingReport />,\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'No',\r\n        customClass: {\r\n            confirmButton: 'btn btn-primary py-2 px-4',\r\n            cancelButton: 'btn py-2 px-4 text-white'\r\n        },\r\n    }).then(result => {\r\n        if(result.isConfirmed){\r\n            window.location.reload();\r\n        }\r\n    })\r\n}\r\n","import React, {useState, useRef} from 'react'\r\nimport Button from '../../../components/Button'\r\nimport Modal from '../../../components/Modal';\r\nimport { useClickAway } from 'react-use';\r\nimport { useSubmitForClientApprovalMutation } from '../../../../services/api/SingleTaskPageApi';\r\nimport Loader from '../../../components/Loader';\r\n\r\nexport const SubmitForClientApproval = ({task, auth}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const closeModal = () => setIsOpen(false)\r\n  const openModal = () => setIsOpen(true)\r\n  const ref = useRef();\r\n  useClickAway(ref, closeModal);\r\n\r\n\r\n  const [submitForClientApproval, {isLoading}] = useSubmitForClientApprovalMutation();\r\n\r\n\r\n  const handleOnSubmit = ()=>{\r\n    submitForClientApproval({task_id: task?.id, user_id: auth?.getId()})\r\n    .unwrap()\r\n    .then(res => {\r\n      Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: 'Submitted Task For Client Approval Successfully',\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n      });\r\n    })\r\n    .catch(err => console.log(err))\r\n    .finally(() => closeModal())\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <React.Fragment>\r\n          {\r\n            isLoading ? \r\n            <React.Fragment>\r\n              <div className=\"cursor-processing cnx__btn cnx__btn_sm cnx__btn_primary\">\r\n                    <div\r\n                        className=\"spinner-border text-white\"\r\n                        role=\"status\"\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                        }}\r\n                    ></div>\r\n                    Processing...\r\n                </div>\r\n            </React.Fragment>\r\n            :\r\n              <Button \r\n                  variant='success'\r\n                  onClick={openModal}\r\n                  className='d-flex align-items-center border-success'\r\n              >\r\n                  <i className=\"fa-solid fa-handshake-angle\"></i>\r\n                  <span className=\"d-inline ml-1\">Submit For Client Approval</span>\r\n              </Button> \r\n          }\r\n        </React.Fragment>\r\n        <Modal isOpen={isOpen} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n              <div \r\n                ref={ref}\r\n                className=\"sp1_single_task--modal-panel position-absolute p-2 mb-3\"\r\n                style={{top:'50%', left:'50%',transform:'translate(-50%, -50%)', width: '250px'}}\r\n              >\r\n                {!isLoading &&\r\n                  <div className='d-flex align-items-center border-bottom pb-1'>\r\n                    <Button variant='tertiary' onClick={closeModal} className='ml-auto border-0'>\r\n                      <i className='fa-solid fa-xmark' />\r\n                    </Button>\r\n                </div>\r\n                }\r\n                <div className='d-flex flex-column align-items-center p-2' style={{gap:'10px'}}>\r\n                  {isLoading && \r\n                    <React.Fragment>\r\n                      <Loader title='Submitting...' />\r\n                    </React.Fragment>\r\n                  }\r\n                  \r\n                  {!isLoading &&\r\n                    <React.Fragment>\r\n                      <img src='/img/warning.gif' alt='' style={{width: '50px', height: '50px'}}/>\r\n                      <div className='d-flex flex-column aling-items-center'>\r\n                        <h5 className='d-block mb-3'>Are You Sure?</h5>\r\n                        <div className='d-flex align-items-center justify-content-center'>\r\n                          <Button onClick={handleOnSubmit} className='mr-2 py-0'>Yes</Button>\r\n                          <Button variant='tertiary' onClick={closeModal} className='py-0'>No</Button>\r\n                        </div>\r\n                      </div>\r\n                   </React.Fragment>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Button from '../../../components/Button'\r\nimport { useConfirmClientApprovalMutation } from '../../../../services/api/SingleTaskPageApi'\r\nimport SubmitButton from '../../../components/SubmitButton';\r\n\r\nconst ClientAcceptedTask = ({task}) => { \r\n\r\n  const [confirmClientApproval, {isLoading}] = useConfirmClientApprovalMutation();\r\n\r\n  const handleClick=(e)=>{\r\n    e.preventDefault();\r\n    confirmClientApproval({\r\n        task_id: task?.id\r\n    }).unwrap()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <SubmitButton \r\n            onClick={handleClick}\r\n            variant='success'\r\n            isLoading={isLoading}\r\n            className='d-flex align-items-center border-success'\r\n        >\r\n            <i className=\"fa-solid fa-check\"></i>\r\n            <span className=\"d-inline ml-1\">Client Has Accepted This Task</span>\r\n        </SubmitButton>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientAcceptedTask","import React, { useState, useRef } from \"react\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport Button from \"../../../components/Button\";\r\nimport { useCreateRevisionMutation } from \"../../../../services/api/SingleTaskPageApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setTaskStatus } from \"../../../../services/features/subTaskSlice\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\n\r\n\r\n\r\nconst projectManagerAcknowladgement = [\r\n    {\r\n        id: \"CPRx01\",\r\n        title: 'Client added some additional requirements which was not part of the actual job scope',\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'PLRx12',\r\n        title: 'I submitted the work without proper checking and overlooked the issues',\r\n        isDeniable: true,\r\n    },\r\n    {\r\n        id: 'PLRx03',\r\n        title: 'I couldnt understand clients expectation properly earlier',\r\n        isDeniable: false\r\n    },\r\n    {\r\n        id: 'PLRx04',\r\n        title: 'I didnt understand the job properly as it’s very technical in nature and relied fully on technical team for success',\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'CPRx05',\r\n        title: \"The client didnt change his instruction but his interpretation of the original instruction now is weird and nobody could have interpreted it this way from his instruction\",\r\n        isDeniable: false,\r\n        createDispute: true,\r\n    },\r\n    {\r\n        id: 'CPRx06',\r\n        title: \"The client is asking for some minor changes which he couldn’t specify until he saw the completed work and we can’t charge him for these\",\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'SPRx01',\r\n        title: \"Sales person discussed something in a verbal meeting with the client and then forgot to document it when assigning\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    },\r\n    {\r\n        id: 'SPRx02',\r\n        title: \"Sales person couldn't define requirement properly and I also failed to define it after I took over\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    },\r\n    {\r\n        id: 'SPRx03',\r\n        title: \"Sales overpromised: This task is not doable to this extent or in this way and I informed management about it on day 1\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    }\r\n]\r\n\r\n\r\nconst AssigneeToLeadFromClientRevision = ({ close, onBack, onSubmit, task, auth, isSubmitting }) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [additionalPaid, setAdditionalPaid] = useState('');\r\n    const [additionalInfo, setAdditionalInfo] = useState(null);\r\n    const [additionalAmount, setAdditionalAmount] = useState(0);\r\n    const [additionalError, setAdditionalError] = useState('');\r\n\r\n    // radio button change\r\n    const handleChange = (e, reason) => {\r\n        setReason(reason);\r\n        setAdditionalAmount(0);\r\n        setAdditionalPaid('');\r\n        setAdditionalInfo(null);\r\n    };\r\n\r\n\r\n    // on blur\r\n    const handleBlurEvent = () => {\r\n        Swal.fire({\r\n            title: 'Do you want to create a milestone?',\r\n            // showDenyButton: true,\r\n            confirmButtonText: 'Yes',\r\n            // denyButtonText: `No`,\r\n            }).then(res => {\r\n            if(res.isConfirmed){\r\n                window.open(`/account/projects/${task?.projectId}?tab=milestones`, '_blank');\r\n            }\r\n        })\r\n    }\r\n\r\n    // additional payment\r\n    const hasAdditionalPayment = (isPay) =>{\r\n        setAdditionalPaid(() => isPay ? 'yes': 'no');\r\n    }\r\n\r\n    // editor change text\r\n    const handleEditorTextChange= (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    }\r\n\r\n    // validation\r\n    const validate = () => {\r\n       let errorCount = 0;\r\n\r\n       if(comment === \"\"){\r\n            errorCount++;\r\n            setCommentError('You have to explain the revision in details, so that lead developer can understand where they need to work.')\r\n       }\r\n\r\n       if(!reason){\r\n            errorCount++;\r\n            setReasonError('You have to select a reason from above options')\r\n       }\r\n\r\n\r\n       if(reason && reason?.id === 'CPRx01'){\r\n            if(additionalPaid === 'yes' && additionalAmount === 0){\r\n                errorCount++;\r\n                setAdditionalError('You have to provide amount')\r\n            }\r\n\r\n            if(additionalPaid === 'no' && !additionalInfo){\r\n                errorCount++;\r\n                setAdditionalError('You have to select an option')\r\n            }\r\n       }\r\n\r\n       return errorCount === 0;\r\n    }\r\n\r\n\r\n    // handle submission\r\n    const handleSubmission=(e)=>{\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        const data = {\r\n            acknowledgement_id: reason?.id ,\r\n            task_id: task?.id,\r\n            user_id: auth?.id,\r\n            is_deniable: reason?.isDeniable,\r\n            revision_acknowledgement: reason?.title,\r\n            comment: comment,\r\n            additional_amount: Number(additionalAmount),\r\n            additional_status: additionalPaid,\r\n            additional_comment: additionalInfo?.info ?? '',\r\n            dispute_create: reason?.createDispute || additionalInfo?.disputeCreate || false\r\n        }\r\n\r\n        if(validate()){\r\n            onSubmit(data);\r\n        }else{\r\n            console.log('Your forgot to fillup some required fields')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <form className=\"px-3\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select Reason for Revision<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {\r\n                                _.map(projectManagerAcknowladgement, option => (\r\n                                    <div key={option.id} className=\"form-check d-flex align-items-start mb-2\">\r\n                                        <input\r\n                                            className=\"form-check-input mr-2\"\r\n                                            type=\"radio\"\r\n                                            name=\"exampleRadios\"\r\n                                            id={option.id}\r\n                                            required= {true}\r\n                                            onChange={e => handleChange(e, option)}\r\n                                            value={option.title}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n\r\n                                        />\r\n                                        <label\r\n                                            className=\"form-check-label\"\r\n                                            htmlFor={option.id}\r\n                                            style={{ marginBottom: \"3px\" }}\r\n                                        >\r\n                                           {option.title}\r\n                                        </label>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        {reasonError && <small id=\"emailHelp\" className=\"form-text text-danger\">{reasonError}</small>}\r\n                    </div>\r\n\r\n                    {reason?.id === 'CPRx01' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Is the client paying additionally for these changes? <sup>*</sup></label>\r\n                            <div className=\"d-block\">\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"milestone\"\r\n                                            type=\"radio\"\r\n                                            id=\"createMilestoneYes\"\r\n                                            value=\"1\"\r\n                                            onChange={(e)=>hasAdditionalPayment(true)}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"createMilestoneYes\" className=\"form-check-label\">Yes</label>\r\n                                    </div>\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"milestone\"\r\n                                            type=\"radio\"\r\n                                            id=\"createMilestoneNo\"\r\n                                            value=\"0\"\r\n                                            onChange={(e) => hasAdditionalPayment(false)}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"createMilestoneNo\" className=\"form-check-label\">No</label>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {additionalPaid === 'yes' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Amount? <sup>*</sup></label>\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">$</div>\r\n                                </div>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onChange={e => setAdditionalAmount(e.target.value)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inlineFormInputGroup\"\r\n                                    placeholder=\"300\"\r\n                                    onBlur={handleBlurEvent}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        additionalPaid === 'no' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Is the client paying additionally for these changes? <sup>*</sup></label>\r\n                            <div className=\"d-block\">\r\n                                    <div className=\"form-check mb-3\">\r\n                                        <input\r\n                                            name=\"additionalInformation\"\r\n                                            className=\"form-check-input\"\r\n                                            type=\"radio\"\r\n                                            id=\"additionalInformation1\"\r\n                                            onChange={e => setAdditionalInfo({\r\n                                                info: e.target.value,\r\n                                                disputeCreate: false,\r\n                                            })}\r\n                                            value=\"Client changed his/her mind and he/she don't want to pay additional payment. We have to continue the task for client satisfaction\"\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"additionalInformation1\" className=\"form-check-label\">\r\n                                            Client changed his/her mind and he/she don't want to pay additional payment. We have to continue the task for client satisfaction\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"additionalInformation\"\r\n                                            type=\"radio\"\r\n                                            id=\"additionalInformation2\"\r\n                                            value=\"The client is interpreting his original instruction in a very unusual way!\"\r\n                                            onChange={(e) => setAdditionalInfo({\r\n                                                info: e.target.value,\r\n                                                disputeCreate: true,\r\n                                            })}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"additionalInformation2\" className=\"form-check-label\">\r\n                                        The client is interpreting his original instruction in a very unusual way!\r\n                                        </label>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    { additionalError && <div className=\"mb-3\">\r\n                        <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                            {additionalError}\r\n                        </small>\r\n                    </div>}\r\n\r\n                    {/* Editor  */}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Explain or Comment<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"ck-editor-holder\">\r\n                            <CKEditorComponent onChange={handleEditorTextChange}/>\r\n                        </div>\r\n                        {commentError && <small id=\"emailHelp\" className=\"form-text text-danger\">{commentError}</small>}\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button onClick={onBack} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                Back\r\n                            </Button>\r\n                            <SubmitButton title=\"Submit\" onClick={handleSubmission} isLoading={isSubmitting} />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AssigneeToLeadFromClientRevision;\r\n","import React, {useState, lazy, Suspense} from 'react'\r\nimport Button from '../../../components/Button' \r\nimport Modal from '../../../components/Modal';\r\nimport { SingleTask } from '../../../../utils/single-task';\r\nimport ClientRevisionForm from './ClientRevisionForm';\r\nimport AssigneeToLeadFromClientRevision from './AssigneeToLeadFromClientRevision';\r\nimport { useStoreClientRevisionTaskMutation } from '../../../../services/api/SingleTaskPageApi';\r\n\r\nconst ClientRevision = ({task, auth}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const [show,setShow] = useState('ASSINEE_TO_DEV');\r\n    \r\n    const singleTask = task;\r\n\r\n    // client revision data\r\n    const [clientComment, setClientComment] = useState('');\r\n    const [clientAcknowledgement, setClientAcknowladgement] = useState('');\r\n\r\n\r\n    const [storeClientRevisionTask, {isLoading}] = useStoreClientRevisionTaskMutation();\r\n\r\n    const handleSubmit = (data) => {\r\n       setClientAcknowladgement(data?.reason);\r\n       setClientComment(data?.comment); \r\n       setShow('ASSINEE_TO_DEV'); \r\n    }\r\n\r\n    const close = () => {\r\n        setRevisionModal(false)\r\n    }\r\n\r\n    const handleSubmitToStore = (data) =>{\r\n        const fData = {\r\n            ...data,\r\n            project_id: task?.projectId\r\n        }\r\n  \r\n        // show toster notification\r\n        const showToster= () =>{\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n            }) \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Task submitted for Revision successfully'\r\n            })\r\n        }\r\n    \r\n        storeClientRevisionTask(fData)\r\n        .unwrap()\r\n        .then(res => showToster())\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    \r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn sp1-st-revision-btn'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Client Has Revision</span>\r\n        </Button> \r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <div\r\n                    className=\"sp1_single_task--modal-panel w-100 pb-3\"\r\n                    style={{ maxWidth: \"550px\" }}\r\n                >\r\n                    <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <div className=\"font-weight-bold f-14\">\r\n                            Task#{task?.id} - Client Revision\r\n                        </div>\r\n                        <Button onClick={close} className=\"\">\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {/* {show === 'CLIENT_REVISION' && \r\n                        <ClientRevisionForm \r\n                            task={singleTask}\r\n                            close={() => setRevisionModal(false)} \r\n                            onSubmitForm={(data) => handleSubmit(data)}\r\n                        />\r\n                    }  */}\r\n                    {/* {show === \"ASSINEE_TO_DEV\" && */}\r\n                        <AssigneeToLeadFromClientRevision \r\n                            task={task}\r\n                            auth={auth}\r\n                            isSubmitting = {isLoading}\r\n                            onSubmit={handleSubmitToStore}\r\n                            close={() => setRevisionModal(false)}\r\n                            onBack={() => setShow('CLIENT_REVISION')}\r\n                        />\r\n                    {/* }  */}\r\n                </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientRevision \r\n\r\n","import React from 'react'\r\nimport { SubmitForClientApproval } from './SubmitForClientApproval'\r\nimport ClientAcceptedTask from './ClientAcceptedTask'\r\nimport { SingleTask } from '../../../../utils/single-task'\r\nimport ClientRevision from '../Revision/ClientRevision'\r\nimport { submitForClientApproval, clientApproveConfirmationButtonPermission } from '../../../permissions'\r\n\r\nconst ClientApproval = ({task, status, auth}) => {\r\n  return (\r\n    <React.Fragment>\r\n        { submitForClientApproval({task, status, auth}) && <SubmitForClientApproval task={task} auth={auth} /> }\r\n        { clientApproveConfirmationButtonPermission({task, status, auth}) && \r\n          <React.Fragment>\r\n            <ClientAcceptedTask task={task} auth={auth} />\r\n            <ClientRevision task={task} auth={auth} />\r\n          </React.Fragment>\r\n        }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientApproval","import React, { useState, lazy, Suspense } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport { SingleTask } from \"../../../../utils/single-task\";\r\nimport Loader from \"../../../components/Loader\";\r\nconst ReportForm = lazy(() => import(\"./ReportForm\"));\r\n\r\nconst ReportControl = ({ task }) => {\r\n    const [reportModalOpen, setReportModalOpen] = useState(false); \r\n\r\n    const close = () => setReportModalOpen(false);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={() => setReportModalOpen(true)}\r\n                className=\"ml-auto d-flex align-items-center sp1-st-revision-btn --view-revision sp1_report_btn\"\r\n            >\r\n                <i className=\"fa-solid fa-flag\"></i>\r\n                <span className=\"d-inline ml-1\">Report</span>\r\n            </Button>\r\n\r\n            <Modal isOpen={reportModalOpen} className=\"sp1_single_task--modal\">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_single_task--modal-panel task-report-form--modal-panel\"\r\n                    >\r\n                        <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                            <div className=\"font-weight-bold f-14\">\r\n                                Task#{task?.id} : Report\r\n                            </div>\r\n                            <Button onClick={close} className=\"\">\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n                        <Suspense fallback={<div className=\"py-3 d-flex align-items-center justify-content-center\"><Loader /></div>}>\r\n                            <ReportForm task={task} close={close} />\r\n                        </Suspense>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ReportControl;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { useDeveloperCanCompleteTaskQuery, useLazyCheckSubTaskTimerQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useDailySubmission } from \"../../../single-task/hooks/useDailySubmission\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport {\r\n    approveButtonPermission,\r\n    markAsCompletedButtonPermission,\r\n    needRevisionPermision,\r\n    revisionButtonPermission,\r\n    timeControlPermision\r\n} from \"../../permissions\";\r\nimport DailySubmissionControl from './DailySubmissionControl';\r\nimport MarkAsComplete from \"./MarkAsComplete\";\r\nimport RevisionControl from \"./Revision/RevisionControl\";\r\nimport RevisionViewControl from \"./Revision/RevisionViewControl\";\r\nimport SubtaskCreationControl from \"./SubtaskCreationControl\";\r\nimport TimerControl from \"./TimerControl\";\r\nimport ApproveTask from \"./approve-task/ApproveTask\";\r\nimport ClientApproval from \"./client-approval/ClientApproval\";\r\nimport ReportControl from \"./report/Report\";\r\n\r\nconst TaskAction = ({ task, status }) => {\r\n    const loggedUser = new User(window?.Laravel?.user);\r\n    const [timerStart, setTimerStart] = React.useState(false);\r\n    const { isEnable } = useDailySubmission();\r\n\r\n\r\n    const [checkSubTaskTimer, { isFetching }] = useLazyCheckSubTaskTimerQuery();\r\n\r\n    const {  data: checkMarkAsCompleteEnableStatus, isLoading: isLoadingCompleteCheck } = useDeveloperCanCompleteTaskQuery(task?.id, {skip: !task.id});\r\n    const ENABLE_MARKASCOMPLETE_BUTTON = task && (task?.isSubtask ? checkMarkAsCompleteEnableStatus?.message === \"Developer can complete this task\" : true);\r\n\r\n    // console.log({task});\r\n\r\n\r\n    const onModalEditButtonClick = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(task?.id)\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res?.status === 200) {\r\n                    window.location = `/account/tasks/${task?.id}/edit`;\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Oops...\",\r\n                        text: \"You cannot edit the task because timer is already running\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    let time = task.isSubtask ? task?.parentTaskTimeLog : task?.totalTimeLog;\r\n\r\n    return (\r\n        <div\r\n            className=\"d-flex flex-wrap border-bottom pb-3 sp1_task_btn_group\"\r\n            style={{ gap: \"10px\" }}\r\n        >\r\n            {/* with permission */}\r\n            {timeControlPermision({ task, status, loggedUser }) ? (\r\n                <TimerControl\r\n                    task={task}\r\n                    timerStart={timerStart}\r\n                    setTimerStart={setTimerStart}\r\n                    auth={loggedUser}\r\n                />\r\n            ) : null}\r\n            {!timerStart && !isLoadingCompleteCheck &&\r\n            ENABLE_MARKASCOMPLETE_BUTTON && markAsCompletedButtonPermission({ task, status, loggedUser }) ? (\r\n                <MarkAsComplete task={task} auth={loggedUser} />\r\n            ) : null}\r\n\r\n\r\n            {/* develop */}\r\n            {approveButtonPermission({ task, status, loggedUser }) ? (\r\n                <ApproveTask task={task} status={status} auth={loggedUser} />\r\n            ) : null}\r\n\r\n            {needRevisionPermision({ task, status, loggedUser }) ? (\r\n                <RevisionControl task={task} auth={loggedUser} />\r\n            ) : null}\r\n\r\n            {/*  */}\r\n            {revisionButtonPermission({ task, status, loggedUser }) && (\r\n                <RevisionViewControl\r\n                    task={task}\r\n                    status={status}\r\n                    auth={loggedUser}\r\n                />\r\n            )}\r\n            {/* <TimeExtension task={task} /> */}\r\n            <ClientApproval task={task} status={status} auth={loggedUser} />\r\n\r\n             {/* daily submission control */}\r\n             {_.includes([5, 9, 10], loggedUser?.getRoleId()) && isEnable && (\r\n                <DailySubmissionControl />\r\n             )}\r\n\r\n\r\n\r\n            {/* right side button container */}\r\n            <div style={{display:'inline-flex',marginLeft:'auto',gap:'0 10px'}}>\r\n\r\n                {/* Subtask creation guideline */}\r\n                {_.includes([6, 4, 1], loggedUser?.getRoleId()) && !task?.isSubtask &&  <SubtaskCreationControl />}\r\n\r\n\r\n                {/*********** Report Control ***********/}\r\n                {_.includes([6, 5, 9, 10], loggedUser?.getRoleId()) && (\r\n                    <ReportControl task={task} />\r\n                )}\r\n\r\n\r\n                {/* {taskEditPermision({ task, status, auth: loggedUser }) && (\r\n                    <Link\r\n                        to={`?modal=edit&task=${task?.id}`}\r\n                        onClick={onModalEditButtonClick}\r\n                        className=\"cnx__btn cnx__btn_sm cnx__btn_primary sp1_task-edit-button\"\r\n                        style={{\r\n                            marginLeft: 'none'\r\n                        }}\r\n                    >\r\n                        {isFetching ? (\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgb(255, 255, 255)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                }}\r\n                            />\r\n                        ) : (\r\n                            <i className=\"fa-regular fa-pen-to-square\"></i>\r\n                        )}\r\n                        <span className=\"ml-1 mr-2\">Edit</span>\r\n                    </Link>\r\n                )} */}\r\n\r\n                {/* {task &&  task.boardColumn.id === 2 && !(_.includes([5, 6], loggedUser?.getRoleId()))  &&\r\n                    <Link\r\n                        to={`?modal=edit&task=${task?.id}`}\r\n                        className=\"cnx__btn cnx__btn_sm cnx__btn_primary sp1_task-edit-button\"\r\n                        style={{\r\n                            marginLeft: 'none'\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-regular fa-pen-to-square\" />\r\n                        Edit\r\n                    </Link>\r\n                } */}\r\n            </div>\r\n\r\n            {/* {{-- 3 dot --}} */}\r\n            {/* <button type=\"button\" className=\"d-flex align-items-center btn btn-sm btn-outline-dark mr-2 border-0 ml-auto\">\r\n                <i className=\"bi bi-three-dots\" ></i>\r\n            </button> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskAction;\r\n","import { User } from \"../../../utils/user-details\";\r\nimport dayjs from 'dayjs';\r\n\r\nconst TableRow = ({log}) => {\r\n    const user = log?.user ? new User(log.user) : null;\r\n    return(\r\n        <tr className='__tbody_tr'>\r\n            <td className='__tbody_td _tbody_td_employee'>\r\n                <img src={user?.getAvatar()} alt={user?.getName()} />\r\n                <span className='px-2'>{user?.getName()}</span>\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_start_time'>\r\n                {dayjs(log?.start_time).format('MMM DD, YYYY')} <br/>\r\n                {dayjs(log?.start_time).format('hh:mm a')}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_start_time _tbody_td_start_end'>\r\n                {log?.end_time ? <>\r\n                    {dayjs(log?.end_time).format('MMM DD, YYYY')} <br/>\r\n                    {dayjs(log?.end_time).format('hh:mm a')}\r\n                </> : <span className='text-success font-weight-bold'>Active</span>}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_memo'>\r\n                {log?.memo}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_hour_logged'>\r\n                {log?.hours_logged}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow\r\n","import React from \"react\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from '../../components/Modal';\r\n\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport TableRow from \"./InnerTableRow\";\r\nimport _ from \"lodash\";\r\nimport Avatar from \"../../../global/Avatar\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\nimport Button from \"../../components/Button\";\r\n\r\n\r\n\r\n\r\nconst Table = ({data}) => {\r\n    return(\r\n        <table className=\"sp1_subtask_log-tbl\">\r\n            <thead className=\"__thead\">\r\n                <tr>\r\n                    <th>Employee</th>\r\n                    <th>Start Time</th>\r\n                    <th>End Time</th>\r\n                    <th>Memo</th>\r\n                    <th>Hours Logged</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"__tbody\">\r\n                {data\r\n                    ? data.map((log) => (\r\n                        <TableRow key={log.id} log={log} />\r\n                    ))\r\n                    : null}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\n\r\nconst Card = ({log, className}) => {\r\n    const user = new User(log.user);\r\n    return(\r\n        <div className={`border-bottom ${className}`}>\r\n            <div className=\"d-flex align-items-center\" style={{gap:'10px'}}>\r\n                <Avatar \r\n                    src={user?.getAvatar()} \r\n                    name={user?.getName()} \r\n                    alt={user?.getName()} \r\n                    type=\"circle\"\r\n                /> \r\n                <h6>{user?.getName()}</h6>\r\n            </div>\r\n            <div className=\"d-flex flex-column flex-wrap ml-5\" style={{gap: '4px'}}>\r\n                <span><span className=\"font-weight-bold\">Memo:</span> {log?.memo}</span>\r\n                <span><span className=\"font-weight-bold\">Hours Logged:</span> {log?.hours_logged}</span>\r\n                <span><span className=\"font-weight-bold\">Start Time:</span> {dayjs(log?.start_time).format('MMM DD, YYYY hh:mm a')} </span>\r\n                <span><span className=\"font-weight-bold\">End Time:</span> {dayjs(log?.end_time).format('MMM DD, YYYY hh:mm a')} </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CardView = ({data}) => {\r\n    return(\r\n        <div className=\"d-flex flex-column\" style={{gap: '10px'}}>\r\n            {_.map(data, (log) =>(\r\n                    <Card log={log} key={log.id} className=\"w-100 py-2\" />\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\nconst TimeLogTable = ({ isOpen, close, toggle, data = [] }) => {\r\n    const ref = React.useRef(null);\r\n    const {width: deviceWidth} = useWindowSize();\r\n    useClickAway(ref, close);\r\n\r\n\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\"> \r\n                <div className='sp1-subtask-form --modal-panel-header'> \r\n                    <h6>Session Logs</h6> \r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button> \r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <div className=\"mt-3\">\r\n                        {deviceWidth > 800 ? <Table data={data} />: <CardView data={data} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if(deviceWidth > 1200){\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </CustomModal>\r\n        );\r\n    }else{\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </Modal>\r\n        );\r\n    }\r\n\r\n};\r\nexport default TimeLogTable;\r\n","import React from 'react'\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst TimeLogItemLoader = ({}) => {\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item py-2\" style={{gap: '10px', height: '30px'}}>\r\n        <div className='d-flex align-items-center'>\r\n            <Placeholder width=\"24px\" height=\"24px\" type='circle' className='mr-2' />\r\n            <span className='sp1_time_log_emplyee_name'>\r\n                <Placeholder width='100px' />\r\n            </span>\r\n        </div> \r\n\r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div> \r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div>\r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeLogItemLoader","import React, {lazy, Suspense} from 'react'\r\nconst TimeLogItem = lazy(() => import('./TimeLogItem'));\r\nimport TimeLogTable from './TimeLogTable';\r\nimport { useDispatch, useSelector } from 'react-redux'; \r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport { storeTimeLogs } from '../../../services/features/subTaskSlice';\r\nimport { Placeholder } from '../../../global/Placeholder';\r\nimport TimeLogItemLoader from './TimeLogItemLoader';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\n\r\nconst TimeLogSection = () => {\r\n  const {task, timeLogs} = useSelector(s => s.subTask);\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n  // get data\r\n    // fetch all task \r\n    const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n      skip: timeLogs?.length\r\n    }) \r\n  \r\n    // if task notes fetch completed store data into redux store\r\n    React.useEffect(()=> {\r\n      if(task && task.id){\r\n        getTaskDetails(`/${task?.id}/json?mode=task_time_log`)\r\n        .unwrap()\r\n        .then(res => {\r\n          if(res){\r\n            dispatch(storeTimeLogs(res));\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      } \r\n    }, [task]); \r\n    \r\n\r\n    // control modal\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const close = () => setIsOpen(false);\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3'  \r\n    ref={setModalRefButton} style={{zIndex: isOpen ? '99' : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Session Logs</span> \r\n        {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n        {_.size(timeLogs) > 0 &&\r\n          <button \r\n              aria-label='openCommentModalButton'\r\n              className='sp1_task_right_dl_toggle'\r\n              onClick={toggle}\r\n              style={{zIndex: isOpen ? 110 : ''}}\r\n            >\r\n              <i \r\n                className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n                style={{color: \"#276fec\"}} \r\n              />\r\n          </button>}\r\n        {/* side drop toggle button end */}\r\n\r\n\r\n          <TimeLogTable\r\n            isOpen={isOpen}\r\n            close={close}\r\n            toggle={modalRefButton}\r\n            data={timeLogs}\r\n          />\r\n\r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          { _.size(timeLogs) > 0 ?\r\n            _.map(timeLogs, log => (\r\n              <React.Fragment key={log.id}>\r\n                <Suspense fallback={<TimeLogItemLoader />}>\r\n                  <TimeLogItem log={log}/>\r\n                </Suspense>\r\n              </React.Fragment>\r\n            )):\r\n            <div\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{\r\n                    color: \"#B4BCC4\",\r\n                    fontSize: \"15px\",\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                No Logged Session is Available\r\n            </div>\r\n          } \r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeLogSection","import dayjs from \"dayjs\";\r\nimport _ from \"lodash\";\r\nimport * as React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useErrorHandler } from \"../context/ErrorHandleServiceContextProvider\";\r\nimport FileUploader from \"../file-upload/FileUploader\";\r\nimport Toaster from \"../global/Toaster\";\r\nimport {\r\n    useGetTaskStatusQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n    useLazyGetWorkingEnvironmentQuery\r\n} from \"../services/api/SingleTaskPageApi\";\r\nimport { storeTask } from \"../services/features/subTaskSlice\";\r\nimport { BoardColumn, SingleTask } from \"../utils/single-task\";\r\nimport { User } from \"../utils/user-details\";\r\nimport Accordion from \"./components/Accordion\";\r\nimport Guideline from \"./components/Guideline\";\r\nimport Loading from \"./components/Loading\";\r\nimport RevisionText from \"./components/RevisionText\";\r\nimport GenarelLoader from \"./components/loader/GenarelLoader\";\r\nimport { singleTaskPagePermission } from \"./permissions\";\r\nimport CommentSection from \"./section/comments/CommentsSection\";\r\nimport DailySubmissionSection from \"./section/daily-submission/DailySubmissionSection\";\r\nimport HistorySection from \"./section/history/HistorySection\";\r\nimport NoteSection from \"./section/notes/NoteSection\";\r\nimport RevisionSection from \"./section/revisions/RevisionSection\";\r\nimport SubTaskEditModal from \"./section/sub-task/SubTaskEditModal\";\r\nimport SubTaskSection from \"./section/sub-task/SubTaskSection\";\r\nimport TaskEditForm from \"./section/sub-task/TaskEditForm\";\r\nimport SubmittedWork from \"./section/submitted-work/SubmittedWork\";\r\nimport TaskAction from \"./section/task-actions/TaskAction\";\r\nimport TimeLogSection from \"./section/time-logs/TimeLogSection\";\r\n\r\nconst RefetchTaskProvider = React.createContext({});\r\nexport const useRefetchTaskDetails = () => {\r\n    const { setRefetchTask } = React.useContext(RefetchTaskProvider);\r\n    return () => {\r\n        setRefetchTask((prev) => !prev);\r\n    };\r\n};\r\n\r\nconst SingleIndependentTask = () => {\r\n    const { task: Task } = useSelector((s) => s.subTask);\r\n    const [refetchTask, setRefetchTask] = React.useState(false);\r\n    const { throwError } = useErrorHandler();\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n\r\n    // lazily get task details\r\n    const [\r\n        getTaskDetails,\r\n        { isFetching: isTaskFetching, isLoading: isTaskLoading },\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    // get task status query\r\n    const { data: taskStatus } = useGetTaskStatusQuery(params?.taskId);\r\n\r\n    // lazily get task working environment\r\n    const [\r\n        getWorkingEnv,\r\n        { isFetching: isWorkingEnvFetching, isLoading: isWorkingEnvLoading },\r\n    ] = useLazyGetWorkingEnvironmentQuery();\r\n\r\n    const task = new SingleTask(Task); // task instance\r\n    const loggedUser = new User(window?.Laravel?.user); // logged users data\r\n\r\n    // console.log(task);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const CurrentTask = {};\r\n\r\n            await getTaskDetails(`/${params?.taskId}/json?mode=basic`)\r\n                .unwrap()\r\n                .then(\r\n                    ({\r\n                        task,\r\n                        parent_task_heading,\r\n                        parent_task_action,\r\n                        subtasks,\r\n                        task_guideline,\r\n                        revisions,\r\n                        Sub_Tasks,\r\n                        ppTaskFiles,\r\n                    }) => {\r\n                        for (const key in task) {\r\n                            CurrentTask[key] = task[key];\r\n                        }\r\n                        CurrentTask.parent_task_title =\r\n                            parent_task_heading?.heading || null;\r\n                        CurrentTask.parent_task_action = parent_task_action;\r\n                        CurrentTask.subtask = subtasks;\r\n                        CurrentTask.pm_task_guideline = task_guideline;\r\n                        CurrentTask.task_revisions = revisions;\r\n                        CurrentTask.taskSubTask = Sub_Tasks;\r\n                        CurrentTask.taskFiles = [...ppTaskFiles];\r\n                    }\r\n                );\r\n\r\n            // console.log(CurrentTask.subtask_id);\r\n\r\n            await getWorkingEnv(\r\n                CurrentTask.subtask_id\r\n                    ? CurrentTask.parent_task_id\r\n                    : CurrentTask.id\r\n            )\r\n                .unwrap()\r\n                .then(({ task_working_environment }) => {\r\n                    CurrentTask.working_environment_data =\r\n                        task_working_environment;\r\n                });\r\n\r\n            // console.log({ CurrentTask });\r\n\r\n            const _task = new SingleTask(CurrentTask);\r\n\r\n            // console.log({ _task });\r\n\r\n            let hasPermission = singleTaskPagePermission(_task, loggedUser);\r\n\r\n            if (!hasPermission) {\r\n                return throwError({\r\n                    title: \"Access Denied\",\r\n                    message:\r\n                        \"Access to this resource is forbidden. Please contact the administrator for assistance.\",\r\n                    code: 403,\r\n                });\r\n            } else {\r\n                // const task = _task;\r\n                dispatch(storeTask(CurrentTask));\r\n            }\r\n        })();\r\n    }, [refetchTask]);\r\n\r\n    const loadingClass =\r\n        isTaskFetching || isTaskLoading ? \"skeleton-loading\" : \"\";\r\n\r\n    if (\r\n        isTaskFetching ||\r\n        isTaskLoading ||\r\n        isWorkingEnvFetching ||\r\n        isWorkingEnvLoading\r\n    ) {\r\n        return <Loading isLoading={true} />;\r\n    }\r\n\r\n    const _taskStatus = new BoardColumn(taskStatus);\r\n\r\n    if (!task) return null;\r\n\r\n    // console.log(\"task revision\", task?.revisions);\r\n\r\n    return (\r\n        <RefetchTaskProvider.Provider value={{ setRefetchTask }}>\r\n            <div className=\"position-relative content-wrapper\">\r\n                <div className=\"mb-3\">\r\n                    <div className={`f-18 ${loadingClass}`}>\r\n                        <span>\r\n                            {\" \"}\r\n                            <strong>Task: </strong>{\" \"}\r\n                        </span>\r\n                        <a href={`/account/tasks/${task?.id}`}>\r\n                            {task?.getSubtaskTitle()}\r\n                        </a>\r\n                        {_.includes(\r\n                            [1, 4, 6, 7, 8],\r\n                            loggedUser?.getRoleId()\r\n                        ) && (\r\n                            <span className=\"ml-2\">\r\n                                (\r\n                                <a\r\n                                    href={`/account/projects/${task.projectId}?tab=tasks`}\r\n                                    className=\"f-14\"\r\n                                >\r\n                                    See All Tasks\r\n                                </a>\r\n                                )\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {isTaskFetching || isTaskLoading ? (\r\n                        <GenarelLoader />\r\n                    ) : (\r\n                        <React.Fragment>\r\n                            <div className=\"col-12 col-md-7 col-lg-8 mb-3\">\r\n                                <div className=\"bg-white rounded-lg p-3\">\r\n                                    <TaskAction\r\n                                        task={task}\r\n                                        status={taskStatus}\r\n                                    />\r\n\r\n                                    {/* task information */}\r\n                                    <div>\r\n                                        <div\r\n                                            className=\"d-flex flex-column py-3\"\r\n                                            style={{ gap: \"10px\" }}\r\n                                        >\r\n                                            {task?.isSubtask && (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        {\" \"}\r\n                                                        Parent Task:{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        <a\r\n                                                            href={`/account/tasks/${task?.parentTaskId}`}\r\n                                                            className=\"text-hover-underline\"\r\n                                                        >\r\n                                                            {\r\n                                                                task?.parentTaskTitle\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n\r\n                                            {/* project name */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">Project : </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <span className=\"dot-color bg-danger mr-2\" />\r\n                                            <a href={`/account/projects/${task?.projectId}`} className=\"text-hover-underline\">\r\n                                                {task?.projectName}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* client name */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Client :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <span className=\"dot-color bg-info mr-2\" />\r\n                                                    <span>\r\n                                                        {Task?.ind_clientId\r\n                                                            ? Task?.ind_client_name\r\n                                                            : Task?.independent_client_name}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* project manager */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">Project Manager: </div>\r\n\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                                <img\r\n                                                    src={`/user-uploads/avatar/${task?.projectManagerAvatar}`}\r\n                                                    alt={task?.projectManagerName}\r\n                                                    width=\"32px\"\r\n                                                    height=\"32px\"\r\n                                                    className=\"rounded-circle\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"ml-2\">\r\n                                                <span\r\n                                                    className={`d-block f-14 font-weight-bold`}\r\n                                                >\r\n                                                    <a\r\n                                                        href={`/account/employees/${task?.projectManagerId}`}\r\n                                                        className=\"hover-underline\"\r\n                                                    >\r\n                                                        {task?.projectManagerName}</a>\r\n                                                    {Number(task?.projectManagerId) ===\r\n                                                        Number(loggedUser?.getId()) && (\r\n                                                        <sup\r\n                                                            className=\"rounded-pill bg-dark text-white px-1 ml-1\"\r\n                                                            style={{ fontSize: \"10px\", whiteSpace: 'nowrap' }}\r\n                                                        >\r\n                                                            It's You\r\n                                                        </sup>\r\n                                                    )}\r\n                                                </span>\r\n\r\n                                                <span style={{ fontSize: \"12px\" }}>\r\n                                                   {task?.projectManagerDesignation}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* milestone */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">\r\n                                            Milestone :{\" \"}\r\n                                        </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <span className=\"dot-color bg-primary mr-2\" />\r\n                                            {task?.milestoneTitle}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* assignee to */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Assigned To :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            width: \"32px\",\r\n                                                            height: \"32px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <img\r\n                                                            src={task?.assigneeTo?.getAvatar()}\r\n                                                            alt={task?.assigneeTo?.getName()}\r\n                                                            width=\"32px\"\r\n                                                            height=\"32px\"\r\n                                                            className=\"rounded-circle\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"ml-2\">\r\n                                                        <span\r\n                                                            className={`d-block f-14 font-weight-bold`}\r\n                                                        >\r\n                                                            <a\r\n                                                                href={task?.assigneeTo?.getUserLink()}\r\n                                                                className=\"hover-underline\"\r\n                                                            >\r\n                                                                {task?.assigneeTo?.getName()}\r\n                                                            </a>\r\n                                                            {Number(\r\n                                                                task?.assigneeTo?.getId()\r\n                                                            ) ===\r\n                                                                Number(\r\n                                                                    loggedUser?.getId()\r\n                                                                ) && (\r\n                                                                <sup\r\n                                                                    className=\"rounded-pill bg-dark text-white px-1 ml-1\"\r\n                                                                    style={{\r\n                                                                        fontSize:\r\n                                                                            \"10px\",\r\n                                                                        whiteSpace:\r\n                                                                            \"nowrap\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    It's You\r\n                                                                </sup>\r\n                                                            )}\r\n                                                        </span>\r\n\r\n                                                        <span\r\n                                                            style={{\r\n                                                                fontSize:\r\n                                                                    \"12px\",\r\n                                                            }}\r\n                                                        >\r\n                                                            {task?.assigneeTo?.getDesignationName()}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* assignee by */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Assigned by:{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            width: \"32px\",\r\n                                                            height: \"32px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <img\r\n                                                            src={task?.assigneeBy?.getAvatar()}\r\n                                                            alt={task?.assigneeBy?.getName()}\r\n                                                            width=\"32px\"\r\n                                                            height=\"32px\"\r\n                                                            className=\"rounded-circle\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"ml-2\">\r\n                                                        <span\r\n                                                            className={`d-block f-14 font-weight-bold`}\r\n                                                        >\r\n                                                            <a\r\n                                                                href={task?.assigneeBy?.getUserLink()}\r\n                                                                className=\"hover-underline\"\r\n                                                            >\r\n                                                                {task?.assigneeBy?.getName()}\r\n                                                            </a>\r\n                                                            {Number(\r\n                                                                task?.assigneeBy?.getId()\r\n                                                            ) ===\r\n                                                                Number(\r\n                                                                    loggedUser?.getId()\r\n                                                                ) && (\r\n                                                                <sup\r\n                                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                                    style={{\r\n                                                                        fontSize:\r\n                                                                            \"10px\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    It's You\r\n                                                                </sup>\r\n                                                            )}\r\n                                                        </span>\r\n\r\n                                                        <span\r\n                                                            style={{\r\n                                                                fontSize:\r\n                                                                    \"12px\",\r\n                                                            }}\r\n                                                        >\r\n                                                            {task?.assigneeBy?.getDesignationName()}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* TASK CATEGORY */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Task Category :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {task.category.name}\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* PRIORITY */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Priority :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    />\r\n                                                    {task?.priority}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* login url */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Login URL :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n\r\n                                                        <a\r\n                                                            target=\"__blank\"\r\n                                                            href={\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.loginURL\r\n                                                            }\r\n                                                        >\r\n                                                            {\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.loginURL\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* username */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Username :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {\r\n                                                            task.additionalInfo\r\n                                                                .username\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* password */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Password :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {\r\n                                                            task.additionalInfo\r\n                                                                .password\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* ref site */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Reference page :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        <a\r\n                                                            target=\"__blank\"\r\n                                                            href={\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.refSite\r\n                                                            }\r\n                                                        >\r\n                                                            {\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.refSite\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* category */}\r\n                                            {task?.isSubtask && (\r\n                                                <>\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Task Category :{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.category\r\n                                                                ?.name ?? \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    {/* task type */}\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Task Type:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.taskType ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Type:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageType ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Name:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageName ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Url:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageUrl ? (\r\n                                                                <a\r\n                                                                    href={\r\n                                                                        task?.pageUrl\r\n                                                                    }\r\n                                                                >\r\n                                                                    ( view )\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <span>--</span>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        {/* project manager guideline */}\r\n                                        {(!_.isEmpty(task?.workEnvData) ||\r\n                                            !_.isEmpty(task?.guidelines)) && (\r\n                                            <Accordion\r\n                                                expendable={false}\r\n                                                title=\"General Guidelines\"\r\n                                            >\r\n                                                {/* {task?.hasProjectManagerGuideline && <PMGuideline guideline={task?.PMTaskGuideline} /> } */}\r\n\r\n                                                {!_.isEmpty(\r\n                                                    task?.workEnvData\r\n                                                ) && (\r\n                                                    <div className=\"sp1_task_card--sub-card\">\r\n                                                        <div\r\n                                                            className=\"px-4 py-3\"\r\n                                                            style={{\r\n                                                                background:\r\n                                                                    \"#F3F5F9\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <h6 className=\"mb-2\">\r\n                                                                Working\r\n                                                                Environment\r\n                                                            </h6>\r\n                                                            <hr />\r\n                                                            <div className=\"row\">\r\n                                                                {/* working/staging site's url */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            URL\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.site_url\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* frontend password */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Frontend\r\n                                                                            Password\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.frontend_password\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* working/staging site's login url */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            Login\r\n                                                                            URL\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.login_url\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>{\" \"}\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* working/staging site's username/email */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            Username/Email\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {task\r\n                                                                            ?.workEnvData\r\n                                                                            ?.email ||\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.user_name}\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* password */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Password\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.password\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* Reference Page */}\r\n                                                                {/* <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Reference\r\n                                                                            Page\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.reference_site\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                <Guideline\r\n                                                    text={task?.guidelines}\r\n                                                    workEnv={task?.workEnvData}\r\n                                                />\r\n                                            </Accordion>\r\n                                        )}\r\n\r\n                                        {/* task revision */}\r\n                                        {_.size(task?.revisions) > 0 && (\r\n                                            <Accordion\r\n                                                title={\r\n                                                    _.last(task?.revisions)\r\n                                                        ?.revisionStatus\r\n                                                }\r\n                                                headingClass=\"d-flex align-items-center justify-content-between\"\r\n                                                headingStyle={{\r\n                                                    background:\r\n                                                        \"rgba(227,62,79,1)\",\r\n                                                    color: \"#fff\",\r\n                                                }}\r\n                                            >\r\n                                                {_.map(\r\n                                                    task?.revisions,\r\n                                                    (revision, index) => (\r\n                                                        <RevisionText\r\n                                                            key={revision?.id}\r\n                                                            index={index + 1}\r\n                                                            date={dayjs(\r\n                                                                revision.createdAt\r\n                                                            ).format(\r\n                                                                \"MMM DD, YYYY\"\r\n                                                            )}\r\n                                                            time={dayjs(\r\n                                                                revision.createdAt\r\n                                                            ).format(\"hh:mm a\")}\r\n                                                            text={\r\n                                                                revision?.comment ||\r\n                                                                revision?.devComment ||\r\n                                                                revision?.pmComment\r\n                                                            }\r\n                                                            revision={revision}\r\n                                                        />\r\n                                                    )\r\n                                                )}\r\n                                            </Accordion>\r\n                                        )}\r\n\r\n                                        {/* task description */}\r\n                                        <Accordion\r\n                                            expendable={false}\r\n                                            title=\"Task Descriptions\"\r\n                                        >\r\n                                            <Guideline\r\n                                                text={task?.description}\r\n                                            />\r\n\r\n                                            {_.size(task?.attachments) > 0 ? (\r\n                                                <div className=\"mt-3\">\r\n                                                    <h4 className=\"mb-2\">\r\n                                                        Task Attachments:{\" \"}\r\n                                                    </h4>\r\n                                                    <FileUploader>\r\n                                                        {_.map(\r\n                                                            task?.attachments,\r\n                                                            (attachment) =>\r\n                                                                attachment?.pp_task_file_name ? (\r\n                                                                    <FileUploader.Preview\r\n                                                                        key={\r\n                                                                            attachment?.pp_task_file_id\r\n                                                                        }\r\n                                                                        fileName={\r\n                                                                            attachment?.pp_task_file_name\r\n                                                                        }\r\n                                                                        downloadAble={\r\n                                                                            true\r\n                                                                        }\r\n                                                                        deleteAble={\r\n                                                                            false\r\n                                                                        }\r\n                                                                        downloadUrl={\r\n                                                                            attachment?.pp_task_file_url\r\n                                                                        }\r\n                                                                        previewUrl={\r\n                                                                            attachment?.pp_task_file_url\r\n                                                                        }\r\n                                                                        fileType={\r\n                                                                            _.includes(\r\n                                                                                [\r\n                                                                                    \"png\",\r\n                                                                                    \"jpeg\",\r\n                                                                                    \"jpg\",\r\n                                                                                    \"svg\",\r\n                                                                                    \"webp\",\r\n                                                                                    \"gif\",\r\n                                                                                ],\r\n                                                                                attachment?.pp_task_file_icon\r\n                                                                            )\r\n                                                                                ? \"images\"\r\n                                                                                : \"others\"\r\n                                                                        }\r\n                                                                        classname=\"comment_file\"\r\n                                                                        ext={\r\n                                                                            attachment?.pp_task_file_icon\r\n                                                                        }\r\n                                                                    />\r\n                                                                ) : null\r\n                                                        )}\r\n                                                    </FileUploader>\r\n                                                </div>\r\n                                            ) : null}\r\n                                        </Accordion>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )}\r\n\r\n                    <div className=\"col-12 col-md-5 col-lg-4\">\r\n                        <div className=\"d-flex flex-column\">\r\n                            {/* period */}\r\n                            <div\r\n                                className=\"sp1_task_right_card mb-3\"\r\n                                style={{ maxHeight: \"450px\" }}\r\n                            >\r\n                                <div className=\"d-flex align-items-center font-weight-bold border-bottom pl-2 pb-2 mb-2\">\r\n                                    <span\r\n                                        style={{\r\n                                            display: \"block\",\r\n                                            width: \"10px\",\r\n                                            height: \"10px\",\r\n                                            borderRadius: \"100%\",\r\n                                            background: taskStatus?.label_color,\r\n                                            marginRight: \"6px\",\r\n                                            boxShadow:\r\n                                                \"0 0 10px rgba(0,0,0,.1)\",\r\n                                        }}\r\n                                    />\r\n\r\n                                    {_taskStatus.getTaskStatusName(\r\n                                        loggedUser?.getRoleId(),\r\n                                        task.isSubtask\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Start Date: </div>\r\n                                    <div\r\n                                        className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                    >\r\n                                        {task?.getStartDate(\"MMM DD, YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Due Date */}\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Due Date: </div>\r\n                                    <div\r\n                                        className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                    >\r\n                                        {task?.getDueDate(\"MMM DD, YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n                                {/* End Due Date */}\r\n\r\n                                {/* Time Estimate */}\r\n                                {/* <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">Time Estimate: </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.getEstimateTime()}\r\n                                </div>\r\n                            </div> */}\r\n                                {/* End Time Estimate */}\r\n\r\n                                {/* <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">\r\n                                    Parent Task Hours Logged:\r\n                                </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.parentTaskTimeLog || \"--\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">Subtask Hours Logged: </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold ml-2 pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.subTaskTimeLog || \"--\"}\r\n                                </div>\r\n                            </div> */}\r\n\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Total Hours Logged: </div>\r\n                                    <div className=\"d-flex align-items-center font-weight-bold pl-2\">\r\n                                        {(task.isSubtask\r\n                                            ? task?.parentTaskTimeLog\r\n                                            : task?.totalTimeLog) || \"--\"}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* comments */}\r\n                            {task && task?.id && <SubmittedWork task={task} />}\r\n                            {!task.isSubtask && (\r\n                                <SubTaskSection status={taskStatus} />\r\n                            )}\r\n                            {task && task?.id && (\r\n                                <DailySubmissionSection task={task} />\r\n                            )}\r\n                            {task && task?.id && (\r\n                                <CommentSection\r\n                                    task={task}\r\n                                    isLoading={isTaskFetching || isTaskLoading}\r\n                                />\r\n                            )}\r\n                            <NoteSection />\r\n                            <TimeLogSection />\r\n                            {task && task?.id && <HistorySection />}\r\n                            {task && task?.id && (\r\n                                <RevisionSection task={task} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Toaster />\r\n                <ShowEditModals task={task} auth={loggedUser} />\r\n            </div>\r\n        </RefetchTaskProvider.Provider>\r\n    );\r\n};\r\n\r\nexport default SingleIndependentTask;\r\n\r\nconst ShowEditModals = ({ auth, task }) => {\r\n    let hasAccess = false;\r\n\r\n    let time = task.isSubtask ? task?.parentTaskTimeLog : task?.totalTimeLog;\r\n\r\n    if (auth.getRoleId() === 1) {\r\n        hasAccess = true;\r\n    } else if (\r\n        auth.getId() === task.assigneeBy.id &&\r\n        task.boardColumn.id === 2\r\n    ) {\r\n        hasAccess = true;\r\n    } else hasAccess = false;\r\n\r\n    if (hasAccess) {\r\n        if (task.isSubtask) {\r\n            return <SubTaskEditModal task={task} />;\r\n        } else {\r\n            return <TaskEditForm task={task} />;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({\r\n    children, \r\n    type=\"button\",\r\n    disabled=false, \r\n    className = '', \r\n    variant='primary',\r\n    size=\"sm\",\r\n    onClick,\r\n    ...props\r\n}) => {\r\n    const classes = `cnx__btn cnx__btn_${variant} ${disabled ? 'cnx__btn_disabled': ''} cnx__btn_${size} ${className}`\r\n\r\n    const handleOnClick = (e) => {\r\n        onClick && onClick(e)\r\n    }\r\n\r\n\r\n    return (\r\n        <button \r\n            type='button' \r\n            className={classes} \r\n            disabled={disabled} \r\n            onClick={handleOnClick} \r\n            {...props}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    children: PropTypes.node.isRequired || PropTypes.string.isRequired || PropTypes.array.isRequired,\r\n    disabled: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    variant: PropTypes.oneOf(['primary', 'secondary', 'tertiary', 'success', 'danger']),\r\n    size: PropTypes.oneOf(['sm', 'md', 'lg']),\r\n    onClick: PropTypes.func,\r\n    href: PropTypes.string\r\n}\r\n\r\nexport default Button;","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {usePopper} from 'react-popper';\r\nimport {motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst DropdownContext = React.createContext();\r\n\r\n\r\nconst DropdownProvider = ({children}) => {\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [element, setElement] = React.useState(null);\r\n    const [reference, setReference] = React.useState(null);\r\n\r\n    return (\r\n        <DropdownContext.Provider value={{\r\n            element,\r\n            setElement,\r\n            reference,\r\n            setReference,\r\n            isOpen,\r\n            setIsOpen\r\n        }}>\r\n            {children}\r\n        </DropdownContext.Provider>\r\n    )\r\n}\r\n\r\n// dropdown hooks\r\nconst useDropdown = () => {\r\n    const context = React.useContext(DropdownContext);\r\n    if(!context) {\r\n        throw new Error('useDropdown must be used within a DropdownProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\n\r\n// dropdown item\r\nconst DropdownItem = ({children, className, onClick, disabled=false, ...props}) => {\r\n    const {setIsOpen} = useDropdown();\r\n    return(\r\n        <div \r\n            onMouseUp={() => disabled ? null : setIsOpen(false)}\r\n            onClick={(e) => disabled ? null : onClick ? onClick(e): null}\r\n            className={`cnx_dropdown__item ${disabled ? 'cnx_dropdown__item_disabled}': ''} ${className}`}\r\n            {...props}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DropdownToggle = ({children, icon=true, className}) => {\r\n    const {setIsOpen, isOpen, setReference} = useDropdown();\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    return(\r\n        <div\r\n            ref={setReference}\r\n            className={`cnx_dropdown__toggle ${className}`}\r\n            onClick={toggle}\r\n        >\r\n\r\n            {children}\r\n            {icon && <i className={`fas fa-caret-${isOpen ? 'up' : 'down'} cnx_dropdown__toggle_icon`}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n// dropdown menu\r\nconst DropdownMenu = ({children, className, placement=\"bottom-start\", offset=[0, 3], ...props}) => {\r\n    const { reference, setIsOpen, isOpen} = useDropdown();\r\n    const [popperElement , setPopperElement] = React.useState(null);\r\n    const [width, setWidth] = React.useState(100);\r\n    \r\n    // generate random id for dropdown menu\r\n    const id = React.useMemo(() => Math.random().toString(36).substr(2, 9), []);\r\n\r\n\r\n    let DOM = document.getElementById(id);\r\n    const {styles, attributes} = usePopper(reference, popperElement, {\r\n        placement,\r\n        modifiers: [\r\n            {\r\n                name: 'offset',\r\n                options: {\r\n                    offset,\r\n                },\r\n            },\r\n            {\r\n                name: 'flip',\r\n                options: {\r\n                    fallbackPlacements: ['bottom', 'left', 'right', 'top' ],\r\n                },\r\n            }\r\n        ],\r\n    });\r\n\r\n\r\n    // min width\r\n    React.useEffect(() => {\r\n        if(reference){\r\n            setWidth(reference.offsetWidth);\r\n        }\r\n    }, [reference])\r\n\r\n\r\n    // outside click\r\n\r\n    React.useEffect(() => {\r\n        let timeout;\r\n        const handleClickOutside = (event) => {\r\n            if (popperElement && !popperElement.contains(event.target)) {\r\n                setIsOpen(false);\r\n                clearTimeout(timeout);\r\n                window.removeEventListener('click', handleClickOutside);\r\n            }\r\n        };\r\n\r\n\r\n        if(isOpen) {\r\n            timeout = setTimeout(() => {\r\n                window.addEventListener('click', handleClickOutside);\r\n            }, 100);\r\n        } else {\r\n            window.removeEventListener('click', handleClickOutside);\r\n        }\r\n        return () => {\r\n            window.removeEventListener('click', handleClickOutside);\r\n            clearTimeout(timeout);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isOpen, popperElement])\r\n\r\n    // create element in html body\r\n    React.useEffect(() => {\r\n        const el = document.createElement('div');\r\n        el.id = id;\r\n        document.body.appendChild(el);\r\n        \r\n        setPopperElement(el);\r\n        return () => {\r\n            document.body.removeChild(el);\r\n        }\r\n    }, [])\r\n\r\n    \r\n    if(!DOM) {\r\n        return null\r\n    }\r\n\r\n    return(\r\n       ReactDOM.createPortal(\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1 }}\r\n                        exit={{opacity: 0}}\r\n                        className={`cnx_dropdown__menu ${isOpen ? 'cnx_dropdown__menu_open' : ''} ${className}`}\r\n                        ref={setPopperElement}\r\n                        style={{...styles.popper, minWidth: width}}\r\n                        {...attributes.popper}\r\n                        {...props}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>, \r\n            DOM\r\n       )\r\n    )\r\n} \r\n\r\n\r\n\r\nconst Dropdown = ({children, className=''}) => {\r\n    return(\r\n        <div className={`cnx_dropdown ${className}`}>\r\n            <DropdownProvider>\r\n                {children}\r\n            </DropdownProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nDropdown.Item = DropdownItem;\r\nDropdown.Toggle = DropdownToggle;\r\nDropdown.Menu = DropdownMenu;\r\n\r\nexport default Dropdown;\r\n\r\n\r\n// type\r\n\r\nDropdownProvider.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\nDropdownItem.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    onClick: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    className: PropTypes.string,\r\n}\r\n\r\nDropdownToggle.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    icon: PropTypes.bool,\r\n    className: PropTypes.string,\r\n}\r\n\r\n\r\nDropdownMenu.propTypes = {\r\n    children: PropTypes.node.isRequired || PropTypes.arrayOf(PropTypes.node).isRequired,\r\n    className: PropTypes.string,\r\n    placement: PropTypes.string,\r\n    offset: PropTypes.arrayOf(PropTypes.number),\r\n}\r\n\r\nDropdown.propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.node.isRequired || PropTypes.arrayOf(PropTypes.node).isRequired,\r\n}","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ children, isOpen, className }) => {\r\n    const [isBrowser, setIsBrowser] = React.useState(false);\r\n    // generate random id for dropdown menu\r\n    const id = React.useMemo(() => Math.random().toString(36).substr(2, 9), []);\r\n    let DOM = document.getElementById(id);\r\n \r\n  \r\n    React.useEffect(() => {\r\n        setIsBrowser(true);\r\n        const el = document.createElement('div');\r\n        el.id = id;\r\n        document.body.appendChild(el);\r\n        return () => {\r\n            document.body.removeChild(el);\r\n        }\r\n    }, []);\r\n\r\n\r\n    // React.useEffect(() => {\r\n    //     if(isOpen){\r\n    //         document.body.classList.add('cnx_body-overflow-hidden')\r\n    //     }else{\r\n    //         document.body.classList.remove('cnx_body-overflow-hidden')\r\n    //     }\r\n    // }, [isOpen]) \r\n\r\n    if(!DOM) return;\r\n \r\n\r\n    const modalContent = isOpen ? (\r\n        <div className={`cnx_modal ${className}`}>\r\n            {children}\r\n        </div>\r\n    ) : null;\r\n\r\n    if (isBrowser) {\r\n        return ReactDOM.createPortal(\r\n            modalContent,\r\n            DOM\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nModal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    isOpen: PropTypes.bool.isRequired,\r\n    className: PropTypes.string,\r\n}\r\n\r\n\r\nexport default Modal;","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst SubmitButton = ({onClick, isLoading, className, variant=\"primary\", children, title}) => {\r\n    let body = document.querySelector('#body');\r\n\r\n    const handleOnClick = (e) => {\r\n        e.stopPropagation();\r\n        onClick(e)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(isLoading){\r\n            body.style.cursor = 'progress';\r\n        }else{\r\n            body.style.cursor = 'default';\r\n        }\r\n    }, [isLoading])\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {!isLoading ? (\r\n                <Button variant={variant} onClick={handleOnClick} className={className}>\r\n                    {children || title}\r\n                </Button>\r\n            ) : (\r\n                <div className=\"cursor-processing cnx__btn cnx__btn_sm cnx__btn_primary\">\r\n                    <div\r\n                        className=\"spinner-border text-white\"\r\n                        role=\"status\"\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                        }}\r\n                    ></div>\r\n                    Processing...\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from 'styled-components';\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useReplyTaskCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst AttachmentUpload = ({ comment, onReply, close }) => {\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = React.useState(null);\r\n    const [replyTaskComment, { isLoading }] = useReplyTaskCommentMutation();\r\n\r\n    const visibleToScreenRef = React.useRef(null);\r\n    // update on layout change\r\n    React.useLayoutEffect(() => {\r\n        if (visibleToScreenRef && visibleToScreenRef.current) {\r\n            visibleToScreenRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, []);\r\n\r\n    // handle update\r\n    const onUpdate = async (e) => {\r\n\r\n        // if not select any file show error message\r\n        if(_.size(files) === 0){\r\n           setError(p => ({...p, fileError: \"Please select at least one file.\"}));\r\n           return;\r\n        }\r\n\r\n        // create form data\r\n        const formData = new FormData();\r\n        formData.append(\"reply_text\", \"\");\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"parent_comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n        // submit form\r\n        try {\r\n            const response = await replyTaskComment({ formData, commentId: comment.id });\r\n            if(response){\r\n                toast.success(\"Your files has been successfully uploaded.\");\r\n                onReply();\r\n                close();\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        <UploadFilesInLine\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        />\r\n\r\n                        {error && error.fileError ? <ErrorText> {error.fileError} </ErrorText> :''}\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Processing..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onUpdate}>\r\n                                Reply\r\n                            </Button>\r\n                            <Button variant=\"secondary\" onClick={close}>\r\n                                Close\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n\r\n            <div ref={visibleToScreenRef} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AttachmentUpload;\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n`;\r\n","import { Menu } from \"@headlessui/react\";\r\nimport * as React from \"react\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\nimport { timeCalculate } from \"../../../utils/timeCalculate\";\r\nimport { User } from \"../../../utils/user-details\";\r\n\r\nconst Comment = ({ comment, onDelete }) => {\r\n    const auth = useAuth();\r\n    const user = comment?.user ? new User(comment.user) : null;\r\n    const [showDeletedComment, setShowDeletedComment] = React.useState(false);\r\n\r\n    if (comment.is_deleted && !showDeletedComment) {\r\n        return (\r\n            <div className=\"sp1_comment_deleted_status w-100\">\r\n                This Comment has been deleted\r\n                {auth.getRoleId() === 1 ? (\r\n                    <button onClick={() => setShowDeletedComment(!showDeletedComment)}>\r\n                        <i className=\"fa-solid fa-eye-slash\" />\r\n                    </button>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deletedClass = comment.is_deleted ? \"sp1_comment_deleted_status\" : \"\";\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`w-100 d-flex align-items-center  ${deletedClass}`}>\r\n                <div className=\"mr-2\">\r\n                    <div className=\"rounded-circle\">\r\n                        <img\r\n                            src={user?.getAvatar()}\r\n                            alt={user?.getName()}\r\n                            width=\"32px\"\r\n                            height=\"32px\"\r\n                            className=\"rounded-circle\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"w-100 d-flex align-items-center justify-between\">\r\n                    <div className=\"sp1_comment\">\r\n                        <span className=\"sp1_comment_user--name\">\r\n                            {user?.getName()} ({user?.getDesignationName()})\r\n                        </span>\r\n                        <span\r\n                            className=\"sp1_comment_time\"\r\n                            style={{ color: \"#888\" }}\r\n                        >\r\n                            {timeCalculate(comment.last_updated_date)}\r\n                        </span>\r\n                    </div>\r\n\r\n                    {comment.is_deleted && auth.getRoleId() === 1 ? (\r\n                        <button className=\"ml-auto\" onClick={() => setShowDeletedComment(!showDeletedComment)}>\r\n                            <i className=\"fa-solid fa-eye\" />\r\n                        </button>\r\n                    ) : null}\r\n                </div>\r\n\r\n\r\n\r\n                {/* <Dropdown className=\"sp1_comment_extend_menu_dd\">\r\n                    <Dropdown.Toggle icon={false}>\r\n                        <i className=\"fa-solid fa-ellipsis\"></i>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu placement=\"bottom-end\" className=\"sp1_comment_extend_menu\">\r\n                        <Dropdown.Item>Edit</Dropdown.Item>\r\n                        <Dropdown.Item>Delete</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown> */}\r\n                {comment.is_deleted || user.getId() !== auth.getId() ? null : (\r\n                    <Menu as=\"div\" className=\"sp1_comment_extend_menu\">\r\n                        <Menu.Button\r\n                            as=\"button\"\r\n                            className=\"sp1_comment_extend_menu-btn\"\r\n                        >\r\n                            <i className=\"fa-solid fa-ellipsis\"></i>\r\n                        </Menu.Button>\r\n                        <Menu.Items\r\n                            as=\"div\"\r\n                            placement=\"bottom-end\"\r\n                            className=\"sp1_comment_extend_menu__items\"\r\n                        >\r\n                            <Menu.Item\r\n                                as=\"div\"\r\n                                className=\"sp1_comment_extend_menu__item --disabled\"\r\n                            >\r\n                                Edit\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                as=\"div\"\r\n                                className=\"sp1_comment_extend_menu__item --delete\"\r\n                                onClick={(e) => onDelete(e, comment.id)}\r\n                            >\r\n                                Delete\r\n                            </Menu.Item>\r\n                        </Menu.Items>\r\n                    </Menu>\r\n                )}\r\n            </div>\r\n            {comment?.comment ? (\r\n                <div className=\"__box __reply_text w-100 my-1 text-dark border-rounded\">\r\n                    <div\r\n                        className=\"sp1_ck_content sp1_message--body\"\r\n                        style={{ overflow: \"hidden\" }}\r\n                        dangerouslySetInnerHTML={{ __html: comment?.comment }}\r\n                    />\r\n                </div>\r\n            ) : null}\r\n\r\n            <div className=\"comment_files mt-2\">\r\n                <FileUploader>\r\n                    {comment?.files_data?.map((file) => (\r\n                        <FileUploader.Preview\r\n                            key={file?.name}\r\n                            fileName={file?.name}\r\n                            downloadAble={true}\r\n                            deleteAble={false}\r\n                            downloadUrl={file?.url}\r\n                            previewUrl={file?.url}\r\n                            fileType={file?.icon}\r\n                            classname=\"comment_file\"\r\n                            ext=\"\"\r\n                        />\r\n                    ))}\r\n                </FileUploader>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default Comment;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useRemoveCommentPreviousUploadedFileMutation, useUpdateCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst EditComment = ({ comment, updateComments, close }) => {\r\n    const [text, setText] = React.useState(comment.comment);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [previousFiles, setPreviousFiles] = React.useState([\r\n        ..._.map(comment.files_data, (file) => ({ id: file.name, ...file })),\r\n    ]);\r\n\r\n    const [updateComment, { isLoading }] = useUpdateCommentMutation();\r\n    const [removeCommentPreviousUploadedFile, {isLoading: uploadingFileDeleting}] = useRemoveCommentPreviousUploadedFileMutation();\r\n\r\n    // const isLoading = false;\r\n\r\n    const handleEditor = (e, editor) => {\r\n        const data = editor.getData();\r\n        setText(data);\r\n    };\r\n\r\n    // handle previous uploaded file delete\r\n    const handlePreviousFileDeleted = (e, file) => {\r\n        console.log(\"deleted: \", file);\r\n        const data = {\r\n            task_id: comment.task_id,\r\n            comment_id: comment.id,\r\n            file_details: file\r\n        }\r\n        removeCommentPreviousUploadedFile(data)\r\n        .unwrap()\r\n        .then(res => {\r\n            console.log(res)\r\n        })\r\n        .catch(err => {console.log(err)})\r\n    };\r\n\r\n    // handle update\r\n    const onUpdate = (e) => {\r\n        const formData = new FormData();\r\n        formData.append(\"comment\", text);\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n\r\n        updateComment({ data: formData, commentId: comment.id })\r\n            .unwrap()\r\n            .then((res) => {\r\n                toast.success(\"Successfully Updated!\");\r\n                updateComments(res.data);\r\n\r\n                close();\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent\r\n                            data={text}\r\n                            onChange={handleEditor}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        {/* <UploadFilesInLine\r\n                            onPreviousFileDelete={handlePreviousFileDeleted}\r\n                            previous={previousFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        /> */}\r\n\r\n                        <FileUploader files={files} setFiles={setFiles}>\r\n                            <FileUploader.Input />\r\n                            {comment?.files_data?.map((file) => (\r\n                                <FileUploader.Preview\r\n                                    id={file}\r\n                                    key={file?.name}\r\n                                    fileName={file?.name}\r\n                                    downloadAble={true}\r\n                                    deleteAble={true}\r\n                                    onRemove={handlePreviousFileDeleted}\r\n                                    downloadUrl={file?.url}\r\n                                    previewUrl={file?.url}\r\n                                    fileType={file?.icon}\r\n                                    ext=\"\"\r\n                                />\r\n                            ))}\r\n\r\n                            <FileUploader.SelectedFiles>\r\n                                {({previews, onDelete}) => (\r\n                                   _.map(previews, (preview, index) => (\r\n                                        <FileUploader.Preview\r\n                                            id={index}\r\n                                            key={index}\r\n                                            fileName={preview?.name}\r\n                                            downloadAble={true}\r\n                                            deleteAble={true}\r\n                                            onRemove={onDelete}\r\n                                            previewUrl={preview.preview}\r\n                                            fileType={preview.type}\r\n                                            ext={preview.ext}\r\n                                        />\r\n                                   ))\r\n                                )}\r\n                            </FileUploader.SelectedFiles>\r\n                        </FileUploader>\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Updating..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onUpdate}>\r\n                                Update\r\n                            </Button>\r\n                            <Button variant=\"secondary\">Close</Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditComment;\r\n","import * as React from \"react\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\nimport Dropdown from \"../../components/Dropdown\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport EditComment from \"./EditComment\";\r\nimport ReplyComment from \"./ReplyComment\";\r\nimport AttachmentUpload from \"./AttachmentUpload\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\nimport _, { compact } from \"lodash\";\r\nimport AvatarGroup from \"../../../global/AvatarGroup\";\r\nimport {\r\n    useDeleteCommentMutation,\r\n    useGetTaskCommentRepliesQuery,\r\n} from \"../../../services/api/TaskCommentApiSlice\";\r\nimport Loader from \"../../../global/Loader\";\r\nimport { BsFillPlusCircleFill } from \"react-icons/bs\";\r\nimport Comment from \"./Comment\";\r\nimport ReplyCommentPreview from \"./ReplyCommentPreview\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst InnerComment = ({ comment, updateComments }) => {\r\n    const [showReplies, setShowReplies] = React.useState(false);\r\n    const [replyMode, setReplyMode] = React.useState(false);\r\n    const [activeEditMode, setActiveEditModal] = React.useState(false);\r\n    const [uploadAttachment, setUploadAttachment] = React.useState(false);\r\n    const [selectedEmoji, setSelectedEmoji] = React.useState(\"\");\r\n    const user = comment?.user ? new User(comment.user) : null;\r\n    const auth = useAuth();\r\n\r\n    const [isRepliesLoading, setIsRepliesLoading] = React.useState(false);\r\n\r\n    // api hook\r\n    // handle delete\r\n    const [deleteComment, { isLoading: isDeleting }] =\r\n        useDeleteCommentMutation();\r\n\r\n    const handleReplyButtonClick = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(true);\r\n        setActiveEditModal(false);\r\n        setUploadAttachment(false);\r\n    };\r\n\r\n    // handle edit\r\n    const handleEditButton = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(false);\r\n        setUploadAttachment(false);\r\n        setActiveEditModal(true);\r\n    };\r\n\r\n    const handleUploadAttachment = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(false);\r\n        setActiveEditModal(false);\r\n        setUploadAttachment(true);\r\n    };\r\n\r\n    // handle comment delete\r\n    // delete comment\r\n    const handleDeleteComment = (e, commentId) => {\r\n        e.preventDefault();\r\n\r\n        Swal.fire({\r\n            icon: \"warning\",\r\n            title: `Are you sure you want to delete this comment?`,\r\n            html: \"This action cannot be undone. Deleting this comment will permanently remove it from the discussion.\",\r\n            showDenyButton: true,\r\n            denyButtonText: \"Cancel\",\r\n            // denyButtonColor: '#ffffff',\r\n\r\n            showConfirmButton: true,\r\n            confirmButtonText: \"Yes, Delete It!\",\r\n            confirmButtonColor: \"#E73819\",\r\n            customClass: {\r\n                confirmButton: \"delete-confirm-button\",\r\n                denyButton: \"delete-deny-button\",\r\n            },\r\n            buttonsStyling: false,\r\n        }).then((res) => {\r\n            if (res.isConfirmed) {\r\n                deleteCommentData();\r\n            }\r\n        });\r\n\r\n        // delete\r\n        const deleteCommentData = async () => {\r\n            const response = await deleteComment(commentId).unwrap();\r\n            if (response) {\r\n                toast.success(\"Comment Deleted Successfully\");\r\n            }\r\n        };\r\n    };\r\n\r\n    // emoji selection control\r\n    const handleEmojiSelect = (emojiData, event) => {\r\n        setSelectedEmoji(emojiData.unified);\r\n    };\r\n\r\n    // permission\r\n    const CAN_EDIT_COMMENT = auth.getId() === user.getId();\r\n\r\n    // console.log({ comment });\r\n\r\n    return (\r\n        <div className=\"sp1_task_comment_send_box sp1_task_comment_replied pl-2 pr-3 pb-2\">\r\n            <div\r\n                className=\"__send-box flex-column align-items-start\"\r\n                style={{ maxWidth: \"100%\" }}\r\n            >\r\n                {/* show comment details */}\r\n                <Comment comment={comment} onDelete={handleDeleteComment} />\r\n\r\n                <Switch>\r\n                    <Switch.Case\r\n                        condition={\r\n                            !comment.is_deleted || auth.getRoleId() === 1\r\n                        }\r\n                    >\r\n                        <div className=\"sp1_task_comment_actions\">\r\n                            {/* <Dropdown>\r\n                                <Dropdown.Toggle icon={false}>\r\n                                    <i className=\"fa-regular fa-face-smile\"></i>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    <EmojiPicker lazyLoadEmojis={true} />\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n\r\n                            <span>•</span> */}\r\n                            <Switch.Case condition={!comment.is_deleted}>\r\n                                <a href=\"#\" onClick={handleReplyButtonClick}>\r\n                                    Reply\r\n                                </a>\r\n                                <span>•</span>\r\n                                <a href=\"#\" onClick={handleUploadAttachment}>\r\n                                    <i className=\"fa-solid fa-paperclip\"></i>\r\n                                </a>\r\n                            </Switch.Case>\r\n\r\n                            {/* <Switch>\r\n                                <Switch.Case condition={CAN_EDIT_COMMENT}>\r\n                                    <a href=\"#\" onClick={handleEditButton}>\r\n                                        Edit\r\n                                    </a>\r\n                                    <span>•</span>\r\n                                </Switch.Case>\r\n                            </Switch>\r\n                            */}\r\n\r\n                            {/* <a href=\"#\">Delete</a>\r\n                <span>•</span> */}\r\n\r\n                            <Switch>\r\n                                <Switch.Case\r\n                                    condition={comment?.total_replies > 0}\r\n                                >\r\n                                    <div\r\n                                        className=\"replies_count\"\r\n                                        onClick={() =>\r\n                                            setShowReplies(!showReplies)\r\n                                        }\r\n                                    >\r\n                                        <AvatarGroup\r\n                                            users={_.map(\r\n                                                comment?.replies_users,\r\n                                                (user) => ({\r\n                                                    ...user,\r\n                                                    src: user.image_url,\r\n                                                })\r\n                                            )}\r\n                                        />\r\n                                        <div className=\"ml-1 mr-2\">\r\n                                            {comment.total_replies} replies\r\n                                        </div>\r\n                                        {isRepliesLoading ? (\r\n                                            <Loader title=\"\" />\r\n                                        ) : null}\r\n                                    </div>\r\n                                    {/* </div> */}\r\n                                </Switch.Case>\r\n                            </Switch>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n\r\n                {/* reply box */}\r\n\r\n                {showReplies ? (\r\n                    <>\r\n                        <ReplyCommentPreview\r\n                            comment={comment}\r\n                            onReply={handleReplyButtonClick}\r\n                            showReplyButton={!replyMode}\r\n                            onDelete={handleDeleteComment}\r\n                            cb={(loading) => setIsRepliesLoading(loading)}\r\n                        />\r\n                    </>\r\n                ) : null}\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={activeEditMode}>\r\n                        <EditComment\r\n                            comment={comment}\r\n                            updateComments={updateComments}\r\n                            close={() => setActiveEditModal(false)}\r\n                        />\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={replyMode}>\r\n                        <ReplyComment\r\n                            comment={comment}\r\n                            onReply={() => {\r\n                                setShowReplies(true);\r\n                            }}\r\n                            close={() => setReplyMode(false)}\r\n                        />\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={uploadAttachment}>\r\n                        <AttachmentUpload\r\n                            comment={comment}\r\n                            onReply={() => setShowReplies(true)}\r\n                            close={() => setUploadAttachment(false)}\r\n                        />\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InnerComment;\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from 'styled-components';\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useReplyTaskCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst ReplyComment = ({ comment, close, onReply }) => {\r\n    const [text, setText] = React.useState(\"\");\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = React.useState(null);\r\n\r\n    // comment reply api hook from redux toolkit\r\n    const [replyTaskComment, { isLoading }] = useReplyTaskCommentMutation();\r\n\r\n    const visibleToScreenRef = React.useRef(null); // reference element\r\n    // update on layout change\r\n    React.useLayoutEffect(() => {\r\n        if (visibleToScreenRef && visibleToScreenRef.current) {\r\n            // scroll into view on visible\r\n            visibleToScreenRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, []);\r\n\r\n    // handle ck editor text change\r\n    const handleEditor = (e, editor) => {\r\n        const data = editor.getData(); // get editor text\r\n        setText(data);\r\n    };\r\n\r\n    // handle update\r\n    const onReplied = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // if text not provide show error message\r\n        if(!text){\r\n            setError(s => ({...s, comment: \"Please provide a comment before submitting.\"}));\r\n            return;\r\n        }\r\n\r\n        // make form\r\n        const formData = new FormData();\r\n        formData.append(\"reply_text\", text);\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"parent_comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n        // show formData\r\n        // for(const [key, value] of formData.entries()){\r\n        //     console.log(key, ': ', value)\r\n        // }\r\n\r\n\r\n        // submit form\r\n        await replyTaskComment({ formData, commentId: comment.id }).then(\r\n            (res) => {\r\n                toast.success(\"Your reply has been successfully submitted.\");\r\n                onReply();\r\n                close();\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <h6>Reply: <sup >(<span className=\"text-danger\"> Require </span>)</sup></h6>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent\r\n                            data={text}\r\n                            onChange={handleEditor}\r\n                        />\r\n                    </div>\r\n                    {error?.comment ? <ErrorText>{error?.comment}</ErrorText> : null }\r\n\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        <UploadFilesInLine\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        />\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Processing..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onReplied}>\r\n                                Reply\r\n                            </Button>\r\n                            <Button onClick={close} variant=\"secondary\">\r\n                                Close\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n\r\n            <div ref={visibleToScreenRef} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReplyComment;\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n    padding: 10px 0;\r\n`;\r\n","import * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useGetTaskCommentRepliesQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport { BsFillPlusCircleFill } from \"react-icons/bs\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst ReplyCommentPreview = ({\r\n    comment,\r\n    cb,\r\n    onReply,\r\n    showReplyButton,\r\n    onDelete,\r\n}) => {\r\n    const { data, isLoading } = useGetTaskCommentRepliesQuery(comment.id, {\r\n        refetchOnMountOrArgChange: true,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        cb(isLoading);\r\n    }, [isLoading]);\r\n\r\n    return (\r\n        <div className=\"sp1_task_replies_comment_list ml-3 w-100\">\r\n            {_.map(data, (r, i) => (\r\n                <div\r\n                    key={i}\r\n                    className=\"pl-3 pr-4 border-left border__left py-3 w-100\"\r\n                >\r\n                    <Comment comment={r} onDelete={onDelete} />\r\n                </div>\r\n            ))}\r\n\r\n            {!comment.is_deleted && !isLoading && showReplyButton ? (\r\n                <div className=\"border-left border__left reply_button pl-3\">\r\n                    <button onClick={onReply}>\r\n                        {/* <BsFillPlusCircleFill className=\"fs-16 icon\" /> */}\r\n                        <span>+ Reply</span>\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReplyCommentPreview;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { CompareDate } from '../../utils/dateController';\r\n\r\nconst d = new CompareDate();\r\nexport const useDailySubmission = () => {\r\n    const [isEnable, setIsEnable] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                // Fetch server time\r\n                let response = await axios.get('/server-time-status');\r\n                const date = response.data.data;\r\n\r\n                // Get the current day abbreviation (e.g., 'Sat', 'Sun', 'Mon', etc.)\r\n                const dayAbbreviation = d.dayjs(date).format('ddd');\r\n\r\n                // Define the cutoff times\r\n                const saturdayCutoffTime = d.dayjs(date).set('hour', 12).set('minute', 45);\r\n                const otherDaysCutoffTime = d.dayjs(date).set('hour', 16).set('minute', 45);\r\n\r\n                // Get the current time\r\n                const currentTime = d.dayjs(date);\r\n\r\n                // Check if it's Saturday or not\r\n                if (dayAbbreviation === 'Sat') {\r\n                    // Check if the current time is greater than 12:30 PM on Saturday\r\n                    if (currentTime.isSameOrAfter(saturdayCutoffTime)) {\r\n                       setIsEnable(true);\r\n                    }else{\r\n                        setIsEnable(false);\r\n                    }\r\n                } else {\r\n                    // Check if the current time is greater than 4:30 PM on other days\r\n                    if (currentTime.isSameOrAfter(otherDaysCutoffTime)) {\r\n                        setIsEnable(true);\r\n                    }else setIsEnable(false);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n    return {isEnable}\r\n}\r\n","import dayjs from \"dayjs\";\r\n\r\nexport const timeCalculate = (date) => {\r\n    const providedDate = dayjs(date);\r\n    const currentDate = dayjs();\r\n    const diff = currentDate.diff(providedDate, 'minute');\r\n    if (diff < 1) {\r\n        return 'Just now';\r\n    } else if (diff < 60) {\r\n        return `${diff} minute${diff > 1 ? 's' : ''} ago`;\r\n    } else if (diff < 1440) { // Less than 24 hours\r\n        const hours = Math.floor(diff / 60);\r\n        return `${hours} hour${hours > 1 ? 's' : ''} ago`;\r\n    } else if (diff < 10080) { // Less than 7 days\r\n        const days = Math.floor(diff / 1440);\r\n        return `${days} day${days > 1 ? 's' : ''} ago`\r\n    } else {\r\n        return providedDate.format('MMM DD, YYYY [at] h:mm A');\r\n    }\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp1_checkbox--label.disable{color:#aaa}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/UI/form/checkbox.css\"],\"names\":[],\"mappings\":\"AAAA,6BACI,UACJ\",\"sourcesContent\":[\".sp1_checkbox--label.disable {\\r\\n    color: #aaa;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".fpsqco3G\\\\+Hf7gF1vYUOU9Q\\\\=\\\\={flex-direction:row-reverse;margin:auto;width:-moz-fit-content;width:fit-content}.rpJ2L0Uklhu0QGtrM7rb3Q\\\\=\\\\=,.fpsqco3G\\\\+Hf7gF1vYUOU9Q\\\\=\\\\={display:flex;padding:0}.rpJ2L0Uklhu0QGtrM7rb3Q\\\\=\\\\={align-items:center;background-color:#ededed;border:2px solid #f4f4f4;border-radius:100%;box-shadow:0 0 2px rgba(0,0,0,.1);height:24px;justify-content:center;margin-left:-10px;width:24px}.N71c75OLkFHuPvS5HeIkpQ\\\\=\\\\={border-radius:100%;height:100%;object-fit:fill;-o-object-fit:fill;width:100%}.\\\\+F5c8j7QS2thczRvvUXBlw\\\\=\\\\={background-color:#276fec;color:#fff;text-decoration:none!important}.\\\\+F5c8j7QS2thczRvvUXBlw\\\\=\\\\= span{font-size:12px;text-decoration:none!important}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/global/AvatarGroup.module.css\"],\"names\":[],\"mappings\":\"AAAA,6BAKI,0BAA2B,CAF3B,WAAY,CAFZ,sBAAkB,CAAlB,iBAKJ,CAEA,yDANI,YAAa,CAEb,SAgBJ,CAZA,4BAQI,kBAAmB,CAFnB,wBAAyB,CAFzB,wBAAqC,CADrC,kBAAmB,CAQnB,iCAAoC,CATpC,WAAY,CAOZ,sBAAuB,CACvB,iBAAkB,CATlB,UAWJ,CAGA,4BAGI,kBAAmB,CADnB,WAAY,CAEZ,eAAgB,CAChB,kBAAmB,CAJnB,UAKJ,CAGA,6BACI,wBAAmC,CACnC,UAAW,CACX,8BACJ,CAEA,kCACI,cAAe,CACf,8BACJ\",\"sourcesContent\":[\".avatar_group{\\r\\n    width: fit-content;\\r\\n    display: flex;\\r\\n    margin: auto;\\r\\n    padding: 0;\\r\\n    flex-direction: row-reverse;\\r\\n}\\r\\n\\r\\n.avatar{\\r\\n    width: 24px;\\r\\n    height: 24px;\\r\\n    border-radius: 100%;\\r\\n    border: 2px solid rgb(244, 244, 244) ;\\r\\n    padding: 0;\\r\\n    background-color: #ededed;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-left: -10px;\\r\\n    box-shadow: 0 0 2px rgb(0 0 0 / 10%);\\r\\n}\\r\\n\\r\\n\\r\\n.avatar_image{\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    border-radius: 100%;\\r\\n    object-fit: fill;\\r\\n    -o-object-fit: fill;\\r\\n}\\r\\n\\r\\n\\r\\n.empty_avatar{\\r\\n    background-color: rgb(39, 111, 236);\\r\\n    color: #fff;\\r\\n    text-decoration:none !important;\\r\\n}\\r\\n\\r\\n.empty_avatar span{\\r\\n    font-size: 12px;\\r\\n    text-decoration:none !important;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"avatar_group\": \"fpsqco3G+Hf7gF1vYUOU9Q==\",\n\t\"avatar\": \"rpJ2L0Uklhu0QGtrM7rb3Q==\",\n\t\"avatar_image\": \"N71c75OLkFHuPvS5HeIkpQ==\",\n\t\"empty_avatar\": \"+F5c8j7QS2thczRvvUXBlw==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._8xXZnlhj3eHMkUUObnMmZw\\\\=\\\\={margin:2rem auto;max-width:90%;min-height:10rem;padding:1rem}._7n-CpR1Fy19zjUlU6WsThQ\\\\=\\\\={margin:0 auto}.SxO-JfljZkxUGDLmlQviZg\\\\=\\\\= th{background-color:#222;color:#fff;font-weight:700;padding:15px 25px;text-align:center}.YQAkXuuhsOlsr6ZIt378wQ\\\\=\\\\= td{padding:15px;text-align:center}.A5JA7hH72pS6vSurU7mqwQ\\\\=\\\\={padding:2rem 15px 15px}.A5JA7hH72pS6vSurU7mqwQ\\\\=\\\\=,.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={background-color:#fff}.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={border-radius:5px;margin-bottom:16px}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=,.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={position:relative}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\={background-color:transparent;border:1px solid rgba(0,0,0,.37);border-radius:4px;color:rgba(0,0,0,.85);display:block;font-size:16px;height:40px;margin:0 auto;outline:none!important;padding:6px 4px 4px 14px;transition:all .2s ease-in-out;width:100%}.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\={background:#fff;color:rgba(0,0,0,.519);cursor:text;display:inline-block;font-size:14px;font-weight:700;height:14px;left:12px;line-height:14px;margin:0 auto;padding:0 4px;position:absolute;text-align:left;top:30%;transition:all .15s ease-in-out}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:focus,.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:hover{border:1px solid #000}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:focus+.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\=,.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:valid+.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\={color:#000;font-weight:700;top:-6px}.sU7OfO8z\\\\+2G5bBnOIGPJmA\\\\=\\\\={background-color:inherit;color:#e32b2b;padding:0 0 0 3px}.sU7OfO8z\\\\+2G5bBnOIGPJmA\\\\=\\\\=:after{content:\\\"*\\\"}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css\"],\"names\":[],\"mappings\":\"AAIA,6BAGE,gBAAiB,CADjB,aAAc,CAEd,gBAAiB,CAHjB,YAIF,CAEA,6BACE,aACF,CAEA,+BACE,qBAAiC,CAGjC,UAAY,CACZ,eAAiB,CAHjB,iBAAkB,CAClB,iBAGF,CAMA,+BAEE,YAAa,CADb,iBAEF,CAGA,4BAGE,sBAEF,CAGA,wDAJE,qBASF,CALA,4BAIE,iBAAkB,CAHlB,kBAIF,CACA,0DAJE,iBAkBF,CAdA,8BAME,4BAA6B,CAF7B,gCAAiC,CACjC,iBAAkB,CAOlB,qBAAuB,CAVvB,aAAc,CASd,cAAe,CAFf,WAAY,CAFZ,aAAgB,CAGhB,sBAAwB,CAFxB,wBAAyB,CAKzB,8BAA+B,CAV/B,UAWF,CAEA,4BAWE,eAAiB,CACjB,sBAA2B,CAE3B,WAAY,CATZ,oBAAqB,CAIrB,cAAe,CACf,eAAiB,CAHjB,WAAY,CAJZ,SAAU,CAKV,gBAAiB,CAKjB,aAAgB,CAPhB,aAAc,CALd,iBAAkB,CAGlB,eAAgB,CAFhB,OAAQ,CAaR,+BACF,CACA,wEAA6B,qBAAwB,CAErD,gIAEE,UAAW,CACX,eAAiB,CAFjB,QAGF,CACA,6BACI,wBAAyB,CACzB,aAAc,CAEd,iBACJ,CACA,mCACI,WACJ\",\"sourcesContent\":[\".bdr{\\r\\n  /* border: solid; */\\r\\n}\\r\\n\\r\\n.container{\\r\\n  padding: 1rem;\\r\\n  max-width: 90%;\\r\\n  margin: 2rem auto;\\r\\n  min-height: 10rem;\\r\\n}\\r\\n\\r\\n.myTable{\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.headerRow th{\\r\\n  background-color: rgb(34, 34, 34);\\r\\n  padding: 15px 25px;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.bodyRow tr{\\r\\n  /* border-radius: 5px; */\\r\\n}\\r\\n\\r\\n.bodyRow td{\\r\\n  text-align: center;\\r\\n  padding: 15px;\\r\\n}\\r\\n\\r\\n\\r\\n.form{\\r\\n  /* border: solid; */\\r\\n  padding: 15px;\\r\\n  padding-top: 2rem;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n/* floating .label input field */\\r\\n.wrapper {\\r\\n  margin-bottom: 16px;\\r\\n  position: relative;\\r\\n  background-color: white;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n.input {\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  border: 1px solid rgba(0,0,0,.37);\\r\\n  border-radius: 4px;\\r\\n  background-color: transparent;\\r\\n  margin: 0px auto;\\r\\n  padding: 6px 4px 4px 14px;\\r\\n  height: 40px;\\r\\n  outline: none !important;\\r\\n  font-size: 16px;\\r\\n  color: rgba(0,0,0,0.85);\\r\\n  transition: all .2s ease-in-out;\\r\\n}\\r\\n\\r\\n.label {\\r\\n  position: absolute;\\r\\n  top: 30%; \\r\\n  left: 12px;\\r\\n  text-align: left;\\r\\n  display: inline-block;\\r\\n  padding: 0 4px;\\r\\n  height: 14px;\\r\\n  line-height: 14px;\\r\\n  font-size: 14px;\\r\\n  font-weight: bold;\\r\\n  background: white;\\r\\n  color: rgba(0, 0, 0, 0.519);\\r\\n  margin: 0px auto;\\r\\n  cursor: text;\\r\\n  transition: all .15s ease-in-out;\\r\\n}\\r\\n.input:hover, .input:focus { border: 1px solid #000; }\\r\\n\\r\\n.input:valid + .label, .input:focus + .label { \\r\\n  top: -6px;\\r\\n  color: #000;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.formAsterisk {\\r\\n    background-color: inherit;\\r\\n    color: #e32b2b;\\r\\n    padding: 0;\\r\\n    padding-left: 3px;\\r\\n}\\r\\n.formAsterisk:after {\\r\\n    content: \\\"*\\\";\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"_8xXZnlhj3eHMkUUObnMmZw==\",\n\t\"myTable\": \"_7n-CpR1Fy19zjUlU6WsThQ==\",\n\t\"headerRow\": \"SxO-JfljZkxUGDLmlQviZg==\",\n\t\"bodyRow\": \"YQAkXuuhsOlsr6ZIt378wQ==\",\n\t\"form\": \"A5JA7hH72pS6vSurU7mqwQ==\",\n\t\"wrapper\": \"sHn0ikpJ-siiyePWSQMFFA==\",\n\t\"input\": \"YRqnDsOCvlyUNmnxtR++ug==\",\n\t\"label\": \"P-INSzqztmJ-mpd7zZK14w==\",\n\t\"formAsterisk\": \"sU7OfO8z+2G5bBnOIGPJmA==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp1_tlr_tbl_wrapper{overflow-y:auto}.sp1_tlr_table{width:100%}.sp1_tlr_th{border-bottom:2px solid #dbe4ff;color:#373737;height:36px;padding:3px 10px;position:sticky;text-align:center;top:0;z-index:10}.sp1_tlr_td{border-bottom:1px solid #dbe4ff;max-width:350px;min-width:150px;padding:10px;text-align:center}.sp1_tlr_tbody>.sp1_tlr_tr:hover .sp1_tlr_td{background-color:rgba(233,235,240,.349)}.sp1_tlr_tr .sp1_tlr_td_marged{background-color:rgba(243,244,248,.349);border-inline:1px solid #dbe4ff}.sp1_tlr_tr .sp1_tlr_td_marged:first-child,.sp1_tlr_tr .sp1_tlr_td_marged:nth-child(2){border-left-color:transparent}.sp1_tlr_td_border{border-bottom:2px solid #dbe4ff}.sp1_drag_th.__dragging{background-color:hsla(222,6%,69%,.222)}.sp1_drag_th.__drop-area{background-color:rgba(34,45,71,.349)}.from_body{padding:2rem 1rem 3rem}.openRow_bg{background-color:hsla(218,7%,78%,.32)!important;border:none!important;overflow:visible}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css\"],\"names\":[],\"mappings\":\"AAAA,qBACI,eACJ,CAEA,eACI,UACJ,CAEA,YAII,+BAA2C,CAK3C,aAAsB,CARtB,WAAY,CACZ,gBAAiB,CAGjB,eAAgB,CAGhB,iBAAkB,CADlB,KAAM,CADN,UAIJ,CAEA,YAII,+BAA2C,CAF3C,eAAgB,CAChB,eAAgB,CAFhB,YAAa,CAIb,iBACJ,CAEA,6CACI,uCACJ,CAEA,+BACI,uCAA2C,CAC3C,+BACJ,CAEA,uFAEI,6BACJ,CAEA,mBACI,+BACJ,CAQA,wBACI,sCACJ,CAEA,yBACI,oCACJ,CAEA,WACI,sBACJ,CAGA,YACI,+CAAqD,CACrD,qBAAuB,CACvB,gBACJ\",\"sourcesContent\":[\".sp1_tlr_tbl_wrapper{\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n.sp1_tlr_table{\\r\\n    width: 100%; \\r\\n}\\r\\n\\r\\n.sp1_tlr_th {\\r\\n    height: 36px;\\r\\n    padding: 3px 10px;\\r\\n    /* background-color: rgb(55, 55, 55); */\\r\\n    border-bottom: 2px solid rgb(219, 228, 255);\\r\\n    position: sticky;\\r\\n    z-index: 10;\\r\\n    top: 0;\\r\\n    text-align: center;\\r\\n    color: rgb(55, 55, 55);\\r\\n}\\r\\n\\r\\n.sp1_tlr_td{\\r\\n    padding: 10px;\\r\\n    max-width: 350px;\\r\\n    min-width: 150px;\\r\\n    border-bottom: 1px solid rgb(219, 228, 255);\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.sp1_tlr_tbody > .sp1_tlr_tr:hover .sp1_tlr_td{\\r\\n    background-color:rgba(233, 235, 240, 0.349);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged{\\r\\n    background-color:rgba(243, 244, 248, 0.349);\\r\\n    border-inline: 1px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged:first-child,\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged:nth-child(2){\\r\\n    border-left-color: transparent;\\r\\n}\\r\\n\\r\\n.sp1_tlr_td_border{\\r\\n    border-bottom: 2px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n/* .sp1_tlr_tbody > .sp1_tlr_tr:hover .sp1_tlr_td_hover-disable{\\r\\n   background-color: #fff !important; \\r\\n} */\\r\\n\\r\\n\\r\\n\\r\\n.sp1_drag_th.__dragging {\\r\\n    background-color: rgba(170, 173, 180, 0.222);\\r\\n}\\r\\n\\r\\n.sp1_drag_th.__drop-area {\\r\\n    background-color: rgba(34, 45, 71, 0.349);\\r\\n}\\r\\n\\r\\n.from_body{\\r\\n    padding: 2rem 1rem 3rem;\\r\\n}\\r\\n\\r\\n\\r\\n.openRow_bg{\\r\\n    background-color:rgba(194, 197, 202, 0.32) !important;\\r\\n    border: none !important;\\r\\n    overflow: visible;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".QWT8SKIOKp3nCIlWnmqvlA\\\\=\\\\={box-shadow:0 10px 16px rgba(0,0,0,.2);font-family:Inter;font-weight:400;left:50%;max-width:800px;position:absolute;top:50%;transform:translate(-50%,-50%);width:100%}._7q1rGYYnwZMgY33fyvn5Rw\\\\=\\\\={background-color:#f3f3f3}._7q1rGYYnwZMgY33fyvn5Rw\\\\=\\\\= h6{font-weight:600;margin:0}.xFa21Dq-VWzqARlTwQw6ug\\\\=\\\\=:not(:last-child){border-bottom:1px dashed rgba(0,0,0,.1)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css\"],\"names\":[],\"mappings\":\"AAAA,4BASI,qCAAwC,CAFxC,iBAAkB,CAClB,eAAgB,CAHhB,QAAS,CAJT,eAAgB,CAEhB,iBAAkB,CAClB,OAAQ,CAER,8BAAgC,CAJhC,UAQJ,CAGA,6BACI,wBACJ,CAEA,gCAEI,eAAgB,CADhB,QAEJ,CAEA,6CACI,uCACJ\",\"sourcesContent\":[\".form_card{\\r\\n    max-width: 800px;\\r\\n    width: 100%;\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n    font-family: Inter;\\r\\n    font-weight: 400;\\r\\n    box-shadow: 0 10px 16px rgb(0 0 0 / 20%);\\r\\n}\\r\\n\\r\\n\\r\\n.form_card_head{\\r\\n    background-color: rgb(243, 243, 243);\\r\\n}\\r\\n\\r\\n.form_card_head h6{\\r\\n    margin: 0;\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.list_border:not(:last-child){\\r\\n    border-bottom: 1px dashed rgb(0 0 0 / 10%);\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"form_card\": \"QWT8SKIOKp3nCIlWnmqvlA==\",\n\t\"form_card_head\": \"_7q1rGYYnwZMgY33fyvn5Rw==\",\n\t\"list_border\": \"xFa21Dq-VWzqARlTwQw6ug==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["_ref","_ref$toggleRef","toggleRef","isOpen","close","_ref$comments","task","comments","taskId","onCommentPost","singleCommentId","_ref$showCommentEdito","showCommentEditor","_ref$showSearchBtn","showSearchBtn","_ref$showFullScreenBt","showFullScreenBtn","_ref$height","height","commentState","useCommentStore","param","useParams","width","useWindowSize","_useState2","_slicedToArray","useState","fullScreenView","setFullScreenView","_useGetCommentsQuery","useGetCommentsQuery","data","isFetching","isLoading","refetch","useEffect","_jsx","CommentContainerDecider","children","CommentsBody","filter","comment","id","loading","fetching","options","locals","value","onChange","label","checked","_ref$className","className","_ref$labelClassName","labelClassName","_ref$disabled","disabled","_objectWithoutProperties","_excluded","_jsxs","concat","type","_ref$users","users","_ref$show","show","len","_","avatars","splice","styles","avatar_group","avatar","empty_avatar","user","i","src","alt","avatar_image","rating","iconClassName","_Fragment","_toConsumableArray","Array","map","r","idx","parseInt","style","color","useRevision","_task$category","taskType","category","isIndependent","isIndependentTask","getLeadDeveloperAcknowladgementOptions","revision","isDeniable","getProjectManagerAcknowladgementOptions","_regeneratorRuntime","e","t","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","key","input","hint","prim","toPrimitive","undefined","res","String","Number","_toPrimitive","_toPropertyKey","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","err","arr","isArray","_arrayWithHoles","_iterableToArrayLimit","minLen","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","arr2","useSingleTask","User","_window","window","Laravel","_useLazyGetTaskDetail2","useLazyGetTaskDetailsQuery","getTaskDetails","taskDetailsIsFetching","getTaskById","_callee","_res$parent_task_head","_context","unwrap","taskFiles","parent_task_action","parent_task_title","parent_task_heading","heading","working_environment","working_environment_data","pm_task_guideline","task_guideline","task_revisions","revisions","taskSubTask","Sub_Tasks","t0","console","log","_x","_useLazyGetSubmittedT2","useLazyGetSubmittedTaskQuery","getSubmittedTask","submittionInfoIsFetching","getSubmittionInfo","_ref2","_callee2","_context2","_x2","_useApproveSubmittedT2","useApproveSubmittedTaskMutation","approveSubmittedTask","approveTaskLoadingStatus","approveTask","_ref3","_callee3","callback","_context3","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","fire","icon","title","_x3","_x4","taskCommentApiSlice","apiSlice","injectEndpoints","endpoints","build","getTaskComments","query","providesTags","getTaskCommentReplies","commentId","getTaskCommentWidgetData","getPreviewCommentData","updateComment","mutation","url","body","formData","invalidatesTags","removeCommentPreviousUploadedFile","task_id","comment_id","_token","document","querySelector","getAttribute","replyTaskComment","result","deleteComment","useGetTaskCommentsQuery","useGetTaskCommentRepliesQuery","useUpdateCommentMutation","useGetTaskCommentWidgetDataQuery","useLazyGetTaskCommentWidgetDataQuery","useGetPreviewCommentDataQuery","useRemoveCommentPreviousUploadedFileMutation","useReplyTaskCommentMutation","useDeleteCommentMutation","_ref$expendable","expendable","headingClass","headingStyle","_React$useState2","React","expend","setExpend","init","onClick","cursor","AnimatePresence","motion","div","initial","animate","exit","text","editorContainerClass","workEnv","useSelector","subTask","isLong","showText","ref","useRef","useClickAway","dangerouslySetInnerHTML","__html","href","preventDefault","Modal","background","target","site_url","frontend_password","login_url","email","password","index","pmComment","leadComment","getComment","disputeBetween","date","dayjs","createdAt","format","time","minHeight","revisionAcknowledgement","isDeny","isAccept","textIndent","gap","Placeholder","singleTaskPagePermission","auth","getRoleId","projectManagerId","getId","timeControlPermision","status","loggedUser","statusPermission","assigneePermission","statusId","assignedUser","assigneeTo","_loggedUser","includes","subtask","markAsCompletedButtonPermission","approveButtonPermission","assigneeBy","needRevisionPermision","_ref4","revisionButtonPermission","_ref5","submitForClientApproval","_ref6","clientApproveConfirmationButtonPermission","_ref7","subTaskCreationPermision","_ref9","assignedBy","styled","_templateObject","modalRef","setModalRef","_usePopper","usePopper","placement","modifiers","offset","attributes","popper","pointerEvents","zIndex","opacity","Shadow","ReactDOM","top","left","maxWidth","Button","minWidth","CKEditorComponent","WidgetItem","setIsOpen","overflow","is_deleted","mention","timeCalculate","deleted_at","created_date","CommentsContainer","skip","sortedComments","sort","b","a_day","diff","handleOrdering","modalIsOpen","setModalIsOpen","_React$useState4","openAddCommentModal","setOpenAddCommentModal","_React$useState6","modalToggleRef","setModalToggleRef","toggleModalButton","_useGetTaskCommentsQu","unshift","role","border","borderRightColor","variant","fontSize","CommentWritingModal","Widget","item","setModalData","modalData","verticalAlign","margin","textAlign","developer_name","submission_creation_date","AiFillEyeInvisible","AiFillEye","toggle","content","singleData","DailySubmissionItem","CustomModal","timeFormatter","_time$split$0$split2","split","year","month","month_name","columnSchema","header","draggable","accessorKey","cell","padding","getValue","convertTime","DataTable","tableData","tableColumns","tableName","_data$daily_submissio","_useState4","modalTableIsOpen","setModalTableIsOpen","_useState6","modalRefButton","setModalRefButton","_useState8","singleUserSubmissionTableDrawerRef","setSingleUserSubmissionTableDrawerRef","_useState10","_useGetDailyTasksSubm","useGetDailyTasksSubmissionQuery","modalTableClose","DailysubmissionDrawerTable","daily_submissions","SingleUserSubmissionTableDrawer","InnerHistoryItem","lazy","_ref$data","fallback","InnerHistoryItemLoader","history","HistoryItem","fetcher","axios","get","_useSelector","histories","dispatch","useDispatch","_useSWR","useSWR","refreshInterval","storeHistories","Histories","marginRight","Suspense","note","Link","to","_ref$readOnly","readOnly","_ref$placeholder","placeholder","_ref$inputClass","inputClass","_ref$labelClass","labelClass","_ref$type","defaultValue","rest","htmlFor","required","onWheel","currentTarget","blur","notes","files","setFiles","setTitle","errTitle","setErrTitle","_React$useState8","setNote","deviceWidth","_useCrateNoteMutation2","useCrateNoteMutation","crateNote","handleSubmit","fd","FormData","append","file","_notes","storeNotes","handleEditorChange","editor","getData","Input","setState","handleChange","UploadFilesInLine","_React$useState10","attachedFiles","setAttachedFiles","searchParams","useSearchParams","noteId","_useUpdateNoteMutatio2","useUpdateNoteMutation","updateNote","_useGetTaskDetailsQue","useGetTaskDetailsQuery","refetchOnMountOrArgChange","clearField","handleClose","_notes2","_res$note","message","getElementsByTagName","deleteNoteUploadedFile","useDeleteNoteUploadedFileMutation","handleFileDelete","previousFile","indexOf","previous","onPreviousFileDelete","getAvatar","getName","getDesignationName","mode","setMode","navigate","useNavigate","paramType","CreateNote","EditNote","NoteView","Note","setToggleRef","cmt","commentLength","maxHeight","Rating","deadline_meet","submission_quality","req_fullfillment","overall_tasks","ViewComment","setDate","selected","minDate","maxDate","placeholderText","DatePicker","dateFormat","SearchBox","_ref$autoFocus","autoFocus","props","current","focus","xmlns","viewBox","propTypes","PropTypes","isRequired","_ref$title","onSelect","setQuery","params","categories","filteredData","cat","category_name","toLowerCase","Combobox","displayValue","Options","Loader","catIdx","Option","active","employees","employee","_useDeveloperInProgre","useDeveloperInProgressTaskQuery","isOverloaded","image_url","objectFit","developer_status","priority","setSelected","Listbox","CompareDate","isVisible","location","useLocation","pathname","replace","_useEditSubtaskMutati2","useEditSubtaskMutation","editSubtask","_useEditSubtaskMutati3","Card","form_card","Head","onClose","form_card_head","Body","form_card_body","SubTaskEditModal","onSubmit","success","warn","_required_error$title","_required_error$start","_required_error$start2","_required_error$due_d","_required_error$due_d2","editDataIsFetching","milestoneID","milestone_title","milestoneTitle","milestone","parentTaskTitle","Date","startDate","setStateDate","dueDate","setDueDate","_useState12","projectName","_useState14","taskCategory","setTaskCategory","_useState16","assignedTo","setAssignedTo","_useState18","description","setDescription","_useState20","setPriority","_useState22","estimateHours","estimateTimeHour","_useState24","estimateMinutes","estimateTimeMin","_useState26","_useState28","setError","required_error","_useGetMilestoneDetai","useGetMilestoneDetailsQuery","projectId","deleteUplaodedFile","useDeleteUplaodedFileMutation","start_date","toDate","due_date","TaskCategorySelectionBox","AssignedToSelection","PrioritySelection","_milestone$deliverabl","count","errorMessages","showError","_startDate","_dueDate","parentTaskId","boardColumn","deliverable_type","subtaskId","requiredField","overloadedUser","gender","field","genderPronoun","_task$assigneeTo","_task$assigneeTo2","_task$assigneeTo3","_task$assigneeTo4","_task$assigneeTo5","_task$assigneeTo6","_task$assigneeBy","_task$assigneeBy2","_task$assigneeBy3","_task$assigneeBy4","_task$assigneeBy5","_task$assigneeBy6","_task$boardColumn","_$last","GenarelLoader","getSubtaskTitle","isSubtask","getUserLink","labelColor","columnName","getStartDate","getDueDate","parentTaskTimeLog","size","Accordion","last","revisionStatus","RevisionText","Guideline","SubmittedWorkItem","submittedWork","timeLog","TableRow","colSpan","TimeLog","getStartTime","endTime","getEndTime","memo","hoursLogged","review","ContentLoader","speed","backgroundColor","foregroundColor","x","rx","ry","HistoryLoader","parentTask","setTask","taskID","setSubmittedWork","setTimeLog","setReview","setHistories","_React$useState12","_React$useState14","isCommentShow","setIsCommentShow","_useSingleTask","detailFetchingStateLoading","subTaskComments","commentsFetching","commentsLoading","commentsRefetch","SingleTask","fetchData","cb","fetchSubmittedWork","fetchTimeLogData","fetchHistories","fetchReviewData","Genarel","SubmittedWork","showCloseBtn","History","TaskReview","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","showApproveForm","setShowApproveForm","completedWithInDeadline","setCompletedWithInDeadline","submittedStar","setSubmittedStar","fullfilledStar","setFullfilledStar","setComment","oldSubmittion","setOldSubmittion","latestSubmittion","setLatestSubmittion","_useGetSubmittedTaskQ","useGetSubmittedTaskQuery","setErr","sortBy","latest","old","handleOnSubmit","rating2","rating3","user_id","HiOutlineSelector","SubmittedWorkCard","submission_no","action","radius","SubmitButton","_data$text","_ref3$latest","_ref3$className","_ref3$isLoading","links","compact","attaches","submission_date","listStyle","link","FileUploader","Preview","fileName","downloadAble","deleteAble","downloadUrl","previewUrl","fileType","ext","toggleEditForm","_useLazyCheckSubTaskT2","useLazyCheckSubTaskTimerQuery","checkSubTaskTimer","useCheckEditableSubTaskQuery","isEditable","stopPropagation","hasEditPermission","added_by","PreviewSubtask","onConfirm","buttonVisible","setButtonVisible","countDown","setCountDown","timeIntervelId","setInterval","timeOutId","setTimeout","clearInterval","clearTimeout","marginLeft","siteUrl","setSiteUrl","frontendPassword","setFrontendPassword","loginUrl","setLoginUrl","siteLoginCredentialUserNameOrEmail","setSiteLoginCredentialUserNameOrEmail","setPassword","_useWorkingEnvironmen2","useWorkingEnvironmentMutation","workingEnvironment","project_id","checkIsURL","username","isConfirmed","_required_error$pageT","_required_error$pageT2","_ref12","_required_error$page_","_required_error$page_2","_required_error$descr","_required_error$descr2","_ref$isFirstSubtask","isFirstSubtask","refetchTask","useRefetchTaskDetails","taskDetails","isWorkingEnvironmentSubmit","setParentTask","pageType","setPageType","pageTypeOthers","setPageTypeOthers","pageName","setPageName","pageURL","setPageURL","numberOfPage","setNumberOfPage","existingDesignLink","setExistingDesignLink","_React$useState16","pageTypePriority","setPageTypePriority","_React$useState18","pageTypeName","setPageTypeName","_useCreateSubtaskMuta2","useCreateSubtaskMutation","createSubtask","_useCreateSubtaskMuta3","_useLazyGetTaskDetail3","_React$useState20","showForm","setShowForm","_React$useState22","isValid","pageUrl","_res$sub_task","_res$sub_task2","_subtask","sub_task","storeSubTasks","isHasRolePermission","setWorkingEnvironmentStatus","WorkingEnvironmentForm","LeadConfirmationModal","AssginedToSelection","_ref8","_ref10","_ref11","_ref13","_ref14","page_type","page_url","editId","setMilestone","project","setProject","setEstimateTimeHour","setEstimateTimeMin","_useState30","editSubTask","find","estimation","formatedDate","_res$users","project_name","task_category","estimate_hours","estimate_minutes","_err$estimate_hours","_err$estimate_minutes","errText","hoursErr","minErr","hours_left","minutes_left","milestone_id","board_column_id","subtask_id","_subtask2","edit","setEdit","formMode","setFormMode","isTaskModalOpen","setIsTaskModalOpen","subtaskModalToggleRef","setSubtaskModalToggleRef","_useLazyGetInProgress2","useLazyGetInProgressTaskStatusQuery","inProgressTaskStatus","toggleAddButton","closeAddModal","closeEditForm","Task","SubtTaskEditForm","SubTaskForm","workEnvData","sub","SubTask","_useUpdateTaskMutatio2","useUpdateTaskMutation","updateTask","_useUpdateTaskMutatio3","TaskEditForm","_milestone$milestone_","_$find","projects","isFetchingMilestone","milestones","list_border","_data$name","image","previewId","SubmitionView","styte","InnerWorkItem","preview","modal","state","SubmittedModalView","WorkItem","_data$client_name","open","setOpen","attachmentLink","setAttachmentLink","setChecked","taskDescription","setTaskDescription","completedSection","setCompletedSection","_useSubmitDailySubmis2","useSubmitDailySubmissionMutation","submitDailySubmission","isSubmitting","attachmentLinkError","setAttachmentLinkError","taskDescriptionError","setTaskDescriptionError","completedSectionError","setCompletedSectionError","task_title","total_time_spent","client_name","daily_submission_status","borderTop","borderRadius","SelectedFiles","_Array$from","previews","onDelete","onRemove","Checkbox","_window$Laravel","valid","clientId","mark_as_complete","today","_useGetDailySubmissio","useGetDailySubmissionQuery","TodaysUpdateModalTableRow","setTodaysUpdateModalisOpen","URLSearchParams","search","TodaysUpdateModalTable","setLinks","linkErr","setLinkErr","isModalUrl","setIsModalUrl","commentErr","setCommentErr","_useMarkAsCompleteMut2","useMarkAsCompleteMutation","markAsComplete","_useLazyCheckSubTaskS2","useLazyCheckSubTaskStateQuery","checkSubTaskState","markAsCompleteModaIsOpen","setMarkAsCompleteModalIsOpen","_links","handleOnLinkInputChange","class","reason","setReason","reasonError","setReasonError","commentError","setCommentError","_useRevision","revisionOptions","_useCreateRevisionMut2","useCreateRevisionMutation","createRevision","option","marginTop","marginBottom","_reason$revision","_reason$isDeniable","errorCount","revision_acknowledgement","acknowledgement_id","is_deniable","revisionModal","setRevisionModal","RevisionCreationModal","AcceptAndContinueButton","RevisionAcceptAndContinue","_ref2$isSubmitting","onNext","role_id","_revision$revision_ac","onAccept","onDeny","onContinue","isContinue","pm_comment","revision_status","lead_comment","revision_reason","_task$taskSubTask","onBack","_ref$isSubmitting","setComments","subtasks","setSubtasks","setSubtaskError","SubtaskSelectionMenu","subTasks","_reason$id","_reason$id2","_comments","findIndex","hanldeEditorTextChange","NextAndContinueButton","_task$taskSubTask2","_task$taskSubTask3","multiple","overflowY","tabIndex","assigned_to_name","denyOptions","denyReason","setShow","accept","setAccept","_useGetRevisionDetail","useGetRevisionDetailsQuery","isFetchingRevision","_useRevisionAcceptOrD2","useRevisionAcceptOrDenyMutation","revisionAcceptOrDeny","isLoadingRevisionReview","handleAcceptAndContinueSubmission","_data$comment","_data$denyReason","_data","deny_reason","revision_id","setTaskStatus","task_status","RevisionView","continue","DenyAndContinue","setDenyReason","useRevisionAcceptOrDenyByLeadDeveloperMutation","_comment$comment","_data$reason","_data$is_deniable","fdata","hanldeAcceptAndContinueSubmition","AssigneeRevisionToDev","hanldeDenyAndContinueSubmition","singleTask","hasSubtask","RevisionViewModal","DeveloperRevisionView","GuideLineText","SubtaskCreationControl","subtaskCreationModalIsOpen","setSubtaskCreationModalIsOpen","fontStyle","fontWeight","StopTimerConfrimationPopUp","stopTimer","startTimer","lessTrackModal","lessTrackModalFor","setLessTrackModal","handleTemporarilyStopTimer","StartTimerWorkingReport","Title","Text","h1","_taggedTemplateLiteral","_templateObject2","_templateObject3","_task$ranningTimer","timerStart","setTimerStart","timerId","setTimerId","seconds","setSeconds","isOpenConfirmationModal","setIsOpenConfirmationModal","timerStatus","ranningTimer","taskRunning","useMemo","_task$ranningTimer2","_task$ranningTimer3","serverTime","unix","interval","hours","minutes","sec","min","hr","Toast","startTimerFirstCheck","startTimerFirstCheckIsFetching","_useStartTimerApiMuta2","useStartTimerApiMutation","startTimerApi","timerStartStatusIsLoading","_useStopTimerApiMutat2","useStopTimerApiMutation","stopTimerApi","timerStopStatusIsLoading","checkWorkReport","useCheckWorkingReportMutation","startTimerControl","workReport","_window2","check_in_check_out","check_in_status","daily_task_report","hours_log_report","hours_log_report_status","withReactContent","html","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","reload","timeId","_useLazyGetUserTrackT2","useLazyGetUserTrackTimeQuery","getUserTrackTime","trackTimerFetcing","Math","floor","currentTime","current_time","set","day","check","isBefore","isDev","tracked_times","target_time","is_first_task","StartTimerConfirmationModal","LessTrackTimerModal","SubmitForClientApproval","closeModal","_useSubmitForClientAp2","useSubmitForClientApprovalMutation","transform","_useConfirmClientAppr2","useConfirmClientApprovalMutation","confirmClientApproval","projectManagerAcknowladgement","createDispute","additionalPaid","setAdditionalPaid","additionalInfo","setAdditionalInfo","additionalAmount","setAdditionalAmount","additionalError","setAdditionalError","hasAdditionalPayment","isPay","onBlur","disputeCreate","_additionalInfo$info","additional_amount","additional_status","additional_comment","dispute_create","_useStoreClientRevisi2","useStoreClientRevisionTaskMutation","storeClientRevisionTask","AssigneeToLeadFromClientRevision","fData","ClientAcceptedTask","ClientRevision","ReportForm","reportModalOpen","setReportModalOpen","isEnable","useDailySubmission","_useDeveloperCanCompl","useDeveloperCanCompleteTaskQuery","checkMarkAsCompleteEnableStatus","isLoadingCompleteCheck","ENABLE_MARKASCOMPLETE_BUTTON","totalTimeLog","TimerControl","MarkAsComplete","ApproveTask","RevisionControl","RevisionViewControl","ClientApproval","DailySubmissionControl","display","ReportControl","start_time","end_time","hours_logged","Table","Avatar","CardView","_ref4$data","_objectDestructuringEmpty","TimeLogItem","timeLogs","storeTimeLogs","TimeLogTable","TimeLogItemLoader","RefetchTaskProvider","setRefetchTask","_task$additionalInfo","_task$additionalInfo2","_task$additionalInfo3","_task$additionalInfo4","_task$category$name","_task$taskType","_task$pageType","_task$pageName","_task$workEnvData","_task$workEnvData2","_task$workEnvData3","_task$workEnvData4","_task$workEnvData5","_task$workEnvData6","throwError","useErrorHandler","isTaskFetching","isTaskLoading","taskStatus","useGetTaskStatusQuery","_useLazyGetWorkingEnv2","useLazyGetWorkingEnvironmentQuery","getWorkingEnv","_useLazyGetWorkingEnv3","isWorkingEnvFetching","isWorkingEnvLoading","CurrentTask","ppTaskFiles","parent_task_id","task_working_environment","code","storeTask","loadingClass","Loading","_taskStatus","BoardColumn","Provider","TaskAction","ind_clientId","ind_client_name","independent_client_name","whiteSpace","loginURL","refSite","guidelines","user_name","devComment","attachments","attachment","pp_task_file_name","pp_task_file_url","pp_task_file_icon","classname","pp_task_file_id","label_color","boxShadow","getTaskStatusName","SubTaskSection","DailySubmissionSection","CommentSection","NoteSection","TimeLogSection","HistorySection","RevisionSection","Toaster","ShowEditModals","_ref$variant","_ref$size","classes","DropdownContext","DropdownProvider","element","setElement","reference","setReference","useDropdown","context","DropdownItem","_ref2$disabled","onMouseUp","DropdownToggle","_ref3$icon","_useDropdown2","DropdownMenu","_ref4$placement","_ref4$offset","_excluded2","_useDropdown3","popperElement","setPopperElement","setWidth","random","substr","DOM","getElementById","fallbackPlacements","offsetWidth","timeout","handleClickOutside","event","contains","removeEventListener","addEventListener","el","createElement","appendChild","removeChild","Dropdown","_ref5$className","Item","Toggle","Menu","isBrowser","setIsBrowser","modalContent","onReply","_useReplyTaskCommentM2","visibleToScreenRef","scrollIntoView","behavior","onUpdate","fileError","uploadInputClass","fileWrapperClass","ErrorText","Switch","Case","condition","loaderTitle","_comment$files_data","useAuth","showDeletedComment","setShowDeletedComment","deletedClass","last_updated_date","as","Items","files_data","updateComments","setText","_React$useState5","_useUpdateCommentMuta2","_useRemoveCommentPrev2","handlePreviousFileDeleted","file_details","showReplies","setShowReplies","replyMode","setReplyMode","activeEditMode","setActiveEditModal","uploadAttachment","setUploadAttachment","isRepliesLoading","setIsRepliesLoading","_useDeleteCommentMuta2","handleReplyButtonClick","handleDeleteComment","showDenyButton","denyButtonText","confirmButtonColor","denyButton","buttonsStyling","deleteCommentData","Comment","total_replies","AvatarGroup","replies_users","ReplyCommentPreview","showReplyButton","EditComment","ReplyComment","AttachmentUpload","onReplied","_useGetTaskCommentRep","setIsEnable","response","dayAbbreviation","saturdayCutoffTime","otherDaysCutoffTime","isSameOrAfter","providedDate","days","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}