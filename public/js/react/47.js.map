{"version":3,"file":"js/react/47.js","mappings":"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","sources":["webpack:///./resources/js/react/TimeLogTable/components/ProjectSessionTableLoader.jsx","webpack:///./resources/js/react/TimeLogTable/components/ProjectSessionTable.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Placeholder } from \"../../global/Placeholder\";\r\nimport _ from \"lodash\";\r\n\r\n\r\n\r\n\r\nconst ProjectWiseTimeLogTableSessionLoader = ({}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <tr className=\"sp1_tlr_tr\">\r\n                <td className=\"sp1_tlr_td\" rowSpan={3}> \r\n                    <Placeholder width=\"250px\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"150px\" />\r\n                </td>\r\n                <td className=\"sp1_tlr_td\" rowSpan={3}> \r\n                    <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"50%\" />\r\n                </td> \r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n\r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n            </tr>\r\n\r\n            {_.times(2, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\"> \r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n\r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n                </tr>\r\n            ))}\r\n\r\n            {_.times(2, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\">\r\n                    <td className=\"sp1_tlr_td\"> \r\n                            <Placeholder width=\"250px\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"150px\" />\r\n                        </td>\r\n                        <td className=\"sp1_tlr_td\"> \r\n                            <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"50%\" />\r\n                        </td> \r\n                        <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                        <td className=\"sp1_tlr_td\" > \r\n                            <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                            <Placeholder width=\"100px\"/>\r\n                        </td>\r\n                        \r\n                        <td className=\"sp1_tlr_td\" > \r\n                            <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                            <Placeholder width=\"100px\"/>\r\n                        </td>\r\n\r\n                        <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n                </tr>\r\n            ))}\r\n\r\n            <tr className=\"sp1_tlr_tr\">\r\n                <td className=\"sp1_tlr_td\" rowSpan={2}> \r\n                    <Placeholder width=\"250px\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"150px\" />\r\n                </td>\r\n                <td className=\"sp1_tlr_td\" rowSpan={2}> \r\n                    <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"50%\" />\r\n                </td> \r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n\r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n            </tr>\r\n\r\n            {_.times(1, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\"> \r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n\r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n                </tr>\r\n            ))}\r\n\r\n            {_.times(3, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\">\r\n                     <td className=\"sp1_tlr_td\"> \r\n                            <Placeholder width=\"250px\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"150px\" />\r\n                        </td>\r\n                        <td className=\"sp1_tlr_td\"> \r\n                            <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"50%\" />\r\n                        </td> \r\n                        <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                        <td className=\"sp1_tlr_td\" > \r\n                            <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                            <Placeholder width=\"100px\"/>\r\n                        </td>\r\n                        \r\n                        <td className=\"sp1_tlr_td\" > \r\n                            <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                            <Placeholder width=\"100px\"/>\r\n                        </td>\r\n\r\n                        <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n                </tr>\r\n            ))}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ProjectWiseTimeLogTableSessionLoader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./data-table.css\";\r\nimport TableFooter from \"./TableFooter\";\r\nimport TableDragAbleHeader from \"./DragHeader\";\r\nimport ProjectWiseTimeLogTableSessionLoader from \"./ProjectSessionTableLoader\";\r\nimport { useLocalStorage } from \"react-use\";\r\n\r\n\r\n\r\nconst DataTable = ({\r\n    data,\r\n    columns = [],\r\n    tableName = \"data-table\",\r\n    sortBy = \"\",\r\n    height = \"calc(100vh - 100px)\",\r\n    onPaginate,\r\n    perpageData,\r\n    handlePerPageData,\r\n    totalEntry,\r\n    currentPage,\r\n    isLoading,\r\n}) => {\r\n    const [columnOrder, setColumnOrder] = useState([]);\r\n    const [value, setValue] = useLocalStorage(tableName);\r\n\r\n    // get columns keys\r\n    useEffect(() => {\r\n        if(value?.columnOrders){\r\n            setValue(value?.columnOrders)\r\n        }else{\r\n            const column_ids = _.map(columns, \"id\");\r\n            setColumnOrder([...column_ids]);\r\n        }\r\n    }, []);\r\n\r\n    const _columns = _.sortBy(columns, (item) =>\r\n        _.indexOf(columnOrder, item.id)\r\n    );\r\n\r\n\r\n    // render row\r\n    const renderRow = (data) => {\r\n        const rows = [];\r\n        if (data) {\r\n            for (const [key, value] of data) {\r\n                {\r\n                    value?.map((item, index) => {\r\n                        const className =\r\n                            value.length === index + 1\r\n                                ? \"sp1_tlr_td f-14 sp1_tlr_td_border\"\r\n                                : \"sp1_tlr_td f-14\"; \r\n                        rows.push(\r\n                            <React.Fragment key={item.start_time}>\r\n                                <tr className=\"sp1_tlr_tr\">\r\n                                    {\r\n                                        _.map(_columns, col =>{\r\n                                            if(col.group){\r\n                                                return index === 0 && (\r\n                                                    <React.Fragment key={col.id}>\r\n                                                        {col.cell({row: item, data: value, rowSpan: _.size(value)})}\r\n                                                    </React.Fragment>\r\n                                                );\r\n                                            }else{\r\n                                                    return <React.Fragment key={col.id}>\r\n                                                        { col.cell({ row: item, data: value, index,  className: `${className} sp1_drag_col_${col?.id}`})}\r\n                                                    </React.Fragment>\r\n                                                }\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </tr>\r\n                            </React.Fragment>\r\n                        );\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return rows;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"p-3\">\r\n                <div\r\n                    className=\"position-relative sp1_tlr_tbl_wrapper\"\r\n                    style={{ height }}\r\n                >\r\n                    <table className=\"sp1_tlr_table\">\r\n                        <thead className=\"sp1_tlr_thead\">\r\n                            <tr className=\"sp1_tlr_tr\">\r\n                                {_.map(_columns, (column) => {\r\n                                    return (\r\n                                        <TableDragAbleHeader\r\n                                            key={column.id}\r\n                                            className=\"sp1_tlr_th\"\r\n                                            column={column}\r\n                                            columns = {_columns}\r\n                                            onSort={() => {}}\r\n                                            onDrop={setColumnOrder}\r\n                                            order={columnOrder}\r\n                                            tableName={tableName}\r\n                                            storeOnLocalStore={(columns) => setValue({...value, columnOrders: columns})}\r\n                                        /> \r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"sp1_tlr_tbody\">\r\n                            {!isLoading && renderRow(data)}\r\n                            {isLoading && <ProjectWiseTimeLogTableSessionLoader />}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <TableFooter\r\n                    onPaginate={onPaginate}\r\n                    perpageData={perpageData}\r\n                    totalEntry={totalEntry}\r\n                    currentPage={currentPage}\r\n                    handlePerPageData={handlePerPageData}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default DataTable;\r\n"],"names":["_ref","_objectDestructuringEmpty","_jsxs","React","children","className","rowSpan","_jsx","Placeholder","width","_","index","data","_ref$columns","columns","_ref$tableName","tableName","_ref$height","sortBy","height","onPaginate","perpageData","handlePerPageData","totalEntry","currentPage","isLoading","_useState2","_slicedToArray","useState","columnOrder","setColumnOrder","_useLocalStorage2","useLocalStorage","value","setValue","useEffect","columnOrders","column_ids","map","_toConsumableArray","_columns","item","indexOf","id","style","column","TableDragAbleHeader","onSort","onDrop","order","storeOnLocalStore","_objectSpread","rows","_step","_iterator","_createForOfIteratorHelper","_loop","_step$value","length","push","col","group","cell","row","size","concat","start_time","s","n","done","err","e","f","renderRow","ProjectWiseTimeLogTableSessionLoader","TableFooter"],"sourceRoot":""}