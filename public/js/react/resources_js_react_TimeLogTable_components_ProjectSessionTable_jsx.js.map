{"version":3,"file":"js/react/resources_js_react_TimeLogTable_components_ProjectSessionTable_jsx.js","mappings":"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","sources":["webpack:///./resources/js/react/TimeLogTable/components/ProjectSessionTable.jsx","webpack:///./resources/js/react/TimeLogTable/components/ProjectSessionTableLoader.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./data-table.css\";\r\nimport TableFooter from \"./TableFooter\";\r\nimport TableDragAbleHeader from \"./DragHeader\";\r\nimport ProjectWiseTimeLogTableSessionLoader from \"./ProjectSessionTableLoader\";\r\nimport { useLocalStorage } from \"react-use\";\r\n\r\n\r\n\r\nconst DataTable = ({\r\n    data,\r\n    columns = [],\r\n    tableName = \"data-table\",\r\n    sortBy = \"\",\r\n    height = \"calc(100vh - 100px)\",\r\n    onPaginate,\r\n    perpageData,\r\n    handlePerPageData,\r\n    totalEntry,\r\n    currentPage,\r\n    isLoading,\r\n}) => {\r\n    const [columnOrder, setColumnOrder] = useState([]);\r\n    const [value, setValue] = useLocalStorage(tableName);\r\n\r\n    // get columns keys\r\n    useEffect(() => {\r\n        if(value?.columnOrders){\r\n            setValue(value?.columnOrders)\r\n        }else{\r\n            const column_ids = _.map(columns, \"id\");\r\n            setColumnOrder([...column_ids]);\r\n        }\r\n    }, []);\r\n\r\n    const _columns = _.sortBy(columns, (item) =>\r\n        _.indexOf(columnOrder, item.id)\r\n    );\r\n\r\n\r\n    // render row\r\n    const renderRow = (data) => {\r\n        const rows = [];\r\n        if (data) {\r\n            for (const [key, value] of data) {\r\n                {\r\n                    value?.map((item, index) => {\r\n                        const className =\r\n                            value.length === index + 1\r\n                                ? \"sp1_tlr_td f-14 sp1_tlr_td_border\"\r\n                                : \"sp1_tlr_td f-14\"; \r\n                        rows.push(\r\n                            <React.Fragment key={item.start_time}>\r\n                                <tr className=\"sp1_tlr_tr\">\r\n                                    {\r\n                                        _.map(_columns, col =>{\r\n                                            if(col.group){\r\n                                                return index === 0 && (\r\n                                                    <React.Fragment key={col.id}>\r\n                                                        {col.cell({row: item, data: value, rowSpan: _.size(value)})}\r\n                                                    </React.Fragment>\r\n                                                );\r\n                                            }else{\r\n                                                    return <React.Fragment key={col.id}>\r\n                                                        { col.cell({ row: item, data: value, index,  className: `${className} sp1_drag_col_${col?.id}`})}\r\n                                                    </React.Fragment>\r\n                                                }\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </tr>\r\n                            </React.Fragment>\r\n                        );\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return rows;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"p-3\">\r\n                <div\r\n                    className=\"position-relative sp1_tlr_tbl_wrapper\"\r\n                    style={{ height }}\r\n                >\r\n                    <table className=\"sp1_tlr_table\">\r\n                        <thead className=\"sp1_tlr_thead\">\r\n                            <tr className=\"sp1_tlr_tr\">\r\n                                {_.map(_columns, (column) => {\r\n                                    return (\r\n                                        <TableDragAbleHeader\r\n                                            key={column.id}\r\n                                            className=\"sp1_tlr_th\"\r\n                                            column={column}\r\n                                            columns = {_columns}\r\n                                            onSort={() => {}}\r\n                                            onDrop={setColumnOrder}\r\n                                            order={columnOrder}\r\n                                            tableName={tableName}\r\n                                            storeOnLocalStore={(columns) => setValue({...value, columnOrders: columns})}\r\n                                        /> \r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"sp1_tlr_tbody\">\r\n                            {!isLoading && renderRow(data)}\r\n                            {isLoading && <ProjectWiseTimeLogTableSessionLoader />}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <TableFooter\r\n                    onPaginate={onPaginate}\r\n                    perpageData={perpageData}\r\n                    totalEntry={totalEntry}\r\n                    currentPage={currentPage}\r\n                    handlePerPageData={handlePerPageData}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default DataTable;\r\n","import React from \"react\";\r\nimport { Placeholder } from \"../../global/Placeholder\";\r\nimport _ from \"lodash\";\r\n\r\n\r\n\r\n\r\nconst ProjectWiseTimeLogTableSessionLoader = ({}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <tr className=\"sp1_tlr_tr\">\r\n                <td className=\"sp1_tlr_td\" rowSpan={3}> \r\n                    <Placeholder width=\"250px\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"150px\" />\r\n                </td>\r\n                <td className=\"sp1_tlr_td\" rowSpan={3}> \r\n                    <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"50%\" />\r\n                </td> \r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n\r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n            </tr>\r\n\r\n            {_.times(2, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\"> \r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n\r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n                </tr>\r\n            ))}\r\n\r\n            {_.times(2, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\">\r\n                    <td className=\"sp1_tlr_td\"> \r\n                            <Placeholder width=\"250px\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"150px\" />\r\n                        </td>\r\n                        <td className=\"sp1_tlr_td\"> \r\n                            <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"50%\" />\r\n                        </td> \r\n                        <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                        <td className=\"sp1_tlr_td\" > \r\n                            <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                            <Placeholder width=\"100px\"/>\r\n                        </td>\r\n                        \r\n                        <td className=\"sp1_tlr_td\" > \r\n                            <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                            <Placeholder width=\"100px\"/>\r\n                        </td>\r\n\r\n                        <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n                </tr>\r\n            ))}\r\n\r\n            <tr className=\"sp1_tlr_tr\">\r\n                <td className=\"sp1_tlr_td\" rowSpan={2}> \r\n                    <Placeholder width=\"250px\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"150px\" />\r\n                </td>\r\n                <td className=\"sp1_tlr_td\" rowSpan={2}> \r\n                    <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"50%\" />\r\n                </td> \r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n\r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n            </tr>\r\n\r\n            {_.times(1, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\"> \r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n\r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n                </tr>\r\n            ))}\r\n\r\n            {_.times(3, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\">\r\n                     <td className=\"sp1_tlr_td\"> \r\n                            <Placeholder width=\"250px\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"150px\" />\r\n                        </td>\r\n                        <td className=\"sp1_tlr_td\"> \r\n                            <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"50%\" />\r\n                        </td> \r\n                        <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                        <td className=\"sp1_tlr_td\" > \r\n                            <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                            <Placeholder width=\"100px\"/>\r\n                        </td>\r\n                        \r\n                        <td className=\"sp1_tlr_td\" > \r\n                            <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                            <Placeholder width=\"100px\"/>\r\n                        </td>\r\n\r\n                        <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n                </tr>\r\n            ))}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ProjectWiseTimeLogTableSessionLoader;\r\n"],"names":["React","useState","useEffect","TableFooter","TableDragAbleHeader","ProjectWiseTimeLogTableSessionLoader","useLocalStorage","jsx","_jsx","jsxs","_jsxs","DataTable","_ref","data","_ref$columns","columns","_ref$tableName","tableName","_ref$sortBy","sortBy","_ref$height","height","onPaginate","perpageData","handlePerPageData","totalEntry","currentPage","isLoading","_useState","_useState2","_slicedToArray","columnOrder","setColumnOrder","_useLocalStorage","_useLocalStorage2","value","setValue","columnOrders","column_ids","_","map","_toConsumableArray","_columns","item","indexOf","id","renderRow","rows","_iterator","_createForOfIteratorHelper","_step","_loop","_step$value","key","index","className","length","push","Fragment","children","col","group","cell","row","rowSpan","size","concat","start_time","s","n","done","err","e","f","style","column","onSort","onDrop","order","storeOnLocalStore","_objectSpread","Placeholder","_objectDestructuringEmpty","width","times"],"sourceRoot":""}