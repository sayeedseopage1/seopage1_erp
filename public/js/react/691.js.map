{"version":3,"file":"js/react/691.js","mappings":"+tCAmFA,QA7E6B,SAAHA,GAAgC,IAA1BC,EAAOD,EAAPC,QAASC,EAAUF,EAAVE,WACeC,EAAAC,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA7CC,EAAYH,EAAA,GAAEI,EAAeJ,EAAA,GAGpCK,GACIC,EAAAA,EAAAA,IAA8B,IADpBC,EAAQF,EAAdG,KAA4BC,EAAeJ,EAA3BK,WAIlBC,EACe,KAAjBR,EACMI,EACAA,EAASK,QAAO,SAACd,GAAO,OACpBe,IAAAA,UAAYf,EAAQgB,cAAcC,SAC9BF,IAAAA,UAAYV,GACf,IAGf,OACIa,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+BAA8BC,UACzCC,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACC,MAAOvB,EAASwB,SAAUvB,EAAWmB,SAAA,EAC3CC,EAAAA,EAAAA,MAACC,EAAAA,EAASG,OAAM,CAACN,UAAU,0BAAyBC,SAAA,EAChDF,EAAAA,EAAAA,KAACI,EAAAA,EAASI,MAAK,CACXP,UAAU,yFACVQ,aAAc,SAAC3B,GAAO,OAAKA,aAAO,EAAPA,EAASgB,YAAY,EAChDQ,SAAU,SAACI,GAAC,OAAKtB,EAAgBsB,EAAEC,OAAON,MAAM,EAChDO,YAAY,QAIhBZ,EAAAA,EAAAA,KAAA,QACIa,MAAO,CACHC,SAAU,WACVC,IAAK,MACLC,MAAO,MACPC,UAAW,oBACbf,UAEFF,EAAAA,EAAAA,KAACkB,EAAAA,IAAiB,UAI1BlB,EAAAA,EAAAA,KAACI,EAAAA,EAASe,QAAO,CACblB,UAAU,8CACVY,MAAO,CACHO,OAAQ,IACRC,UAAW,QACXC,UAAW,QACbpB,SAEDP,EACGA,EAAgB4B,KAAI,SAACzC,GAAO,OACxBkB,EAAAA,EAAAA,KAACI,EAAAA,EAASoB,OAAM,CAEZnB,MAAOvB,EACP2C,UAAW,EACXxB,UAAW,SAAAyB,GAAA,IAAGC,EAAQD,EAARC,SAAUC,EAAMF,EAANE,OAAM,OAC1BD,EACM,sCACAC,EACA,oCACA,4BAA4B,EACrC1B,UAEDC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAOpB,EAAQgB,aAAa,KAACE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BC,SAAEpB,EAAQ+C,kBAX5E/C,EAAQgD,GAYC,KAGtB9B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SACtCT,EAAkB,aAAe,yBAO9D,C","sources":["webpack:///./resources/js/react/single-independent-task/section/task-actions/stop-timer/options/ProjectSelectionList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useGetAllProjectsOptionsQuery } from \"../../../../../services/api/FilterBarOptionsApiSlice\";\r\nimport { Combobox } from \"@headlessui/react\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\n\r\nconst ProjectSelectionList = ({ project, setProject }) => {\r\n    const [projectQuery, setProjectQuery] = useState(\"\");\r\n\r\n    // fetch projects\r\n    const { data: projects, isFetching: projectFetching } =\r\n        useGetAllProjectsOptionsQuery(\"\");\r\n  \r\n    // project filter\r\n    const filteredProject =\r\n        projectQuery === \"\"\r\n            ? projects\r\n            : projects.filter((project) =>\r\n                  _.lowerCase(project.project_name).includes(\r\n                      _.lowerCase(projectQuery)\r\n                  )\r\n              );\r\n\r\n    return (\r\n        <div className=\"position-relative w-100 mb-3\">\r\n            <Combobox value={project} onChange={setProject}>\r\n                <Combobox.Button className=\"position-relative w-100\">\r\n                    <Combobox.Input\r\n                        className=\"w-100 bg-white py-2 pl-2 pr-1 border d-flex align-items-center justify-content-between\"\r\n                        displayValue={(project) => project?.project_name}\r\n                        onChange={(e) => setProjectQuery(e.target.value)}\r\n                        placeholder=\"--\"\r\n                    />\r\n\r\n                    {/* Selection box icon */}\r\n                    <span\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"50%\",\r\n                            right: \"5px\",\r\n                            transform: \"translateY(-50%)\",\r\n                        }}\r\n                    >\r\n                        <HiOutlineSelector />\r\n                    </span>\r\n                </Combobox.Button>\r\n\r\n                <Combobox.Options\r\n                    className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                    style={{\r\n                        zIndex: \"1\",\r\n                        maxHeight: \"350px\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {filteredProject ? (\r\n                        filteredProject.map((project) => (\r\n                            <Combobox.Option\r\n                                key={project.id}\r\n                                value={project}\r\n                                tabIndex={-1}\r\n                                className={({ selected, active }) =>\r\n                                    selected\r\n                                        ? \"task-selection-list-option selected\"\r\n                                        : active\r\n                                        ? \"task-selection-list-option active\"\r\n                                        : \"task-selection-list-option\"\r\n                                }\r\n                            >\r\n                                <span>{project.project_name} <span className=\"badge badge-success ml-2\">{project.client_name}</span></span>\r\n                            </Combobox.Option>\r\n                        ))\r\n                    ) : (\r\n                        <div className=\"task-selection-list-option\">\r\n                            {projectFetching ? \"Loading...\" : \"Nothing found.\"}\r\n                        </div>\r\n                    )}\r\n                </Combobox.Options>\r\n            </Combobox>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectSelectionList;\r\n"],"names":["_ref","project","setProject","_useState2","_slicedToArray","useState","projectQuery","setProjectQuery","_useGetAllProjectsOpt","useGetAllProjectsOptionsQuery","projects","data","projectFetching","isFetching","filteredProject","filter","_","project_name","includes","_jsx","className","children","_jsxs","Combobox","value","onChange","Button","Input","displayValue","e","target","placeholder","style","position","top","right","transform","HiOutlineSelector","Options","zIndex","maxHeight","overflowY","map","Option","tabIndex","_ref2","selected","active","client_name","id"],"sourceRoot":""}