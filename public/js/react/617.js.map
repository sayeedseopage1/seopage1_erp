{"version":3,"file":"js/react/617.js","mappings":"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","sources":["webpack:///./resources/js/react/tasks/components/SubtaskTableColumns.jsx","webpack:///./resources/js/react/tasks/components/SubTaskExportButton.jsx","webpack:///./resources/js/react/tasks/pages/Subtasks.jsx"],"sourcesContent":["import dayjs from \"dayjs\";\r\nimport * as React from \"react\";\r\nimport Person from \"./Person\";\r\nimport { ExpandTask } from \"./table/ExpandTask\";\r\nimport { convertTime } from \"../../utils/converTime\";\r\nimport ReportButton from \"./ReportButton\";\r\nimport { CompareDate } from \"../../utils/dateController\";\r\nimport _ from \"lodash\";\r\nimport StopWatch from \"./Timer\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport Button from \"./Button\";\r\nimport { SingleTask } from \"../../utils/single-task\";\r\nconst ReportForm = React.lazy(() =>\r\n    import(\"../../single-task/section/task-actions/report/ReportForm\")\r\n);\r\nimport Modal from \"./Modal\";\r\nimport Loader from \"./Loader\";\r\nimport { storeSubTasks } from \"../../services/features/tasksSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Switch from \"../../global/Switch\";\r\nimport { User } from \"../../utils/user-details\";\r\nimport PersonAvatar from \"../../global/PersonAvatar\";\r\n\r\nconst compareDate = new CompareDate();\r\n\r\nexport const SubTasksTableColumns = [\r\n    {\r\n        id: \"expend\",\r\n        header: (\r\n            <span className=\"mx-2\">\r\n                <strong>#</strong>\r\n            </span>\r\n        ),\r\n        cell: ({ row }) => (\r\n            <span className=\"mx-2\">\r\n                <strong>{row.index + 1}</strong>\r\n            </span>\r\n        ),\r\n    },\r\n    {\r\n        id: \"task\",\r\n        header: \"Task\",\r\n        accessorFn: (row) => `${row.id}${row.heading}`,\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return (\r\n                <abbr title={data?.heading} style={{ textDecoration: \"none\" }}>\r\n                    <div\r\n                        className=\"d-flex align-items-center\"\r\n                        style={{ gap: \"10px\" }}\r\n                    >\r\n                        <a\r\n                            href={`/account/tasks/${data?.id}`}\r\n                            className=\"hover-underline multine-ellipsis\"\r\n                        >\r\n                            {\" \"}\r\n                            <span style={{ color: \"#3366CC\" }}>\r\n                                {data?.heading}{\" \"}\r\n                            </span>{\" \"}\r\n                        </a>\r\n                    </div>\r\n                </abbr>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        id: \"timer_status\",\r\n        header: \"Timer Status\",\r\n        accessorKey: \"subtasks_timer_active\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            const count = data?.subtasks_timer_active;\r\n            const subtaskCount = _.size(data?.subtasks_count);\r\n            const isActive = count > 0;\r\n            let serverTime = 0;\r\n            let localTime = 0;\r\n            let timer = 0;\r\n\r\n            if (data?.start_time && _.isNull(data?.end_time)) {\r\n                serverTime = compareDate.dayjs(data?.start_time).unix();\r\n                localTime = compareDate.dayjs().unix();\r\n                timer = localTime - serverTime;\r\n            }\r\n\r\n            const clockIsRunning = data?.start_time && _.isNull(data?.end_time);\r\n\r\n            const color = isActive || clockIsRunning ? \"#54B688\" : \"#DCDEE1\";\r\n            return (\r\n                <div style={{ color }} className=\"d-flex align-items-center\">\r\n                    <i className=\"fa-solid fa-stopwatch f-18\" />\r\n                    {row.parentId === undefined &&\r\n                        subtaskCount === 0 &&\r\n                        !clockIsRunning && (\r\n                            <span className=\"ml-2\">\r\n                                <strong>{count}</strong>\r\n                            </span>\r\n                        )}\r\n                    {clockIsRunning && (\r\n                        <span\r\n                            className=\"ml-1 badge badge-primary text-white\"\r\n                            style={{ fontSize: \"11px\" }}\r\n                        >\r\n                            {<StopWatch time={timer} run={clockIsRunning} />}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        id: \"milestone\",\r\n        header: \"Milestone\",\r\n        accessorKey: \"milestone_title\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return (\r\n                <abbr\r\n                    title={data?.milestone_title}\r\n                    style={{ textDecoration: \"none\" }}\r\n                >\r\n                    {data?.milestone_title ? (\r\n                        <span className=\"multine-ellipsis word-break\">\r\n                            {data?.milestone_title}\r\n                        </span>\r\n                    ) : (\r\n                        <span style={{ fontWeight: \"bold\", color: \"gray\" }}>\r\n                            N/A\r\n                        </span>\r\n                    )}\r\n                </abbr>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        id: \"deliverable\",\r\n        header: \"Deliverable\",\r\n        accessorKey: \"deliverable_title\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return (\r\n                <abbr\r\n                    title={data?.deliverable_title}\r\n                    style={{ textDecoration: \"none\" }}\r\n                >\r\n                    {data?.deliverable_title ? (\r\n                        <span className=\"multine-ellipsis word-break\">\r\n                            {data?.deliverable_title}\r\n                        </span>\r\n                    ) : (\r\n                        <span style={{ fontWeight: \"bold\", color: \"gray\" }}>\r\n                            N/A\r\n                        </span>\r\n                    )}\r\n                </abbr>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        id: \"project\",\r\n        header: \"Project\",\r\n        accessorFn: (row) => `${row.project_id}${row.project_name}`,\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return (\r\n                <abbr\r\n                    title={data?.project_name}\r\n                    style={{ textDecoration: \"none\" }}\r\n                >\r\n                    {data?.project_name ? (\r\n                        <a\r\n                            href={`/account/projects/${data?.project_id}`}\r\n                            className=\"multine-ellipsis\"\r\n                        >\r\n                            <span style={{ color: \"#3366CC\" }}>\r\n                                {data?.project_name}\r\n                            </span>\r\n                        </a>\r\n                    ) : (\r\n                        <span style={{ fontWeight: \"bold\", color: \"gray\" }}>\r\n                            N/A\r\n                        </span>\r\n                    )}\r\n                </abbr>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        id: \"client\",\r\n        header: \"Client\",\r\n        accessorKey: \"client_name\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n\r\n            const clientSelection = () => {\r\n                const client = { url: null, name: null, avatar: null };\r\n\r\n                if (data.client_id) {\r\n                    client.url = `/account/clients/${data.client_id}`;\r\n                    client.name = data.client_name;\r\n                    client.avatar = data.client_avatar;\r\n                } else if (data.ind_client_id) {\r\n                    client.url = `/account/clients/${data.ind_client_id}`;\r\n                    client.name = data.ind_existing_client_name;\r\n                    client.avatar = null;\r\n                } else {\r\n                    client.url = ``;\r\n                    client.name = data.ind_client_name;\r\n                    client.avatar = null;\r\n                }\r\n\r\n                return { ...client };\r\n            };\r\n\r\n            // console.log(clientSelection());\r\n            return (\r\n                <div>\r\n                    <Person\r\n                        url={clientSelection().url}\r\n                        avatar={clientSelection().avatar}\r\n                        name={clientSelection().name}\r\n                    />\r\n                </div>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        id: \"project_manager\",\r\n        header: \"Project Manager\",\r\n        accessorKey: \"pm_id_name\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return data?.project_manager_id ? (\r\n                <PersonAvatar\r\n                    url={`/account/employees/${data?.project_manager_id}`}\r\n                    name={data?.pm_id_name}\r\n                    avatar={data?.pm_id_avatar}\r\n                />\r\n            ) : (\r\n                <span style={{ fontWeight: \"bold\", color: \"gray\" }}>N/A</span>\r\n            );\r\n        },\r\n    },\r\n\r\n    {\r\n        id: \"creation_date\",\r\n        header: \"Creation Date\",\r\n        accessorKey: \"creation_date\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return <span>{data?.creation_date}</span>;\r\n        },\r\n    },\r\n    {\r\n        id: \"due_date\",\r\n        header: \"Due Date\",\r\n        accessorFn: (row) =>\r\n            row?.due_date ? dayjs(row?.due_date).format(\"DD-MM-YYYY\") : \"--\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            let date = data?.due_date;\r\n            const currentDate = compareDate.dayjs();\r\n            let color = \"\";\r\n\r\n            if (compareDate.isSame(currentDate, date)) {\r\n                date = \"Today\";\r\n                color = \"red\";\r\n            } else if (compareDate.isAfter(currentDate, date)) {\r\n                color = \"red\";\r\n            }\r\n\r\n            date = date === \"Today\" ? date : dayjs(date).format(\"DD-MM-YYYY\");\r\n            return (\r\n                <span style={{ color: color }}>\r\n                    <strong>{date ?? \"--\"}</strong>\r\n                </span>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        id: \"start_date\",\r\n        header: \"Started Date\",\r\n        accessorFn: (row) =>\r\n            `${\r\n                row?.start_date\r\n                    ? dayjs(row?.start_date).format(\"DD-MM-YYYY\")\r\n                    : \"--\"\r\n            }`,\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return (\r\n                <strong>\r\n                    {data?.start_date ? (\r\n                        <>\r\n                            {dayjs(data?.start_date).format(\"DD-MM-YYYY\")}{\" \"}\r\n                            <br />\r\n                        </>\r\n                    ) : (\r\n                        \"--\"\r\n                    )}\r\n                </strong>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        id: \"completion_date\",\r\n        header: \"Completion Date\",\r\n        accessorFn: (row) =>\r\n            `${\r\n                row?.completion_date\r\n                    ? dayjs(row?.completion_date).format(\"DD-MM-YYYY\")\r\n                    : \"--\"\r\n            }`,\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return (\r\n                <strong>\r\n                    {Number(data?.board_column_id) === 4\r\n                        ? data?.completion_date && (\r\n                              <>\r\n                                  {dayjs(data?.completion_date).format(\r\n                                      \"DD-MM-YYYY\"\r\n                                  )}{\" \"}\r\n                                  <br />\r\n                              </>\r\n                          )\r\n                        : \"--\"}\r\n                </strong>\r\n            );\r\n        },\r\n    },\r\n\r\n    {\r\n        id: \"submission_data\",\r\n        header: \"Submission Date\",\r\n        accessorFn: (row) =>\r\n            `${\r\n                row?.task_submission_date\r\n                    ? dayjs(row?.task_submission_date).format(\"DD-MM-YYYY\")\r\n                    : \"--\"\r\n            }`,\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return (\r\n                <strong>\r\n                    {data?.task_submission_date ? (\r\n                        <>\r\n                            {dayjs(data?.task_submission_date).format(\r\n                                \"DD-MM-YYYY\"\r\n                            )}{\" \"}\r\n                            <br />\r\n                            {dayjs(data?.task_submission_date).format(\r\n                                \"hh:mm A\"\r\n                            )}{\" \"}\r\n                            <br />\r\n                        </>\r\n                    ) : (\r\n                        \"--\"\r\n                    )}\r\n                </strong>\r\n            );\r\n        },\r\n    },\r\n    // 4, 8, 9, // boardColumn iD\r\n    {\r\n        id: \"approved_on\",\r\n        header: \"Approved On\",\r\n        accessorFn: (row) =>\r\n            `${\r\n                row?.task_approval_date\r\n                    ? dayjs(row?.task_approval_date).format(\"DD-MM-YYYY\")\r\n                    : \"Not Completed Yet!\"\r\n            }`,\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            // return(\r\n            //   <strong>\r\n            //     {data?.task_approval_date ? (\r\n            //       <>\r\n            //         {dayjs(data?.task_approval_date).format('DD-MM-YYYY')}\r\n            //       </>\r\n            //     ): <span className='badge text-white word-break' style={{background: '#f5c308'}}>Not Completed Yet!</span>}\r\n            //   </strong>\r\n            // )\r\n            return (\r\n                <Switch>\r\n                    <Switch.Case\r\n                        condition={\r\n                            data?.task_approval_date &&\r\n                            _.includes([4, 8, 9], data?.board_column_id)\r\n                        }\r\n                    >\r\n                        {dayjs(data?.task_approval_date).format(\"DD-MM-YYYY\")}{\" \"}\r\n                        <br />\r\n                        {dayjs(data?.task_approval_date).format(\"hh:mm A\")}\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case\r\n                        condition={\r\n                            !data?.task_approval_date &&\r\n                            data?.task_updated_at &&\r\n                            _.includes([4, 8, 9], data?.board_column_id)\r\n                        }\r\n                    >\r\n                        {dayjs(data?.task_updated_at).format(\"DD-MM-YYYY\")}{\" \"}\r\n                        <br />\r\n                        {dayjs(data?.task_updated_at).format(\"hh:mm A\")} <br />\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case\r\n                        condition={\r\n                            !_.includes([4, 8, 9], data?.board_column_id)\r\n                        }\r\n                    >\r\n                        --\r\n                    </Switch.Case>\r\n                </Switch>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        id: \"estimated_time\",\r\n        header: \"Estimated Time\",\r\n        accessorFn: (row) =>\r\n            Number(row?.estimate_hours) * 60 + Number(row?.estimate_minutes),\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return (\r\n                <div>\r\n                    {data?.estimate_hours ?? 0} hrs <br />\r\n                    {data?.estimate_minutes ?? 0} mins\r\n                </div>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        id: \"hours_logged\",\r\n        header: \"Hours Logged\",\r\n        accessorKey: \"subtasks_hours_logged\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return <div>{convertTime(data?.subtasks_hours_logged)}</div>;\r\n        },\r\n    },\r\n\r\n    {\r\n        id: \"assigned_by\",\r\n        header: \"Assigned By\",\r\n        accessorKey: \"added_by_name\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return (\r\n                <PersonAvatar\r\n                    url={`/account/employees/${data?.added_by}`}\r\n                    avatar={data?.added_by_avatar}\r\n                    name={data?.added_by_name}\r\n                />\r\n            );\r\n        },\r\n    },\r\n    {\r\n        id: \"assigned_to\",\r\n        header: \"Assigned To\",\r\n        accessorKey: \"assigned_to_name\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return (\r\n                <PersonAvatar\r\n                    url={`/account/employees/${data?.assigned_to_id}`}\r\n                    avatar={data?.assigned_to_avatar}\r\n                    name={data?.assigned_to_name}\r\n                />\r\n            );\r\n        },\r\n    },\r\n    {\r\n        id: \"status\",\r\n        header: \"Task Status\",\r\n        accessorKey: \"column_name\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return (\r\n                <span\r\n                    className=\"badge text-white\"\r\n                    style={{ background: data?.label_color }}\r\n                >\r\n                    {data?.column_name}\r\n                </span>\r\n            );\r\n        },\r\n    },\r\n    // {\r\n    //   id: 'progress',\r\n    //   header: 'Progress',\r\n    //   cell: ({row}) => {\r\n    //     const data = row?.original;\r\n    //     const count = Number(data?.subtasks_count);\r\n    //     const completed = Number(data?.subtasks_completed_count);\r\n    //     let bg = 'bg-transparent';\r\n    //     let percent = 0;\r\n\r\n    //     if(count > 0){percent = (completed / count) * 100;}\r\n    //     else{percent = Number(data?.board_column_id)=== 4 ? 100 : 0;}\r\n\r\n    //     if(percent === 100){\r\n    //       bg = 'bg-success'\r\n    //     }else if(percent < 100 && percent >= 75){\r\n    //       bg = 'bg-info';\r\n    //     }else if( percent < 75 && percent >= 25){\r\n    //       bg = 'bg-warning'\r\n    //     }else bg='bg-danger'\r\n\r\n    //     return(\r\n    //       <div>\r\n    //         <div className=\"progress\" style={{height: '16px'}}>\r\n    //             <div\r\n    //               className={`progress-bar progress-bar-striped progress-bar-animated ${bg}`}\r\n    //               role=\"progressbar\"\r\n    //               style={{width: `${percent}%`}}\r\n    //               aria-valuenow=\"10\"\r\n    //               aria-valuemin=\"0\"\r\n    //               aria-valuemax=\"100\"\r\n    //             >{Math.floor(percent)}%</div>\r\n    //         </div>\r\n    //       </div>\r\n    //     )\r\n    //   }\r\n    // },\r\n    {\r\n        id: \"report\",\r\n        header: \"Report\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return <ReportButton row={data} />;\r\n        },\r\n    },\r\n    {\r\n        id: \"action\",\r\n        header: \"Action\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            return <ActionDropdown row={data} />;\r\n        },\r\n    },\r\n];\r\n\r\n// Action Dropdown\r\nconst ActionDropdown = ({ row }) => {\r\n    const [reportModalOpen, setReportModalOpen] = React.useState(false);\r\n    const singleTask = new SingleTask(row);\r\n    const close = () => setReportModalOpen(false);\r\n    const { subtasks } = useSelector((s) => s.tasks);\r\n    const dispatch = useDispatch();\r\n    // handle report\r\n    const handleReport = () => {\r\n        // find the index of current task\r\n        const _index = _.findIndex(subtasks, { id: row?.id });\r\n        // create new instance of this row with updated report count;\r\n        const instance = [...subtasks];\r\n        instance[_index] = {\r\n            ...row,\r\n            subtasks_reports_count: Number(row.subtasks_reports_count) + 1,\r\n        };\r\n        dispatch(storeSubTasks({ subtasks: [...instance] }));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dropdown>\r\n                <Dropdown.Toggle icon={false}>\r\n                    <Button variant=\"tertiary\">\r\n                        <i className=\"fa-solid fa-ellipsis-vertical\"></i>\r\n                    </Button>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu\r\n                    placement=\"bottom-end\"\r\n                    className=\"py-2 sp1_tasks_tbl_action_dd_menu\"\r\n                >\r\n                    <Dropdown.Item\r\n                        onClick={() => setReportModalOpen(true)}\r\n                        className=\"sp1_tasks_tbl_del\"\r\n                    >\r\n                        <i className=\"fa-solid fa-bug mr-2\"></i> Report\r\n                    </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            {/* report form modal */}\r\n            <Modal isOpen={reportModalOpen} className=\"sp1_single_task--modal\">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div className=\"sp1_single_task--modal-panel task-report-form--modal-panel\">\r\n                        <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                            <div className=\"font-weight-bold f-14\">\r\n                                Task#{row?.id} : Report\r\n                            </div>\r\n                            <Button onClick={close} className=\"\">\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n                        <React.Suspense\r\n                            fallback={\r\n                                <div className=\"py-3 d-flex align-items-center justify-content-center\">\r\n                                    <Loader />\r\n                                </div>\r\n                            }\r\n                        >\r\n                            <ReportForm\r\n                                task={singleTask}\r\n                                close={close}\r\n                                onSuccess={handleReport}\r\n                            />\r\n                        </React.Suspense>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport ReactExport from \"react-data-export\";\r\nimport _, { fill } from \"lodash\";\r\nimport styled from \"styled-components\";\r\nimport { CompareDate } from \"../../utils/dateController\";\r\nimport Loader from \"../../global/Loader\";\r\nimport { useExportSubTasksMutation } from \"../../services/api/tasksApiSlice\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\nconst SubTaskExportButton = ({ filter }) => {\r\n    const compareDate = new CompareDate();\r\n    const [isRender, setIsRender] = React.useState(false);\r\n    const queryObject = _.pickBy(filter ?? {}, Boolean);\r\n    const query = new URLSearchParams(queryObject).toString();\r\n\r\n    const [getSubTaskData, { data, isLoading }] = useExportSubTasksMutation();\r\n\r\n    const Tasks = data?.tasks;\r\n\r\n    // console.log(\"filter\", filter);\r\n    // console.log(\" task\", Tasks);\r\n\r\n    // get deals\r\n    const getData = (deals) => {\r\n        let rows = [];\r\n\r\n        _.forEach(deals, (d) => {\r\n            const fieldStyle = {\r\n                alignment: {\r\n                    wrapText: true,\r\n                    vertical: \"center\",\r\n                    horizontal: \"center\",\r\n                },\r\n            };\r\n\r\n            const statusStyle = (row) => {\r\n                if (row.column_name === \"Submitted Task for Client Approval\") {\r\n                    return {\r\n                        font: {\r\n                            color: { rgb: \"FF84D6\" },\r\n                            bold: true,\r\n                        },\r\n                    };\r\n                } else if (row.column_name === \"To Do\") {\r\n                    return {\r\n                        font: {\r\n                            color: { rgb: \"F5C71F\" },\r\n                            bold: true,\r\n                        },\r\n                    };\r\n                } else if (row.column_name === \"Doing\") {\r\n                    return {\r\n                        font: {\r\n                            color: { rgb: \"31A0F4\" },\r\n                            bold: true,\r\n                        },\r\n                    };\r\n                } else if (row.column_name === \"Awaiting Client Approval\") {\r\n                    return {\r\n                        font: {\r\n                            color: { rgb: \"0e0bc2\" },\r\n                            bold: true,\r\n                        },\r\n                    };\r\n                } else {\r\n                    return {\r\n                        font: {\r\n                            color: { rgb: \"f01616\" },\r\n                            bold: true,\r\n                        },\r\n                    };\r\n                }\r\n            };\r\n\r\n            const dueDate = (d) => {\r\n                let date = d?.due_date;\r\n                const currentDate = compareDate.dayjs();\r\n\r\n                if (compareDate.isSame(currentDate, date)) {\r\n                    date = \"Today\";\r\n                }\r\n\r\n                date =\r\n                    date === \"Today\" ? date : dayjs(date).format(\"DD-MM-YYYY\");\r\n                return date;\r\n            };\r\n\r\n            const approveStyle = (d) => {\r\n                if (dayjs(d?.task_approval_date).isValid()) {\r\n                    return {\r\n                        font: {\r\n                            color: { rgb: \"050000\" },\r\n                            bold: true,\r\n                        },\r\n                    };\r\n                } else {\r\n                    return {\r\n                        font: {\r\n                            color: { rgb: \"fdae1a\" },\r\n                        },\r\n                    };\r\n                }\r\n            };\r\n            let row = [\r\n                {\r\n                    value: d?.heading ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n                {\r\n                    value: d?.perent_task_heading ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n                {\r\n                    value: d?.subtasks_timer_active ?? \"--\",\r\n                    style: {\r\n                        ...fieldStyle,\r\n                    },\r\n                },\r\n                {\r\n                    value: d?.milestone_title ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n                {\r\n                    value: d?.deliverable_title ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n                {\r\n                    value: d?.project_name ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n                {\r\n                    value: d?.client_name ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n                {\r\n                    value: d?.pm_id_name ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n                {\r\n                    value: dayjs(d?.creation_date).isValid()\r\n                        ? dayjs(d?.creation_date).format(\"DD-MM-YYYY\")\r\n                        : \"--\",\r\n                    style: {\r\n                        ...fieldStyle,\r\n                    },\r\n                },\r\n\r\n                {\r\n                    value: dueDate(d) ?? \"--\",\r\n                    style: fieldStyle,\r\n                },\r\n                {\r\n                    value: dayjs(data?.task_approval_date).isValid()\r\n                        ? dayjs(data?.task_approval_date).format(\"DD-MM-YYYY\")\r\n                        : \"--\",\r\n                    style: {\r\n                        ...fieldStyle,\r\n                    },\r\n                },\r\n                {\r\n                    value: dayjs(d?.completion_date).isValid()\r\n                        ? dayjs(d?.completion_date).format(\"DD-MM-YYYY\")\r\n                        : \"--\",\r\n\r\n                    style: {\r\n                        ...fieldStyle,\r\n                    },\r\n                },\r\n                {\r\n                    value: dayjs(d?.task_submission_date).isValid()\r\n                        ? dayjs(d?.task_submission_date).format(\"DD-MM-YYYY\")\r\n                        : \"--\",\r\n\r\n                    style: {\r\n                        ...fieldStyle,\r\n                    },\r\n                },\r\n                {\r\n                    value: dayjs(d?.task_approval_date).isValid()\r\n                        ? dayjs(d?.task_approval_date).format(\"DD-MM-YYYY\")\r\n                        : \"Not Completed Yet\",\r\n\r\n                    style: {\r\n                        ...fieldStyle,\r\n                        ...approveStyle(d),\r\n                    },\r\n                },\r\n                {\r\n                    value:\r\n                        `${d?.estimate_hours} hrs ${d?.estimate_minutes} mins` ??\r\n                        \"--\",\r\n\r\n                    style: {\r\n                        ...fieldStyle,\r\n                    },\r\n                },\r\n                {\r\n                    value: d?.subtasks_hours_logged ?? \"--\",\r\n\r\n                    style: {\r\n                        ...fieldStyle,\r\n                    },\r\n                },\r\n                {\r\n                    value: d?.added_by_name ?? \"--\",\r\n\r\n                    style: {\r\n                        ...fieldStyle,\r\n                    },\r\n                },\r\n                {\r\n                    value: d?.assigned_to_name ?? \"--\",\r\n\r\n                    style: {\r\n                        ...fieldStyle,\r\n                    },\r\n                },\r\n                {\r\n                    value: d?.column_name ?? \"--\",\r\n\r\n                    style: {\r\n                        ...fieldStyle,\r\n                        ...statusStyle(d),\r\n                    },\r\n                },\r\n            ];\r\n            rows.push(row);\r\n        });\r\n\r\n        return rows;\r\n    };\r\n\r\n    // columns\r\n    const columns = [\r\n        { title: \"Subtask\", width: { wpx: 150 } },\r\n        { title: \"Parent Task\", width: { wpx: 150 } },\r\n        { title: \"Timer Status\" },\r\n        { title: \"Milestone\", width: { wpx: 150 } },\r\n        { title: \"Deliverable\", width: { wpx: 150 } },\r\n        { title: \"Project\", width: { wpx: 150 } },\r\n        { title: \"Client\" },\r\n        { title: \"Project Manager\", width: { wpx: 100 } },\r\n        { title: \"Creation Date\" },\r\n        { title: \"Due Date\" },\r\n        { title: \"Started Date\" },\r\n        { title: \"Completion Date\" },\r\n        { title: \"Submission Date\" },\r\n        { title: \"Approved On\", width: { wpx: 100 } },\r\n        { title: \"Estimated Time\" },\r\n        { title: \"Hours Logged\" },\r\n        { title: \"Assigned By\" },\r\n        { title: \"Assigned To\" },\r\n        { title: \"Task Status\", width: { wpx: 150 } },\r\n    ];\r\n\r\n    // multi data set\r\n    const multiDataSet = [\r\n        {\r\n            columns: [\r\n                { title: \"Filter\" },\r\n                { title: \"Date\" },\r\n                { title: \"Project Manager\" },\r\n                { title: \"Client\" },\r\n                { title: \"Assign By\" },\r\n                { title: \"Assign To\" },\r\n                { title: \"status\" },\r\n                { title: \"Date Filter By\" },\r\n            ],\r\n            data: [\r\n                [\r\n                    {\r\n                        value: `--`,\r\n                    },\r\n\r\n                    {\r\n                        value: `${dayjs(filter?.start_date).format(\r\n                            \"MMM-DD-YYYY\"\r\n                        )} to ${dayjs(filter?.end_date).format(\"MMM-DD-YYYY\")}`,\r\n                        style: {\r\n                            font: {\r\n                                bold: true,\r\n                            },\r\n                        },\r\n                    },\r\n\r\n                    {\r\n                        value: filter?.pm_name,\r\n                    },\r\n                    {\r\n                        value: filter?.client_name,\r\n                    },\r\n                    {\r\n                        value: filter?.assignee_by_name,\r\n                    },\r\n                    {\r\n                        value: filter?.assignee_to_name,\r\n                    },\r\n                    {\r\n                        value: filter?.status_name,\r\n                    },\r\n                    {\r\n                        value: filter?.date_filter_by,\r\n                    },\r\n                ],\r\n            ],\r\n        },\r\n        {\r\n            xSteps: 0,\r\n            ySteps: 2,\r\n            columns: columns,\r\n            data: getData(Tasks),\r\n        },\r\n    ];\r\n\r\n    const handleRender = async () => {\r\n        setIsRender(false);\r\n        await getSubTaskData(query).unwrap();\r\n        setIsRender(true);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ExportButton onClick={handleRender}>\r\n                {isLoading ? (\r\n                    <>\r\n                        <Loader title=\"Processing...\" />\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <i className=\"fa-solid fa-download\" /> Export To Excel\r\n                    </>\r\n                )}\r\n            </ExportButton>\r\n\r\n            {isRender && !isLoading && Tasks?.length > 0 && (\r\n                <ExcelFile filename=\"SubTask_table\" hideElement={true}>\r\n                    <ExcelSheet dataSet={multiDataSet} name=\" Subtask table\" />\r\n                </ExcelFile>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SubTaskExportButton;\r\n\r\nconst ExportButton = styled.button`\r\n    width: 140px;\r\n    padding: 6px 10px;\r\n    border-radius: 3px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: 10px;\r\n    margin-bottom: 5px;\r\n\r\n    /* color: #DAF7A6; */\r\n    color: #000;\r\n    background-color: #c4de95;\r\n    gap: 8px;\r\n`;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport Button from \"../../global/Button\";\r\nimport Loader from \"../../global/Loader\";\r\nimport {\r\n    useCheckUnAuthorizedTaskTypeQuery,\r\n    useLazyGetAllSubtaskQuery,\r\n} from \"../../services/api/tasksApiSlice\";\r\nimport { storeSubTasks } from \"../../services/features/tasksSlice\";\r\nimport { User } from \"../../utils/user-details\";\r\nimport FilterContainer from \"../components/Filter-bar/FilterContainer\";\r\nimport Filterbar from \"../components/Filter-bar/Filterbar\";\r\nimport PrimaryPageAuthorizationTable from \"../components/PrimaryPageAuthorizationTable\";\r\nimport SearchBox from \"../components/Searchbox\";\r\nimport SubTasksTable from \"../components/SubtaskTable\";\r\nimport { SubTasksTableColumns } from \"../components/SubtaskTableColumns\";\r\nimport Tabbar from \"../components/Tabbar\";\r\nimport TableFilter from \"../components/table/TableFilter\";\r\nimport { defaultColumnVisibility } from \"../constant\";\r\nimport SubTaskExportButton from \"../components/SubTaskExportButton\";\r\n\r\n// current user\r\nconst auth = new User(window.Laravel.user);\r\n\r\nconst Subtasks = () => {\r\n    const { tasks } = useSelector((s) => s.tasks);\r\n\r\n    const dispatch = useDispatch();\r\n    const [filter, setFilter] = React.useState(null);\r\n    const [search, setSearch] = React.useState(\"\");\r\n    const [columnVisibility, setColumnVisibility] = React.useState(\r\n        new Object(defaultColumnVisibility(auth))\r\n    );\r\n\r\n    // api function\r\n    const [getAllSubtask, { isFetching }] = useLazyGetAllSubtaskQuery();\r\n    const { data: unAuthorizedType } = useCheckUnAuthorizedTaskTypeQuery();\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    const onFilter = async (filter) => {\r\n        const queryObject = _.pickBy(filter, Boolean);\r\n        const queryString = new URLSearchParams(queryObject).toString();\r\n        setFilter(queryObject);\r\n\r\n        if (filter?.start_date && filter?.end_date) {\r\n            await getAllSubtask(`${queryString}`)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    let _data = res?.tasks;\r\n\r\n                    if (auth.getRoleId() === 4) {\r\n                        _data = _.filter(\r\n                            res.tasks,\r\n                            (d) => Number(d.project_manager_id) === auth.getId()\r\n                        );\r\n                    } else if (auth.getRoleId() === 6) {\r\n                        _data = _.filter(\r\n                            res.tasks,\r\n                            (d) =>\r\n                                Number(d.added_by) === auth.getId() ||\r\n                                Number(d.assigned_to_id) === auth.getId()\r\n                        );\r\n                    } else if (auth.isHasRolePermission(13)) {\r\n                        _data = _.filter(\r\n                            res.tasks,\r\n                            (d) => Number(d.added_by) === auth.getId()\r\n                        );\r\n                    } else if (\r\n                        auth.getRoleId() === 9 ||\r\n                        auth.getRoleId() === 10\r\n                    ) {\r\n                        _data = _.filter(\r\n                            res.tasks,\r\n                            (d) => Number(d.assigned_to_id) === auth.getId()\r\n                        );\r\n                    } else if (_.includes([14, 15, 16, 17], auth.getRoleId())) {\r\n                        _data = _.filter(\r\n                            res.tasks,\r\n                            (d) =>\r\n                                Number(d.assigned_to_id) === auth.getId() ||\r\n                                Number(d.added_by) === auth.getId()\r\n                        );\r\n                    }\r\n\r\n                    const data = _.orderBy(_data, \"due_date\", \"desc\");\r\n                    dispatch(storeSubTasks({ subtasks: data }));\r\n                })\r\n                .catch((err) => console.log(err));\r\n        }\r\n    };\r\n\r\n    // handle refresh button\r\n    const onRefreshButtonClick = (e) => {\r\n        e.preventDefault();\r\n        onFilter(filter);\r\n    };\r\n    // let tableColumns = SubTasksTableColumns;\r\n\r\n    const handleFilterColumns = (tableColumns = [], role) => {\r\n        let newTableColumns;\r\n        if (role === 5) {\r\n            // console.log('if',{role});\r\n            newTableColumns = tableColumns.filter((d) => {\r\n                return (\r\n                    d.id !== \"action\" &&\r\n                    d.id !== \"milestone\" &&\r\n                    d.id !== \"deliverable\" &&\r\n                    d.id !== \"project\" &&\r\n                    d.id !== \"assigned_to\"\r\n                );\r\n            });\r\n        } else {\r\n            // console.log('else',{role});\r\n            newTableColumns = tableColumns.filter((d) => {\r\n                return d.id !== \"action\";\r\n            });\r\n        }\r\n\r\n        return newTableColumns;\r\n    };\r\n\r\n    // fetch table data\r\n    const fetchTasksTypeData = () => {\r\n        searchParams.set(\"modal\", \"primary_task_authorization\");\r\n        searchParams.set(\"show\", \"pending\");\r\n        setSearchParams(searchParams);\r\n    };\r\n\r\n    const isProjectManager = auth.getRoleId() === 4 ? true : false;\r\n    const primaryPageButton = isProjectManager\r\n        ? \"Primary Page [Awaiting Authorization]\"\r\n        : \"Primary Page [Need Authorization]\";\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <FilterContainer>\r\n                <Filterbar onFilter={onFilter} page=\"subtasks\" />\r\n            </FilterContainer>\r\n            <div className=\"sp1_tlr_container\">\r\n                <div className=\"sp1_tlr_tbl_container\">\r\n                    <div className=\"mb-3 d-flex align-items-center flex-wrap justify-content-between\">\r\n                        <Tabbar />\r\n\r\n                        {_.includes([1, 8], auth?.getRoleId()) && (\r\n                            <Button\r\n                                onClick={fetchTasksTypeData}\r\n                                className=\"sp1_tlr_tab active ml-2 mb-2 text-white\"\r\n                            >\r\n                                <i className=\"fa-solid fa-hourglass-half\" />\r\n                                {primaryPageButton}\r\n                                <span className=\"badge badge-light\">\r\n                                    {unAuthorizedType?.task_types}\r\n                                </span>\r\n                            </Button>\r\n                        )}\r\n                        <div>\r\n                            <SubTaskExportButton filter={filter} />\r\n                        </div>\r\n\r\n                        <div className=\"ml-auto mr-2\">\r\n                            <Button onClick={onRefreshButtonClick}>\r\n                                {isFetching ? (\r\n                                    <Loader\r\n                                        title=\"Loading...\"\r\n                                        borderRightColor=\"white\"\r\n                                    />\r\n                                ) : (\r\n                                    \"Refresh\"\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                        <div style={{ maxWidth: \"300px\" }}>\r\n                            <SearchBox value={search} onChange={setSearch} />\r\n                        </div>\r\n                        <div className=\"ml-2\" style={{ marginTop: \"2px\" }}>\r\n                            <TableFilter\r\n                                tableName=\"subTaskTable\"\r\n                                columns={handleFilterColumns(\r\n                                    SubTasksTableColumns,\r\n                                    auth?.getRoleId()\r\n                                )}\r\n                                columnVisibility={columnVisibility}\r\n                                setColumnVisibility={setColumnVisibility}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <SubTasksTable\r\n                        isLoading={isFetching}\r\n                        filter={filter}\r\n                        tableName=\"subTaskTable\"\r\n                        search={search}\r\n                        reportPermission={[1, 8, 5]}\r\n                        columnVisibility={columnVisibility}\r\n                        setColumnVisibility={setColumnVisibility}\r\n                        tableColumns={handleFilterColumns(\r\n                            SubTasksTableColumns,\r\n                            auth?.getRoleId()\r\n                        )}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <PrimaryPageAuthorizationTable />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Subtasks;\r\n"],"names":["ReportForm","React","compareDate","CompareDate","SubTasksTableColumns","id","header","_jsx","className","children","cell","_ref","row","index","accessorFn","concat","heading","_ref2","data","original","title","style","textDecoration","gap","_jsxs","href","color","accessorKey","_ref3","count","subtasks_timer_active","subtaskCount","_","subtasks_count","isActive","serverTime","timer","start_time","end_time","dayjs","unix","clockIsRunning","undefined","parentId","fontSize","StopWatch","time","run","_ref4","milestone_title","fontWeight","_ref5","deliverable_title","project_id","project_name","_ref6","_ref7","clientSelection","client","url","name","avatar","client_id","client_name","client_avatar","ind_client_id","ind_existing_client_name","ind_client_name","_objectSpread","Person","_ref8","project_manager_id","PersonAvatar","pm_id_name","pm_id_avatar","_ref9","creation_date","due_date","format","_ref10","_date","date","currentDate","isSame","isAfter","start_date","_ref11","_Fragment","completion_date","_ref12","Number","board_column_id","task_submission_date","_ref13","task_approval_date","_ref14","Switch","Case","condition","task_updated_at","estimate_hours","estimate_minutes","_ref15","_data$estimate_hours","_data$estimate_minute","_ref16","convertTime","subtasks_hours_logged","_ref17","added_by","added_by_avatar","added_by_name","_ref18","assigned_to_id","assigned_to_avatar","assigned_to_name","_ref19","background","label_color","column_name","_ref20","ReportButton","_ref21","ActionDropdown","_ref22","_React$useState2","_slicedToArray","reportModalOpen","setReportModalOpen","singleTask","SingleTask","close","subtasks","useSelector","s","tasks","dispatch","useDispatch","Dropdown","Toggle","icon","Button","variant","Menu","placement","Item","onClick","Modal","isOpen","fallback","Loader","task","onSuccess","_index","instance","_toConsumableArray","subtasks_reports_count","storeSubTasks","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","input","hint","prim","toPrimitive","res","String","_toPrimitive","_toPropertyKey","arr","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","minLen","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","len","arr2","ExcelFile","ReactExport","ExcelSheet","deals","rows","isRender","setIsRender","queryObject","Boolean","query","URLSearchParams","_useExportSubTasksMut2","useExportSubTasksMutation","getSubTaskData","_useExportSubTasksMut3","isLoading","Tasks","multiDataSet","columns","end_date","font","bold","pm_name","assignee_by_name","assignee_to_name","status_name","date_filter_by","xSteps","ySteps","width","wpx","_d$heading","_d$perent_task_headin","_d$subtasks_timer_act","_d$milestone_title","_d$deliverable_title","_d$project_name","_d$client_name","_d$pm_id_name","_dueDate","_d$subtasks_hours_log","_d$added_by_name","_d$assigned_to_name","_d$column_name","fieldStyle","alignment","wrapText","vertical","horizontal","perent_task_heading","isValid","dueDate","rgb","approveStyle","statusStyle","handleRender","fn","_callee","_context","unwrap","self","args","err","ExportButton","filename","hideElement","dataSet","styled","button","_templateObject","auth","User","window","Laravel","user","setFilter","_React$useState4","search","setSearch","_React$useState6","defaultColumnVisibility","columnVisibility","setColumnVisibility","_useLazyGetAllSubtask2","useLazyGetAllSubtaskQuery","getAllSubtask","isFetching","unAuthorizedType","useCheckUnAuthorizedTaskTypeQuery","_useSearchParams2","useSearchParams","searchParams","setSearchParams","onFilter","queryString","_data","getRoleId","getId","isHasRolePermission","console","log","_x","handleFilterColumns","tableColumns","primaryPageButton","FilterContainer","Filterbar","page","Tabbar","set","task_types","SubTaskExportButton","preventDefault","borderRightColor","maxWidth","SearchBox","onChange","marginTop","TableFilter","tableName","SubTasksTable","reportPermission","PrimaryPageAuthorizationTable"],"sourceRoot":""}