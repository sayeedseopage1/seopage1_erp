<<<<<<< HEAD
{"version":3,"file":"js/react/883.js","mappings":";qGAAO,IAAMA,EAAc,SAACC,GACxB,GAAIA,EAAM,CACN,IAAMC,EAAQC,KAAKC,MAAMH,EAAO,KAAO,EACjCI,EAAMF,KAAKC,MAAMH,EAAO,KAAO,EAE/BK,EAAIJ,EAAQ,GAAHK,OAAML,EAAM,GAAK,IAAHK,OAAOL,GAASA,EAAK,UAAW,GAC7D,MAAO,GAAPK,OAAUD,EAAC,KAAAC,OAAIF,EAAM,GAAK,IAAHE,OAAOF,GAAOA,EAAG,OAC5C,CAEA,MAAO,OACX,otCCwEA,QArE0B,SAAHG,GAajB,IAAAC,EAAAD,EAZFE,UAAAA,OAAS,IAAAD,EAAG,KAAIA,EAChBE,EAAMH,EAANG,OACAC,EAAKJ,EAALI,MACIC,GAAAL,EAAJM,KAAIN,EACJO,UAAAA,OAAQ,IAAAF,EAAG,KAAIA,EAEfG,GADaR,EAAbS,cACMT,EAANQ,QACAE,EAAeV,EAAfU,gBAAeC,EAAAX,EACfY,kBAAAA,OAAiB,IAAAD,GAAOA,EAAAE,EAAAb,EACxBc,cAAAA,OAAa,IAAAD,GAAOA,EAAAE,EAAAf,EACpBgB,kBAAAA,OAAiB,IAAAD,GAAOA,EAAAE,EAAAjB,EACxBkB,OAAAA,OAAM,IAAAD,EAAG,OAAMA,EAEPE,GAAiBC,EAAAA,EAAAA,KAAjBD,aAEFE,GAAQC,EAAAA,EAAAA,MAINC,GAAUC,EAAAA,EAAAA,KAAVD,MACmDE,EAAAC,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAApDC,EAAcH,EAAA,GAAEI,EAAiBJ,EAAA,GACxCK,GAAiDC,EAAAA,EAAAA,IAC7CV,aAAK,EAALA,EAAOb,QADHwB,EAAIF,EAAJE,KAAMC,EAAUH,EAAVG,WAAYC,EAASJ,EAATI,UAAWC,EAAOL,EAAPK,QASrC,OAJAC,EAAAA,EAAAA,YAAU,WACND,GACJ,GAAG,CAAChB,KAGAkB,EAAAA,EAAAA,KAACC,EAAAA,EAAuB,CACpBV,eAAgBA,EAChBzB,OAAQA,EACRD,UAAWA,EACXqB,MAAOA,EAAMgB,UAGbF,EAAAA,EAAAA,KAACG,EAAAA,EAAY,CACTZ,eAAgBA,EAChBC,kBAAmBA,EACnB1B,OAAQA,EACRC,MAAOA,EAEPG,SACIc,SAAAA,EAAOb,OACDE,EACIsB,aAAI,EAAJA,EAAMS,QACF,SAACC,GAAO,OAAKA,EAAQC,KAAOjC,CAAe,IAE/CsB,EACJzB,EAGVqC,QAASV,EACTW,SAAUZ,EACVE,QAASA,EACT3B,OAAQA,IAAkBa,aAAK,EAALA,EAAOb,QACjCQ,oBAAmBO,GAAS,MAAcP,EAC1CE,OAAQA,EACRN,kBAAmBA,EACnBE,cAAeA,KAK/B,uEC7EIgC,EAAU,CAEdA,OAAiB,OACjBA,WAAoB,GAEP,IAAI,IAASA,GAIX,IAAQC,2dCmBvB,QA7BiB,SAAH/C,GASR,IARFgD,EAAKhD,EAALgD,MACAC,EAAQjD,EAARiD,SACAC,EAAKlD,EAALkD,MACAC,EAAOnD,EAAPmD,QAAOC,EAAApD,EACPqD,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EAAAE,EAAAtD,EACduD,eAAAA,OAAc,IAAAD,EAAG,GAAEA,EAAAE,EAAAxD,EACnByD,SAAAA,OAAQ,IAAAD,GAAQA,EACRE,EAAA1D,EAAA2D,GAER,OACIC,EAAAA,EAAAA,MAAA,SACIP,UAAS,iDAAAtD,OAAmDwD,GAAcxD,OACtE0D,EAAW,WAAa,IACzBlB,SAAA,EAEHF,EAAAA,EAAAA,KAAA,SACIwB,KAAK,WACLb,MAAOA,EACPG,QAASA,EACTM,SAAUA,EACVR,SAAUA,EACVI,UAAS,qBAAAtD,OAAuBsD,KAEnCH,IAGb,+EC1BIJ,EAAU,CAEdA,OAAiB,OACjBA,WAAoB,GAEP,IAAI,IAASA,GAI1B,QAAe,IAAQC,QAAU,CAAC,qCCoBlC,QA5BoB,SAAH/C,GAA+C,IAAA8D,EAAA9D,EAAzC+D,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAAAV,EAAApD,EAAEqD,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EAAAY,EAAAhE,EAAEiE,KAAAA,OAAI,IAAAD,EAAC,EAACA,EAE/CE,EAAMC,IAAAA,KAAOJ,GAEbK,EAAUF,EAAMD,EAAOF,EAAMM,OAAO,EAAGJ,GAAQF,EAErD,OACIH,EAAAA,EAAAA,MAAA,OAAKP,UAAWiB,EAAOC,aAAahC,SAAA,CAG/B2B,EAAMD,IACH5B,EAAAA,EAAAA,KAAA,OAAMgB,UAAS,GAAAtD,OAAKuE,EAAOE,OAAM,KAAAzE,OAAIsD,EAAS,KAAAtD,OAAIuE,EAAOG,cAAelC,UACpEqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,CAAM,KAAG2B,OAGhBC,IAAAA,IAAMC,GAAS,SAACM,EAAMC,GAAC,OACpBtC,EAAAA,EAAAA,KAAA,OAAagB,UAAS,GAAAtD,OAAKuE,EAAOE,OAAM,KAAAzE,OAAIsD,GAAYd,UACpDF,EAAAA,EAAAA,KAAA,OACIuC,IAAKF,EAAKE,IACVC,IAAI,GACJxB,UAAWiB,EAAOQ,gBAJhBH,EAMJ,MAItB,gzBCTA,QArBe,SAAH3E,GAIN,IAHF+E,EAAM/E,EAAN+E,OAAM/E,EACNqD,UAAcrD,EACdgF,cAEA,OACI3C,EAAAA,EAAAA,KAAA4C,EAAAA,SAAA,CAAA1C,SACK2C,EAAIC,MAAM,IAAIC,KAAI,SAACC,EAAGC,GAAG,OACtBA,GAAOC,SAASR,GAAU,GACtB1C,EAAAA,EAAAA,KAAA,KAAagB,UAAU,mBAAmBmC,MAAO,CAACC,MAAM,YAAhDH,GACRP,EAASQ,SAASR,GAAU,GAC9BO,IAAQC,SAASR,IACf1C,EAAAA,EAAAA,KAAA,KAAagB,UAAU,+BAA+BmC,MAAO,CAACC,MAAM,YAA5DH,IAERjD,EAAAA,EAAAA,KAAA,KAAagB,UAAU,qBAAqBmC,MAAO,CAACC,MAAO,YAAnDH,EACX,KAIjB,4DCjBaI,EAAc,SAACpF,GAAS,IAAAqF,EAC3BC,EAAWzB,IAAAA,SAAW,CAAC,EAAG,GAAI7D,SAAc,QAAVqF,EAAJrF,EAAMuF,gBAAQ,IAAAF,OAAA,EAAdA,EAAgBhD,IAC9C,SACA,cAEAmD,EAAgBxF,aAAI,EAAJA,EAAMyF,kBAoH5B,MAAO,CACHC,uCAvC2C,WAMvC,MAAO,CACH,CACIrD,GAAI,QACJsD,SAAU,iBAAFlG,OACS,WAAb6F,EAAwB,aAAe,cAAa,wDAExDM,YAAY,GAEhB,CACIvD,GAAI,QACJsD,SACI,mHACJC,YAAY,GAEhB,CACIvD,GAAI,QACJsD,SACI,uGACJC,YAAY,GAGhB,CACIvD,GAAI,QACJsD,SAAU,wCAAFlG,OACS,WAAb6F,EAAwB,WAAa,YAAW,iHAEpDM,YAAY,GAI5B,EAIIC,wCAnH4C,WAO5C,OAAIL,EACO,CACH,CACInD,GAAI,SACJsD,SACI,kHACJC,YAAY,GAEhB,CACIvD,GAAI,SACJsD,SACI,uGACJC,YAAY,GAEhB,CACIvD,GAAI,QACJsD,SAAU,YAAFlG,OACS,WAAb6F,EAAwB,WAAa,YAAW,6EAEpDM,YAAY,GAEhB,CACIvD,GAAI,SACJsD,SAAU,8CAAFlG,OACS,WAAb6F,EAAwB,WAAa,YAAW,2GAEpDM,YAAY,IAKjB,CACH,CACIvD,GAAI,SACJsD,SACI,kHACJC,YAAY,GAEhB,CACIvD,GAAI,SACJsD,SACI,uGACJC,YAAY,GAEhB,CACIvD,GAAI,QACJsD,SAAU,YAAFlG,OACS,WAAb6F,EAAwB,WAAa,YAAW,6EAEpDM,YAAY,GAEhB,CACIvD,GAAI,SACJsD,SAAU,8CAAFlG,OACS,WAAb6F,EAAwB,WAAa,YAAW,2GAEpDM,YAAY,GAEhB,CACIvD,GAAI,SACJsD,SAAU,gCACVC,YAAY,EACZrC,KAAM,oBAGlB,EA6CJ,6UC9HAuC,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAhB,EAAAkB,OAAAC,UAAAC,EAAApB,EAAAqB,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAN,EAAAD,EAAAhB,GAAAiB,EAAAD,GAAAhB,EAAArC,KAAA,EAAA2B,EAAA,mBAAAkC,OAAAA,OAAA,GAAAC,EAAAnC,EAAAoC,UAAA,aAAAC,EAAArC,EAAAsC,eAAA,kBAAAC,EAAAvC,EAAAwC,aAAA,yBAAAC,EAAAd,EAAAD,EAAAhB,GAAA,OAAAkB,OAAAK,eAAAN,EAAAD,EAAA,CAAArD,MAAAqC,EAAAgC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,EAAA,KAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAhB,GAAA,OAAAiB,EAAAD,GAAAhB,CAAA,WAAAmC,EAAAlB,EAAAD,EAAAhB,EAAAoB,GAAA,IAAA9B,EAAA0B,GAAAA,EAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAA/C,EAAA6B,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAE,EAAAG,EAAA,WAAA9D,MAAA4E,EAAAtB,EAAAjB,EAAA2B,KAAAF,CAAA,UAAAe,EAAAvB,EAAAD,EAAAhB,GAAA,WAAAxB,KAAA,SAAAiE,IAAAxB,EAAAyB,KAAA1B,EAAAhB,GAAA,OAAAiB,GAAA,OAAAzC,KAAA,QAAAiE,IAAAxB,EAAA,EAAAD,EAAAmB,KAAAA,EAAA,IAAA1H,EAAA,iBAAAkI,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAApD,GAAAoB,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAM,EAAAtC,GAAA,0BAAAuC,SAAA,SAAAxC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAwC,QAAAzC,EAAAC,EAAA,gBAAAyC,EAAAzC,EAAAD,GAAA,SAAA2C,EAAA3D,EAAAsB,EAAAhC,EAAAmC,GAAA,IAAAE,EAAAa,EAAAvB,EAAAjB,GAAAiB,EAAAK,GAAA,aAAAK,EAAAnD,KAAA,KAAAqD,EAAAF,EAAAc,IAAAhI,EAAAoH,EAAAlE,MAAA,OAAAlD,GAAA,UAAAmJ,EAAAnJ,IAAA2G,EAAAsB,KAAAjI,EAAA,WAAAuG,EAAA6C,QAAApJ,EAAAqJ,SAAAC,MAAA,SAAA9C,GAAA0C,EAAA,OAAA1C,EAAA3B,EAAAmC,EAAA,aAAAR,GAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAT,EAAA6C,QAAApJ,GAAAsJ,MAAA,SAAA9C,GAAAY,EAAAlE,MAAAsD,EAAA3B,EAAAuC,EAAA,aAAAZ,GAAA,OAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAAzC,EAAAsB,EAAA,gBAAA3D,MAAA,SAAAsD,EAAAG,GAAA,SAAA4C,IAAA,WAAAhD,GAAA,SAAAA,EAAAhB,GAAA2D,EAAA1C,EAAAG,EAAAJ,EAAAhB,EAAA,WAAAA,EAAAA,EAAAA,EAAA+D,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAvB,EAAAhB,EAAAoB,GAAA,IAAAE,EAAA7G,EAAA,gBAAA6E,EAAAmC,GAAA,GAAAH,IAAAsB,EAAA,UAAAqB,MAAA,mCAAA3C,IAAAuB,EAAA,cAAAvD,EAAA,MAAAmC,EAAA,OAAA9D,MAAAsD,EAAAiD,MAAA,OAAA9C,EAAA+C,OAAA7E,EAAA8B,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAAgD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAT,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAA7G,EAAA,MAAA6G,EAAAuB,EAAAzB,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAsB,EAAA,IAAAK,EAAAT,EAAAxB,EAAAhB,EAAAoB,GAAA,cAAA6B,EAAAzE,KAAA,IAAA8C,EAAAF,EAAA8C,KAAArB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAnF,MAAAsF,EAAAR,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAjB,EAAAzE,OAAA8C,EAAAuB,EAAAzB,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAQ,EAAAR,IAAA,YAAA4B,EAAArD,EAAAhB,GAAA,IAAAoB,EAAApB,EAAAmE,OAAA7C,EAAAN,EAAAU,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAjB,EAAAoE,SAAA,eAAAhD,GAAAJ,EAAAU,SAAA,SAAA1B,EAAAmE,OAAA,SAAAnE,EAAAyC,IAAAxB,EAAAoD,EAAArD,EAAAhB,GAAA,UAAAA,EAAAmE,SAAA,WAAA/C,IAAApB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA0B,EAAA,IAAAxD,EAAAkD,EAAAlB,EAAAN,EAAAU,SAAA1B,EAAAyC,KAAA,aAAAnD,EAAAd,KAAA,OAAAwB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAAnD,EAAAmD,IAAAzC,EAAAoE,SAAA,KAAAtB,EAAA,IAAArB,EAAAnC,EAAAmD,IAAA,OAAAhB,EAAAA,EAAAyC,MAAAlE,EAAAgB,EAAA2D,YAAAlD,EAAA9D,MAAAqC,EAAA4E,KAAA5D,EAAA6D,QAAA,WAAA7E,EAAAmE,SAAAnE,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,GAAAjB,EAAAoE,SAAA,KAAAtB,GAAArB,GAAAzB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAA1E,EAAAoE,SAAA,KAAAtB,EAAA,UAAAgC,EAAA7D,GAAA,IAAAD,EAAA,CAAA+D,OAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,SAAA/D,EAAA,SAAAA,IAAAD,EAAAiE,WAAAhE,EAAA,GAAAD,EAAAkE,SAAAjE,EAAA,SAAAkE,WAAAC,KAAApE,EAAA,UAAAqE,EAAApE,GAAA,IAAAD,EAAAC,EAAAqE,YAAA,GAAAtE,EAAAxC,KAAA,gBAAAwC,EAAAyB,IAAAxB,EAAAqE,WAAAtE,CAAA,UAAAsB,EAAArB,GAAA,KAAAkE,WAAA,EAAAJ,OAAA,SAAA9D,EAAAuC,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAhB,EAAAgB,EAAAS,GAAA,GAAAzB,EAAA,OAAAA,EAAA0C,KAAA1B,GAAA,sBAAAA,EAAA4D,KAAA,OAAA5D,EAAA,IAAAwE,MAAAxE,EAAAyE,QAAA,KAAAnE,GAAA,EAAAhC,EAAA,SAAAsF,IAAA,OAAAtD,EAAAN,EAAAyE,QAAA,GAAArE,EAAAsB,KAAA1B,EAAAM,GAAA,OAAAsD,EAAAjH,MAAAqD,EAAAM,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,SAAAtF,EAAAsF,KAAAtF,CAAA,YAAAoF,UAAAd,EAAA5C,GAAA,2BAAA+B,EAAA5B,UAAA6B,EAAA1B,EAAAgC,EAAA,eAAA3F,MAAAqF,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAArF,MAAAoF,EAAAd,cAAA,IAAAc,EAAA2C,YAAA3D,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAA2E,oBAAA,SAAA1E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA2E,YAAA,QAAA5E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAA0E,aAAA1E,EAAA6E,MAAA,EAAA7E,EAAA8E,KAAA,SAAA7E,GAAA,OAAAC,OAAA6E,eAAA7E,OAAA6E,eAAA9E,EAAA+B,IAAA/B,EAAA+E,UAAAhD,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAiB,GAAArC,CAAA,EAAAD,EAAAiF,MAAA,SAAAhF,GAAA,OAAA6C,QAAA7C,EAAA,EAAAsC,EAAAG,EAAAvC,WAAAY,EAAA2B,EAAAvC,UAAAQ,GAAA,0BAAAX,EAAA0C,cAAAA,EAAA1C,EAAAkF,MAAA,SAAAjF,EAAAjB,EAAAoB,EAAAE,EAAAhC,QAAA,IAAAA,IAAAA,EAAA6G,SAAA,IAAA1E,EAAA,IAAAiC,EAAAvB,EAAAlB,EAAAjB,EAAAoB,EAAAE,GAAAhC,GAAA,OAAA0B,EAAA2E,oBAAA3F,GAAAyB,EAAAA,EAAAmD,OAAAb,MAAA,SAAA9C,GAAA,OAAAA,EAAAiD,KAAAjD,EAAAtD,MAAA8D,EAAAmD,MAAA,KAAArB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAAtC,EAAAoF,KAAA,SAAAnF,GAAA,IAAAD,EAAAE,OAAAD,GAAAjB,EAAA,WAAAoB,KAAAJ,EAAAhB,EAAAoF,KAAAhE,GAAA,OAAApB,EAAAqG,UAAA,SAAAzB,IAAA,KAAA5E,EAAAyF,QAAA,KAAAxE,EAAAjB,EAAAsG,MAAA,GAAArF,KAAAD,EAAA,OAAA4D,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA5D,EAAAqC,OAAAA,EAAAf,EAAAnB,UAAA,CAAAyE,YAAAtD,EAAAiD,MAAA,SAAAvE,GAAA,QAAAuF,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAAtD,EAAA,KAAAiD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAxB,EAAA,KAAAkE,WAAA3B,QAAA6B,IAAArE,EAAA,QAAAhB,KAAA,WAAAA,EAAAwG,OAAA,IAAApF,EAAAsB,KAAA,KAAA1C,KAAAwF,OAAAxF,EAAAyG,MAAA,WAAAzG,GAAAiB,EAAA,EAAAyF,KAAA,gBAAAxC,MAAA,MAAAjD,EAAA,KAAAkE,WAAA,GAAAG,WAAA,aAAArE,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,YAAAkE,IAAA,EAAAnC,kBAAA,SAAAxD,GAAA,QAAAkD,KAAA,MAAAlD,EAAA,IAAAhB,EAAA,cAAA4G,EAAAxF,EAAAE,GAAA,OAAAG,EAAAjD,KAAA,QAAAiD,EAAAgB,IAAAzB,EAAAhB,EAAA4E,KAAAxD,EAAAE,IAAAtB,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,KAAAK,CAAA,SAAAA,EAAA,KAAA6D,WAAAM,OAAA,EAAAnE,GAAA,IAAAA,EAAA,KAAAhC,EAAA,KAAA6F,WAAA7D,GAAAG,EAAAnC,EAAAgG,WAAA,YAAAhG,EAAAyF,OAAA,OAAA6B,EAAA,UAAAtH,EAAAyF,QAAA,KAAAwB,KAAA,KAAA5E,EAAAP,EAAAsB,KAAApD,EAAA,YAAAuC,EAAAT,EAAAsB,KAAApD,EAAA,iBAAAqC,GAAAE,EAAA,SAAA0E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,WAAAuB,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,SAAAtD,GAAA,QAAA4E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,YAAAnD,EAAA,UAAAoC,MAAA,kDAAAsC,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,KAAAR,OAAA,SAAAxD,EAAAD,GAAA,QAAAhB,EAAA,KAAAmF,WAAAM,OAAA,EAAAzF,GAAA,IAAAA,EAAA,KAAAsB,EAAA,KAAA6D,WAAAnF,GAAA,GAAAsB,EAAAyD,QAAA,KAAAwB,MAAAnF,EAAAsB,KAAApB,EAAA,oBAAAiF,KAAAjF,EAAA2D,WAAA,KAAA3F,EAAAgC,EAAA,OAAAhC,IAAA,UAAA2B,GAAA,aAAAA,IAAA3B,EAAAyF,QAAA/D,GAAAA,GAAA1B,EAAA2F,aAAA3F,EAAA,UAAAmC,EAAAnC,EAAAA,EAAAgG,WAAA,UAAA7D,EAAAjD,KAAAyC,EAAAQ,EAAAgB,IAAAzB,EAAA1B,GAAA,KAAA6E,OAAA,YAAAS,KAAAtF,EAAA2F,WAAAnC,GAAA,KAAA+D,SAAApF,EAAA,EAAAoF,SAAA,SAAA5F,EAAAD,GAAA,aAAAC,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,gBAAAxB,EAAAzC,MAAA,aAAAyC,EAAAzC,KAAA,KAAAoG,KAAA3D,EAAAwB,IAAA,WAAAxB,EAAAzC,MAAA,KAAAmI,KAAA,KAAAlE,IAAAxB,EAAAwB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA3D,EAAAzC,MAAAwC,IAAA,KAAA4D,KAAA5D,GAAA8B,CAAA,EAAAgE,OAAA,SAAA7F,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAAiF,aAAAhE,EAAA,YAAA4F,SAAA7G,EAAAsF,WAAAtF,EAAAkF,UAAAG,EAAArF,GAAA8C,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAA+E,SAAA9D,EAAA,KAAAG,EAAApB,EAAAsF,WAAA,aAAAlE,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAqB,IAAA4C,EAAArF,EAAA,QAAAsB,CAAA,YAAA2C,MAAA,0BAAA8C,cAAA,SAAA/F,EAAAhB,EAAAoB,GAAA,YAAAgD,SAAA,CAAA1C,SAAA2B,EAAArC,GAAA2D,WAAA3E,EAAA6E,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAxB,GAAA6B,CAAA,GAAA9B,CAAA,UAAAgG,EAAAhG,EAAAhB,GAAA,IAAAiB,EAAAC,OAAAkF,KAAApF,GAAA,GAAAE,OAAA+F,sBAAA,KAAA3F,EAAAJ,OAAA+F,sBAAAjG,GAAAhB,IAAAsB,EAAAA,EAAAlE,QAAA,SAAA4C,GAAA,OAAAkB,OAAAgG,yBAAAlG,EAAAhB,GAAAgC,UAAA,KAAAf,EAAAmE,KAAA+B,MAAAlG,EAAAK,EAAA,QAAAL,CAAA,UAAAmG,EAAApG,GAAA,QAAAhB,EAAA,EAAAA,EAAAqH,UAAA5B,OAAAzF,IAAA,KAAAiB,EAAA,MAAAoG,UAAArH,GAAAqH,UAAArH,GAAA,GAAAA,EAAA,EAAAgH,EAAA9F,OAAAD,IAAA,GAAAuC,SAAA,SAAAxD,GAAAsH,EAAAtG,EAAAhB,EAAAiB,EAAAjB,GAAA,IAAAkB,OAAAqG,0BAAArG,OAAAsG,iBAAAxG,EAAAE,OAAAqG,0BAAAtG,IAAA+F,EAAA9F,OAAAD,IAAAuC,SAAA,SAAAxD,GAAAkB,OAAAK,eAAAP,EAAAhB,EAAAkB,OAAAgG,yBAAAjG,EAAAjB,GAAA,WAAAgB,CAAA,UAAAsG,EAAAG,EAAAC,EAAA/J,GAAA,OAAA+J,EAAA,SAAAjF,GAAA,IAAAiF,EAAA,SAAAC,EAAAC,GAAA,cAAAhE,EAAA+D,IAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAAnG,OAAAsG,aAAA,QAAAC,IAAAF,EAAA,KAAAG,EAAAH,EAAAnF,KAAAiF,EAAAC,GAAA,yBAAAhE,EAAAoE,GAAA,OAAAA,EAAA,UAAAtD,UAAA,kEAAAkD,EAAAK,OAAAC,QAAAP,EAAA,CAAAQ,CAAA1F,EAAA,2BAAAmB,EAAA8D,GAAAA,EAAAO,OAAAP,EAAA,CAAAU,CAAAV,MAAAD,EAAAvG,OAAAK,eAAAkG,EAAAC,EAAA,CAAA/J,MAAAA,EAAAqE,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAuF,EAAAC,GAAA/J,EAAA8J,CAAA,UAAAY,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAAf,EAAAjF,GAAA,QAAAiG,EAAAJ,EAAAZ,GAAAjF,GAAA9E,EAAA+K,EAAA/K,KAAA,OAAAgL,GAAA,YAAAJ,EAAAI,EAAA,CAAAD,EAAAxE,KAAAL,EAAAlG,GAAAwI,QAAAtC,QAAAlG,GAAAoG,KAAAyE,EAAAC,EAAA,UAAAG,EAAAC,GAAA,sBAAAC,EAAA,KAAAC,EAAA1B,UAAA,WAAAlB,SAAA,SAAAtC,EAAA0E,GAAA,IAAAD,EAAAO,EAAA1B,MAAA2B,EAAAC,GAAA,SAAAP,EAAA7K,GAAA0K,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,OAAA9K,EAAA,UAAA8K,EAAAO,GAAAX,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,QAAAO,EAAA,CAAAR,OAAAT,EAAA,cAAA1L,EAAA4M,EAAA3J,GAAA,gBAAA2J,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAA,CAAA,CAAAE,CAAAF,IAAA,SAAAjJ,EAAA2C,GAAA,IAAA1B,EAAA,MAAAjB,EAAA,yBAAAwB,QAAAxB,EAAAwB,OAAAE,WAAA1B,EAAA,uBAAAiB,EAAA,KAAAD,EAAAI,EAAA9B,EAAAuC,EAAAJ,EAAA,GAAAmB,GAAA,EAAAtB,GAAA,SAAAhC,GAAA2B,EAAAA,EAAAyB,KAAA1C,IAAA4E,KAAA,IAAAjC,EAAA,IAAAzB,OAAAD,KAAAA,EAAA,OAAA2B,GAAA,cAAAA,GAAA5B,EAAA1B,EAAAoD,KAAAzB,IAAAiD,QAAAzC,EAAA2D,KAAApE,EAAArD,OAAA8D,EAAAgE,SAAA9C,GAAAC,GAAA,UAAA5C,GAAAsB,GAAA,EAAAF,EAAApB,CAAA,iBAAA4C,GAAA,MAAA3B,EAAA,SAAAY,EAAAZ,EAAA,SAAAC,OAAAW,KAAAA,GAAA,kBAAAP,EAAA,MAAAF,CAAA,SAAAK,CAAA,EAAA2H,CAAAH,EAAA3J,IAAA,SAAAgC,EAAA+H,GAAA,IAAA/H,EAAA,2BAAAA,EAAA,OAAAgI,EAAAhI,EAAA+H,GAAA,IAAAjI,EAAAF,OAAAC,UAAAoI,SAAA7G,KAAApB,GAAAmF,MAAA,iBAAArF,GAAAE,EAAAsE,cAAAxE,EAAAE,EAAAsE,YAAAC,MAAA,WAAAzE,GAAA,QAAAA,EAAA,OAAAtB,MAAA0J,KAAAlI,GAAA,iBAAAF,GAAA,2CAAAqI,KAAArI,GAAA,OAAAkI,EAAAhI,EAAA+H,EAAA,CAAAK,CAAAT,EAAA3J,IAAA,qBAAAoF,UAAA,6IAAAiF,EAAA,UAAAL,EAAAL,EAAApK,IAAA,MAAAA,GAAAA,EAAAoK,EAAAxD,UAAA5G,EAAAoK,EAAAxD,QAAA,QAAAnG,EAAA,EAAAsK,EAAA,IAAA9J,MAAAjB,GAAAS,EAAAT,EAAAS,IAAAsK,EAAAtK,GAAA2J,EAAA3J,GAAA,OAAAsK,CAAA,CAQO,IAAMC,EAAgB,WACZ,IAAIC,EAAAA,EAAW,QAAPC,EAACC,cAAM,IAAAD,GAAS,QAATA,EAANA,EAAQE,eAAO,IAAAF,OAAA,EAAfA,EAAiB1K,MADR,IAAA0K,EASCG,EAAA7N,GAA5B8N,EAAAA,EAAAA,MAA4B,GAF5BC,EAAcF,EAAA,GACAG,EAAqBH,EAAA,GAAjCtN,WAGA0N,EAAW,eAAA3P,EAAAiO,EAAA7H,IAAA+E,MAAG,SAAAyE,EAAOpP,GAAM,IAAA6M,EAAAwC,EAAAvP,EAAA,OAAA8F,IAAAoB,MAAA,SAAAsI,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA7F,MAAA,cAAA6F,EAAAlE,KAAA,EAAAkE,EAAA7F,KAAA,EAEPwF,EAAe,IAAD1P,OAAKS,EAAM,qBAAoBuP,SAAQ,OAA9D,KAAH1C,EAAGyC,EAAAnG,MACA,CAAFmG,EAAA7F,KAAA,QAU2B,OATxB3J,EAAImM,EAAAA,EAAA,GACHY,EAAI/M,MAAI,IACX0P,UAAW3C,aAAG,EAAHA,EAAK2C,UAChBC,mBAAoB5C,EAAI4C,mBACxBC,mBAA0C,QAAvBL,EAAAxC,EAAI8C,2BAAmB,IAAAN,OAAA,EAAvBA,EAAyBO,UAAW,KACvDC,oBAAqBhD,EAAIgD,oBACzBC,yBAA0BjD,EAAIiD,yBAC9BC,kBAAmBlD,EAAImD,eACvBC,eAAgBpD,EAAIqD,UACpBC,YAAatD,EAAIuD,YAASd,EAAAhG,OAAA,SAEvBxJ,GAAI,OAAAwP,EAAA7F,KAAA,gBAAA6F,EAAAlE,KAAA,EAAAkE,EAAAe,GAAAf,EAAA,SAGfgB,QAAQC,IAAGjB,EAAAe,IAAK,yBAAAf,EAAA/D,OAAA,GAAA6D,EAAA,kBAEvB,gBApBgBoB,GAAA,OAAAhR,EAAAwM,MAAA,KAAAE,UAAA,KA0BkFuE,EAAAvP,GAA9BwP,EAAAA,EAAAA,MAA8B,GAA5FC,EAAgBF,EAAA,GAAgBG,EAAwBH,EAAA,GAApChP,WAGrBoP,EAAiB,eAAAC,EAAArD,EAAA7H,IAAA+E,MAAG,SAAAoG,EAAO/Q,GAAM,IAAA6M,EAAArL,EAAA,OAAAoE,IAAAoB,MAAA,SAAAgK,GAAA,cAAAA,EAAA5F,KAAA4F,EAAAvH,MAAA,cAAAuH,EAAA5F,KAAA,EAAA4F,EAAAvH,KAAA,EAEbkH,EAAiB3Q,GAAQuP,SAAQ,OAA1C,KAAH1C,EAAGmE,EAAA7H,MACA,CAAF6H,EAAAvH,KAAA,QACsE,OAArEjI,EAAOmC,IAAAA,QAAUkJ,EAAK,CAAC,UAAW,iBAAkB,CAAC,OAAQ,SAAQmE,EAAA1H,OAAA,SAClE9H,GAAI,OAAAwP,EAAAvH,KAAA,gBAAAuH,EAAA5F,KAAA,EAAA4F,EAAAX,GAAAW,EAAA,SAGfV,QAAQC,IAAGS,EAAAX,IAAK,yBAAAW,EAAAzF,OAAA,GAAAwF,EAAA,kBAEvB,gBAVsBE,GAAA,OAAAH,EAAA9E,MAAA,KAAAE,UAAA,KAkBcgF,EAAAhQ,GAAjCiQ,EAAAA,EAAAA,MAAiC,GAFjCC,EAAoBF,EAAA,GACPG,EAAwBH,EAAA,GAAnCxP,UAIA4P,EAAW,eAAAC,EAAA9D,EAAA7H,IAAA+E,MAAG,SAAA6G,EAAOhQ,EAAMiQ,GAAQ,OAAA7L,IAAAoB,MAAA,SAAA0K,GAAA,cAAAA,EAAAtG,KAAAsG,EAAAjI,MAAA,UAChCjI,IAAQmC,IAAAA,QAAUnC,GAAK,CAAAkQ,EAAAjI,KAAA,eAAAiI,EAAApI,OAAA,wBAAAoI,EAAAtG,KAAA,EAAAsG,EAAAjI,KAAA,EAEN2H,EAAqB5P,GAAM+N,SAAQ,OAA5CmC,EAAAvI,OAGLsI,GAAYA,IACEE,KAAKC,MAAM,CACrBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,IAGhBC,KAAK,CACPC,KAAM,UACNC,MAAO,gCAEdV,EAAAjI,KAAA,gBAAAiI,EAAAtG,KAAA,EAAAsG,EAAArB,GAAAqB,EAAA,SACWpB,QAAQC,IAAGmB,EAAArB,IAAK,yBAAAqB,EAAAnG,OAAA,GAAAiG,EAAA,kBACnC,gBArBgBa,EAAAC,GAAA,OAAAf,EAAAvF,MAAA,KAAAE,UAAA,KAwBjB,MAAO,CACHiD,YAAAA,EACAmC,YAAAA,EACAT,kBAAAA,EACA3B,sBAAAA,EACAmC,yBAAAA,EACAT,yBAAAA,EAER,kjECpGA,IAAM2B,WAAsBC,EAASC,gBAAgB,CACjDC,UAAW,SAACC,GAAK,MAAM,CAEnBC,gBAAiBD,EAAME,MAAM,CACzBA,MAAO,SAAC7S,GAAM,wBAAAT,OAAuBS,EAAM,cAC3C8S,aAAc,WAAwB,OAClC,gBACA,gBAAcvT,OAAAmF,GAFGwH,UAAA5B,OAAA,QAAAsC,IAAAV,UAAA,GAAAA,UAAA,GAAG,IAGVtH,KAAI,SAAApF,GAAK,MAAQ,CAAE6D,KAAM,eAAgBlB,GAAhC3C,EAAF2C,GAAsC,KAAE,IAKjE4Q,sBAAuBJ,EAAME,MAAM,CAC/BA,MAAO,SAACG,GAAS,iCAAAzT,OACcyT,EAAS,aACxCF,aAAc,CAAC,0BAInBG,yBAA0BN,EAAME,MAAM,CAClCA,MAAO,SAAC7S,GAAM,6CAAAT,OAA4CS,EAAM,EAChE8S,aAAc,CAAC,0BAInBI,sBAAuBP,EAAME,MAAM,CAC/BA,MAAO,SAACG,GAAS,iCAAAzT,OACcyT,EAAS,aACxCF,aAAc,CAAC,0BAInBK,cAAeR,EAAMS,SAAS,CAC1BP,MAAO,SAAA/B,GAAO,MAAQ,CAClBuC,IAAK,8BACLrK,OAAQ,OACRsK,KAHUxC,EAAJtP,KAIN+R,UAAU,EACb,EACDC,gBAAiB,CAAC,uBAAwB,0BAI9CC,kCAAmCd,EAAMS,SAAS,CAC9CP,MAAO,SAACrR,GAAI,MAAM,CACd6R,IAAK,kBAAF9T,OAAoBiC,EAAKkS,QAAO,cAAAnU,OAAaiC,EAAKmS,WAAU,uBAC/D3K,OAAQ,SACRsK,KAAIrH,EAAAA,EAAA,GACGzK,GAAI,IACPoS,OAAQC,SACHC,cAAc,2BACdC,aAAa,aAEzB,EACDP,gBAAiB,CAAC,uBAAwB,0BAI9CQ,iBAAkBrB,EAAMS,SAAS,CAC7BP,MAAO,SAACrR,GAAI,MAAM,CACd6R,IAAK,+BACLrK,OAAQ,OACRsK,KAAM9R,EAAK+R,SACXA,UAAU,EACb,EACDC,gBAAiB,SAACS,EAAQzG,EAAOlG,GAAG,MAAK,CACrC,CAAEjE,KAAM,eAAgBlB,GAAImF,EAAI0L,WAChC,uBACA,uBACA,uBACH,IAGLkB,cAAevB,EAAMS,SAAS,CAC1BP,MAAO,SAACG,GAAS,MAAM,CACnBK,IAAK,2BAAF9T,OAA6ByT,EAAS,WACzChK,OAAQ,SACRsK,KAAM,CACFM,OAAQC,SACHC,cAAc,2BACdC,aAAa,YAEzB,EAEDP,gBAAiB,WAA0B,MAAK,CAC5C,CAAEnQ,KAAM,eAAgBlB,GADe+J,UAAA5B,OAAA,EAAA4B,UAAA,QAAAU,GAEvC,uBACA,uBACA,uBACH,IAER,IAIDuH,EASA5B,EATA4B,wBACAC,EAQA7B,EARA6B,8BAIAC,GAIA9B,EAPA+B,iCAOA/B,EANAgC,qCAMAhC,EALAiC,8BAKAjC,EAJA8B,0BACAI,EAGAlC,EAHAkC,6CACAC,EAEAnC,EAFAmC,4BACAC,EACApC,EADAoC,kiFCpDJ,QAlDkB,SAAHnV,GAAuE,IAAAoV,EAAApV,EAAlEqV,WAAAA,OAAU,IAAAD,GAAKA,EAAE7S,EAAQvC,EAARuC,SAAUqQ,EAAK5S,EAAL4S,MAAO0C,EAAYtV,EAAZsV,aAAcC,EAAYvV,EAAZuV,aAChBC,EAAA9T,EAArB+T,EAAAA,UAAe,GAAM,GAAzCC,EAAMF,EAAA,GAACG,EAASH,EAAA,GAMjBI,EAAOP,EAAa,EAAI,IAEhC,OACEzR,EAAAA,EAAAA,MAAA,OAAKP,UAAU,qBAAoBd,SAAA,EAC/BqB,EAAAA,EAAAA,MAAA,OACIP,UAAS,uBAAAtD,OAAyBuV,GAClCO,QAAU,kBAAMR,OATpBM,GAAWD,GASiC,IAAI,EAC5ClQ,MAAKiH,EAAAA,EAAA,GAAM8I,GAAY,IAAEO,OAAQT,EAAa,UAAW,YAAW9S,SAAA,CACvE,IAAEqQ,EAEEyC,EAAaK,GACVrT,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,SAAQd,UACpBF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,8BAEnBhB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,SAAQd,UAClBF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,+BACR,SAKjBhB,EAAAA,EAAAA,KAAC0T,EAAAA,EAAe,CAAAxT,SACX8S,EAAaK,IACVrT,EAAAA,EAAAA,KAAC2T,EAAAA,EAAOC,IAAG,CACPC,QAAS,CAAEhV,OAAQ0U,GACnBO,QAAS,CAACjV,OAAQ,KAClBkV,KAAM,CAAClV,OAAQ,GACfmC,UAAU,sBAAqBd,SAE9BA,KAENF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sBAAqBd,SACnCA,QAShB,2jCCoFA,QAjIkB,SAAHvC,GAAgD,IAA1CqW,EAAIrW,EAAJqW,KAAMC,EAAoBtW,EAApBsW,qBAAsBC,EAAOvW,EAAPuW,QAEF9U,IAD1B+U,EAAAA,EAAAA,KAAY,SAACtO,GAAC,OAAKA,EAAEuO,OAAO,IAArCnW,KACmCoB,GAAfC,EAAAA,EAAAA,WAAS,GAAM,IAApC+T,EAAMjU,EAAA,GAAEkU,EAASlU,EAAA,GACpBiV,GAASL,aAAI,EAAJA,EAAMvL,QAAS,IACtB6L,EAAWD,EAASL,EAAKvK,MAAM,EAAG,KAAO,MAAQuK,EACjDO,GAAMC,EAAAA,EAAAA,UAWZ,OAJAC,EAAAA,EAAAA,GAAaF,GAAK,WACdjB,GAAU,EACd,KAGI/R,EAAAA,EAAAA,MAAA,OAAKP,UAAU,0BAAyBd,SAAA,EACpCF,EAAAA,EAAAA,KAAA,OACIgB,UAAS,qCAAAtD,OAAuCuW,GAChDS,wBAAyB,CAAEC,OAAQL,KAEtCD,GACG9S,EAAAA,EAAAA,MAAA,KAAGqT,KAAK,IAAIpB,QAhBH,SAACxP,GAClBA,EAAE6Q,iBACFvB,GAAWD,EACf,EAa+CrS,UAAU,GAAEd,SAAA,CAC1C,IAAI,wBACiB,OAG1B,IAGJF,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAC9T,UAAU,gCAAgClD,OAAQuV,EAAOnT,UAC5DqB,EAAAA,EAAAA,MAAA,OACIgT,IAAKA,EACLvT,UAAU,wCAAuCd,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,6DAA4Dd,UACvEF,EAAAA,EAAAA,KAAA,UAAQwT,QAAS,kBAAMF,GAAU,EAAM,EAACpT,UACpCF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,0BAInBc,IAAAA,QAAUoS,GAgER,MA/DAlU,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,8BAA6Bd,UACxCqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,YACVmC,MAAO,CAAE4R,WAAY,WAAY7U,SAAA,EAEjCF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,OAAMd,SAAC,yBACrBF,EAAAA,EAAAA,KAAA,UACAuB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAKd,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2CAA0Cd,UACrDqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,+BAEC,MACPF,EAAAA,EAAAA,KAAA,SAAO,KACTA,EAAAA,EAAAA,KAAA,KACIgV,OAAO,UACPJ,KAAMV,aAAO,EAAPA,EAASe,SAAS/U,SAC3B,0BAMTF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2CAA0Cd,UACrDqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,sBAA0B,IAAE,KACpCF,EAAAA,EAAAA,KAAA,SAAM,IAAEkU,aAAO,EAAPA,EAASgB,wBAIzBlV,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2CAA0Cd,UACrDqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,qCAEC,MACPF,EAAAA,EAAAA,KAAA,SAAO,KACTA,EAAAA,EAAAA,KAAA,KACIgV,OAAO,UACPJ,KAAMV,aAAO,EAAPA,EAASiB,UAAUjV,SAC5B,oBAEI,UAIbF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2CAA0Cd,UACrDqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,0CAGC,MACPF,EAAAA,EAAAA,KAAA,SAAM,IAAEkU,aAAO,EAAPA,EAASkB,YAG3BpV,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2CAA0Cd,UACrDqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,aAAiB,MAAEF,EAAAA,EAAAA,KAAA,SAAO,IACjCkU,aAAO,EAAPA,EAASmB,uBAQlCrV,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,YAAWd,UACtBF,EAAAA,EAAAA,KAAA,OACIgB,UAAS,6BAAAtD,OAA+BuW,GACxCS,wBAAyB,CAAEC,OAAQX,QAI3ChU,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,YAAWd,UACtBF,EAAAA,EAAAA,KAAA,UACIgB,UAAU,sCACVwS,QAAS,kBAAMF,GAAU,EAAM,EAACpT,SACnC,mBAQzB,2lCC8FA,QAnJqB,SAAHvC,GAA4B,IAAtB2X,EAAK3X,EAAL2X,MAAO1R,EAAQjG,EAARiG,SACsBuP,EAAA9T,EAArB+T,EAAAA,UAAe,GAAM,GAA1CC,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAClBoB,EAAMnB,EAAAA,SACZ3E,QAAQC,IAAI,WAAY9K,IAMxB6Q,EAAAA,EAAAA,GAAaF,GAAK,WACdjB,GAAU,EACd,IAEA,IAcMU,EAda,SAACtJ,GAChB,OAAQA,GACJ,IAAK,MAEL,IAAK,MAEL,IAAK,MACD,OAAO9G,aAAQ,EAARA,EAAU2R,UACrB,IAAK,MACD,OAAO3R,aAAQ,EAARA,EAAU4R,YACrB,QACI,OAAO5R,aAAQ,EAARA,EAAU2R,aAAa3R,aAAQ,EAARA,EAAU4R,aAEpD,CACaC,CAAW7R,aAAQ,EAARA,EAAU8R,gBAC9BrB,GAASL,aAAI,EAAJA,EAAMvL,QAAS,IACtB6L,EAAWD,GAASL,aAAI,EAAJA,EAAMvK,MAAM,EAAG,MAAO,MAAQuK,EAElD2B,EAAOC,IAAMhS,aAAQ,EAARA,EAAUiS,WAAWC,OAAO,gBACzC1Y,EAAOwY,IAAMhS,aAAQ,EAARA,EAAUiS,WAAWC,OAAO,WAE/C,OADArH,QAAQC,IAAI,sBAAuB9K,IAE/BrC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,0BAA0BmC,MAAO,CAAE4S,UAAW,SAAU7V,SAAA,EACnEqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,gBAAed,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAKoV,EAAQ,GAAK,IAAH5X,OAAO4X,GAAUA,KAChC/T,EAAAA,EAAAA,MAAA,QAAMP,UAAU,UAASd,SAAA,EACrBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,WACPyV,MAELpU,EAAAA,EAAAA,MAAA,QAAMP,UAAU,UAASd,SAAA,EACrBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,SAAa,KAAG9C,MAE3BwG,aAAQ,EAARA,EAAUoS,YACPzU,EAAAA,EAAAA,MAAA,QAAMP,UAAU,UAASd,SAAA,EACrBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,aAAiB,IAAE,IAAG,GAAAxC,QAC1BP,EAAAA,EAAAA,GAAYyG,aAAQ,EAARA,EAAUoS,kBAItCzU,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,CAChB0D,SAAAA,EAAUqS,yBACP1U,EAAAA,EAAAA,MAAA,QAAMP,UAAU,eAAcd,SAAA,EAC1BqB,EAAAA,EAAAA,MAAA,QAAMP,UAAU,+BAA8Bd,SAAA,CACzC,KACDF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,aAAkB,OAE7B0D,aAAQ,EAARA,EAAUqS,wBACVrS,SAAAA,EAAUsS,QACPlW,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,qBAAoBd,SAAC,0BAGrC,KACH0D,SAAAA,EAAUuS,UACPnW,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,sBAAqBd,SAAC,0BAGtC,QAER,MACJqB,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gCAA+Bd,SAAC,gBAGhDF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,iBACV0T,wBAAyB,CAAEC,OAAQL,QAI1CD,GACGrU,EAAAA,EAAAA,KAAA,KAAG4U,KAAK,IAAI5T,UAAU,OAAOwS,QA/EzB,SAACxP,GACjBA,EAAE6Q,iBACFvB,GAAWD,EACf,EA4EkEnT,SAAC,cAInD,IAGJF,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CACF9T,UAAU,gCACVlD,OAAQuV,EAAOnT,UAEfqB,EAAAA,EAAAA,MAAA,OACIgT,IAAKA,EACLvT,UAAU,wCAAuCd,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,6DAA4Dd,UACvEF,EAAAA,EAAAA,KAAA,UAAQwT,QAAS,kBAAMF,GAAU,EAAM,EAACpT,UACpCF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAGrBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,YAAWd,SAAA,EACtBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,gBAAed,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAKoV,KACL/T,EAAAA,EAAAA,MAAA,QAAMP,UAAU,UAASd,SAAA,EACrBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,WAAe,IAAEyV,MAE7BpU,EAAAA,EAAAA,MAAA,QAAMP,UAAU,UAASd,SAAA,EACrBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,SAAa,KAAG9C,SAGhC4C,EAAAA,EAAAA,KAAA,OAAAE,UAWIF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,iBACVmC,MAAO,CAAEiT,WAAY,QACrB1B,wBAAyB,CAAEC,OAAQX,WAK/ChU,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,YAAWd,UACtBF,EAAAA,EAAAA,KAAA,UACIgB,UAAU,sCACVwS,QAAS,kBAAMF,GAAU,EAAM,EAACpT,SACnC,sBAS7B,iBCxHA,QAvGsB,WAClB,OACIF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,MAAKd,UAChBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,+BAA8Bd,UACzCqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,qBAAqBmC,MAAO,CAAEkT,IAAK,QAASnW,SAAA,EACvDF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,GAAEd,UACbF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,aAEtBqC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wBAAuBd,UAClCF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,YAEvBc,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,UACnCF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,gBAuB3BqC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wBAAuBd,UAClCF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,YAEvBqC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,yBAAwBd,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEjE,MAAO,OAAQL,OAAQ,QAASqB,UAC1CF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CACRpX,MAAM,OACNL,OAAO,OACP2C,KAAK,SACLR,UAAU,sBAGlBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,WACnBc,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,OAAOL,OAAO,OAAOmC,UAAU,mBAM9DO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wBAAuBd,UAClCF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,YAEvBqC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,yBAAwBd,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEjE,MAAO,OAAQL,OAAQ,QAASqB,UAC1CF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CACRpX,MAAM,OACNL,OAAO,OACP2C,KAAK,SACLR,UAAU,sBAGlBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,WACnBc,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,OAAOL,OAAO,OAAOmC,UAAU,mBAO9DO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wBAAuBd,UAClCF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,YAEvBc,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,UACnCF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,eAK3BqC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wBAAuBd,UAClCF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,YAEvBc,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,UACnCF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,qBAO/C,ECnGO,SAASqX,EAAyBtY,EAAMuY,GAG5BA,EAAKC,YACCxY,EAAKyY,iBAAqBF,EAAKG,QAGpD,OAFgB,MAGpB,CAGO,SAASC,EAAoBjZ,GAA+B,IAA5BM,EAAIN,EAAJM,KAAM4Y,EAAMlZ,EAANkZ,OAAQC,EAAUnZ,EAAVmZ,WAC7CC,GAAmB,EACnBC,GAAqB,EAErBC,EAAWJ,EAASA,EAAOvW,IAAM,EACjC4W,EAAejZ,aAAI,EAAJA,EAAMkZ,WACrBC,EAAcN,EAWlB,MARI,CAAC,EAAG,GAAGO,SAASnM,OAAO+L,MACvBF,GAAmB,GAInBG,EAAaP,UAAYS,EAAYT,UACrCK,GAAqB,GAGrBD,GAAoBC,GAAgD,IAA1BlV,IAAAA,KAAO7D,aAAI,EAAJA,EAAMqZ,QAE/D,CAGO,SAASC,EAA+BtI,GAA+B,IAA5BhR,EAAIgR,EAAJhR,KAAM4Y,EAAM5H,EAAN4H,OAAQC,EAAU7H,EAAV6H,WACxDC,GAAmB,EACnBC,GAAqB,EAErBC,EAAWJ,EAASA,EAAOvW,IAAM,EACjC4W,EAAejZ,aAAI,EAAJA,EAAMkZ,WACrBC,EAAc,IAAItK,EAAAA,EAAKgK,GAgB3B,OAbII,EAAaP,UAAYS,EAAYT,UACrCK,GAAqB,EACY,KAA7BI,aAAW,EAAXA,EAAaX,aACT,CAAC,GAAGY,SAASnM,OAAO+L,MACpBF,GAAmB,GAGnB,CAAC,EAAG,GAAGM,SAASnM,OAAO+L,MACvBF,GAAmB,IAKxBA,GAAoBC,CAC/B,CAGO,SAASQ,EAAuB9H,GAA+B,IAA5BzR,EAAIyR,EAAJzR,KAAM4Y,EAAMnH,EAANmH,OAAQC,EAAUpH,EAAVoH,WAChDC,GAAmB,EACnBC,GAAqB,EAErBC,EAAWJ,EAASA,EAAOvW,IAAM,EACjC4W,EAAejZ,aAAI,EAAJA,EAAMwZ,WACrBL,EAAc,IAAItK,EAAAA,EAAKgK,GAc3B,MAXI,CAAC,GAAGO,SAASnM,OAAO+L,MACpBF,GAAmB,IAInBG,EAAaP,UAAYS,EAAYT,SAED,KAA7BS,aAAW,EAAXA,EAAaX,gBADpBO,GAAqB,GAKlBD,GAAoBC,CAC/B,CAGO,SAASU,EAAqBC,GAA+B,IAA5B1Z,EAAI0Z,EAAJ1Z,KAAM4Y,EAAMc,EAANd,OAAQC,EAAUa,EAAVb,WAC9CC,GAAmB,EACnBC,GAAqB,EAErBC,EAAWJ,EAASA,EAAOvW,IAAM,EACjC4W,EAAejZ,aAAI,EAAJA,EAAMwZ,WACrBL,EAAc,IAAItK,EAAAA,EAAKgK,GAc3B,MAXI,CAAC,GAAGO,SAASnM,OAAO+L,MACpBF,GAAmB,IAInBG,EAAaP,UAAYS,EAAYT,SAED,KAA7BS,aAAW,EAAXA,EAAaX,gBADpBO,GAAqB,GAKlBD,GAAoBC,CAC/B,CAGO,SAASY,EAAwBC,GAA+B,IAA5B5Z,EAAI4Z,EAAJ5Z,KAAM4Y,EAAMgB,EAANhB,OAAQC,EAAUe,EAAVf,WACjDC,GAAmB,EACnBC,GAAqB,EAErBC,EAAWJ,EAASA,EAAOvW,IAAM,EACjC4W,EAAejZ,aAAI,EAAJA,EAAMkZ,WACrBC,EAAcN,EAYlB,MATI,CAAC,GAAGO,SAASnM,OAAO+L,MACpBF,GAAmB,GAInBG,EAAaP,UAAYS,EAAYT,UACrCK,GAAqB,GAGlBD,GAAoBC,CAC/B,CAIO,SAASc,EAAuBC,GAAyB,IAAtB9Z,EAAI8Z,EAAJ9Z,KAAM4Y,EAAMkB,EAANlB,OAAQL,EAAIuB,EAAJvB,KAChDO,GAAmB,EACnBC,GAAqB,EACrBC,EAAWJ,EAASA,EAAOvW,IAAM,EACjC4W,EAAejZ,aAAI,EAAJA,EAAMwZ,WAezB,MAZI,CAAC,GAAGJ,SAASnM,OAAO+L,MACpBF,GAAmB,KAKlBG,aAAY,EAAZA,EAAcP,YAAYH,aAAI,EAAJA,EAAMG,UAAiC,KAAtBH,aAAI,EAAJA,EAAMC,cAC5B,KAAtBD,aAAI,EAAJA,EAAMC,gBAENO,GAAqB,GAGlBD,GAAoBC,CAC/B,CAEO,SAASgB,EAAyCC,GAItD,IAHCha,EAAIga,EAAJha,KACA4Y,EAAMoB,EAANpB,OACAL,EAAIyB,EAAJzB,KAEIO,GAAmB,EACnBC,GAAqB,EACrBC,EAAWJ,EAASA,EAAOvW,IAAM,EACjC4W,EAAejZ,aAAI,EAAJA,EAAMwZ,WAezB,MAZI,CAAC,GAAGJ,SAASnM,OAAO+L,MACpBF,GAAmB,KAKlBG,aAAY,EAAZA,EAAcP,YAAYH,aAAI,EAAJA,EAAMG,UAAiC,KAAtBH,aAAI,EAAJA,EAAMC,cAC5B,KAAtBD,aAAI,EAAJA,EAAMC,gBAENO,GAAqB,GAGlBD,GAAoBC,CAC/B,CAuBO,SAASkB,EAAwBC,GAAyB,IAAtBla,EAAIka,EAAJla,KAAM4Y,EAAMsB,EAANtB,OAAQL,EAAI2B,EAAJ3B,KACjDO,GAAmB,EACnBC,GAAqB,EACrBC,EAAWJ,EAASA,EAAOvW,IAAM,EACjC4W,EAAejZ,aAAI,EAAJA,EAAMkZ,WACrBiB,EAAana,aAAI,EAAJA,EAAMma,WAkBvB,MAfI,CAAC,EAAG,EAAG,GAAGf,SAASnM,OAAO+L,MAC1BF,GAAmB,KAKnBG,aAAY,EAAZA,EAAcP,YAAYH,aAAI,EAAJA,EAAMG,WAC/ByB,aAAU,EAAVA,EAAYzB,YAAYH,aAAI,EAAJA,EAAMG,UAC3B7U,IAAAA,SAAW,CAAC,EAAG,EAAG,EAAG,IAAK0U,aAAI,EAAJA,EAAMC,gBAIpCO,GAAqB,GAGlBD,GAAoBC,CAC/B,kDCxGkBqB,EAAAA,GAAOzE,IAAG0E,OAAA,mEAAAA,+EAA5B,qzECjFA,SAtCoB,SAAH3a,GAAqD,IAAAC,EAAAD,EAAhDE,UAAAA,OAAS,IAAAD,EAAG,KAAIA,EAAGE,EAAMH,EAANG,OAAeoC,GAAFvC,EAALI,MAAeJ,EAARuC,UACAiT,EAAA9T,GAApB+T,EAAAA,SAAe,MAAK,GAA7CmF,EAAQpF,EAAA,GAAEqF,EAAWrF,EAAA,GAC5BsF,GAA+BC,EAAAA,GAAAA,GAAU7a,EAAW0a,EAAS,CACzDI,UAAW,aACXC,UAAW,CACP,CAAC/P,KAAM,SAAUpI,QAAS,CAACoY,OAAQ,CAAC,EAAG,QAHvC5W,EAAMwW,EAANxW,OAAQ6W,EAAUL,EAAVK,WAOlB,OACM9Y,EAAAA,EAAAA,KAAA,MAAAoK,GAAAA,GAAA,CACImK,IAAKiE,EACLrV,MAAKiH,GAAAA,GAAA,GACEnI,EAAO8W,QAAM,IAChBC,cAAelb,EAAS,MAAQ,OAChCmb,OAAQ,MAERH,EAAWC,QAAM,IAAA7Y,UAGrBF,EAAAA,EAAAA,KAAC0T,EAAAA,EAAe,CAAAxT,SACXpC,IACGyD,EAAAA,EAAAA,MAACoS,EAAAA,EAAOC,IAAG,CACPC,QAAS,CAACqF,QAAS,GACnBpF,QAAS,CAACoF,QAAS,GACnBnF,KAAM,CAACmF,QAAS,GAChBlY,UAAU,GAAEd,SAAA,CAEXA,GAEDF,EAAAA,EAAAA,KAACmZ,GAAM,WAM/B,EAIA,IAAMA,GAAS,WACX,OAAOC,GAAAA,cACHpZ,EAAAA,EAAAA,KAAA,OACImD,MAAO,CACHjE,MAAO,QACPL,OAAQ,QACRoR,SAAU,QACVoJ,IAAK,EACLC,KAAM,EACNL,OAAQ,GACRlE,WAAY,oBAGpB/C,SAASC,cAAc,2BAE/B,mBCPA,SAjD4B,SAAHtU,GAAwB,IAAnBG,EAAMH,EAANG,OAAQC,EAAKJ,EAALI,MACpC,OACEiC,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQA,EAAQkD,UAAU,mBAAkBd,UAC/CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,UACnCqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,uBAAuBmC,MAAO,CAACoW,SAAU,OAAQxD,UAAW,QAAQ7V,SAAA,EAC/EF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UACtCF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACH,aAAW,cACXxY,UAAU,eACVwS,QAASzV,EAAMmC,UAEfF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAMrBhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,aAAYd,UACxBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,+BAA8Bd,SAAA,EACzCF,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAACsW,SAAU,QAAQvZ,UAC1BF,EAAAA,EAAAA,KAAA,OACIuC,IAAI,4DACJC,IAAI,GACJtD,MAAO,GACPL,OAAQ,GACRmC,UAAU,sBAIlBO,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,8BAA6Bd,UACxCF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,OAEtBnY,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBqB,EAAAA,EAAAA,MAAA,OAAArB,SAAA,CAAK,gCAA4BF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,gDAC9CO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,qCAAoCd,SAAA,EAC/CF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,gCACbhB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,qCAU1C,shDCxCA,IAAMyZ,GAAa,SAAHhc,GAAoB,IAAd0C,EAAO1C,EAAP0C,QACyBjB,EAAAC,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAApCxB,EAAMsB,EAAA,GAAEwa,EAASxa,EAAA,GAExB,OAAKiB,GAEDkB,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iFAAgFd,SAAA,EAC3FqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,4BACVmC,MAAO,CAAE0W,SAAU,UAAW3Z,SAAA,EAE9BqB,EAAAA,EAAAA,MAAA,KAAGP,UAAU,YAAWd,SAAA,EACpBF,EAAAA,EAAAA,KAAA,KACI4U,KAAI,sBAAAlX,OAAwB2C,EAAQgC,KAAK/B,IACzCU,UAAU,+BAA8Bd,SAEvCG,EAAQgC,KAAKwG,OACb,IACJxI,EAAQyZ,WACH,WACAzZ,EAAQ0Z,QACR,cACA,SAAU,IAAI,gBAGxB/Z,EAAAA,EAAAA,KAAA,KACIgB,UAAU,oDACVmC,MAAO,CAAEC,MAAO,WAAYlD,SAE3BG,EAAQyZ,YACHE,EAAAA,GAAAA,GAAc3Z,EAAQ4Z,aACtBD,EAAAA,GAAAA,GAAc3Z,EAAQ6Z,oBAIpCla,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UACtCF,EAAAA,EAAAA,KAAA,KACI4U,KAAK,IACL5T,UAAS,sCAAAtD,OACLI,EAAS,eAAiB,IAE9B0V,QAAS,SAACxP,GACNA,EAAE6Q,iBACF+E,GAAU,EACd,EAAE1Z,UAEFF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,8BAazBhB,EAAAA,EAAAA,KAACma,GAAAA,EAAiB,CACd9b,gBAAiBgC,EAAQC,GACzBvC,MAAO,kBAAM6b,GAAU,EAAM,EAC7B9b,OAAQA,EACRS,mBAAmB,EACnBI,mBAAmB,EACnBF,eAAe,EACfI,OAAO,YA/DE,IAmEzB,EA+CA,SA7Ce,SAAHoQ,GAAiB,IAAXhR,EAAIgR,EAAJhR,KAKdwB,GAAsCC,EAAAA,GAAAA,IAAoBzB,EAAKqC,GAAI,CAC/D8Z,MAAOnc,EAAKqC,KADFpC,EAAQuB,EAAdE,KAAyBF,EAATI,UA+BxB,OACIG,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SACV4B,IAAAA,IA7Bc,WAAmB,IAChCuY,EAAcxX,GADQwH,UAAA5B,OAAA,QAAAsC,IAAAV,UAAA,GAAAA,UAAA,GAAG,IAuB/B,OApBAgQ,EAAeC,MAAK,SAAC7V,EAAG8V,GACpB,GAAI9V,EAAEqV,YAAcS,EAAET,WAAY,CAC9B,IAAMU,EAAQ5E,IAAMnR,EAAEwV,YAEtB,OADcrE,IAAM2E,EAAEN,YACTQ,KAAKD,EACtB,CAAO,GAAI/V,EAAEqV,WAAY,CACrB,IAAMU,EAAQ5E,IAAMnR,EAAEwV,YAEtB,OADcrE,IAAM2E,EAAEL,cACTO,KAAKD,EACtB,CAAO,GAAID,EAAET,WAAY,CACrB,IAAMU,EAAQ5E,IAAMnR,EAAEyV,cAEtB,OADctE,IAAM2E,EAAEN,YACTQ,KAAKD,EACtB,CACI,IAAMA,EAAQ5E,IAAMnR,EAAEyV,cAEtB,OADctE,IAAM2E,EAAEL,cACTO,KAAKD,EAE1B,IAEOH,CACX,CAKeK,CAAexc,IAAW,SAACmC,GAAO,OACrCL,EAAAA,EAAAA,KAAC2Z,GAAU,CAAkBtZ,QAASA,GAArBA,EAAQC,GAAwB,KAIjE,24CC6DA,SAjLuB,SAAH3C,GAA4B,IAAtBM,EAAIN,EAAJM,KAAM4B,EAASlC,EAATkC,UAE+BsT,EAAA9T,GAArB+T,EAAAA,UAAe,GAAM,GAApDuH,EAAWxH,EAAA,GAAEyH,EAAczH,EAAA,GACyC0H,EAAAxb,GAArB+T,EAAAA,UAAe,GAAM,GAApE0H,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GACcG,EAAA3b,GAApB+T,EAAAA,SAAe,MAAK,GAAzD6H,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAElCG,EAAoB,WAAH,OAASP,GAAgBD,EAAY,EAM5DS,GAAwC9I,EAAAA,GAAAA,IAAwBrU,EAAKqC,GAAI,CACrE8Z,MAAOnc,EAAKqC,KADRX,EAAIyb,EAAJzb,KAAiBC,EAAUwb,EAArBvb,UAIR3B,EAAW4D,IAAAA,QAAUnC,EAAM,KAAM,QAiCvC,OACIK,EAAAA,EAAAA,KAAA4C,EAAAA,SAAA,CAAA1C,UACIqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,2BACVuT,IAAK2G,EACL/X,MAAO,CAAE8V,OAAQ0B,EAAc,KAAO,IAAKza,SAAA,EAa3CF,EAAAA,EAAAA,KAACma,GAAAA,EAAiB,CACdrc,OAAQ6c,EACR9c,UAAWod,EACX/c,SAAUA,EACVD,KAAMA,EACNF,MAAO,kBAAM6c,GAAe,EAAM,EAClCxc,cAtCM,SAACiC,GACJwC,GAAO3E,GACZmd,QAAQhb,EAEtB,KAqCYL,EAAAA,EAAAA,KAAA,UACI,aAAW,yBACXgB,UAAU,2BACVwS,QAAS2H,EACThY,MAAO,CAAE8V,OAAQ0B,EAAc,MAAQ,IAAKza,UAE5CF,EAAAA,EAAAA,KAAA,KACIgB,UAAS,8BAAAtD,OACLid,EAAc,QAAU,QAE5BxX,MAAO,CAAEC,MAAO,gBAIxB7B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,6FAA4Fd,SAAA,EACvGF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,YAAWd,SAAC,aACxBL,GAAaD,KACXI,EAAAA,EAAAA,KAAA,OACIgB,UAAU,wCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,kBAI9Bja,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CACHiC,QAAQ,WACRza,UAAU,oBACV,aAAW,YACXwS,QAAS2H,EAAkBjb,SAAA,EAE3BF,EAAAA,EAAAA,KAAA,KACIgB,UAAU,mBACVmC,MAAO,CAAEuY,SAAU,UACrB,cAIN1b,EAAAA,EAAAA,KAAC2b,GAAmB,CAChB7d,OAAQgd,EACR/c,MA9GS,WAAH,OAASgd,GAAuB,EAAM,QAkHpD/a,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UACtCF,EAAAA,EAAAA,KAAC4b,GAAM,CAAC3d,KAAMA,UAmDlC,wCCxHA,SA5D4B,SAAHN,GAA0C,IAApCke,EAAIle,EAAJke,KAAMC,EAAYne,EAAZme,aAAcC,EAASpe,EAAToe,UAEvC9d,GAASkW,EAAAA,EAAAA,KAAY,SAACtO,GAAC,OAAKA,EAAEuO,OAAO,IAArCnW,KAER,OAAK4d,GAGDta,EAAAA,EAAAA,MAAA,MACIiS,QAAS,WACLsI,GAAa,SAACvS,GACV,OAAIA,aAAI,EAAJA,EAAMjJ,MAAOub,EAAKvb,GACX,KAEAub,CAEf,GACJ,EACA7a,UAAU,aACVmC,MAAO,CACH6Y,cAAe,SACfC,OAAQ,SACRxI,OAAQ,WACVvT,SAAA,EAEFF,EAAAA,EAAAA,KAAA,MACIgB,UAAU,aACVmC,MAAO,CAAEsW,SAAU,QAASyC,UAAW,QAAShc,UAEhDqB,EAAAA,EAAAA,MAAA,QAAMP,UAAU,sBAAqBd,SAAA,EACjCqB,EAAAA,EAAAA,MAAA,QAAMP,UAAU,eAAcd,SAAA,CAAC,QAAMjC,EAAKqC,MACzC,kBACDN,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,eAAcd,SAAE2b,EAAKM,uBAG7Cnc,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,aAAamC,MAAO,CAAEsW,SAAU,SAAUvZ,SACnD0V,IAAMiG,EAAKO,0BAA0BtG,OAAO,mBAEjD9V,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,aAAamC,MAAO,CAAEsW,SAAU,QAASvZ,UAClD6b,aAAS,EAATA,EAAWzb,MAAOub,EAAKvb,IACpBN,EAAAA,EAAAA,KAACqc,GAAAA,IAAkB,CACflZ,MAAO,CACHtE,OAAQ,OACRK,MAAO,OACPuU,OAAQ,cAIhBzT,EAAAA,EAAAA,KAACsc,GAAAA,IAAS,CACNnZ,MAAO,CACHtE,OAAQ,OACRK,MAAO,OACPuU,OAAQ,kBA/Cd,IAsDtB,ECJA,SApDmC,SAAH9V,GAAiE,IAA3DG,EAAMH,EAANG,OAAQC,EAAKJ,EAALI,MAAOwe,EAAM5e,EAAN4e,OAAQ5c,EAAIhC,EAAJgC,KAAMoc,EAASpe,EAAToe,UAAWD,EAAYne,EAAZme,aACpEvH,GAAMC,EAAAA,EAAAA,QAAO,MAMbgI,EAAU,WACZ,OACIjb,EAAAA,EAAAA,MAAA,OAAKgT,IAAKA,EAAKvT,UAAU,iCAAgCd,SAAA,EACrDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wCAAuCd,SAAA,EAClDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACH,aAAW,cACXxY,UAAU,eACVwS,QAASzV,EAAMmC,UAEfF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIrBhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sCAAqCd,UAChDF,EAAAA,EAAAA,KAAA,SAAOgB,UAAU,mCAAkCd,SAG3CP,aAAI,EAAJA,EAAMoD,KAAI,SAAC0Z,GAAU,OACjBzc,EAAAA,EAAAA,KAAC0c,GAAmB,CAAqBb,KAAMY,EAAYX,aAAcA,EAAcC,UAAWA,GAAxEU,EAAWnc,GAA0E,UAO3I,EAIA,OAnC+BnB,EAAAA,GAAAA,KAAvBD,MAmCU,MAEVc,EAAAA,EAAAA,KAAC2c,GAAW,CAAC7e,OAAQA,EAAQD,UAAW0e,EAAOrc,SAC1Csc,OAKLxc,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQA,EAAOoC,SACjBsc,KAIjB,ikCCxDA,IAAMI,GAAgB,WAAe,IAEwBC,EAAAxd,IAFlCgL,UAAA5B,OAAA,QAAAsC,IAAAV,UAAA,GAAAA,UAAA,GAAG,IAEOyS,MAAM,KAAK,GAAGA,MAAM,KAAI,GAAlDC,EAAIF,EAAA,GAAEG,EAAKH,EAAA,GAAElH,EAAIkH,EAAA,GACpBI,EAAa,GACjB,OAAQD,GACJ,IAAK,KACDC,EAAa,MACb,MAEJ,IAAK,KACDA,EAAa,MACb,MAEJ,IAAK,KACDA,EAAa,MACb,MAEJ,IAAK,KACDA,EAAa,MACb,MAEJ,IAAK,KACDA,EAAa,MACb,MAEJ,IAAK,KACDA,EAAa,MACb,MAEJ,IAAK,KACDA,EAAa,MACb,MAEJ,IAAK,KACDA,EAAa,MACb,MAEJ,IAAK,KACDA,EAAa,MACb,MAEJ,IAAK,KACDA,EAAa,MACb,MAEJ,IAAK,KACDA,EAAa,MACb,MAEJ,IAAK,KACDA,EAAa,MAMrB,MAAO,GAAPvf,OAAUuf,EAAU,KAAAvf,OAAIiY,EAAI,MAAAjY,OAAKqf,EACrC,EAGaG,GAAe,CACxB,CACI5c,GAAI,cACJ6c,OAAQ,cACRC,WAAW,EAEXC,YAAa,2BACbC,KAAM,SAACA,GAAI,OACPtd,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEoa,QAAS,YAAard,SAC/B0c,GAAcU,EAAKE,aAClB,GAGd,CACIld,GAAI,YACJ6c,OAAQ,YACRC,WAAW,EAEXC,YAAa,YACbC,KAAM,SAACA,GAAI,OACPtd,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEoa,QAAS,YAAard,UAChCF,EAAAA,EAAAA,KAAA,KAAG4U,KAAM0I,EAAKE,WAAYxI,OAAO,SAAQ9U,SAAC,eAGxC,GAGd,CACII,GAAI,WACJ6c,OAAQ,WACRC,WAAW,EAEXC,YAAa,eACbC,KAAM,SAACA,GAAI,OACPtd,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEoa,QAAS,YAAard,SAC/Bod,EAAKE,YACJ,GAGd,CACIld,GAAI,UACJ6c,OAAQ,UACRC,WAAW,EAEXC,YAAa,UACbC,KAAM,SAACA,GAAI,OACPtd,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEsW,SAAU,QAASF,SAAU,QAASra,MAAO,QAAUwV,wBAAyB,CAACC,OAAO2I,EAAKE,aAAc,GAGjI,CACIld,GAAI,mBACJ6c,OAAQ,mBACRC,WAAW,EAEXC,YAAa,cACbC,KAAM,SAACA,GAAI,OACPtd,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEoa,QAAS,YAAard,UAC/B/C,EAAAA,GAAAA,GAAYmgB,EAAKE,aAChB,GAGd,CACIld,GAAI,iBACJ6c,OAAQ,6CACRC,WAAW,EAEXC,YAAa,cACbC,KAAM,SAACA,GAAI,OACP/b,EAAAA,EAAAA,MAAA,OAAK4B,MAAO,CAAEoa,QAAS,YAAard,SAAA,EAChCF,EAAAA,EAAAA,KAAA,KAAG4U,KAAM0I,EAAKE,WAAYxI,OAAO,WAAa,cAE5C,GAGd,CACI1U,GAAI,WACJ6c,OAAQ,6BACRC,WAAW,EAEXC,YAAa,WACbC,KAAM,SAACA,GAAI,OACPtd,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEoa,QAAS,YAAard,UAChCF,EAAAA,EAAAA,KAAA,KAAG4U,KAAM0I,EAAKE,WAAYxI,OAAO,SAAQ9U,SAAC,eAGxC,GAGd,CACII,GAAI,oBACJ6c,OAAQ,oBACRC,WAAW,EAEXC,YAAa,oBACbC,KAAM,SAACA,GAAI,OACPtd,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEoa,QAAS,YAAard,SAC/Bod,EAAKE,WAAWF,EAAKE,WAAW,eAC/B,GAGd,CACIld,GAAI,kBACJ6c,OAAQ,yBACRC,WAAW,EAEXC,YAAa,2BACbC,KAAM,SAACA,GAAI,OACPtd,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEoa,QAAS,YAAard,SAC/B0c,GAAcU,EAAKE,aAClB,IChHlB,SAjDwC,SAAH7f,GAAsD,IAAhDG,EAAMH,EAANG,OAAeye,GAAF5e,EAALI,MAAaJ,EAAN4e,QAAQ5c,EAAIhC,EAAJgC,KAAMmc,EAAYne,EAAZme,aAC9DvH,GAAMC,EAAAA,EAAAA,QAAO,MAIbgI,EAAU,WACZ,OACIjb,EAAAA,EAAAA,MAAA,OAAKgT,IAAKA,EAAKvT,UAAU,iCAAgCd,SAAA,EACrDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wCAAuCd,SAAA,EAClDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACH,aAAW,cACXxY,UAAU,eACVwS,QAAS,WACLsI,EAAa,KACjB,EAAE5b,UAEFF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIrBhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sCAAqCd,UAChDF,EAAAA,EAAAA,KAACyd,GAAAA,EAAS,CACNC,UAAW/d,EAAK,CAACA,GAAM,GACvBge,aAAcT,GACdU,UAAU,qCAK9B,EAIA,OAhC+Bze,EAAAA,GAAAA,KAAvBD,MAgCU,MAEVc,EAAAA,EAAAA,KAAC2c,GAAW,CAAC7e,OAAQA,EAAQD,UAAW0e,EAAOrc,SAC1Csc,OAKLxc,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQA,EAAOoC,SACjBsc,KAIjB,qjCCkEA,SApH+B,SAAH7e,GAAiB,IAAAkgB,EAAX5f,EAAIN,EAAJM,KACWmB,EAAAC,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAApCxB,EAAMsB,EAAA,GAAEwa,EAASxa,EAAA,GACuC0e,EAAAze,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAxDye,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GACcG,EAAA5e,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAAnD4e,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAC0DG,EAAA/e,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAA3F+e,EAAkCD,EAAA,GAAEE,EAAqCF,EAAA,GAChCG,EAAAlf,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAAzCyc,EAASwC,EAAA,GAAEzC,EAAYyC,EAAA,GAG9BC,GAA4BC,EAAAA,GAAAA,IAAgCxgB,aAAI,EAAJA,EAAMqC,IAA1DX,EAAI6e,EAAJ7e,KAAME,EAAS2e,EAAT3e,UAOR6e,EAAkB,WAAH,OAASV,GAAoB,EAAM,GAExDje,EAAAA,EAAAA,YAAU,WACJgc,EAJuBiC,GAAoB,GAO7CU,GAEJ,GAAG,CAAC3C,IAOJ,OACExa,EAAAA,EAAAA,MAAA,OACEP,UAAU,2BACVuT,IARmB,SAACA,GACtB4J,EAAkB5J,GAClB+J,EAAsC/J,EACxC,EAMIpR,MAAO,CAAE8V,OAAQnb,EAAS,KAAO,IAAKoC,SAAA,EAEtCqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,6FAA4Fd,SAAA,EACzGF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,OAAMd,SAAC,qBACtBL,IACCG,EAAAA,EAAAA,KAAA,OACEgB,UAAU,wCACVsa,KAAK,SACLnY,MAAO,CACLjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,qBAS1Bxb,EAAAA,EAAAA,KAAA,UACE,aAAW,yBACXgB,UAAU,2BACVwS,QAhDS,WAAH,OAASoG,GAAU,SAAArQ,GAAI,OAAKA,CAAI,GAAC,EAiDvCpG,MAAO,CAAE8V,OAAQnb,EAAS,IAAM,IAAKoC,UAErCF,EAAAA,EAAAA,KAAA,KACEgB,UAAS,8BAAAtD,OAAgCI,EAAS,QAAU,QAC5DqF,MAAO,CAAEC,MAAO,gBAMpBpD,EAAAA,EAAAA,KAAC2e,GAA0B,CACzB7gB,OAAQA,EACRC,MA5DQ,WAAH,OAAS6b,GAAU,EAAM,EA6D9B2C,OAAQ2B,EACRve,KAAMA,aAAI,EAAJA,EAAMif,kBACZ7C,UAAWA,EACXD,aAAcA,KAEhB9b,EAAAA,EAAAA,KAAC6e,GAA+B,CAC9B/gB,OAAQigB,EACRhgB,MAAO2gB,EACPnC,OAAQ8B,EACR1e,KAAMoc,EACND,aAAcA,KAGhB9b,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UACvCP,aAAI,EAAJA,EAAMif,kBAAkBnW,QAAS,GAChCzI,EAAAA,EAAAA,KAAA,SAAOgB,UAAU,gBAAed,UAC9BF,EAAAA,EAAAA,KAAA,SAAOgB,UAAU,gBAAed,UAC5BL,IACAF,SAAuB,QAAnBke,EAAJle,EAAMif,yBAAiB,IAAAf,OAAA,EAAvBA,EAAyB9a,KAAI,SAAC0Z,GAAU,OACtCzc,EAAAA,EAAAA,KAAC0c,GAAmB,CAAqBb,KAAMY,EAAYX,aAAcA,EAAcC,UAAWA,GAAxEU,EAAWnc,GAA0E,UAMvHN,EAAAA,EAAAA,KAAA,OACEgB,UAAU,mDACVmC,MAAO,CACLC,MAAO,UACPsY,SAAU,OACVQ,UAAW,SACXrd,OAAQ,OACRK,MAAO,QACPgB,SACH,mCAQX,ECrGA,SAjB+B,WAC7B,OACEqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,qDAAoDd,SAAA,EAC/DF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAEd,UACbF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CACVpX,MAAO,GACPL,OAAQ,QAGd0C,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACtV,UAAU,UACvBhB,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,SAIxB,ECfA,IAAMwI,IAAmBC,EAAAA,EAAAA,OAAK,kBAAM,8BAA4B,IAsDhE,SAhDkB,SAAHphB,GAA2C,IAAtCG,EAAMH,EAANG,OAAQC,EAAKJ,EAALI,MAAOwe,EAAM5e,EAAN4e,OAAMyC,EAAArhB,EAAEgC,KAAAA,OAAI,IAAAqf,EAAG,GAAEA,EAG5CxC,EAAU,WACd,OACIjb,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wCAAuCd,SAAA,EACjDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACLF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACH,aAAW,cACXxY,UAAU,eACVwS,QAASzV,EAAMmC,UAEfF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIrBhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sCAAqCd,UAChDF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAChBP,EAAOA,EAAKoD,KAAI,SAAAmD,GAAC,OACdlG,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAC6L,UAAUjf,EAAAA,EAAAA,KAACkf,GAAsB,IAAIhf,UACjDF,EAAAA,EAAAA,KAAC8e,GAAgB,CAACK,QAASjZ,OAFdA,EAAE5F,GAIN,IAClB,WAKrB,EAGA,OAhC6BnB,EAAAA,GAAAA,KAAtBD,MAgCU,MAEXc,EAAAA,EAAAA,KAAC2c,GAAW,CAAC7e,OAAQA,EAAQD,UAAW0e,EAAOrc,UAC3CF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SAAEsc,SAKjBxc,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQA,EAAOoC,UAClBF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SAAEsc,OAIjC,qjCCtDA,IAAM4C,IAAcL,EAAAA,EAAAA,OAAK,kBAAM,8BAAuB,IAQhDM,GAAU,SAAC7N,GAAG,OAAK8N,MAAMC,IAAI/N,GAAKzK,MAAK,SAAAiE,GAAG,OAAIA,EAAIrL,IAAI,GAAC,EAsI7D,SApIuB,WACrB,IAAA6f,GAA0BrL,EAAAA,EAAAA,KAAY,SAAAtO,GAAC,OAAIA,EAAEuO,OAAO,IAA7CnW,EAAIuhB,EAAJvhB,KAAMwhB,EAASD,EAATC,UACmDtM,EAAA9T,GAApB+T,EAAAA,SAAe,MAAK,GAAzD8K,EAAc/K,EAAA,GAAEgL,EAAiBhL,EAAA,GACS0H,EAAAxb,GAArB+T,EAAAA,UAAe,GAAM,GAA1CtV,EAAM+c,EAAA,GAAEjB,EAASiB,EAAA,GAClB6E,GAAWC,EAAAA,EAAAA,MAEjBC,GAA8CC,EAAAA,GAAAA,IAAO,iBAADniB,OAAkBO,EAAKqC,GAAE,2BAA2B+e,GAAS,CAC/GS,gBAAiB,MADXngB,EAAIigB,EAAJjgB,KAAuBC,GAAZggB,EAALjU,MAA2BiU,EAApB/f,WAyBrBuT,EAAAA,WAAgB,YACVxT,GAAcD,GAChB+f,GAASK,EAAAA,EAAAA,IAAepgB,GAE5B,GAAG,CAACA,EAAMC,IAQV,OACE2B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,2BAA2BuT,IAAK4J,EAAmBhb,MAAO,CAAC8V,OAAQnb,EAAS,GAAK,IAAIoC,SAAA,EAChGqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,6FAA4Fd,SAAA,EAC3GF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,OAAMd,SAAC,YACtBN,IACOI,EAAAA,EAAAA,KAAA,OACIgB,UAAU,wCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,qBAQhCxb,EAAAA,EAAAA,KAAA,UACE,aAAW,yBACXgB,UAAU,2BACVwS,QA3BK,WAAH,OAASoG,GAAW9b,EAAO,EA4B7BqF,MAAO,CAAC8V,OAAQnb,EAAS,MAAQ,IAAIoC,UAErCF,EAAAA,EAAAA,KAAA,KACEgB,UAAS,8BAAAtD,OAAiCI,EAAS,QAAU,QAC7DqF,MAAO,CAACC,MAAO,gBAMnBpD,EAAAA,EAAAA,KAACggB,GAAS,CACRliB,OAAQA,EACRC,MAvCI,WAAH,OAAS6b,GAAU,EAAM,EAwC1Bja,KAAM8f,EACNlD,OAAQ2B,KAGZle,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,SACtCN,GAkBF2B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mDACbmC,MAAO,CACLC,MAAO,UACPsY,SAAU,OACVQ,UAAW,SACXrd,OAAQ,OACRK,MAAO,QACPgB,SAAA,EAEAF,EAAAA,EAAAA,KAAA,OACMgB,UAAU,gCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,cAClByE,YAAa,UAEnB,gBArCOR,EAAYA,EAAU1c,KAAK,SAAAoc,GAAO,OAC/Cnf,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACbF,EAAAA,EAAAA,KAACkgB,EAAAA,SAAQ,CAACjB,UAAU1d,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,IAAG,OAAQpW,UACrFF,EAAAA,EAAAA,KAACof,GAAW,CAACD,QAASA,OAFLA,EAAQ7e,GAIZ,KAChBN,EAAAA,EAAAA,KAAA,OACDgB,UAAU,mDACVmC,MAAO,CACLC,MAAO,UACPsY,SAAU,OACVQ,UAAW,SACXrd,OAAQ,OACRK,MAAO,QACPgB,SACH,sBA8BX,kBCxHA,SAnBa,SAAHvC,GAAe,IAAVwiB,EAAIxiB,EAAJwiB,KACb,OACE5e,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wEAAuEd,SAAA,EAClFF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sBAAqBd,UACjCigB,aAAI,EAAJA,EAAM5P,QAAS,cAGlBhP,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,EACtCF,EAAAA,EAAAA,KAACogB,GAAAA,GAAI,CAACC,GAAE,SAAA3iB,OAAWyiB,EAAK7f,GAAE,cAAcU,UAAU,qCAAoCd,UACpFF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,yBAEfhB,EAAAA,EAAAA,KAACogB,GAAAA,GAAI,CAACC,GAAE,SAAA3iB,OAAWyiB,EAAK7f,GAAE,cAAcU,UAAU,qCAAoCd,UACpFF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,uCAK3B,6uDC0BA,SA3Cc,SAAHrD,GAcL,IAbFkD,EAAKlD,EAALkD,MACAP,EAAE3C,EAAF2C,GAAEggB,EAAA3iB,EACF4iB,SAAAA,OAAQ,IAAAD,GAAMA,EAAAE,EAAA7iB,EACd8iB,YAAAA,OAAW,IAAAD,EAAC,GAAEA,EAAAE,EAAA/iB,EACdgjB,WAAAA,OAAU,IAAAD,EAAC,GAAEA,EAAAE,EAAAjjB,EACbkjB,WAAAA,OAAU,IAAAD,EAAC,GAAEA,EAAAE,EAAAnjB,EACb6D,KAAAA,OAAI,IAAAsf,EAAC,OAAMA,EAAA/f,EAAApD,EACXqD,UAAAA,OAAS,IAAAD,EAAC,GAAEA,EACZJ,EAAKhD,EAALgD,MACAogB,EAAYpjB,EAAZojB,aACAngB,EAAQjD,EAARiD,SACA+K,EAAKhO,EAALgO,MACGqV,EAAI3f,GAAA1D,EAAA2D,IAET,OACEC,EAAAA,EAAAA,MAAA,OAAKP,UAAS,yBAAAtD,OAA2BsD,GAAYd,SAAA,EACjDqB,EAAAA,EAAAA,MAAA,SACI0f,QAAS3gB,EACTU,UAAS,4BAAAtD,OAA8BmjB,GACvC,aAAW,OAAM3gB,SAAA,CAEhBW,EACAmgB,EAAKE,WAAYlhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,YAAWd,SAAC,UAEjDF,EAAAA,EAAAA,KAAA,QAAAoK,GAAA,CACI5I,KAAMA,EACNR,UAAS,yDAAAtD,OAA2DijB,GACpEF,YAAaA,EACbngB,GAAIA,EACJK,MAAOA,EACPogB,aAAcA,EACdngB,SAAUA,EACV2f,SAAUA,EACVY,QAAS,SAAAnd,GAAC,OAAIA,EAAEod,cAAcC,MAAM,GAChCL,IAGPrV,GAAOpK,EAAAA,EAAAA,MAAA,OAAKP,UAAU,GAAGmC,MAAO,CAACC,MAAO,OAAOlD,SAAA,CAAC,IAAEyL,EAAM,OAAU,OAG3E,24CC2IA,SArKmB,SAAHhO,GAAkC,IAA7BG,EAAMH,EAANG,OAAQC,EAAKJ,EAALI,MAAMF,EAASF,EAATE,UACjC2hB,GAAsBrL,EAAAA,EAAAA,KAAY,SAAAtO,GAAC,OAAIA,EAAEuO,OAAO,IAAzCnW,EAAIuhB,EAAJvhB,KAAMqjB,EAAK9B,EAAL8B,MAC+BnO,EAAA9T,GAAlB+T,EAAAA,SAAe,IAAG,GAArCmO,EAAKpO,EAAA,GAAEqO,EAAQrO,EAAA,GACsB0H,EAAAxb,GAAlB+T,EAAAA,SAAe,IAAG,GAArC7C,EAAKsK,EAAA,GAAE4G,EAAQ5G,EAAA,GAC8BG,EAAA3b,GAApB+T,EAAAA,SAAe,MAAK,GAA7CsO,EAAQ1G,EAAA,GAAE2G,EAAW3G,EAAA,GACa4G,EAAAviB,GAAlB+T,EAAAA,SAAe,IAAG,GAAlC+M,EAAIyB,EAAA,GAACC,EAAOD,EAAA,GACblC,GAAWC,EAAAA,EAAAA,MACFmC,GAAe3iB,EAAAA,GAAAA,KAAtBD,MAG8C6iB,EAAA1iB,IAAtB2iB,EAAAA,EAAAA,MAAsB,GAAhDC,EAASF,EAAA,GAAGliB,EAASkiB,EAAA,GAATliB,UASZqiB,EAAe,SAAAle,GAEnB,GADAA,EAAE6Q,kBACEtE,EAEA,OADAoR,EAAY,uBACL,KAEX,IAAMQ,EAAK,IAAIC,SACfD,EAAGE,OAAO,QAAS9R,GACnB4R,EAAGE,OAAO,OAAQlC,GAClBgC,EAAGE,OAAO,SAAUpkB,aAAI,EAAJA,EAAMqC,IAC1B6hB,EAAGE,OAAO,SAAUrQ,SAASC,cAAc,2BAA2BC,aAAa,YACnFpP,MAAM0J,KAAK+U,GAAO/a,SAAQ,SAAC8b,GACvBH,EAAGE,OAAO,SAAUC,EACxB,IAGAL,EAAUE,GAAIzU,SAAS3G,MAAK,SAAAiE,GACpB,GAAmB,aAAhBA,aAAG,EAAHA,EAAK6L,QAAqB,CACzB,IAAI0L,EAAM1f,GAAOye,GACjBiB,EAAOna,KAAK4C,aAAG,EAAHA,EAAKmV,MACjBT,GAAS8C,EAAAA,EAAAA,IAAWD,IAEpBzS,KAAKO,KAAK,CACNJ,SAAU,SACVK,KAAM,UACNC,MAAO,oCACPL,mBAAmB,EACnBC,MAAO,OAGXpS,GACJ,CACR,IAAE,OAAO,SAACiO,GACNyC,QAAQC,IAAI1C,EAChB,GAEF,EAGMyW,EAAqB,SAACze,EAAG0e,GAC7B,IAAM/iB,EAAO+iB,EAAOC,UACpBd,EAAQliB,EACV,EAEM6c,EAAU,WACd,OACIjb,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wCAAuCd,SAAA,EACjDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACLF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACH,aAAW,cACXxY,UAAU,eACVwS,QAASzV,EAAMmC,UAEfF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIjBhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sCAAqCd,UAChDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,QACHO,MAAM,QACNW,KAAK,OACLif,YAAY,qBACZ5X,KAAK,QACLqY,UAAU,EACVvgB,MAAO4P,EACP5E,MAAQ+V,EACR9gB,SAAU,SAAAoD,GAAC,OA3ElB,SAACA,EAAG6e,GACrB7e,EAAE6Q,iBAEFgO,EADY7e,EAAEgR,OAAOrU,MAEzB,CAuE2CmiB,CAAa9e,EAAGyd,EAAS,KAG5ClgB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,8BAA8BmC,MAAO,CAAC4S,UAAW,SAAS7V,SAAA,EACrEF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,YAAYmC,MAAO,CAACC,MAAM,QAAQlD,SAAC,gBACjDF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CAAC9Y,SAAU6hB,QAGjClhB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,YAAYmC,MAAO,CAACC,MAAM,QAAQlD,SAAC,kBACjDF,EAAAA,EAAAA,KAAC+iB,GAAAA,EAAiB,CACdxB,MAAOA,EACPC,SAAUA,QAKlBxhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,UACbqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,EACtCF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHiC,QAAQ,YACRza,UAAU,OACVwS,QAASzV,EAAMmC,SAClB,WAICL,GAMF0B,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAACxY,UAAU,oBAAmBd,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,4BACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,UAGV,oBAdN0C,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAAChG,QAAS0O,EAAahiB,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,8BAAgC,+BAuBvF,EAEA,OAAG8gB,EAAc,MAEX9hB,EAAAA,EAAAA,KAAC2c,GAAW,CACR7e,OAAQA,EACRD,UAAWA,EAAUqC,UAEtBF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SACbsc,SAMLxc,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQA,EAAOoC,UAClBF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SACVsc,OAMjB,24CC8FA,SAnQiB,SAAH7e,GAAmC,IAA9BG,EAAMH,EAANG,OAAQC,EAAKJ,EAALI,MAAOF,EAASF,EAATE,UAChC2hB,GAAsBrL,EAAAA,EAAAA,KAAY,SAAAtO,GAAC,OAAIA,EAAEuO,OAAO,IAAzCnW,EAAIuhB,EAAJvhB,KAAMqjB,EAAK9B,EAAL8B,MAC+BnO,EAAA9T,GAAlB+T,EAAAA,SAAe,IAAG,GAArCmO,EAAKpO,EAAA,GAAEqO,EAAQrO,EAAA,GACsB0H,EAAAxb,GAAlB+T,EAAAA,SAAe,IAAG,GAArC7C,EAAKsK,EAAA,GAAE4G,EAAQ5G,EAAA,GAC8BG,EAAA3b,GAApB+T,EAAAA,SAAe,MAAK,GAA7CsO,EAAQ1G,EAAA,GAAE2G,EAAW3G,EAAA,GACa4G,EAAAviB,GAAlB+T,EAAAA,SAAe,IAAG,GAAlC+M,EAAIyB,EAAA,GAACC,EAAOD,EAAA,GACyCoB,EAAA3jB,GAAlB+T,EAAAA,SAAe,IAAG,GAArD6P,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAChCtD,GAAWC,EAAAA,EAAAA,MACFmC,GAAe3iB,EAAAA,GAAAA,KAAtBD,MACDikB,EAAiC9jB,IAAjB+jB,EAAAA,GAAAA,MAAiB,GAArB,GACbC,EAASF,EAAa5D,IAAI,QAC1B/d,EAAO2hB,EAAa5D,IAAI,QAI4B+D,EAAAjkB,IAAvBkkB,EAAAA,EAAAA,MAAuB,GAAlDC,EAAUF,EAAA,GAAGzjB,EAASyjB,EAAA,GAATzjB,UAGrB4jB,GAA2BC,EAAAA,EAAAA,IAAuB,IAADhmB,OAAK2lB,EAAM,6BAA6B,CACvFjJ,MAAM5Y,IAAiB,SAATA,IAAoB6hB,GAClCM,2BAA2B,IAFtBhkB,EAAI8jB,EAAJ9jB,KAAMC,EAAU6jB,EAAV7jB,YAQbG,EAAAA,EAAAA,YAAU,WACR6jB,KACIhkB,GAAcD,IACd8hB,EAAS9hB,aAAI,EAAJA,EAAM4Q,OACfsR,EAAQliB,aAAI,EAAJA,EAAMwgB,MACd+C,GAAiBvjB,aAAI,EAAJA,EAAM4hB,QAAS,IAEtC,GAAG,CAAC5hB,EAAM0jB,EAAQzjB,IAElB,IAAMgkB,EAAa,WACjBnC,EAAS,IACTI,EAAQ,IACRqB,EAAiB,GACnB,EAEMW,EAAc,WAClBD,IACA7lB,GACF,EAYMmkB,EAAe,SAAAle,GAEnB,GADAA,EAAE6Q,kBACEtE,EAEA,OADAoR,EAAY,uBACL,KAEX,IAAMQ,EAAK,IAAIC,SACfD,EAAGE,OAAO,QAAS9R,GACnB4R,EAAGE,OAAO,OAAQlC,GAClBgC,EAAGE,OAAO,SAAUpkB,aAAI,EAAJA,EAAMqC,IAC1B6hB,EAAGE,OAAO,SAAUrQ,SAASC,cAAc,2BAA2BC,aAAa,YACnFiQ,EAAGE,OAAO,UAAW,OACrBvf,MAAM0J,KAAK+U,GAAO/a,SAAQ,SAAC8b,GACvBH,EAAGE,OAAO,SAAUC,EACxB,IAGAkB,EAAW,CAAC7jB,KAAMwiB,EAAI7hB,GAAI+iB,IAAS3V,SAAS3G,MAAK,SAAAiE,GACzC,GAAmB,aAAhBA,aAAG,EAAHA,EAAK6L,QAAqB,KAAAiN,EACrBvB,EAAM1f,GAAOye,GACjBiB,EAAe,QAATuB,EAAGvB,SAAM,IAAAuB,OAAA,EAANA,EAAQ/gB,KAAI,SAAAod,GAAQ,IAAA4D,EACzB,OAAG7Y,OAAOiV,aAAI,EAAJA,EAAM7f,MAAQ4K,OAAOF,SAAS,QAAN+Y,EAAH/Y,EAAKmV,YAAI,IAAA4D,OAAA,EAATA,EAAWzjB,IAC/B0K,aAAG,EAAHA,EAAKmV,KACHA,CACjB,IAEArQ,KAAKO,KAAK,CACNJ,SAAU,SACVK,KAAM,UACNC,MAAOvF,aAAG,EAAHA,EAAKgZ,QACZ9T,mBAAmB,EACnBC,MAAO,OAGXuP,GAAS8C,EAAAA,EAAAA,IAAWD,IAEpBsB,GACJ,CACR,IAAE,OAAO,SAAC7X,GACNyC,QAAQC,IAAI1C,EAChB,GAEF,EAIMyW,EAAqB,SAACze,EAAG0e,GAC7B,IAAM/iB,EAAO+iB,EAAOC,UACpBd,EAAQliB,EACV,EAGFyT,EAAAA,WAAgB,WAERpB,SAASiS,qBAAqB,QAAQ,GAAG9gB,MAAMsQ,OAD/C5T,GAAaD,EAC2C,WAEA,SAEhE,GAAG,CAACC,EAAWD,IAMf,IAAOskB,EAA6D7kB,IAAnC8kB,EAAAA,EAAAA,MAAmC,GAAvC,GAEvBC,EAAmB,SAACpgB,EAAGse,GAEzB4B,EAAuB5B,aAAI,EAAJA,EAAMhiB,IAAIoN,SAGjC,IAAI2W,EAAYxhB,GAAOogB,GACnB3N,EAAQ+O,aAAY,EAAZA,EAAcC,QAAQhC,GAClC+B,EAAariB,OAAOsT,EAAM,GAC1B4N,EAAiBmB,EACrB,EAGU7H,EAAU,WACZ,OACAjb,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wCAAuCd,SAAA,EACjDqB,EAAAA,EAAAA,MAAA,MAAArB,SAAA,CAAI,eACIN,IAAcI,EAAAA,EAAAA,KAAA,OACXgB,UAAU,gCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,qBAIlCxb,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACH,aAAW,cACXxY,UAAU,eACVwS,QAASqQ,EAAY3jB,UAErBF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIrBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,sCAAqCd,SAAA,CAC/CN,IACGI,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAQmC,MAAO,CAC1BjE,MAAO,OACPL,OAAQ,OACRoR,SAAU,WACVoJ,IAAK,EACLC,KAAM,EACNL,OAAQ,MAGhB1X,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,QACHO,MAAM,QACNW,KAAK,OACLif,YAAY,qBACZ5X,KAAK,QACLqY,UAAU,EACVvgB,MAAO4P,EACP5E,MAAQ+V,EACR9gB,SAAU,SAAAoD,GAAC,OApId,SAACA,EAAG6e,GACrB7e,EAAE6Q,iBAEFgO,EADY7e,EAAEgR,OAAOrU,MAEzB,CAgIuCmiB,CAAa9e,EAAGyd,EAAS,KAG5ClgB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mCAAmCmC,MAAO,CAAC4S,UAAW,SAAS7V,SAAA,EAC1EF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,YAAYmC,MAAO,CAACC,MAAM,QAAQlD,SAAC,gBACjDF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CAAC/Z,KAAMwgB,EAAMvf,SAAU6hB,QAG7ClhB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,YAAYmC,MAAO,CAACC,MAAM,QAAQlD,SAAC,kBACjDF,EAAAA,EAAAA,KAAC+iB,GAAAA,EAAiB,CACdxB,MAAOA,EACPC,SAAUA,EACV+C,SAAUtB,EACVuB,qBAAsBJ,QAK9BpkB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,UACbqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,EACtCF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHiC,QAAQ,YACRza,UAAU,OACVwS,QAASqQ,EAAY3jB,SACxB,WAICL,GAMF0B,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAACxY,UAAU,oBAAmBd,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,4BACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,UAGV,oBAdN0C,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAAChG,QAAS0O,EAAahiB,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,8BAAgC,yBAuBjF,EAGH,OAAG8gB,EAAc,MAEV9hB,EAAAA,EAAAA,KAAC2c,GAAW,CACR7e,OAAQA,EACRD,UAAWA,EAAUqC,UAErBF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SACdsc,SAMLxc,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQA,EAAOoC,UAClBF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SACdsc,OAKb,qiCC9KA,SAtFiB,SAAH7e,GAAmC,IAA9BI,EAAKJ,EAALI,MAAOD,EAAMH,EAANG,OAAQD,EAASF,EAATE,UACvBslB,EAAiC9jB,IAAjB+jB,EAAAA,GAAAA,MAAiB,GAArB,GACbC,EAASF,EAAa5D,IAAI,QAC1B/d,EAAO2hB,EAAa5D,IAAI,QACfuC,GAAe3iB,EAAAA,GAAAA,KAAtBD,MAGRukB,GAA2BC,EAAAA,EAAAA,IAAuB,IAADhmB,OAAK2lB,EAAM,6BAA6B,CACrFjJ,MAAM5Y,IAAiB,SAATA,IAAoB6hB,GAClCM,2BAA2B,IAFxBhkB,EAAI8jB,EAAJ9jB,KAAMC,EAAU6jB,EAAV7jB,WAKTyC,EAAO1C,EAAQ,IAAImN,EAAAA,EAAKnN,EAAK0C,MAAQ,KAErCma,EAAU,WACd,OACIjb,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wCAAuCd,SAAA,EAClDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACHN,IAAcI,EAAAA,EAAAA,KAAA,OACXgB,UAAU,wCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,kBAG1Bxb,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACH,aAAW,cACXxY,UAAU,eACVwS,QAASzV,EAAMmC,UAEfF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIrBhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sCAAqCd,UAChDF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,UACjBF,EAAAA,EAAAA,KAAA,OAAAE,SACKN,GAAaI,EAAAA,EAAAA,KAAA4C,EAAAA,SAAA,CAAA1C,SAAE,gBAChBqB,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,EACIqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAEd,UACbF,EAAAA,EAAAA,KAAA,OAAKuC,IAAKF,aAAI,EAAJA,EAAMoiB,YAAajiB,IAAI,GAAGtD,MAAO,GAAIL,OAAQ,QAE3D0C,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,OAAMd,SAAEmC,aAAI,EAAJA,EAAMqiB,aAC5B1kB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,GAAGmC,MAAO,CAACC,MAAO,WAAWlD,SAAEmC,aAAI,EAAJA,EAAMsiB,8BAG7DpjB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,mBAAkBd,SAAEP,aAAI,EAAJA,EAAM4Q,SACxCvQ,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sBAAsB0T,wBAAyB,CAACC,OAAQhV,aAAI,EAAJA,EAAMwgB,SAC5ExgB,aAAI,EAAJA,EAAM4hB,SAASvhB,EAAAA,EAAAA,KAAC+iB,GAAAA,EAAiB,CAACwB,SAAU5kB,aAAI,EAAJA,EAAM4hB,MAAOqD,KAAK,0BAS7F,EAEA,OAAG9C,EAAc,MAEX9hB,EAAAA,EAAAA,KAAC2c,GAAW,CACR7e,OAAQA,EACRD,UAAWA,EAAUqC,UAErBF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SACdsc,SAKFxc,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQA,EAAOoC,UACzBF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SACVsc,OAIb,qiCC4EA,SAjKoB,WAClB,IAAAgD,GAAsBrL,EAAAA,EAAAA,KAAY,SAAAtO,GAAC,OAAIA,EAAEuO,OAAO,IAAzCnW,EAAIuhB,EAAJvhB,KAAMqjB,EAAK9B,EAAL8B,MAC6BnO,EAAA9T,GAAlB+T,EAAAA,SAAe,IAAG,GAAnCwR,EAAIzR,EAAA,GAAE0R,EAAO1R,EAAA,GAE4C0H,EAAAxb,GAApB+T,EAAAA,SAAe,MAAK,GAAzD8K,EAAcrD,EAAA,GAAEsD,EAAiBtD,EAAA,GAElC6E,GAAWC,EAAAA,EAAAA,MACXmF,GAAWC,EAAAA,EAAAA,MAEXC,EADkC3lB,IAAjB+jB,EAAAA,GAAAA,MAAiB,GAArB,GACY7D,IAAI,QAMjCrS,EAAA7N,IAFqC8N,EAAAA,EAAAA,IAA2B,GAAI,CACpEiN,KAAMkH,aAAK,EAALA,EAAO7Y,SACb,GAFK2E,EAAcF,EAAA,GAAGtN,EAAUsN,EAAA,GAAVtN,WAKxBwT,EAAAA,WAAgB,WAEdyR,EADYG,GAAwB,GAEtC,GAAG,CAACA,IAIJ5R,EAAAA,WAAgB,WACXnV,GAAQA,EAAKqC,IACd8M,EAAe,IAAD1P,OAAKO,aAAI,EAAJA,EAAMqC,GAAE,yBAC1BoN,SACA3G,MAAK,SAAAiE,GACDA,GACD0U,GAAS8C,EAAAA,EAAAA,IAAWxX,GAExB,IAAE,OACK,SAAAgB,GACLyC,QAAQC,IAAI1C,EACd,GAEJ,GAAG,CAAC/N,IAIJ,IAAMF,EAAQ,SAACiG,GACb8gB,EAAS,kBAADpnB,OAAmBO,EAAKqC,IAClC,EAEA,OACEiB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,2BAA2BuT,IAAK4J,EAAmBhb,MAAO,CAAC8V,OAAQ2L,EAAO,KAAO,IAAI1kB,SAAA,EACjGqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,6FAA4Fd,SAAA,EACxGF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,OAAMd,SAAC,UACtBN,IACKI,EAAAA,EAAAA,KAAA,OACIgB,UAAU,wCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,kBAIhCxb,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHiC,QAAQ,WACRza,UAAU,oBACV,aAAW,YACXwS,QAAS,kBAAMsR,EAAS,eAAe,EAAC5kB,SAE9B,WAAT0kB,GACCrjB,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,CAAE,KAACF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,oBAAoBmC,MAAQ,CAACuY,SAAU,UAAU,cAG/Dna,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,CAAE,KAACF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,mBAAoBmC,MAAQ,CAACuY,SAAU,UAAW,kBAO3EkJ,IAAQ5kB,EAAAA,EAAAA,KAAA,UACP,aAAW,yBAEXgB,UAAU,2BACVwS,QAASzV,EACToF,MAAO,CAAC8V,OAAQ2L,EAAO,MAAQ,IAAI1kB,UAEjCF,EAAAA,EAAAA,KAAA,KACEgB,UAAS,8BAAAtD,OAAiCknB,EAAO,QAAU,QAC3DzhB,MAAO,CAACC,MAAO,gBAMrBpD,EAAAA,EAAAA,KAACilB,GAAU,CACPlnB,MAAOA,EACPD,OAAiB,WAAT8mB,EACR/mB,UAAWqgB,KAIfle,EAAAA,EAAAA,KAACklB,GAAQ,CACPnnB,MAAOA,EACPD,OAAkB,SAAT8mB,EACT/mB,UAAWqgB,KAKble,EAAAA,EAAAA,KAACmlB,GAAQ,CACPpnB,MAAOA,EACPD,OAAiB,SAAT8mB,EACR/mB,UAAWqgB,KAGble,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,SACrCN,GAiBD2B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mDACfmC,MAAO,CACLC,MAAO,UACPsY,SAAU,OACVQ,UAAW,SACXrd,OAAQ,OACRK,MAAO,QACPgB,SAAA,EAEAF,EAAAA,EAAAA,KAAA,OACMgB,UAAU,gCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,cAClByE,YAAa,UAEnB,iBApCQqB,aAAK,EAALA,EAAO7Y,QAAS,EAAI6Y,EAAMve,KAAI,SAAAod,GAAI,OAChDngB,EAAAA,EAAAA,KAAColB,GAAI,CAEHjF,KAAMA,GADDA,EAAK7f,GAEV,KACAN,EAAAA,EAAAA,KAAA,OACFgB,UAAU,mDACVmC,MAAO,CACLC,MAAO,UACPsY,SAAU,OACVQ,UAAW,SACXrd,OAAQ,OACRK,MAAO,QACPgB,SACH,oBA6BX,wCC1IA,SA3BqB,SAAHvC,GAA4C,IAAvCI,EAAKJ,EAALI,MAAOD,EAAMH,EAANG,OAAQD,EAASF,EAATE,UAAkBF,EAAP0C,QAC/C,OACEL,EAAAA,EAAAA,KAAC2c,GAAW,CAAC7e,OAAQA,EAAQD,UAAWA,EAAUqC,UAC9CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wCAAuCd,UAClDF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACH,aAAW,cACXxY,UAAU,uBACVwS,QAASzV,EAAMmC,UAEfF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAIrBhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sCAAqCd,UAChDF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,UACjBF,EAAAA,EAAAA,KAAA,kBASpB,qiCCvBA,IAAMqf,GAAU,SAAC7N,GAAG,OAAK8N,KAAAA,IAAU9N,GAAKzK,MAAK,SAACiE,GAAG,OAAKA,EAAIrL,IAAI,GAAC,EAiH/D,SA/GwB,SAAHhC,GAAiB,IAAXM,EAAIN,EAAJM,KAC+BkV,EAAA9T,GAApB+T,EAAAA,SAAe,MAAK,GAA/CvV,EAASsV,EAAA,GAAEkS,EAAYlS,EAAA,GACmB0H,EAAAxb,GAArB+T,EAAAA,UAAe,GAAM,GAA1CtV,EAAM+c,EAAA,GAAEjB,EAASiB,EAAA,GAElB0B,EAAS,SAACvY,GACZA,EAAE6Q,iBACF+E,GAAW9b,EACf,EAMA8hB,GAAmCC,EAAAA,GAAAA,IAAO,iBAADniB,OACpBO,EAAKqC,GAAE,2BACxB+e,IAFI1f,EAAIigB,EAAJjgB,KAKF2lB,GALa1F,EAALjU,MAAgBiU,EAAT/f,UAKTF,aAAI,EAAJA,EAAMU,SACZklB,GAAgBD,aAAG,EAAHA,EAAK7c,QAAS,IAChCpI,EAAUklB,EAAgBD,aAAG,EAAHA,EAAK7b,MAAM,EAAG,KAAO6b,EAKnD,OAJAjlB,EACIA,GAAO,8EAIPkB,EAAAA,EAAAA,MAAA,OACIP,UAAU,2BACVuT,IAAK8Q,EACLliB,MAAO,CAAEqiB,UAAW,SAAUtlB,SAAA,CAG7BpC,IACGkC,EAAAA,EAAAA,KAAA,UACI,aAAW,yBACXgB,UAAU,2BACVwS,QAAS+I,EACTpZ,MAAO,CAAE8V,OAAQnb,EAAS,MAAQ,IAAKoC,UAEvCF,EAAAA,EAAAA,KAAA,KACIgB,UAAS,8BAAAtD,OACLI,EAAS,QAAU,QAEvBqF,MAAO,CAAEC,MAAO,gBAM5BpD,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,6FAA4Fd,UACvGF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,OAAMd,SAAC,mBAG3BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,GAAGmC,MAAO,CAAEjE,MAAO,SAAUgB,SAAA,CAAC,kBACzB,QAEpBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UACtCF,EAAAA,EAAAA,KAACylB,GAAAA,EAAM,CAAC/iB,OAAQwI,OAAOvL,aAAI,EAAJA,EAAM+lB,uBAIrCnkB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,GAAGmC,MAAO,CAAEjE,MAAO,SAAUgB,SAAA,CAAC,sBACrB,QAExBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UACtCF,EAAAA,EAAAA,KAACylB,GAAAA,EAAM,CAAC/iB,OAAQwI,OAAOvL,aAAI,EAAJA,EAAMgmB,4BAIrCpkB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,GAAGmC,MAAO,CAAEjE,MAAO,SAAUgB,SAAA,CAAC,qBACtB,QAEvBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UACtCF,EAAAA,EAAAA,KAACylB,GAAAA,EAAM,CAAC/iB,OAAQwI,OAAOvL,aAAI,EAAJA,EAAMimB,0BAWrCrkB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gCAA+Bd,SAAC,eAChDqB,EAAAA,EAAAA,MAAA,OAAK4B,MAAO,CAAEC,MAAO,OAAQsY,SAAU,QAASxb,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,iBACV0T,wBAAyB,CAAEC,OAAQtU,KAEtCklB,IACGvlB,EAAAA,EAAAA,KAAA,KAAG4U,KAAK,IAAIpB,QAAS+I,EAAOrc,SAAC,qBAMzCF,EAAAA,EAAAA,KAAC6lB,GAAW,CACR/nB,OAAQA,EACRD,UAAWA,EACXE,MA/FE,SAACiG,GACX4V,GAAU,EACd,EA8FYvZ,QAASV,aAAI,EAAJA,EAAMU,YAI/B,qDCnHII,GAAU,CAEdA,OAAiB,OACjBA,WAAoB,GAEP,KAAI,KAASA,IAI1B,SAAe,KAAQC,QAAU,CAAC,m3CCOlC,SAhB4B,SAAH/C,GAA6E,IAAxEgY,EAAIhY,EAAJgY,KAAgBmQ,GAAFnoB,EAARooB,SAAiBpoB,EAAPmoB,SAASE,EAAOroB,EAAPqoB,QAASC,EAAOtoB,EAAPsoB,QAASC,EAAevoB,EAAfuoB,gBAAmBlF,EAAI3f,GAAA1D,EAAA2D,IAE9F,OACMtB,EAAAA,EAAAA,KAACmmB,uWAAU/b,CAAA,CACP2b,SAAUpQ,EACVyQ,WAAW,aACXxlB,SAAU,SAACsF,GAAC,OAAK4f,EAAQ5f,EAAE,EAC3BlF,UAAU,sBACVglB,QAASA,EACTC,QAASA,EACTC,gBAAiBA,GACblF,GAGhB,2tDCbA,IAAMqF,GAAY,SAAH1oB,GAAyF,IAApFgD,EAAKhD,EAALgD,MAAOC,EAAQjD,EAARiD,SAAQ4f,EAAA7iB,EAAE8iB,YAAAA,OAAW,IAAAD,EAAC,SAAQA,EAAA8F,EAAA3oB,EAAE4oB,UAAAA,OAAS,IAAAD,GAAMA,EAAAvlB,EAAApD,EAAEqD,UAAAA,OAAS,IAAAD,EAAC,GAAEA,EAAKylB,EAAKnlB,GAAA1D,EAAA2D,IACpFiT,EAAMnB,EAAAA,OAAa,MAMzB,OALAA,EAAAA,WAAgB,WACRmT,GACAhS,EAAIkS,QAAQC,OAEpB,GAAG,CAACH,EAAWhS,KAEXhT,EAAAA,EAAAA,MAAA,OAAKP,UAAU,sBAAqBd,SAAA,EAChCF,EAAAA,EAAAA,KAAA,QAAAoK,GAAA,CACI5I,KAAK,OACLif,YAAcA,EACd9f,MAAOA,EACPK,UAAS,6BAAAtD,OAA+BsD,GACxCJ,SAAU,SAAAoD,GAAC,OAAIpD,EAASoD,EAAEod,cAAczgB,MAAM,EAC9C4T,IAAKA,GACDiS,KAIJxmB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2BAA0Bd,UACrCF,EAAAA,EAAAA,KAAA,OACI2mB,MAAM,6BACN3lB,UAAU,oCACV4lB,QAAQ,YAAY1nB,MAAM,KAAKL,OAAO,KAAIqB,UAC1CF,EAAAA,EAAAA,KAAA,QAAMkG,EAAE,sJAKhC,EAGJmgB,GAAUQ,UAAY,CAClBlmB,MAAOmmB,KAAAA,OAAiBC,WACxBnmB,SAAUkmB,KAAAA,KAAeC,WACzBtG,YAAaqG,KAAAA,OACb9lB,UAAW8lB,KAAAA,OACXP,UAAWO,KAAAA,MCxBf,SAlBe,SAAHnpB,GAA8B,IAAAqpB,EAAArpB,EAAzB4S,MAAAA,OAAK,IAAAyW,EAAE,aAAYA,EAClC,OACMzlB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,gCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,kBAG1Bxb,EAAAA,EAAAA,KAAA,QAAAE,SAAOqQ,MAGnB,qjCCmEA,SAzEiC,SAAH5S,GAAqC,IAAhCooB,EAAQpoB,EAARooB,SAAUkB,EAAQtpB,EAARspB,SAAU9oB,EAAMR,EAANQ,OACPgV,EAAA9T,GAAlB+T,EAAAA,SAAe,IAAG,GAArCpC,EAAKmC,EAAA,GAAE+T,EAAQ/T,EAAA,GAEhBgU,GAASloB,EAAAA,EAAAA,MACfwkB,GAGIC,EAAAA,GAAAA,IAAuB,IAADhmB,QAAKypB,aAAM,EAANA,EAAQhpB,SAAUA,EAAM,wBAF9CipB,EAAU3D,EAAf9jB,KACAC,EAAU6jB,EAAV7jB,WAIEynB,EACI,KAAVrW,EACIoW,EACAA,aAAU,EAAVA,EAAYhnB,QAAO,SAACknB,GAClB,OAAOA,aAAG,EAAHA,EAAKC,cAAcC,cAAcnQ,SAASrG,EAAMwW,cACzD,IAEN,OACExnB,EAAAA,EAAAA,KAACynB,GAAAA,EAAQ,CAAC9mB,MAAOolB,EAAUnlB,SAAUqmB,EAAS/mB,UAC1CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,oCAAmCd,SAAA,EAC9CqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAE/gB,SAAA,CAAC,iBAAaF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,UACpCqB,EAAAA,EAAAA,MAACkmB,GAAAA,EAASjO,OAAM,CAACxY,UAAU,+DAA8Dd,SAAA,EACrFF,EAAAA,EAAAA,KAACynB,GAAAA,EAAS7E,MAAK,CACXhiB,SAAU,SAAAoD,GAAC,OAAIkjB,EAASljB,EAAEgR,OAAOrU,MAAM,EACvC8f,YAAY,KACZiH,aAAc,SAAC/mB,GAAK,OAAKA,aAAK,EAALA,EAAO4mB,gBAAiB,EAAE,EACnDvmB,UAAU,6DAEdhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAIrBO,EAAAA,EAAAA,MAACkmB,GAAAA,EAASE,QAAO,CAAC3mB,UAAU,qBAAoBd,SAAA,CAE3CN,IACGI,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2BAA0Bd,UACrCF,EAAAA,EAAAA,KAAC4nB,GAAM,MAIS,KAAvBP,aAAY,EAAZA,EAAc5e,SACXzI,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2BAA0Bd,SAAC,mBAG7CmnB,aAAY,EAAZA,EAActkB,KAAI,SAACukB,EAAKO,GAAM,OAC/B7nB,EAAAA,EAAAA,KAACynB,GAAAA,EAASK,OAAM,CAEZ9mB,UAAW,SAAAiO,GAAA,IAAG8Y,EAAM9Y,EAAN8Y,OAAM,2BAAArqB,OAA8BqqB,EAAS,SAAW,GAAE,EACxEpnB,MAAO2mB,EAAIpnB,SAEV,SAAAwP,GAAA,IAAGqW,EAAQrW,EAARqW,SAAQ,OACRxkB,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,EACIF,EAAAA,EAAAA,KAAA,QACIgB,UAAS,kBAAAtD,OACTqoB,EAAW,cAAgB,eACxB7lB,SAEFonB,aAAG,EAAHA,EAAKC,gBAETxB,GACGxkB,EAAAA,EAAAA,MAAA,QAAMP,UAAU,UAASd,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,sBAAqB,OAC7D,OACL,GAhBF6mB,EAkBS,WAMlC,qxECgBA,SArF4B,SAAHlqB,GAA6C,IAAAqqB,EAAvCjC,EAAQpoB,EAARooB,SAAUkB,EAAQtpB,EAARspB,SAAUgB,EAAYtqB,EAAZsqB,aACH9U,EAAA9T,GAAlB+T,EAAAA,SAAe,IAAG,GAArCpC,EAAKmC,EAAA,GAAE+T,EAAQ/T,EAAA,GAC8B0H,EAAAxb,GAAhB+T,EAAAA,WAAgB,GAA7C8U,EAAUrN,EAAA,GAAEsN,EAAatN,EAAA,GAC1BsM,GAASloB,EAAAA,EAAAA,MACfwkB,GAA6BC,EAAAA,EAAAA,IAAuB,IAADhmB,OAC3CypB,aAAM,EAANA,EAAQhpB,OAAM,yBADdwB,EAAI8jB,EAAJ9jB,KAAMC,EAAU6jB,EAAV7jB,WAIdwoB,GAAyCC,EAAAA,EAAAA,IACrCH,EACA,CACI9N,MAAO8N,IAHPI,EAAiBF,EAAjBE,kBAAmBzoB,EAASuoB,EAATvoB,UAOvB0oB,EAAY,GAEZA,EADAN,GAAoC,IAApBA,EAAa3nB,GACjBwB,IAAAA,OACRnC,GACA,SAACuG,GAAC,OACwB,IAAtBgF,OAAOhF,EAAEsiB,UACTtd,OAAOhF,EAAE5F,MAAQ4K,OAAO8B,OAAOC,QAAQ5K,KAAK/B,GAAG,IAEhD2nB,GAAoC,IAApBA,EAAa3nB,GACxBwB,IAAAA,OAASnC,GAAM,SAACuG,GAAC,OAA2B,KAAtBgF,OAAOhF,EAAEsiB,QAAe,IAE9C1mB,IAAAA,OACRnC,GACA,SAACuG,GAAC,OAA2B,IAAtBgF,OAAOhF,EAAEsiB,UAAwC,KAAtBtd,OAAOhF,EAAEsiB,QAAe,IAIlE,IAAMnB,EACQ,KAAVrW,EACMuX,EACS,QADAP,EACTO,SAAS,IAAAP,OAAA,EAATA,EAAW5nB,QAAO,SAACqoB,GACf,OAAOA,aAAQ,EAARA,EAAU5f,KACZ2e,cACAnQ,SAASrG,EAAMwW,cACxB,IAEV,OACIxnB,EAAAA,EAAAA,KAACynB,GAAAA,EAAQ,CAAC9mB,MAAOolB,EAAUnlB,SAAUqmB,EAAS/mB,UAC1CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,oCAAmCd,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAOihB,QAAQ,GAAE/gB,SAAC,iBAClBqB,EAAAA,EAAAA,MAACkmB,GAAAA,EAASjO,OAAM,CAACxY,UAAU,+DAA8Dd,SAAA,EACrFF,EAAAA,EAAAA,KAACynB,GAAAA,EAAS7E,MAAK,CACXhiB,SAAU,SAACoD,GAAC,OAAKkjB,EAASljB,EAAEgR,OAAOrU,MAAM,EACzC8f,YAAY,KACZiH,aAAc,SAAC/mB,GAAK,OAAKA,aAAK,EAALA,EAAOkI,OAAQ,EAAE,EAC1C7H,UAAU,6DAEdhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAIrBO,EAAAA,EAAAA,MAACkmB,GAAAA,EAASE,QAAO,CAAC3mB,UAAU,qBAAoBd,SAAA,CAC3CN,IACGI,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2BAA0Bd,UACrCF,EAAAA,EAAAA,KAAC4nB,GAAM,MAIW,KAAzBP,aAAY,EAAZA,EAAc5e,SACXzI,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2BAA0Bd,SAAC,mBAI1CmnB,aAAY,EAAZA,EAActkB,KAAI,SAAC0lB,GAAQ,OACvBzoB,EAAAA,EAAAA,KAAC8nB,GAAM,CAEHW,SAAUA,EACVH,kBAAmBA,EACnBzoB,UAAWA,EACXsoB,cAAeA,GAJVM,EAASnoB,GAKhB,WAO9B,EAIA,IAAMwnB,GAAS,SAAH7Y,GAAkE,IAA5DwZ,EAAQxZ,EAARwZ,SAAUH,EAAiBrZ,EAAjBqZ,kBAAmBzoB,EAASoP,EAATpP,UAE3C,OADAsoB,EADmElZ,EAAbkZ,eACxCM,aAAQ,EAARA,EAAUnoB,IACpBT,GAEIG,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,UACnCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,iCAAgCd,UAC3CF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,SAOxBtW,EAAAA,EAAAA,KAACynB,GAAAA,EAASK,OAAM,CAEZ9mB,UAAW,SAAA0O,GAAA,IAAGqY,EAAMrY,EAANqY,OAAM,2BAAArqB,OACKqqB,EAAS,SAAW,GAAE,EAE/CpnB,MAAKyJ,GAAAA,GAAA,GACEqe,GAAQ,IACXC,aAA4C,OAA9BJ,aAAiB,EAAjBA,EAAmBzR,UACnC3W,SAED,SAAAyX,GAAA,IAAGoO,EAAQpO,EAARoO,SAAQ,OACRxkB,EAAAA,EAAAA,MAAA,OACIP,UAAU,4BACVmC,MAAO,CAAEkT,IAAK,QAASnW,SAAA,EAEvBF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,iBACVmC,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACRgb,SAAU,UACZ3Z,UAEFF,EAAAA,EAAAA,KAAA,OACIuC,IAAKkmB,aAAQ,EAARA,EAAUE,UACfnmB,IAAKimB,aAAQ,EAARA,EAAU5f,KACf3J,MAAO,IACPL,OAAQ,IACRmC,UAAU,iBACVmC,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR+pB,UAAW,aAIvBrnB,EAAAA,EAAAA,MAAA,QACIP,UAAS,kBAAAtD,OACLqoB,EAAW,cAAgB,eAC5B7lB,SAAA,EAEHF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,OAAMd,SAAEuoB,aAAQ,EAARA,EAAU5f,OACH,OAA9Byf,aAAiB,EAAjBA,EAAmBzR,SAChB7W,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,qBAAoBd,SAAC,eAGN,KAA/BuoB,aAAQ,EAARA,EAAUI,mBACV7oB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,sBAAqBd,SAAC,gBAItCF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,sBAAqBd,SAAC,oBAK7C6lB,GACG/lB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,UAASd,UACrBF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,wBAEjB,OACF,GA5DLynB,aAAQ,EAARA,EAAUnoB,GAgE3B,cC5KMwoB,GAAW,CAAC,YAAa,SAAU,WA4BzC,SAzB0B,SAAHnrB,GAAgC,IAA3BooB,EAAQpoB,EAARooB,SAAUgD,EAAWprB,EAAXorB,YAClC,OACI/oB,EAAAA,EAAAA,KAACgpB,GAAAA,EAAO,CAACroB,MAAOolB,EAAUnlB,SAAUmoB,EAAY7oB,UAC5CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,oCAAmCd,SAAA,EAC9CqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAE/gB,SAAA,CAAC,cAAUF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,MAAO,QACpCqB,EAAAA,EAAAA,MAACynB,GAAAA,EAAQxP,OAAM,CAACxY,UAAU,iGAAgGd,SAAA,CAAE6lB,GAE5H/lB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAGrBhB,EAAAA,EAAAA,KAACgpB,GAAAA,EAAQrB,QAAO,CAAE3mB,UAAU,qBAAoBd,SAC3C4oB,cAAQ,EAARA,GAAU/lB,KAAI,SAAC8C,EAAGvD,GAAC,OAChBf,EAAAA,EAAAA,MAACynB,GAAAA,EAAQlB,OAAM,CAEX9mB,UAAW,SAAAiO,GAAA,IAAG8Y,EAAM9Y,EAAN8Y,OAAM,2BAAArqB,OAA8BqqB,EAAS,SAAW,GAAE,EACxEpnB,MAAOkF,EAAE3F,SAAA,CACZ,IAAE2F,EAAE,MAHIvD,EAGc,UAM/C,25CCPA,IAAMsT,GAAQ,IAAIqT,GAAAA,EAuDlB,SApDyB,SAAHtrB,GAAiB,IAAXM,EAAIN,EAAJM,KACjBklB,EAAiC9jB,IAAjB+jB,EAAAA,GAAAA,MAAiB,GAArB,GACb8F,EAA0C,SAA9B/F,EAAa5D,IAAI,SAC7BphB,EAASglB,EAAa5D,IAAI,QAC1BuF,GAAWC,EAAAA,EAAAA,MACXoE,GAAWC,EAAAA,EAAAA,MAEXrrB,EAAQ,WAAH,OAAS+mB,EAASqE,EAASE,SAAU,CAACC,SAAS,GAAM,EAGQC,EAAAlqB,IAAxBmqB,EAAAA,EAAAA,MAAwB,GAA9DC,EAAWF,EAAA,GAAAG,EAAAH,EAAA,GAAI1pB,EAAS6pB,EAAT7pB,UAAgB6pB,EAAL/d,MAepC,OACI3L,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQorB,EAAUhpB,UACrBqB,EAAAA,EAAAA,MAACooB,GAAAA,EAAI,CAAC3oB,UAAWiB,GAAO2nB,UAAU1pB,SAAA,EAC9BF,EAAAA,EAAAA,KAAC2pB,GAAAA,EAAKE,KAAI,CACRC,QAAS/rB,EACTiD,UAAWiB,GAAO8nB,eAAe7pB,UAE/BqB,EAAAA,EAAAA,MAAA,MAAArB,SAAA,CAAI,gBAAc/B,EAAO,UAG7B6B,EAAAA,EAAAA,KAAC2pB,GAAAA,EAAKK,KAAI,CAAChpB,UAAWiB,GAAOgoB,eAAe/pB,UACxCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAEd,SACZjC,IACG+B,EAAAA,EAAAA,KAACkqB,GAAgB,CACbjsB,KAAMA,EACNksB,SA5BH,SAACzY,GACtB+X,EAAY,CAAC9pB,KAAM+R,EAAUpR,GAAIrC,aAAI,EAAJA,EAAMqC,KAAKoN,SAAS3G,MAAK,SAAAiE,GACtDgF,GAAAA,GAAMoa,QAAQ,8BACdrsB,GACJ,IAAE,OAAO,SAACiO,GACa,OAAhBA,aAAG,EAAHA,EAAK6K,SACJ7G,GAAAA,GAAMqa,KAAK,sCAEnB,GACJ,EAoB4BxqB,UAAWA,EACXiqB,QAAS/rB,YAQzC,EAIA,IAAMmsB,GAAmB,SAAHjb,GAA8C,IAAAqb,EAAAC,EAAAC,EAAAC,EAAAC,EAAxCzsB,EAAIgR,EAAJhR,KAAMksB,EAAQlb,EAARkb,SAAUtqB,EAASoP,EAATpP,UAAWiqB,EAAO7a,EAAP6a,QAC7Ca,GAAsB1sB,EAEkBmB,EAAAC,IAApBC,EAAAA,EAAAA,UAASrB,EAAKsS,OAAM,GAAvCA,EAAKnR,EAAA,GAAEqiB,EAAQriB,EAAA,GACkF0e,EAAAze,IAAtEC,EAAAA,EAAAA,UAAS,CAACgB,GAAIrC,EAAK2sB,YAAaC,gBAAiB5sB,EAAK6sB,iBAAgB,GAAjGC,EAASjN,EAAA,GACkDG,GADpCH,EAAA,GACoCze,IAA9BC,EAAAA,EAAAA,UAASrB,EAAK+sB,iBAAgB,IACE5M,GADnDH,EAAA,GAAeA,EAAA,GACoC5e,IAAlCC,EAAAA,EAAAA,UAAS,IAAI2rB,KAAKhtB,EAAKitB,YAAW,IAA7DA,EAAS9M,EAAA,GAAE+M,EAAY/M,EAAA,GACgCG,EAAAlf,IAAhCC,EAAAA,EAAAA,UAAS,IAAI2rB,KAAKhtB,EAAKmtB,UAAS,GAAvDA,EAAO7M,EAAA,GAAE8M,EAAU9M,EAAA,GAC8B+M,EAAAjsB,IAA1BC,EAAAA,EAAAA,UAASrB,EAAKstB,aAAY,GAItDC,GAJYF,EAAA,GAAYA,EAAA,GAIxBjsB,IAHsCC,EAAAA,EAAAA,UAAS,CAC7CgB,GAAIrC,EAAKuF,SAASlD,GAClBinB,cAAetpB,EAAKuF,SAASqF,OAC/B,IAHKof,EAAYuD,EAAA,GAAEC,EAAeD,EAAA,GAOlCE,EAAArsB,IAHkCC,EAAAA,EAAAA,UAAS,CACzCgB,GAAIrC,EAAKkZ,WAAW7W,GACpBuI,KAAM5K,EAAKkZ,WAAWtO,OACxB,GAHK8iB,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAIgCG,EAAAxsB,IAA1BC,EAAAA,EAAAA,UAASrB,EAAK6tB,aAAY,GAAzDA,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GACqBG,EAAA3sB,IAAvBC,EAAAA,EAAAA,UAASrB,EAAK6qB,UAAS,GAAhDA,EAAQkD,EAAA,GAAEC,EAAWD,EAAA,GAG3BE,EAAA7sB,IAF+CC,EAAAA,EAAAA,UAC5CrB,EAAKkuB,eACR,GAFMC,EAAgBF,EAAA,GAKtBG,GAL2CH,EAAA,GAK3C7sB,IAF6CC,EAAAA,EAAAA,UAC1CrB,EAAKquB,iBACR,IAFMC,EAAeF,EAAA,GAGgCG,GAHZH,EAAA,GAGYhtB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,IAA/C2jB,EAAauJ,EAAA,GAAEtJ,EAAgBsJ,EAAA,GACMrZ,EAAA9T,GAAlB+T,EAAAA,SAAe,IAAG,GAArCmO,EAAKpO,EAAA,GAAEqO,EAAQrO,EAAA,GACkBsZ,EAAAptB,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAAjCqM,EAAK8gB,EAAA,GAAEC,EAAQD,EAAA,GAEtBhJ,IAAyCC,EAAAA,EAAAA,IAAuB,IAADhmB,OACvDO,EAAKqC,GAAE,+BAGTqsB,IAJkBlJ,GAAhB9jB,KAA4B8jB,GAAV7jB,WAIe,OAAlB+L,aAAK,EAALA,EAAOkL,QAAiBlL,aAAK,EAALA,EAAOhM,KAAO,MA8F3DitB,IAA0DC,EAAAA,GAAAA,IAA4B5uB,aAAI,EAAJA,EAAM6uB,WAKvFC,IALgBH,GAAdjtB,KAA+CitB,GAA/BhtB,WAKmCP,IAA/B2tB,EAAAA,EAAAA,MAA+B,GAAnC,IAazB5Z,EAAAA,WAAgB,WAERpB,SAASiS,qBAAqB,QAAQ,GAAG9gB,MAAMsQ,OAD/C5T,GAAa8qB,EAC2C,WAEA,SAEhE,GAAG,CAAC9qB,EAAW8qB,IAiBf,OACI3qB,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wDAAuDd,SAAA,CACjEyqB,IACG3qB,EAAAA,EAAAA,KAAA,OACIgB,UAAU,QACVmC,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACRoR,SAAU,WACVoJ,IAAK,EACLC,KAAM,EACNL,OAAQ,MAIpB1X,EAAAA,EAAAA,MAAA,OAAKP,UAAU,8BAA6Bd,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,QACHO,MAAM,QACNW,KAAK,OACLif,YAAY,qBACZ5X,KAAK,QACLqY,UAAU,EACVvgB,MAAO4P,EACP5E,MAAOghB,UAAqB,QAAPrC,EAAdqC,GAAgBpc,aAAK,IAAA+Z,OAAA,EAArBA,EAAwB,GAC/B1pB,SAAU,SAACoD,GAAC,OA/Jf,SAACA,EAAG6e,GACrB7e,EAAE6Q,iBAEFgO,EADY7e,EAAEgR,OAAOrU,MAEzB,CA2JyCmiB,CAAa9e,EAAGyd,EAAS,OAyClDzhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SACIgB,UAAS,2BACT,aAAW,OAAMd,SACpB,iBAGDF,EAAAA,EAAAA,KAAA,SACIgB,UAAS,8BACTuf,UAAQ,EACRQ,aAAc9iB,aAAI,EAAJA,EAAM+sB,wBAOhChrB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAE/gB,SAAA,CAAC,eACHF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,UAErCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,8BAA6Bd,UACxCF,EAAAA,EAAAA,KAACmmB,GAAU,CACPD,gBAAe,OAAAxoB,OAASkY,GACnBA,QACAE,OAAO,eACZkQ,QAASpQ,GACJA,MAAM3X,aAAI,EAAJA,EAAMgvB,YACZC,SACLjH,QACImF,GACAxV,GAAMA,MAAM3X,aAAI,EAAJA,EAAMkvB,UAAUD,SAEhCvX,KAAMuV,EACNpF,QAASqF,OAGhBwB,UAA0B,QAAZpC,EAAdoC,GAAgBM,kBAAU,IAAA1C,OAAA,EAA1BA,EAA6B,MAC1BvqB,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxBysB,UAA0B,QAAZnC,EAAdmC,GAAgBM,kBAAU,IAAAzC,OAAA,EAA1BA,EAA6B,WAM9CxqB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAE/gB,SAAA,CAAC,aACLF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,UAEnCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,8BAA6Bd,UACxCF,EAAAA,EAAAA,KAACmmB,GAAU,CACPD,gBAAe,OAAAxoB,OAASkY,GACnBA,QACAE,OAAO,eACZkQ,QACIkF,GACAtV,GAAMA,MAAM3X,aAAI,EAAJA,EAAMgvB,YAAYC,SAElCjH,QAASrQ,GACJA,MAAM3X,aAAI,EAAJA,EAAMkvB,UACZD,SACLvX,KAAMyV,EACNtF,QAASuF,OAGhBsB,UAAwB,QAAVlC,EAAdkC,GAAgBQ,gBAAQ,IAAA1C,OAAA,EAAxBA,EAA2B,MACxBzqB,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxBysB,UAAwB,QAAVjC,EAAdiC,GAAgBQ,gBAAQ,IAAAzC,OAAA,EAAxBA,EAA2B,WAM5C1qB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAACotB,GAAwB,CACrBrH,SAAUkC,EACVhB,SAAUwE,OAIlBzrB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAACqtB,GAAmB,CAChBtH,SAAU4F,EACV1E,SAAU2E,OAYlB5rB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAACstB,GAAiB,CACdvH,SAAU+C,EACVC,YAAakD,OA6CrBjsB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOihB,QAAQ,GAAE/gB,SAAC,mBAClBF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,8BACVmC,MAAO,CAAE4S,UAAW,SAAU7V,UAE9BF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CACd/Z,KAAMmsB,EACNlrB,SA7OL,SAACoD,EAAG0e,GAC3B,IAAM/iB,EAAO+iB,EAAOC,UACpBoJ,EAAepsB,EACnB,YAgPgBK,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBF,EAAAA,EAAAA,KAAC+iB,GAAAA,EAAiB,CACdyB,qBA1QC,SAACxgB,EAAGse,GAEzByK,GAAmBzK,aAAI,EAAJA,EAAMhiB,IAAIoN,SAG7B,IAAI2W,EAAYxhB,GAAOogB,GACnB3N,EAAQ+O,aAAY,EAAZA,EAAcC,QAAQhC,GAClC+B,EAAariB,OAAOsT,EAAO,GAC3B4N,EAAiBmB,EACrB,EAkQwBE,SAAUtB,EACV1B,MAAOA,EACPC,SAAUA,OAIlBxhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,mBAAkBd,UAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,gDAA+Cd,SAAA,EAC1DF,EAAAA,EAAAA,KAACwZ,GAAAA,EAAM,CACHiC,QAAQ,YACRza,UAAU,OACVwS,QAASsW,EAAQ5pB,SACpB,YAKDqB,EAAAA,EAAAA,MAACiY,GAAAA,EAAM,CACLhG,QA9UL,WAAM,IAAA+Z,EAxCrBC,EACExhB,EAEAyhB,EAaAC,EA0BGC,EAAa/X,GAAMA,MAAMsV,GAAWpV,OAAO,cAC3C8X,EAAWhY,GAAMA,MAAMwV,GAAStV,OAAO,cAEvCqM,EAAK,IAAIC,SACfD,EAAGE,OAAO,eAAgBpkB,aAAI,EAAJA,EAAM2sB,aAChCzI,EAAGE,OAAO,UAAWpkB,aAAI,EAAJA,EAAM4vB,cAC3B1L,EAAGE,OAAO,QAAS9R,GACnB4R,EAAGE,OAAO,aAAcsL,GACxBxL,EAAGE,OAAO,WAAYuL,GACtBzL,EAAGE,OAAO,aAAcpkB,aAAI,EAAJA,EAAM6uB,WAC9B3K,EAAGE,OAAO,mBAAoB4F,aAAY,EAAZA,EAAc3nB,IAC5C6hB,EAAGE,OAAO,UAAWsJ,aAAU,EAAVA,EAAYrrB,IACjC6hB,EAAGE,OAAO,cAAeyJ,GACzB3J,EAAGE,OAAO,kBAAmBpkB,aAAI,EAAJA,EAAM6vB,YAAYxtB,IAC/C6hB,EAAGE,OAAO,WAAYvgB,IAAAA,UAAYgnB,IAClC3G,EAAGE,OAAO,iBAAkB+J,GAC5BjK,EAAGE,OAAO,mBAAoBkK,GAC9BpK,EAAGE,OAAO,iBAA6C,QAA7BkL,EAAExC,aAAS,EAATA,EAAWgD,wBAAgB,IAAAR,EAAAA,EAAI,IAC3DpL,EAAGE,OAAO,YAAa,MACvBF,EAAGE,OAAO,aAAc,MACxBF,EAAGE,OAAO,YAAapkB,aAAI,EAAJA,EAAM+vB,WAC7B7L,EAAGE,OAAO,UAAW,OACrBF,EAAGE,OACC,SACArQ,SACKC,cAAc,2BACdC,aAAa,YAEtBpP,MAAM0J,KAAK+U,GAAO/a,SAAQ,SAAC8b,GACvBH,EAAGE,OAAO,SAAUC,EACxB,IAxECkL,EAAQ,EACNxhB,EAAM,IAAI9H,OAEVupB,EAAgB,CACpBQ,cAAe,0BACf/C,UAAW,8BACXE,QAAS,4BACTnD,aAAc,iCACd0D,WAAY,wBACZuC,eAAgB,SAACrlB,EAAMslB,GAAM,wCAAAzwB,OACOmL,EAAI,aAAAnL,OACzB,SAAXywB,EAAoB,MAAQ,OAAM,yCAEtCrC,YAAa,2BAGT4B,EAAY,SAACU,GACjBpiB,EAAIoiB,GAASX,EAAcW,GAC3BZ,GACF,EAGIjd,GAAOmd,EAAU,SACjBxC,GAAWwC,EAAU,aACrBtC,GAASsC,EAAU,WACnBzF,GAAcyF,EAAU,gBACxB/B,GAAY+B,EAAU,cAEtB/B,SAAcA,GAAAA,EAAYjD,eAC5B1c,EAAI2f,WAAauC,eAAevC,EAAW9iB,KAAMwlB,eACjDb,KAGE1B,GAAa4B,EAAU,eAE3BhB,EAAS/gB,GACQ,IAAV6hB,EAuCJrD,EAAShI,GAETnS,GAAAA,GAAMqa,KAAK,uCAGhB,EAuS0BxqB,UAAWA,EAAUK,SAAA,EAEnBF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,8BAAgC,wBAU7E,EC3JA,SA3VgB,SAAHrD,GAA6B,IAAAoP,EAAAuhB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3rB,EAAA4rB,EAAAC,EAAvBlxB,EAAIN,EAAJM,KAAM2B,EAAUjC,EAAViC,WACfkX,EAAa,IAAIhK,EAAAA,EAAW,QAAPC,EAACC,cAAM,IAAAD,GAAS,QAATA,EAANA,EAAQE,eAAO,IAAAF,OAAA,EAAfA,EAAiB1K,MAE7C,OACId,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAKd,SAAA,CACfN,GACGI,EAAAA,EAAAA,KAACovB,EAAa,KAEdpvB,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,+BAA8Bd,UACzCqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,qBACVmC,MAAO,CAAEkT,IAAK,QAASnW,SAAA,EAEvBqB,EAAAA,EAAAA,MAAA,MAAIP,UAAU,GAAEd,SAAA,CAAC,QACP,KACNF,EAAAA,EAAAA,KAAA,KACIgV,OAAO,UACPJ,KAAI,kBAAAlX,OAAoBO,aAAI,EAAJA,EAAMqC,IAC9BU,UAAU,kCAAiCd,SAE1CjC,aAAI,EAAJA,EAAMoxB,wBAGdpxB,aAAI,EAAJA,EAAMqxB,aACH/tB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wBAAuBd,SAAC,mBAGvCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,UACnCF,EAAAA,EAAAA,KAAA,KACI4U,KAAI,kBAAAlX,OAAoBO,aAAI,EAAJA,EAAM4vB,cAC9B7sB,UAAU,iCAAgCd,SAEzCjC,aAAI,EAAJA,EAAM+sB,wBA6BvBzpB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,gBACrB,QAElBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,yBAAwBd,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OACImD,MAAO,CACHjE,MAAO,OACPL,OAAQ,QACVqB,UAEFF,EAAAA,EAAAA,KAAA,OACIuC,IAAKtE,SAAgB,QAAZqwB,EAAJrwB,EAAMkZ,kBAAU,IAAAmX,OAAA,EAAhBA,EAAkB7J,YACvBjiB,IAAKvE,SAAgB,QAAZswB,EAAJtwB,EAAMkZ,kBAAU,IAAAoX,OAAA,EAAhBA,EAAkB7J,UACvBxlB,MAAM,OACNL,OAAO,OACPmC,UAAU,sBAGlBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBqB,EAAAA,EAAAA,MAAA,QACIP,UAAS,gCAAkCd,SAAA,EAE3CF,EAAAA,EAAAA,KAAA,KACI4U,KAAM3W,SAAgB,QAAZuwB,EAAJvwB,EAAMkZ,kBAAU,IAAAqX,OAAA,EAAhBA,EAAkBe,cACxBvuB,UAAU,4BAA2Bd,SAEpCjC,SAAgB,QAAZwwB,EAAJxwB,EAAMkZ,kBAAU,IAAAsX,OAAA,EAAhBA,EAAkB/J,YAEtBxZ,OACGjN,SAAgB,QAAZywB,EAAJzwB,EAAMkZ,kBAAU,IAAAuX,OAAA,EAAhBA,EAAkB/X,WAElBzL,OAAO4L,aAAU,EAAVA,EAAYH,WACnBpV,EAAAA,EAAAA,MAAA,OACIP,UAAU,uCACVmC,MAAO,CAAEuY,SAAU,QAASxb,SAAA,CAE3B,IAAI,WACI,WAKrBF,EAAAA,EAAAA,KAAA,QAAMmD,MAAO,CAAEuY,SAAU,QAASxb,SAC7BjC,SAAgB,QAAZ0wB,EAAJ1wB,EAAMkZ,kBAAU,IAAAwX,OAAA,EAAhBA,EAAkBhK,iCAOnCpjB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,eACtB,QAEjBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,yBAAwBd,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OACImD,MAAO,CACHjE,MAAO,OACPL,OAAQ,QACVqB,UAEFF,EAAAA,EAAAA,KAAA,OACIuC,IAAKtE,SAAgB,QAAZ2wB,EAAJ3wB,EAAMwZ,kBAAU,IAAAmX,OAAA,EAAhBA,EAAkBnK,YACvBjiB,IAAKvE,SAAgB,QAAZ4wB,EAAJ5wB,EAAMwZ,kBAAU,IAAAoX,OAAA,EAAhBA,EAAkBnK,UACvBxlB,MAAM,OACNL,OAAO,OACPmC,UAAU,sBAGlBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBqB,EAAAA,EAAAA,MAAA,QACIP,UAAS,gCAAkCd,SAAA,EAE3CF,EAAAA,EAAAA,KAAA,KACI4U,KAAM3W,SAAgB,QAAZ6wB,EAAJ7wB,EAAMwZ,kBAAU,IAAAqX,OAAA,EAAhBA,EAAkBS,cACxBvuB,UAAU,4BAA2Bd,SAEpCjC,SAAgB,QAAZ8wB,EAAJ9wB,EAAMwZ,kBAAU,IAAAsX,OAAA,EAAhBA,EAAkBrK,YAEtBxZ,OACGjN,SAAgB,QAAZ+wB,EAAJ/wB,EAAMwZ,kBAAU,IAAAuX,OAAA,EAAhBA,EAAkBrY,WAElBzL,OAAO4L,aAAU,EAAVA,EAAYH,WACnB3W,EAAAA,EAAAA,KAAA,OACIgB,UAAU,uCACVmC,MAAO,CAAEuY,SAAU,QAASxb,SAC/B,iBAMTF,EAAAA,EAAAA,KAAA,QAAMmD,MAAO,CAAEuY,SAAU,QAASxb,SAC7BjC,SAAgB,QAAZgxB,EAAJhxB,EAAMwZ,kBAAU,IAAAwX,OAAA,EAAhBA,EAAkBtK,iCAQnCpjB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,aACxB,QAEfqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,yBAAwBd,SAAA,EACnCF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,iBACVmC,MAAO,CACH4R,WAAY,0BAGnB9W,aAAI,EAAJA,EAAM6qB,gBAKfvnB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,kBACnB,QAEpBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,SAClCjC,SAAc,QAAVqF,EAAJrF,EAAMuF,gBAAQ,IAAAF,OAAA,EAAdA,EAAgBuF,kBAQzCtH,EAAAA,EAAAA,MAAA,OACIP,UAAU,+CACVmC,MAAO,CAAEkT,IAAK,OAAQtB,WAAY,WAAY7U,SAAA,EAE9CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2BAA0Bd,SAAC,cAEzCN,GACGI,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,UAEnBqC,EAAAA,EAAAA,MAAA,OACIP,UAAU,4BACVmC,MAAO,CAAEkT,IAAK,OAAQnW,SAAA,EAEtBF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,iBACVmC,MAAO,CACH4R,WAAY9W,SAAiB,QAAbixB,EAAJjxB,EAAM6vB,mBAAW,IAAAoB,OAAA,EAAjBA,EAAmBM,eAGvCxvB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,mBAAkBd,SAC7BjC,aAAI,EAAJA,EAAM6vB,YAAY2B,iBAK/BluB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAKd,SAAA,EAChBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mCAAkCd,SAAA,CAAC,aACnC,QAEfqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mCAAkCd,SAAA,CAAC,IAC5C,IACDN,GACGI,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,SAEnBjB,aAAI,EAAJA,EAAMyxB,aAAa,uBAK/BnuB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAKd,SAAA,EAChBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mCAAkCd,SAAA,CAAC,WACrC,QAEbqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mCAAkCd,SAAA,CAAC,IAC5C,IACDN,GACGI,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,SAEnBjB,aAAI,EAAJA,EAAM0xB,WAAW,uBAe7BpuB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAKd,SAAA,EAChBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mCAAkCd,SAAA,CAAC,qBAC3B,QAEvBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mCAAkCd,SAAA,CAAC,IAC5C,IACDN,GACGI,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,UAEnBjB,aAAI,EAAJA,EAAM2xB,oBAAqB,eAiC3CruB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,8BAA6Bd,SAAA,CASvC4B,EAAE+tB,KAAK5xB,aAAI,EAAJA,EAAMoQ,WAAa,IACvB9M,EAAAA,EAAAA,MAACuuB,EAAS,CACNvf,MAA8B,QAAzB4e,EAAErtB,EAAEiuB,KAAK9xB,aAAI,EAAJA,EAAMoQ,kBAAU,IAAA8gB,OAAA,EAAvBA,EAAyBa,eAChC/c,aAAa,oDACbC,aAAc,CACV6B,WAAY,oBACZ3R,MAAO,QACTlD,SAAA,CAEDuO,QAAQC,IACL,0BACAzQ,aAAI,EAAJA,EAAMoQ,WAGTvM,EAAEiB,IAAI9E,aAAI,EAAJA,EAAMoQ,WAAW,SAACzK,EAAU0R,GAAK,OACpCtV,EAAAA,EAAAA,KAACiwB,EAAY,CAET3a,MAAOA,EAAQ,EACfK,KAAMC,IAAMhS,EAASiS,WAAWC,OAC5B,gBAEJ1Y,KAAMwY,IAAMhS,EAASiS,WAAWC,OAC5B,WAEJ9B,KAAMpQ,aAAQ,EAARA,EAAUvD,QAChBuD,SAAUA,GATLA,EAAStD,GAUhB,QAKdN,EAAAA,EAAAA,KAAC8vB,EAAS,CAAC9c,YAAY,EAAOzC,MAAM,oBAAmBrQ,UACnDF,EAAAA,EAAAA,KAACkwB,EAAS,CAAClc,KAAM/V,aAAI,EAAJA,EAAM6tB,qBAK3C,ECjWA,IAAMqE,IAAoBpR,EAAAA,EAAAA,OAAK,kBAAM,6BAA6B,IAqBlE,SAnBsB,SAAHphB,GAAuC,IAAlCM,EAAIN,EAAJM,KAAMmyB,EAAazyB,EAAbyyB,cAAe7vB,EAAO5C,EAAP4C,QAC3C,OACEgB,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,mBAAkBd,SAAC,oBACjCqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,2BAA2BmC,MAAO,CAACkT,IAAI,QAAQnW,SAAA,CAEzDK,IAAWP,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,UAACF,EAAAA,EAAAA,KAAC4nB,GAAM,MACxCwI,EAAc3nB,OAAS,EAAI2nB,EAAcrtB,KAAI,SAAC8C,GAAC,OAC5C7F,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXF,EAAAA,EAAAA,KAACkgB,EAAAA,SAAQ,CAACjB,UAAUjf,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,UAACF,EAAAA,EAAAA,KAAC4nB,GAAM,MAAU1nB,UACvDF,EAAAA,EAAAA,KAACmwB,GAAiB,CAACxwB,KAAMkG,EAAG5H,KAAMA,OAFrB4H,aAAC,EAADA,EAAGgM,QAIP,IACjB,UAIhB,ECoBA,SArCyB,SAAHlU,GAAUA,EAAJM,KAA+B,IAAzBoyB,EAAO1yB,EAAP0yB,QAASxwB,EAASlC,EAATkC,UAGvC,OACI0B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,yBAAwBd,SAAA,EACnCqB,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EAAKF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBAAmB,QAC5BqB,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOgB,UAAU,sBAAqBd,UAC9BF,EAAAA,EAAAA,KAAA,SAAOgB,UAAU,UAASd,UACtBqB,EAAAA,EAAAA,MAAA,MAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yBAKpBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,uCAAsCd,UACjDF,EAAAA,EAAAA,KAAA,SAAOgB,UAAU,sBAAqBd,UAClCqB,EAAAA,EAAAA,MAAA,SAAOP,UAAU,UAASd,SAAA,CACrBmwB,EACKA,EAAQttB,KAAI,SAAC2L,GAAG,OACd1O,EAAAA,EAAAA,KAACswB,GAAQ,CAAc5hB,IAAKA,GAAbA,EAAIpO,GAAgB,IAErC,KAELT,IAAaG,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,mBAAmBuvB,QAAS,EAAErwB,UAACF,EAAAA,EAAAA,KAAC4nB,GAAM,oBAOlG,EAIA,IAAM0I,GAAW,SAAHrhB,GAAgB,IAAVP,EAAGO,EAAHP,IACV2hB,EAAU,IAAIG,EAAAA,GAAQ9hB,GACtBrM,EAAOguB,aAAO,EAAPA,EAAShuB,KAGtB,OACId,EAAAA,EAAAA,MAAA,MAAIP,UAAU,aAAYd,SAAA,EACtBqB,EAAAA,EAAAA,MAAA,MAAIP,UAAU,gCAA+Bd,SAAA,EACzCF,EAAAA,EAAAA,KAAA,OAAKuC,IAAKF,aAAI,EAAJA,EAAMoiB,YAAajiB,IAAKH,aAAI,EAAJA,EAAMqiB,aACxC1kB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,OAAMd,SAAEmC,aAAI,EAAJA,EAAMqiB,gBAElCnjB,EAAAA,EAAAA,MAAA,MAAIP,UAAU,kCAAiCd,SAAA,CAC1CmwB,aAAO,EAAPA,EAASI,eAAe,KAACzwB,EAAAA,EAAAA,KAAA,SACzBqwB,aAAO,EAAPA,EAASI,aAAa,eAG3BzwB,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,sDAAqDd,SAC7DmwB,SAAAA,EAASK,SACPnvB,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,CACKmwB,aAAO,EAAPA,EAASM,aAAa,KAAC3wB,EAAAA,EAAAA,KAAA,SACvBqwB,aAAO,EAAPA,EAASM,WAAW,eAHR3wB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gCAA+Bd,SAAC,cAQzEF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,4BAA2Bd,SAAEmwB,aAAO,EAAPA,EAASO,QACpD5wB,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,mCAAkCd,SAAEmwB,aAAO,EAAPA,EAASQ,gBAGvE,ECfA,SArDmB,SAAHlzB,GAA4B,IAAvBmzB,EAAMnzB,EAANmzB,OAAQjxB,EAASlC,EAATkC,UACnBF,EAAOmxB,EACTzwB,GAAUV,aAAI,EAAJA,EAAMU,UAAO,6EAE3B,OACIkB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,2BAA2BmC,MAAO,CAACqiB,UAAU,SAAStlB,SAAA,EAEnEF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,6FAA4Fd,UACvGF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,OAAMd,SAAC,kBAG1BL,GAAYG,EAAAA,EAAAA,KAAC4nB,GAAM,KAAKrmB,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EAEtCqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAGmC,MAAO,CAACjE,MAAO,SAASgB,SAAC,sBAC3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UACtCF,EAAAA,EAAAA,KAACylB,GAAAA,EAAM,CAAC/iB,OAAQwI,OAAOvL,aAAI,EAAJA,EAAM+lB,uBAIrCnkB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAGmC,MAAO,CAACjE,MAAO,SAASgB,SAAC,0BAC3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UACtCF,EAAAA,EAAAA,KAACylB,GAAAA,EAAM,CAAC/iB,OAAQwI,OAAOvL,aAAI,EAAJA,EAAMgmB,4BAIrCpkB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAGmC,MAAO,CAACjE,MAAO,SAASgB,SAAC,yBAC3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UAC1CF,EAAAA,EAAAA,KAACylB,GAAAA,EAAM,CAAC/iB,OAAQwI,OAAOvL,aAAI,EAAJA,EAAMimB,0BAIjCrkB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAGmC,MAAO,CAACjE,MAAO,SAASgB,SAAC,4BAC3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UACtCF,EAAAA,EAAAA,KAACylB,GAAAA,EAAM,CAAC/iB,OAAQwI,OAAOvL,aAAI,EAAJA,EAAMoxB,uBAIrCxvB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gCAA+Bd,SAAC,eAChDF,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAACC,MAAM,OAAQsY,SAAU,QAAQxb,UACzCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,iBAAiB0T,wBAAyB,CAACC,OAAQtU,eAOtF,kwCCpCA,SAhBsB,SAACmmB,GAAK,OACxBjlB,EAAAA,EAAAA,MAACyvB,GAAAA,GAAa5mB,GAAAA,GAAA,CACV6mB,MAAO,EACP/xB,MAAO,IACPL,OAAQ,GACR+nB,QAAQ,aACRsK,gBAAgB,UAChBC,gBAAgB,WACZ3K,GAAK,IAAAtmB,SAAA,EAETF,EAAAA,EAAAA,KAAA,QAAMoxB,EAAE,IAAItrB,EAAE,IAAIurB,GAAG,IAAIC,GAAG,IAAIpyB,MAAM,KAAKL,OAAO,QAClDmB,EAAAA,EAAAA,KAAA,QAAMoxB,EAAE,KAAKtrB,EAAE,KAAKurB,GAAG,IAAIC,GAAG,IAAIpyB,MAAM,MAAML,OAAO,QACrDmB,EAAAA,EAAAA,KAAA,QAAMoxB,EAAE,KAAKtrB,EAAE,IAAIurB,GAAG,IAAIC,GAAG,IAAIpyB,MAAM,MAAML,OAAO,UACxC,ECbpB,IAAMigB,IAAmBC,EAAAA,EAAAA,OAAK,kBAAK,8BAAwC,IAoB3E,SAlBgB,SAAHphB,GAA+B,IAA1B8hB,EAAS9hB,EAAT8hB,UAAW5f,EAASlC,EAATkC,UAC3B,OACE0B,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,mBAAkBd,SAAC,iBACjCqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,YAAWd,SAAA,CACvBuf,EAAUhX,OAAS,EAAIgX,EAAU1c,KAAI,SAAAmD,GAAC,OACpClG,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACbF,EAAAA,EAAAA,KAACkgB,EAAAA,SAAQ,CAACjB,UAAUjf,EAAAA,EAAAA,KAACuxB,GAAa,IAAIrxB,UACnCF,EAAAA,EAAAA,KAAC8e,GAAgB,CAACK,QAASjZ,OAFXA,EAAE5F,GAIN,IACjB,KACFT,IAAaG,EAAAA,EAAAA,KAAC4nB,GAAM,SAI/B,moBCpBA7jB,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAhB,EAAAkB,OAAAC,UAAAC,EAAApB,EAAAqB,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAN,EAAAD,EAAAhB,GAAAiB,EAAAD,GAAAhB,EAAArC,KAAA,EAAA2B,EAAA,mBAAAkC,OAAAA,OAAA,GAAAC,EAAAnC,EAAAoC,UAAA,aAAAC,EAAArC,EAAAsC,eAAA,kBAAAC,EAAAvC,EAAAwC,aAAA,yBAAAC,EAAAd,EAAAD,EAAAhB,GAAA,OAAAkB,OAAAK,eAAAN,EAAAD,EAAA,CAAArD,MAAAqC,EAAAgC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,EAAA,KAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAhB,GAAA,OAAAiB,EAAAD,GAAAhB,CAAA,WAAAmC,EAAAlB,EAAAD,EAAAhB,EAAAoB,GAAA,IAAA9B,EAAA0B,GAAAA,EAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAA/C,EAAA6B,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAE,EAAAG,EAAA,WAAA9D,MAAA4E,EAAAtB,EAAAjB,EAAA2B,KAAAF,CAAA,UAAAe,EAAAvB,EAAAD,EAAAhB,GAAA,WAAAxB,KAAA,SAAAiE,IAAAxB,EAAAyB,KAAA1B,EAAAhB,GAAA,OAAAiB,GAAA,OAAAzC,KAAA,QAAAiE,IAAAxB,EAAA,EAAAD,EAAAmB,KAAAA,EAAA,IAAA1H,EAAA,iBAAAkI,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAApD,GAAAoB,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAM,EAAAtC,GAAA,0BAAAuC,SAAA,SAAAxC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAwC,QAAAzC,EAAAC,EAAA,gBAAAyC,EAAAzC,EAAAD,GAAA,SAAA2C,EAAA3D,EAAAsB,EAAAhC,EAAAmC,GAAA,IAAAE,EAAAa,EAAAvB,EAAAjB,GAAAiB,EAAAK,GAAA,aAAAK,EAAAnD,KAAA,KAAAqD,EAAAF,EAAAc,IAAAhI,EAAAoH,EAAAlE,MAAA,OAAAlD,GAAA,UAAAmJ,GAAAnJ,IAAA2G,EAAAsB,KAAAjI,EAAA,WAAAuG,EAAA6C,QAAApJ,EAAAqJ,SAAAC,MAAA,SAAA9C,GAAA0C,EAAA,OAAA1C,EAAA3B,EAAAmC,EAAA,aAAAR,GAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAT,EAAA6C,QAAApJ,GAAAsJ,MAAA,SAAA9C,GAAAY,EAAAlE,MAAAsD,EAAA3B,EAAAuC,EAAA,aAAAZ,GAAA,OAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAAzC,EAAAsB,EAAA,gBAAA3D,MAAA,SAAAsD,EAAAG,GAAA,SAAA4C,IAAA,WAAAhD,GAAA,SAAAA,EAAAhB,GAAA2D,EAAA1C,EAAAG,EAAAJ,EAAAhB,EAAA,WAAAA,EAAAA,EAAAA,EAAA+D,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAvB,EAAAhB,EAAAoB,GAAA,IAAAE,EAAA7G,EAAA,gBAAA6E,EAAAmC,GAAA,GAAAH,IAAAsB,EAAA,UAAAqB,MAAA,mCAAA3C,IAAAuB,EAAA,cAAAvD,EAAA,MAAAmC,EAAA,OAAA9D,MAAAsD,EAAAiD,MAAA,OAAA9C,EAAA+C,OAAA7E,EAAA8B,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAAgD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAT,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAA7G,EAAA,MAAA6G,EAAAuB,EAAAzB,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAsB,EAAA,IAAAK,EAAAT,EAAAxB,EAAAhB,EAAAoB,GAAA,cAAA6B,EAAAzE,KAAA,IAAA8C,EAAAF,EAAA8C,KAAArB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAnF,MAAAsF,EAAAR,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAjB,EAAAzE,OAAA8C,EAAAuB,EAAAzB,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAQ,EAAAR,IAAA,YAAA4B,EAAArD,EAAAhB,GAAA,IAAAoB,EAAApB,EAAAmE,OAAA7C,EAAAN,EAAAU,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAjB,EAAAoE,SAAA,eAAAhD,GAAAJ,EAAAU,SAAA,SAAA1B,EAAAmE,OAAA,SAAAnE,EAAAyC,IAAAxB,EAAAoD,EAAArD,EAAAhB,GAAA,UAAAA,EAAAmE,SAAA,WAAA/C,IAAApB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA0B,EAAA,IAAAxD,EAAAkD,EAAAlB,EAAAN,EAAAU,SAAA1B,EAAAyC,KAAA,aAAAnD,EAAAd,KAAA,OAAAwB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAAnD,EAAAmD,IAAAzC,EAAAoE,SAAA,KAAAtB,EAAA,IAAArB,EAAAnC,EAAAmD,IAAA,OAAAhB,EAAAA,EAAAyC,MAAAlE,EAAAgB,EAAA2D,YAAAlD,EAAA9D,MAAAqC,EAAA4E,KAAA5D,EAAA6D,QAAA,WAAA7E,EAAAmE,SAAAnE,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,GAAAjB,EAAAoE,SAAA,KAAAtB,GAAArB,GAAAzB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAA1E,EAAAoE,SAAA,KAAAtB,EAAA,UAAAgC,EAAA7D,GAAA,IAAAD,EAAA,CAAA+D,OAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,SAAA/D,EAAA,SAAAA,IAAAD,EAAAiE,WAAAhE,EAAA,GAAAD,EAAAkE,SAAAjE,EAAA,SAAAkE,WAAAC,KAAApE,EAAA,UAAAqE,EAAApE,GAAA,IAAAD,EAAAC,EAAAqE,YAAA,GAAAtE,EAAAxC,KAAA,gBAAAwC,EAAAyB,IAAAxB,EAAAqE,WAAAtE,CAAA,UAAAsB,EAAArB,GAAA,KAAAkE,WAAA,EAAAJ,OAAA,SAAA9D,EAAAuC,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAhB,EAAAgB,EAAAS,GAAA,GAAAzB,EAAA,OAAAA,EAAA0C,KAAA1B,GAAA,sBAAAA,EAAA4D,KAAA,OAAA5D,EAAA,IAAAwE,MAAAxE,EAAAyE,QAAA,KAAAnE,GAAA,EAAAhC,EAAA,SAAAsF,IAAA,OAAAtD,EAAAN,EAAAyE,QAAA,GAAArE,EAAAsB,KAAA1B,EAAAM,GAAA,OAAAsD,EAAAjH,MAAAqD,EAAAM,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,SAAAtF,EAAAsF,KAAAtF,CAAA,YAAAoF,UAAAd,GAAA5C,GAAA,2BAAA+B,EAAA5B,UAAA6B,EAAA1B,EAAAgC,EAAA,eAAA3F,MAAAqF,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAArF,MAAAoF,EAAAd,cAAA,IAAAc,EAAA2C,YAAA3D,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAA2E,oBAAA,SAAA1E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA2E,YAAA,QAAA5E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAA0E,aAAA1E,EAAA6E,MAAA,EAAA7E,EAAA8E,KAAA,SAAA7E,GAAA,OAAAC,OAAA6E,eAAA7E,OAAA6E,eAAA9E,EAAA+B,IAAA/B,EAAA+E,UAAAhD,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAiB,GAAArC,CAAA,EAAAD,EAAAiF,MAAA,SAAAhF,GAAA,OAAA6C,QAAA7C,EAAA,EAAAsC,EAAAG,EAAAvC,WAAAY,EAAA2B,EAAAvC,UAAAQ,GAAA,0BAAAX,EAAA0C,cAAAA,EAAA1C,EAAAkF,MAAA,SAAAjF,EAAAjB,EAAAoB,EAAAE,EAAAhC,QAAA,IAAAA,IAAAA,EAAA6G,SAAA,IAAA1E,EAAA,IAAAiC,EAAAvB,EAAAlB,EAAAjB,EAAAoB,EAAAE,GAAAhC,GAAA,OAAA0B,EAAA2E,oBAAA3F,GAAAyB,EAAAA,EAAAmD,OAAAb,MAAA,SAAA9C,GAAA,OAAAA,EAAAiD,KAAAjD,EAAAtD,MAAA8D,EAAAmD,MAAA,KAAArB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAAtC,EAAAoF,KAAA,SAAAnF,GAAA,IAAAD,EAAAE,OAAAD,GAAAjB,EAAA,WAAAoB,KAAAJ,EAAAhB,EAAAoF,KAAAhE,GAAA,OAAApB,EAAAqG,UAAA,SAAAzB,IAAA,KAAA5E,EAAAyF,QAAA,KAAAxE,EAAAjB,EAAAsG,MAAA,GAAArF,KAAAD,EAAA,OAAA4D,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA5D,EAAAqC,OAAAA,EAAAf,EAAAnB,UAAA,CAAAyE,YAAAtD,EAAAiD,MAAA,SAAAvE,GAAA,QAAAuF,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAAtD,EAAA,KAAAiD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAxB,EAAA,KAAAkE,WAAA3B,QAAA6B,IAAArE,EAAA,QAAAhB,KAAA,WAAAA,EAAAwG,OAAA,IAAApF,EAAAsB,KAAA,KAAA1C,KAAAwF,OAAAxF,EAAAyG,MAAA,WAAAzG,GAAAiB,EAAA,EAAAyF,KAAA,gBAAAxC,MAAA,MAAAjD,EAAA,KAAAkE,WAAA,GAAAG,WAAA,aAAArE,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,YAAAkE,IAAA,EAAAnC,kBAAA,SAAAxD,GAAA,QAAAkD,KAAA,MAAAlD,EAAA,IAAAhB,EAAA,cAAA4G,EAAAxF,EAAAE,GAAA,OAAAG,EAAAjD,KAAA,QAAAiD,EAAAgB,IAAAzB,EAAAhB,EAAA4E,KAAAxD,EAAAE,IAAAtB,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,KAAAK,CAAA,SAAAA,EAAA,KAAA6D,WAAAM,OAAA,EAAAnE,GAAA,IAAAA,EAAA,KAAAhC,EAAA,KAAA6F,WAAA7D,GAAAG,EAAAnC,EAAAgG,WAAA,YAAAhG,EAAAyF,OAAA,OAAA6B,EAAA,UAAAtH,EAAAyF,QAAA,KAAAwB,KAAA,KAAA5E,EAAAP,EAAAsB,KAAApD,EAAA,YAAAuC,EAAAT,EAAAsB,KAAApD,EAAA,iBAAAqC,GAAAE,EAAA,SAAA0E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,WAAAuB,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,SAAAtD,GAAA,QAAA4E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,YAAAnD,EAAA,UAAAoC,MAAA,kDAAAsC,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,KAAAR,OAAA,SAAAxD,EAAAD,GAAA,QAAAhB,EAAA,KAAAmF,WAAAM,OAAA,EAAAzF,GAAA,IAAAA,EAAA,KAAAsB,EAAA,KAAA6D,WAAAnF,GAAA,GAAAsB,EAAAyD,QAAA,KAAAwB,MAAAnF,EAAAsB,KAAApB,EAAA,oBAAAiF,KAAAjF,EAAA2D,WAAA,KAAA3F,EAAAgC,EAAA,OAAAhC,IAAA,UAAA2B,GAAA,aAAAA,IAAA3B,EAAAyF,QAAA/D,GAAAA,GAAA1B,EAAA2F,aAAA3F,EAAA,UAAAmC,EAAAnC,EAAAA,EAAAgG,WAAA,UAAA7D,EAAAjD,KAAAyC,EAAAQ,EAAAgB,IAAAzB,EAAA1B,GAAA,KAAA6E,OAAA,YAAAS,KAAAtF,EAAA2F,WAAAnC,GAAA,KAAA+D,SAAApF,EAAA,EAAAoF,SAAA,SAAA5F,EAAAD,GAAA,aAAAC,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,gBAAAxB,EAAAzC,MAAA,aAAAyC,EAAAzC,KAAA,KAAAoG,KAAA3D,EAAAwB,IAAA,WAAAxB,EAAAzC,MAAA,KAAAmI,KAAA,KAAAlE,IAAAxB,EAAAwB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA3D,EAAAzC,MAAAwC,IAAA,KAAA4D,KAAA5D,GAAA8B,CAAA,EAAAgE,OAAA,SAAA7F,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAAiF,aAAAhE,EAAA,YAAA4F,SAAA7G,EAAAsF,WAAAtF,EAAAkF,UAAAG,EAAArF,GAAA8C,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAA+E,SAAA9D,EAAA,KAAAG,EAAApB,EAAAsF,WAAA,aAAAlE,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAqB,IAAA4C,EAAArF,EAAA,QAAAsB,CAAA,YAAA2C,MAAA,0BAAA8C,cAAA,SAAA/F,EAAAhB,EAAAoB,GAAA,YAAAgD,SAAA,CAAA1C,SAAA2B,EAAArC,GAAA2D,WAAA3E,EAAA6E,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAxB,GAAA6B,CAAA,GAAA9B,CAAA,UAAAqH,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAAf,EAAAjF,GAAA,QAAAiG,EAAAJ,EAAAZ,GAAAjF,GAAA9E,EAAA+K,EAAA/K,KAAA,OAAAgL,GAAA,YAAAJ,EAAAI,EAAA,CAAAD,EAAAxE,KAAAL,EAAAlG,GAAAwI,QAAAtC,QAAAlG,GAAAoG,KAAAyE,EAAAC,EAAA,UAAAG,GAAAC,GAAA,sBAAAC,EAAA,KAAAC,EAAA1B,UAAA,WAAAlB,SAAA,SAAAtC,EAAA0E,GAAA,IAAAD,EAAAO,EAAA1B,MAAA2B,EAAAC,GAAA,SAAAP,EAAA7K,GAAA0K,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,OAAA9K,EAAA,UAAA8K,EAAAO,GAAAX,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,QAAAO,EAAA,CAAAR,OAAAT,EAAA,cAAA1L,GAAA4M,EAAA3J,GAAA,gBAAA2J,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAA,CAAA,CAAAE,CAAAF,IAAA,SAAAjJ,EAAA2C,GAAA,IAAA1B,EAAA,MAAAjB,EAAA,yBAAAwB,QAAAxB,EAAAwB,OAAAE,WAAA1B,EAAA,uBAAAiB,EAAA,KAAAD,EAAAI,EAAA9B,EAAAuC,EAAAJ,EAAA,GAAAmB,GAAA,EAAAtB,GAAA,SAAAhC,GAAA2B,EAAAA,EAAAyB,KAAA1C,IAAA4E,KAAA,IAAAjC,EAAA,IAAAzB,OAAAD,KAAAA,EAAA,OAAA2B,GAAA,cAAAA,GAAA5B,EAAA1B,EAAAoD,KAAAzB,IAAAiD,QAAAzC,EAAA2D,KAAApE,EAAArD,OAAA8D,EAAAgE,SAAA9C,GAAAC,GAAA,UAAA5C,GAAAsB,GAAA,EAAAF,EAAApB,CAAA,iBAAA4C,GAAA,MAAA3B,EAAA,SAAAY,EAAAZ,EAAA,SAAAC,OAAAW,KAAAA,GAAA,kBAAAP,EAAA,MAAAF,CAAA,SAAAK,CAAA,EAAA2H,CAAAH,EAAA3J,IAAAoK,GAAAT,EAAA3J,IAAA,qBAAAoF,UAAA,6IAAAiF,EAAA,UAAAD,GAAApI,EAAA+H,GAAA,GAAA/H,EAAA,qBAAAA,EAAA,OAAAgI,GAAAhI,EAAA+H,GAAA,IAAAjI,EAAAF,OAAAC,UAAAoI,SAAA7G,KAAApB,GAAAmF,MAAA,uBAAArF,GAAAE,EAAAsE,cAAAxE,EAAAE,EAAAsE,YAAAC,MAAA,QAAAzE,GAAA,QAAAA,EAAAtB,MAAA0J,KAAAlI,GAAA,cAAAF,GAAA,2CAAAqI,KAAArI,GAAAkI,GAAAhI,EAAA+H,QAAA,YAAAC,GAAAL,EAAApK,IAAA,MAAAA,GAAAA,EAAAoK,EAAAxD,UAAA5G,EAAAoK,EAAAxD,QAAA,QAAAnG,EAAA,EAAAsK,EAAA,IAAA9J,MAAAjB,GAAAS,EAAAT,EAAAS,IAAAsK,EAAAtK,GAAA2J,EAAA3J,GAAA,OAAAsK,CAAA,CA4TA,SA1SuB,SAAHjP,GAAgBA,EAAV6zB,WAA0B,IAAdpd,EAAOzW,EAAPyW,QACUjB,EAAA9T,GAApB+T,EAAAA,SAAe,MAAK,GAArCnV,EAAIkV,EAAA,GAAEse,EAAOte,EAAA,GACdue,EAAStd,aAAO,EAAPA,EAAS9T,GACoCua,EAAAxb,GAAlB+T,EAAAA,SAAe,IAAG,GAArDgd,EAAavV,EAAA,GAAE8W,EAAgB9W,EAAA,GACUG,EAAA3b,GAAlB+T,EAAAA,SAAe,IAAG,GAAzCid,EAAOrV,EAAA,GAAE4W,EAAU5W,EAAA,GACsB4G,EAAAviB,GAApB+T,EAAAA,SAAe,MAAK,GAAzC0d,EAAMlP,EAAA,GAAEiQ,EAASjQ,EAAA,GAC4BoB,EAAA3jB,GAAlB+T,EAAAA,SAAe,IAAG,GAA7CqM,EAASuD,EAAA,GAAE8O,EAAY9O,EAAA,GACoB+O,EAAA1yB,GAAlB+T,EAAAA,SAAe,IAAG,GACa4e,GADhDD,EAAA,GAAaA,EAAA,GACmC1yB,GAArB+T,EAAAA,UAAe,GAAM,IAAxD6e,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEtCG,GAKItlB,EAAAA,GAAAA,KAJAS,EAAW6kB,EAAX7kB,YACA0B,EAAiBmjB,EAAjBnjB,kBACA3B,EAAqB8kB,EAArB9kB,sBACA0B,EAAwBojB,EAAxBpjB,yBAI4B7B,EAAA7N,IAA5B8N,EAAAA,EAAAA,MAA4B,GADzBC,EAAcF,EAAA,GAAgBklB,EAA0BllB,EAAA,GAAtCtN,WAGzBH,GAKIC,EAAAA,GAAAA,IAAoB0U,aAAO,EAAPA,EAAS9T,IAJvB+xB,EAAe5yB,EAArBE,KACY2yB,EAAgB7yB,EAA5BG,WACW2yB,EAAe9yB,EAA1BI,UACS2yB,EAAe/yB,EAAxBK,QAIJsT,EAAAA,WAAgB,WACZxH,GAAA7H,KAAA+E,MAAC,SAAAyE,IAAA,IAAAtP,EAAA,OAAA8F,KAAAoB,MAAA,SAAAsI,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA7F,MAAA,cAAA6F,EAAA7F,KAAA,EACoB0F,EAAYokB,GAAO,OAAhCzzB,EAAIwP,EAAAnG,KACRrJ,EAAO,IAAIw0B,EAAAA,GAAWx0B,GACtBwzB,EAAQxzB,GAAM,wBAAAwP,EAAA/D,OAAA,GAAA6D,EAAA,IAHlB3B,EAKJ,GAAG,IAGH,IAAM8mB,EAAY,SAAClhB,EAAKmhB,GACpBvlB,EAAe,IAAD1P,OAAKO,aAAI,EAAJA,EAAMqC,GAAE,eAAA5C,OAAc8T,IACpC9D,SACA3G,MAAK,SAACiE,GACH,IAAI9E,EAAIpE,IAAAA,QAAUkJ,EAAK,KAAM,QAC7B2nB,EAAGzsB,EACP,IAAE,OACK,SAAC8F,GAAG,OAAKyC,QAAQ9C,MAAMK,EAAI,GAC1C,EAGM4mB,EAAkB,eAAAljB,EAAA9D,GAAA7H,KAAA+E,MAAG,SAAAoG,EAAOlL,GAAC,IAAArE,EAAA,OAAAoE,KAAAoB,MAAA,SAAAgK,GAAA,cAAAA,EAAA5F,KAAA4F,EAAAvH,MAAA,OACZ,GAAnB5D,EAAE6Q,iBAC2B,IAAzBub,EAAc3nB,OAAY,CAAA0G,EAAAvH,KAAA,eAAAuH,EAAAvH,KAAA,EACPoH,EAAkB0iB,GAAO,OAAtC/xB,EAAIwP,EAAA7H,KACVmH,QAAQC,IAAI,CAAE/O,KAAAA,IACdgyB,EAAgB9uB,GAAKlD,IAAO,wBAAAwP,EAAAzF,OAAA,GAAAwF,EAAA,KAEnC,gBAPuBP,GAAA,OAAAe,EAAAvF,MAAA,KAAAE,UAAA,KA0CxB,OACI9I,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EAEXqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,sDACVV,GAAG,cACHgb,KAAK,UACL,mBAAiB,WAAUpb,SAAA,EAE3BF,EAAAA,EAAAA,KAAA,KACIgB,UAAU,kBACVV,GAAG,sBACH,cAAY,OACZsU,KAAK,gBACL0G,KAAK,MACL,gBAAc,eACd,gBAAc,OACd9H,QAAS,kBAAM0e,GAAiB,EAAM,EAAChyB,SAC1C,aAGDF,EAAAA,EAAAA,KAAA,KACIgB,UAAU,WACVV,GAAG,6BACH,cAAY,OACZsU,KAAK,0BACL0G,KAAK,MACL,gBAAc,yBACd,gBAAc,QACd9H,QAAS,SAACxP,GACN4uB,EAAmB5uB,GACnBkuB,GAAiB,EACrB,EAAEhyB,SACL,qBAGDF,EAAAA,EAAAA,KAAA,KACIgB,UAAU,WACVV,GAAG,uBACH,cAAY,OACZsU,KAAK,oBACL0G,KAAK,MACL,gBAAc,mBACd,gBAAc,QACd9H,QAAS,SAACxP,GACNwuB,EAAgBxuB,GAChBkuB,GAAiB,EACrB,EAAEhyB,SACL,aAGDF,EAAAA,EAAAA,KAAA,KACIgB,UAAU,WACVV,GAAG,4BACH,cAAY,OACZsU,KAAK,yBACL0G,KAAK,MACL,gBAAc,wBACd,gBAAc,QACd9H,QAAS,SAACxP,IA3FD,SAACA,GACtBA,EAAE6Q,iBACqB,IAAnBwb,EAAQ5nB,QACRiqB,EAAU,gBAAiBd,EAEnC,CAuFoBiB,CAAiB7uB,GACjBkuB,GAAiB,EACrB,EAAEhyB,SACL,eAGDF,EAAAA,EAAAA,KAAA,KACIgB,UAAU,WACVV,GAAG,sBACH,cAAY,OACZsU,KAAK,mBACL0G,KAAK,MACL,gBAAc,kBACd,gBAAc,QACd9H,QAAS,SAACxP,IA5FH,SAACA,GACpBA,EAAE6Q,iBACF6d,EAAU,eAAgBZ,EAC9B,CA0FoBgB,CAAe9uB,GACfkuB,GAAiB,EACrB,EAAEhyB,SACL,aAGDF,EAAAA,EAAAA,KAAA,KACIgB,UAAU,WACVV,GAAG,+BACH,cAAY,OACZsU,KAAK,4BACL0G,KAAK,MACL,gBAAc,2BACd,gBAAc,QACd9H,QAAS,SAACxP,IAjHF,SAACA,GACrBA,EAAE6Q,iBACF6d,EAAU,eAAgBb,EAC9B,CA+GoBkB,CAAgB/uB,GAChBkuB,GAAiB,EACrB,EAAEhyB,SACL,oBAKLqB,EAAAA,EAAAA,MAAA,OACIP,UAAS,eAAAtD,OACLu0B,EAAgB,MAAQ,MAAK,kCAEjC3xB,GAAG,qBAAoBJ,SAAA,EAEvBF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,6CACVV,GAAG,eACHgb,KAAK,WACL,kBAAgB,sBAAqBpb,UAErCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,UACjBF,EAAAA,EAAAA,KAACgzB,GAAO,CACJpzB,WAAYyN,EACZqkB,OAAQA,EACRzzB,KAAMA,SAIlB+B,EAAAA,EAAAA,KAAA,OACIgB,UAAU,gBACVV,GAAG,yBACHgb,KAAK,WACL,kBAAgB,6BAA4Bpb,UAE5CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,UACjBF,EAAAA,EAAAA,KAACizB,GAAa,CACVh1B,KAAMA,EACNmyB,cAAeA,EACf7vB,QAASwO,SAKrB/O,EAAAA,EAAAA,KAAA,OACIgB,UAAU,gBACVV,GAAG,mBACHgb,KAAK,WACL,kBAAgB,uBAAsBpb,UAQtCF,EAAAA,EAAAA,KAACG,GAAAA,EAAY,CACTpC,MAAO,WAAO,EACdG,SAAUm0B,EACV9xB,QAASgyB,EACTpI,SAAU,WAAO,EACjBrsB,QAAQ,EACRyB,gBAAgB,EAChBC,kBAAmB,WAAO,EAC1BX,OAAQ,QACR2B,SAAU8xB,EACVxyB,QAAS0yB,EACT7zB,mBAAmB,EACnBR,OAAQiW,aAAO,EAAPA,EAAS9T,GACjB4yB,cAAc,OAItBlzB,EAAAA,EAAAA,KAAA,OACIgB,UAAU,gBACVV,GAAG,wBACHgb,KAAK,WACL,kBAAgB,4BAA2Bpb,UAE3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,UACjBF,EAAAA,EAAAA,KAACwwB,GAAO,CACJvyB,KAAMA,EACNoyB,QAASA,EACTxwB,UAAWuyB,SAKvBpyB,EAAAA,EAAAA,KAAA,OACIgB,UAAU,gBACVV,GAAG,kBACHgb,KAAK,WACL,kBAAgB,sBAAqBpb,UAErCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,UACjBF,EAAAA,EAAAA,KAACmzB,GAAO,CACJ1T,UAAWA,EACX5f,UAAWuyB,SAKvBpyB,EAAAA,EAAAA,KAAA,OACIgB,UAAU,gBACVV,GAAG,2BACHgb,KAAK,WACL,kBAAgB,+BAA8Bpb,UAE9CF,EAAAA,EAAAA,KAACozB,GAAU,CACPtC,OAAQA,EACRjxB,UAAWuyB,WAOnC,2SC1TAruB,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAhB,EAAAkB,OAAAC,UAAAC,EAAApB,EAAAqB,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAN,EAAAD,EAAAhB,GAAAiB,EAAAD,GAAAhB,EAAArC,KAAA,EAAA2B,EAAA,mBAAAkC,OAAAA,OAAA,GAAAC,EAAAnC,EAAAoC,UAAA,aAAAC,EAAArC,EAAAsC,eAAA,kBAAAC,EAAAvC,EAAAwC,aAAA,yBAAAC,EAAAd,EAAAD,EAAAhB,GAAA,OAAAkB,OAAAK,eAAAN,EAAAD,EAAA,CAAArD,MAAAqC,EAAAgC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,EAAA,KAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAhB,GAAA,OAAAiB,EAAAD,GAAAhB,CAAA,WAAAmC,EAAAlB,EAAAD,EAAAhB,EAAAoB,GAAA,IAAA9B,EAAA0B,GAAAA,EAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAA/C,EAAA6B,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAE,EAAAG,EAAA,WAAA9D,MAAA4E,EAAAtB,EAAAjB,EAAA2B,KAAAF,CAAA,UAAAe,EAAAvB,EAAAD,EAAAhB,GAAA,WAAAxB,KAAA,SAAAiE,IAAAxB,EAAAyB,KAAA1B,EAAAhB,GAAA,OAAAiB,GAAA,OAAAzC,KAAA,QAAAiE,IAAAxB,EAAA,EAAAD,EAAAmB,KAAAA,EAAA,IAAA1H,EAAA,iBAAAkI,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAApD,GAAAoB,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAM,EAAAtC,GAAA,0BAAAuC,SAAA,SAAAxC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAwC,QAAAzC,EAAAC,EAAA,gBAAAyC,EAAAzC,EAAAD,GAAA,SAAA2C,EAAA3D,EAAAsB,EAAAhC,EAAAmC,GAAA,IAAAE,EAAAa,EAAAvB,EAAAjB,GAAAiB,EAAAK,GAAA,aAAAK,EAAAnD,KAAA,KAAAqD,EAAAF,EAAAc,IAAAhI,EAAAoH,EAAAlE,MAAA,OAAAlD,GAAA,UAAAmJ,GAAAnJ,IAAA2G,EAAAsB,KAAAjI,EAAA,WAAAuG,EAAA6C,QAAApJ,EAAAqJ,SAAAC,MAAA,SAAA9C,GAAA0C,EAAA,OAAA1C,EAAA3B,EAAAmC,EAAA,aAAAR,GAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAT,EAAA6C,QAAApJ,GAAAsJ,MAAA,SAAA9C,GAAAY,EAAAlE,MAAAsD,EAAA3B,EAAAuC,EAAA,aAAAZ,GAAA,OAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAAzC,EAAAsB,EAAA,gBAAA3D,MAAA,SAAAsD,EAAAG,GAAA,SAAA4C,IAAA,WAAAhD,GAAA,SAAAA,EAAAhB,GAAA2D,EAAA1C,EAAAG,EAAAJ,EAAAhB,EAAA,WAAAA,EAAAA,EAAAA,EAAA+D,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAvB,EAAAhB,EAAAoB,GAAA,IAAAE,EAAA7G,EAAA,gBAAA6E,EAAAmC,GAAA,GAAAH,IAAAsB,EAAA,UAAAqB,MAAA,mCAAA3C,IAAAuB,EAAA,cAAAvD,EAAA,MAAAmC,EAAA,OAAA9D,MAAAsD,EAAAiD,MAAA,OAAA9C,EAAA+C,OAAA7E,EAAA8B,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAAgD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAT,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAA7G,EAAA,MAAA6G,EAAAuB,EAAAzB,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAsB,EAAA,IAAAK,EAAAT,EAAAxB,EAAAhB,EAAAoB,GAAA,cAAA6B,EAAAzE,KAAA,IAAA8C,EAAAF,EAAA8C,KAAArB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAnF,MAAAsF,EAAAR,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAjB,EAAAzE,OAAA8C,EAAAuB,EAAAzB,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAQ,EAAAR,IAAA,YAAA4B,EAAArD,EAAAhB,GAAA,IAAAoB,EAAApB,EAAAmE,OAAA7C,EAAAN,EAAAU,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAjB,EAAAoE,SAAA,eAAAhD,GAAAJ,EAAAU,SAAA,SAAA1B,EAAAmE,OAAA,SAAAnE,EAAAyC,IAAAxB,EAAAoD,EAAArD,EAAAhB,GAAA,UAAAA,EAAAmE,SAAA,WAAA/C,IAAApB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA0B,EAAA,IAAAxD,EAAAkD,EAAAlB,EAAAN,EAAAU,SAAA1B,EAAAyC,KAAA,aAAAnD,EAAAd,KAAA,OAAAwB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAAnD,EAAAmD,IAAAzC,EAAAoE,SAAA,KAAAtB,EAAA,IAAArB,EAAAnC,EAAAmD,IAAA,OAAAhB,EAAAA,EAAAyC,MAAAlE,EAAAgB,EAAA2D,YAAAlD,EAAA9D,MAAAqC,EAAA4E,KAAA5D,EAAA6D,QAAA,WAAA7E,EAAAmE,SAAAnE,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,GAAAjB,EAAAoE,SAAA,KAAAtB,GAAArB,GAAAzB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAA1E,EAAAoE,SAAA,KAAAtB,EAAA,UAAAgC,EAAA7D,GAAA,IAAAD,EAAA,CAAA+D,OAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,SAAA/D,EAAA,SAAAA,IAAAD,EAAAiE,WAAAhE,EAAA,GAAAD,EAAAkE,SAAAjE,EAAA,SAAAkE,WAAAC,KAAApE,EAAA,UAAAqE,EAAApE,GAAA,IAAAD,EAAAC,EAAAqE,YAAA,GAAAtE,EAAAxC,KAAA,gBAAAwC,EAAAyB,IAAAxB,EAAAqE,WAAAtE,CAAA,UAAAsB,EAAArB,GAAA,KAAAkE,WAAA,EAAAJ,OAAA,SAAA9D,EAAAuC,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAhB,EAAAgB,EAAAS,GAAA,GAAAzB,EAAA,OAAAA,EAAA0C,KAAA1B,GAAA,sBAAAA,EAAA4D,KAAA,OAAA5D,EAAA,IAAAwE,MAAAxE,EAAAyE,QAAA,KAAAnE,GAAA,EAAAhC,EAAA,SAAAsF,IAAA,OAAAtD,EAAAN,EAAAyE,QAAA,GAAArE,EAAAsB,KAAA1B,EAAAM,GAAA,OAAAsD,EAAAjH,MAAAqD,EAAAM,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,SAAAtF,EAAAsF,KAAAtF,CAAA,YAAAoF,UAAAd,GAAA5C,GAAA,2BAAA+B,EAAA5B,UAAA6B,EAAA1B,EAAAgC,EAAA,eAAA3F,MAAAqF,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAArF,MAAAoF,EAAAd,cAAA,IAAAc,EAAA2C,YAAA3D,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAA2E,oBAAA,SAAA1E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA2E,YAAA,QAAA5E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAA0E,aAAA1E,EAAA6E,MAAA,EAAA7E,EAAA8E,KAAA,SAAA7E,GAAA,OAAAC,OAAA6E,eAAA7E,OAAA6E,eAAA9E,EAAA+B,IAAA/B,EAAA+E,UAAAhD,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAiB,GAAArC,CAAA,EAAAD,EAAAiF,MAAA,SAAAhF,GAAA,OAAA6C,QAAA7C,EAAA,EAAAsC,EAAAG,EAAAvC,WAAAY,EAAA2B,EAAAvC,UAAAQ,GAAA,0BAAAX,EAAA0C,cAAAA,EAAA1C,EAAAkF,MAAA,SAAAjF,EAAAjB,EAAAoB,EAAAE,EAAAhC,QAAA,IAAAA,IAAAA,EAAA6G,SAAA,IAAA1E,EAAA,IAAAiC,EAAAvB,EAAAlB,EAAAjB,EAAAoB,EAAAE,GAAAhC,GAAA,OAAA0B,EAAA2E,oBAAA3F,GAAAyB,EAAAA,EAAAmD,OAAAb,MAAA,SAAA9C,GAAA,OAAAA,EAAAiD,KAAAjD,EAAAtD,MAAA8D,EAAAmD,MAAA,KAAArB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAAtC,EAAAoF,KAAA,SAAAnF,GAAA,IAAAD,EAAAE,OAAAD,GAAAjB,EAAA,WAAAoB,KAAAJ,EAAAhB,EAAAoF,KAAAhE,GAAA,OAAApB,EAAAqG,UAAA,SAAAzB,IAAA,KAAA5E,EAAAyF,QAAA,KAAAxE,EAAAjB,EAAAsG,MAAA,GAAArF,KAAAD,EAAA,OAAA4D,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA5D,EAAAqC,OAAAA,EAAAf,EAAAnB,UAAA,CAAAyE,YAAAtD,EAAAiD,MAAA,SAAAvE,GAAA,QAAAuF,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAAtD,EAAA,KAAAiD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAxB,EAAA,KAAAkE,WAAA3B,QAAA6B,IAAArE,EAAA,QAAAhB,KAAA,WAAAA,EAAAwG,OAAA,IAAApF,EAAAsB,KAAA,KAAA1C,KAAAwF,OAAAxF,EAAAyG,MAAA,WAAAzG,GAAAiB,EAAA,EAAAyF,KAAA,gBAAAxC,MAAA,MAAAjD,EAAA,KAAAkE,WAAA,GAAAG,WAAA,aAAArE,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,YAAAkE,IAAA,EAAAnC,kBAAA,SAAAxD,GAAA,QAAAkD,KAAA,MAAAlD,EAAA,IAAAhB,EAAA,cAAA4G,EAAAxF,EAAAE,GAAA,OAAAG,EAAAjD,KAAA,QAAAiD,EAAAgB,IAAAzB,EAAAhB,EAAA4E,KAAAxD,EAAAE,IAAAtB,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,KAAAK,CAAA,SAAAA,EAAA,KAAA6D,WAAAM,OAAA,EAAAnE,GAAA,IAAAA,EAAA,KAAAhC,EAAA,KAAA6F,WAAA7D,GAAAG,EAAAnC,EAAAgG,WAAA,YAAAhG,EAAAyF,OAAA,OAAA6B,EAAA,UAAAtH,EAAAyF,QAAA,KAAAwB,KAAA,KAAA5E,EAAAP,EAAAsB,KAAApD,EAAA,YAAAuC,EAAAT,EAAAsB,KAAApD,EAAA,iBAAAqC,GAAAE,EAAA,SAAA0E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,WAAAuB,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,SAAAtD,GAAA,QAAA4E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,YAAAnD,EAAA,UAAAoC,MAAA,kDAAAsC,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,KAAAR,OAAA,SAAAxD,EAAAD,GAAA,QAAAhB,EAAA,KAAAmF,WAAAM,OAAA,EAAAzF,GAAA,IAAAA,EAAA,KAAAsB,EAAA,KAAA6D,WAAAnF,GAAA,GAAAsB,EAAAyD,QAAA,KAAAwB,MAAAnF,EAAAsB,KAAApB,EAAA,oBAAAiF,KAAAjF,EAAA2D,WAAA,KAAA3F,EAAAgC,EAAA,OAAAhC,IAAA,UAAA2B,GAAA,aAAAA,IAAA3B,EAAAyF,QAAA/D,GAAAA,GAAA1B,EAAA2F,aAAA3F,EAAA,UAAAmC,EAAAnC,EAAAA,EAAAgG,WAAA,UAAA7D,EAAAjD,KAAAyC,EAAAQ,EAAAgB,IAAAzB,EAAA1B,GAAA,KAAA6E,OAAA,YAAAS,KAAAtF,EAAA2F,WAAAnC,GAAA,KAAA+D,SAAApF,EAAA,EAAAoF,SAAA,SAAA5F,EAAAD,GAAA,aAAAC,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,gBAAAxB,EAAAzC,MAAA,aAAAyC,EAAAzC,KAAA,KAAAoG,KAAA3D,EAAAwB,IAAA,WAAAxB,EAAAzC,MAAA,KAAAmI,KAAA,KAAAlE,IAAAxB,EAAAwB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA3D,EAAAzC,MAAAwC,IAAA,KAAA4D,KAAA5D,GAAA8B,CAAA,EAAAgE,OAAA,SAAA7F,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAAiF,aAAAhE,EAAA,YAAA4F,SAAA7G,EAAAsF,WAAAtF,EAAAkF,UAAAG,EAAArF,GAAA8C,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAA+E,SAAA9D,EAAA,KAAAG,EAAApB,EAAAsF,WAAA,aAAAlE,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAqB,IAAA4C,EAAArF,EAAA,QAAAsB,CAAA,YAAA2C,MAAA,0BAAA8C,cAAA,SAAA/F,EAAAhB,EAAAoB,GAAA,YAAAgD,SAAA,CAAA1C,SAAA2B,EAAArC,GAAA2D,WAAA3E,EAAA6E,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAxB,GAAA6B,CAAA,GAAA9B,CAAA,UAAAqH,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAAf,EAAAjF,GAAA,QAAAiG,EAAAJ,EAAAZ,GAAAjF,GAAA9E,EAAA+K,EAAA/K,KAAA,OAAAgL,GAAA,YAAAJ,EAAAI,EAAA,CAAAD,EAAAxE,KAAAL,EAAAlG,GAAAwI,QAAAtC,QAAAlG,GAAAoG,KAAAyE,EAAAC,EAAA,UAAA5I,GAAAoJ,GAAA,gBAAAA,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAK,GAAAL,EAAA,CAAAonB,CAAApnB,IAAA,SAAAqnB,GAAA,uBAAA9uB,QAAA,MAAA8uB,EAAA9uB,OAAAE,WAAA,MAAA4uB,EAAA,qBAAAxwB,MAAA0J,KAAA8mB,EAAA,CAAAC,CAAAtnB,IAAAS,GAAAT,IAAA,qBAAAvE,UAAA,wIAAA8rB,EAAA,UAAAn0B,GAAA4M,EAAA3J,GAAA,gBAAA2J,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAA,CAAA,CAAAE,CAAAF,IAAA,SAAAjJ,EAAA2C,GAAA,IAAA1B,EAAA,MAAAjB,EAAA,yBAAAwB,QAAAxB,EAAAwB,OAAAE,WAAA1B,EAAA,uBAAAiB,EAAA,KAAAD,EAAAI,EAAA9B,EAAAuC,EAAAJ,EAAA,GAAAmB,GAAA,EAAAtB,GAAA,SAAAhC,GAAA2B,EAAAA,EAAAyB,KAAA1C,IAAA4E,KAAA,IAAAjC,EAAA,IAAAzB,OAAAD,KAAAA,EAAA,OAAA2B,GAAA,cAAAA,GAAA5B,EAAA1B,EAAAoD,KAAAzB,IAAAiD,QAAAzC,EAAA2D,KAAApE,EAAArD,OAAA8D,EAAAgE,SAAA9C,GAAAC,GAAA,UAAA5C,GAAAsB,GAAA,EAAAF,EAAApB,CAAA,iBAAA4C,GAAA,MAAA3B,EAAA,SAAAY,EAAAZ,EAAA,SAAAC,OAAAW,KAAAA,GAAA,kBAAAP,EAAA,MAAAF,CAAA,SAAAK,CAAA,EAAA2H,CAAAH,EAAA3J,IAAAoK,GAAAT,EAAA3J,IAAA,qBAAAoF,UAAA,6IAAAiF,EAAA,UAAAD,GAAApI,EAAA+H,GAAA,GAAA/H,EAAA,qBAAAA,EAAA,OAAAgI,GAAAhI,EAAA+H,GAAA,IAAAjI,EAAAF,OAAAC,UAAAoI,SAAA7G,KAAApB,GAAAmF,MAAA,uBAAArF,GAAAE,EAAAsE,cAAAxE,EAAAE,EAAAsE,YAAAC,MAAA,QAAAzE,GAAA,QAAAA,EAAAtB,MAAA0J,KAAAlI,GAAA,cAAAF,GAAA,2CAAAqI,KAAArI,GAAAkI,GAAAhI,EAAA+H,QAAA,YAAAC,GAAAL,EAAApK,IAAA,MAAAA,GAAAA,EAAAoK,EAAAxD,UAAA5G,EAAAoK,EAAAxD,QAAA,QAAAnG,EAAA,EAAAsK,EAAA,IAAA9J,MAAAjB,GAAAS,EAAAT,EAAAS,IAAAsK,EAAAtK,GAAA2J,EAAA3J,GAAA,OAAAsK,CAAA,CA2OA,SA5NoB,SAAHjP,GAA6B,IAAxBM,EAAIN,EAAJM,KAAcuY,GAAF7Y,EAANkZ,OAAYlZ,EAAJ6Y,MAE2BpX,IAD5CugB,EAAAA,EAAAA,MAC4CtgB,IAAfC,EAAAA,EAAAA,WAAS,GAAM,IAAtDm0B,EAAer0B,EAAA,GAAEs0B,EAAkBt0B,EAAA,GAC+B0e,EAAAze,IAAXC,EAAAA,EAAAA,UAAS,GAAE,GAAlEq0B,EAAuB7V,EAAA,GAAE8V,EAA0B9V,EAAA,GACLG,EAAA5e,IAAXC,EAAAA,EAAAA,UAAS,GAAE,GAA9Cu0B,EAAa5V,EAAA,GAAE6V,EAAgB7V,EAAA,GACiBG,EAAA/e,IAAXC,EAAAA,EAAAA,UAAS,GAAE,GAAhDy0B,EAAc3V,EAAA,GAAE4V,EAAiB5V,EAAA,GACEG,EAAAlf,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnCe,EAAOke,EAAA,GAAE0V,EAAU1V,EAAA,GAE4B+M,EAAAjsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA/C40B,EAAa5I,EAAA,GAAE6I,EAAgB7I,EAAA,GACsBE,EAAAnsB,IAAZC,EAAAA,EAAAA,UAAS,CAAC,GAAE,GAArD80B,EAAgB5I,EAAA,GAAE6I,EAAmB7I,EAAA,GAEiCnc,EAAAhQ,IAAjCiQ,EAAAA,EAAAA,MAAiC,GAC7EglB,GAD2BjlB,EAAA,GAAYA,EAAA,GAATxP,WACkB00B,EAAAA,EAAAA,IAAyBt2B,aAAI,EAAJA,EAAMqC,KAAjEwO,EAAgBwlB,EAAtB30B,KAAwBC,EAAU00B,EAAV10B,WAEhCuyB,GAAmDtlB,EAAAA,GAAAA,KAA3C4C,EAAW0iB,EAAX1iB,YAAcD,EAAwB2iB,EAAxB3iB,yBAEckc,EAAArsB,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAAxBk1B,GAAF9I,EAAA,GAAQA,EAAA,KAGnB3rB,EAAAA,EAAAA,YAAU,WACP,GAAG+O,EAAiB,CAChB,IAAMnP,EAAOmC,EAAE2yB,OAAO3lB,EAAkB,CAAC,kBACnC4lB,EAAS5yB,EAAEiuB,KAAKpwB,GAChBg1B,EAAM7yB,EAAE+R,QAAQlU,GACtBw0B,EAAgBtxB,GAAK8xB,IACrBN,EAAoBK,EACxB,CACH,GAAG,CAAC90B,IAEH,IAAM7B,EAAQ,SAACiG,GACbA,EAAE6Q,iBACF6e,GAAmB,EACrB,EAuBMkB,EAAc,eAtEtB/oB,EAsEsBoD,GAtEtBpD,EAsEsB9H,KAAA+E,MAAG,SAAAyE,EAAOvJ,GAAC,IAAArE,EAAAgzB,EAAA,OAAA5uB,KAAAoB,MAAA,SAAAsI,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA7F,MAAA,OAS5B,GARD5D,EAAE6Q,iBACIlV,EAAO,CACT+C,OAAQixB,EACRkB,QAAShB,EACTiB,QAASf,EACT1zB,QAAAA,EACAwR,QAAS5T,aAAI,EAAJA,EAAMqC,GACfy0B,QAASve,aAAI,EAAJA,EAAMG,SArBf6W,SACE7hB,SADF6hB,EAAQ,EACN7hB,EAAQ,IAAIzH,OAEd7D,IACAsL,EAAMtL,QAAU,wBAChBmtB,KAGJgH,EAAO7oB,GACC6hB,EAeI,CAAA/f,EAAA7F,KAAA,QACkC,OAApC+qB,EAAK,WAAH,OAASe,GAAmB,EAAM,EAAAjmB,EAAA7F,KAAA,EACpC6H,EAAY9P,EAAMgzB,GAAI,OAAAllB,EAAA7F,KAAA,eAE5BoI,GAAAA,GAAMqa,KAAK,yBAAyB,wBAAA5c,EAAA/D,OA7B1B,IACV8jB,EACE7hB,CA2BkC,GAAA4B,EAAA,IArF5C,eAAAzB,EAAA,KAAAC,EAAA1B,UAAA,WAAAlB,SAAA,SAAAtC,EAAA0E,GAAA,IAAAD,EAAAO,EAAA1B,MAAA2B,EAAAC,GAAA,SAAAP,EAAA7K,GAAA0K,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,OAAA9K,EAAA,UAAA8K,EAAAO,GAAAX,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,QAAAO,EAAA,CAAAR,OAAAT,EAAA,MAuFG,gBAjBmB4D,GAAA,OAAAM,EAAA9E,MAAA,KAAAE,UAAA,KAmBpB,OACE9I,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXqB,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CACHiC,QAAQ,UACRjI,QAAS,kBAAMkgB,GAAmB,EAAK,EACvC1yB,UAAU,2CAA0Cd,SAAA,EAEpDF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,iCACbhB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gBAAed,SAAC,gBAGpCF,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQ21B,EAAiBzyB,UAAU,+BAA8Bd,UACpEF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,8CAA6Cd,UACxDqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,qCACVmC,MAAO,CAAEoW,SAAU,QAASE,SAAU,SAAUvZ,SAAA,EAEhDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,sFAAqFd,SAAA,EAChGF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wBAAuBd,SAAC,oBACvCF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QAASzV,EAAOiD,UAAU,GAAEd,UAChCF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIrBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,CACd4B,EAAE+tB,KAAKqE,GAAiB,IACvB3yB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,uBAAsBd,UACjCqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,8BAA8B,cAAY,WAAW4T,KAAK,uBAAuB0G,KAAK,SAAW,gBAAc,QAAQ,gBAAc,sBAAqBpb,SAAA,CAAC,wBAChJ4B,EAAE+tB,KAAKqE,GAAe,KAC5Cl0B,EAAAA,EAAAA,KAAA,UAAAE,UACIF,EAAAA,EAAAA,KAACg1B,GAAAA,IAAiB,YAK9Bh1B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sCAAsCV,GAAG,sBAAqBJ,UACzEF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,iBAAgBd,SAEvB4B,EAAE+tB,KAAKqE,GAAiB,EACxBpyB,EAAEiB,IAAImxB,GAAe,SAACj2B,GAAI,OACtB+B,EAAAA,EAAAA,KAACi1B,GAAiB,CAA2Ct1B,KAAM1B,EAAM4B,UAAWD,GAAW,GAAAlC,OAApEO,EAAKqC,GAAE,KAAA5C,OAAIO,aAAI,EAAJA,EAAMi3B,eAAqD,KAErGl1B,EAAAA,EAAAA,KAAA,QAAAE,SAAM,+BAY1BF,EAAAA,EAAAA,KAACi1B,GAAiB,CAACt1B,KAAMy0B,EAAkBM,QAAQ,EAAM70B,UAAWD,QAGnEA,IACDI,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,YAAWd,UACtBqB,EAAAA,EAAAA,MAAA,QAAM4zB,OAAO,GAAEj1B,SAAA,EACXqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,mBAAkBd,SAAA,CAAC,2CAAuCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,UAC5GF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAEd,UACbF,EAAAA,EAAAA,KAACylB,GAAAA,GAAM,CACHtiB,MAAO,CAAEoW,SAAU,KACnB5Y,MAAOgzB,EACP/yB,SAAUgzB,EACVwB,OAAO,gBAKnB7zB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,mBAAkBd,SAAA,CAAC,0CAAsCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,UAC3GF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAEd,UACbF,EAAAA,EAAAA,KAACylB,GAAAA,GAAM,CACHtiB,MAAO,CAAEoW,SAAU,KACnB5Y,MAAOkzB,EACPjzB,SAAUkzB,EACVsB,OAAO,gBAMnB7zB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,mBAAkBd,SAAA,CAAC,uDACQF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,UAE7EF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAEd,UACbF,EAAAA,EAAAA,KAACylB,GAAAA,GAAM,CACHtiB,MAAO,CAAEoW,SAAU,KACnB5Y,MAAOozB,EACPnzB,SAAUozB,EACVoB,OAAO,gBAKnB7zB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,mBAAkBd,SAAA,CAAC,sCACTF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,UAE5DF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,mBAAkBd,UAC7BF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CAAC9Y,SAhJjC,SAACoD,EAAG0e,GAC1B,IAAM/iB,EAAO+iB,EAAOC,UACpBsR,EAAWt0B,EACb,UAiJ8B4B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QAASzV,EAAO0d,QAAQ,WAAWza,UAAU,eAAcd,SAAC,WAuBpEF,EAAAA,EAAAA,KAACq1B,GAAAA,EAAY,CAAC7hB,QAASohB,EAAgBrkB,MAAM,UAAU1Q,UAAW2P,qBAWtG,EAOA,IAAMylB,GAAoB,SAAHvlB,GAAqE,IAAA4lB,EAAhE31B,EAAI+P,EAAJ/P,KAAI41B,EAAA7lB,EAAEglB,OAAAA,OAAM,IAAAa,GAAMA,EAAAC,EAAA9lB,EAAE1O,UAAAA,OAAS,IAAAw0B,EAAC,GAAEA,EAAEryB,EAAKuM,EAALvM,MAAKsyB,EAAA/lB,EAAE7P,UAAAA,OAAS,IAAA41B,GAAQA,EAE5EC,EAAQ5zB,EAAE6zB,QAAQ7zB,EAAEgb,MAAMnd,aAAI,EAAJA,EAAM+1B,MAAO,MACvCE,EAAY9zB,EAAE6zB,QAAQ7zB,EAAEgb,MAAMnd,aAAI,EAAJA,EAAMi2B,SAAU,MAGpD,OAAG/1B,GACQ0B,EAAAA,EAAAA,MAAA,OAAKP,UAAS,6BAAAtD,OAA+BsD,GAAamC,MAAOA,EAAMjD,SAAA,EAC1EqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,8BAA6Bd,SAAA,EACxCF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACzX,OAAO,OAAOK,MAAM,OAAO8B,UAAU,UAClDhB,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACzX,OAAO,OAAOK,MAAM,OAAO8B,UAAU,aAGtDO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,EACtCqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACzX,OAAO,OAAOK,MAAM,OAAO8B,UAAU,UAElDO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACzX,OAAO,OAAOK,MAAM,OAAO8B,UAAU,UAClDhB,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACzX,OAAO,OAAOK,MAAM,OAAO8B,UAAU,UAClDhB,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACzX,OAAO,OAAOK,MAAM,OAAO8B,UAAU,gBAI1DO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACzX,OAAO,OAAOK,MAAM,OAAO8B,UAAU,UAElDO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACzX,OAAO,OAAOK,MAAM,OAAO8B,UAAU,UAClDhB,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACzX,OAAO,OAAOK,MAAM,OAAO8B,UAAU,UAClDhB,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACzX,OAAO,OAAOK,MAAM,MAAM8B,UAAU,sBASjEO,EAAAA,EAAAA,MAAA,OAAKP,UAAS,6BAAAtD,OAA+BsD,GAAamC,MAAOA,EAAMjD,SAAA,EACnEqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,8BAA6Bd,SAAA,EACxCqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,CAAOw0B,EAAS,SAAU,MAAM,gBAAcA,GAAU,IAAJh3B,OAAQiC,aAAI,EAAJA,EAAMu1B,cAAa,SAC/El1B,EAAAA,EAAAA,KAAA,QAAAE,SACK0V,IAAMjW,aAAI,EAAJA,EAAMk2B,iBAAiB/f,OAAO,8BAI7CvU,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,EACtCqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wBAAwBmC,MAAO,CAACC,MAAO,WAAWlD,SAAC,YAClEF,EAAAA,EAAAA,KAAA,MAAImD,MAAO,CAAC2yB,UAAW,SAAS51B,SAC3B4B,EAAEiB,IAAI2yB,GAAO,SAACK,EAAMzgB,GAAK,OACtBtV,EAAAA,EAAAA,KAAA,MAA6BmD,MAAO,CAAC2yB,UAAW,WAAW51B,UACvDF,EAAAA,EAAAA,KAAA,KAAG4U,KAAMmhB,EAAK71B,SAAE61B,KAAS,GAAAr4B,OADjBq4B,EAAI,KAAAr4B,OAAI4X,GAEf,UAKjB/T,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wBAAwBmC,MAAO,CAACC,MAAO,WAAWlD,SAAC,iBAClEF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,qBAAqB0T,wBAAyB,CAACC,OAAkB,QAAZ2gB,EAAE31B,aAAI,EAAJA,EAAMqU,YAAI,IAAAshB,EAAAA,EAAA,4EAIpF/zB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACrBF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,qCACVmC,MAAO,CAAEC,MAAO,WAAYlD,SAC/B,mBAGA4B,EAAE+tB,KAAK+F,GAAY,GAChB51B,EAAAA,EAAAA,KAACg2B,EAAAA,EAAY,CAAA91B,SACR4B,EAAEiB,IAAI6yB,GAAU,SAACtT,EAAMhN,GAAK,OACzBtV,EAAAA,EAAAA,KAACg2B,EAAAA,EAAaC,QAAO,CAEjBC,SAAU5T,EACV6T,cAAc,EACdC,YAAY,EACZC,YAAW,GAAA34B,OAAK4kB,GAChBgU,WAAU,GAAA54B,OAAK4kB,GACfiU,SAAUz0B,EAAEuV,SAAS,CAAC,MAAM,MAAO,OAAQ,MAAO,OAAQvV,EAAEiuB,KAAKjuB,EAAEgb,MAAMwF,EAAM,OAAS,SAAW,SACnGkU,IAAI,IAAE,GAAA94B,OAPE4kB,EAAI,KAAA5kB,OAAI4X,GAQlB,OAINtV,EAAAA,EAAAA,KAAA,QACIgB,UAAU,OACVmC,MAAO,CAAEC,MAAO,sBAAuBlD,SAC1C,uCAQzB,qiCCnKA,SAvKgB,SAAHvC,GAAkD,IAAAoP,EAA5CqH,EAAOzW,EAAPyW,QAASnW,EAAIN,EAAJM,KAAM4Y,EAAMlZ,EAANkZ,OAAQ4f,EAAc94B,EAAd84B,eACKr3B,EAAAC,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAApCxB,EAAMsB,EAAA,GAAEwa,EAASxa,EAAA,GAClBoX,EAAO,IAAI1J,EAAAA,EAAW,QAAPC,EAACC,cAAM,IAAAD,GAAS,QAATA,EAANA,EAAQE,eAAO,IAAAF,OAAA,EAAfA,EAAiB1K,MAGkCq0B,EAAAr3B,IAA/Bs3B,EAAAA,EAAAA,MAA+B,GAAlEC,EAAiBF,EAAA,GAAG92B,EAAU82B,EAAA,GAAV92B,WAGfD,GAASk3B,EAAAA,EAAAA,IAA6BziB,aAAO,EAAPA,EAAS9T,IAA/CX,KACFm3B,EAA4B,KAAfn3B,aAAI,EAAJA,EAAM1B,MAEvBse,EAAS,SAACvY,GACdA,EAAE6Q,iBACF7Q,EAAE+yB,kBACFnd,GAAU,EACZ,EAGMod,EAAoB,WACtB,OAAO9rB,OAAOkJ,aAAO,EAAPA,EAAS6iB,aAAczgB,aAAI,EAAJA,EAAMG,UAAW7U,IAAAA,SAAW,CAAC,EAAE,EAAE,GAAI+U,aAAM,EAANA,EAAQvW,GACtF,EAqCA,OACIiB,EAAAA,EAAAA,MAAA,OACIP,UAAU,wEACVmC,MAAO,CAAEkT,IAAK,QAASnW,SAAA,EAEvBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sBAAqBd,UAChCF,EAAAA,EAAAA,KAAA,OAAKwT,QAAS+I,EAAQvb,UAAU,kBAAkBmC,MAAO,CAACsQ,OAAQ,WAAWvT,SACxEkU,aAAO,EAAPA,EAAS7D,WAIlBhP,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OACIwT,QAAS+I,EACTvb,UAAU,qCACVmC,MAAO,CAACsQ,OAAQ,WAAWvT,UAE3BF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,wBAGb81B,GAAcE,MAAuBh3B,EAAAA,EAAAA,KAAA,OACjCwT,QAxDL,SAACxP,GACZA,EAAE6Q,iBACF+hB,EAAkBxiB,aAAO,EAAPA,EAAS9T,IAC1BoN,SACA3G,MAAK,SAAAiE,GACiB,OAAhBA,aAAG,EAAHA,EAAK6L,QACJ4f,EAAezyB,EAAGoQ,aAAO,EAAPA,EAAS9T,IAE3BwP,KAAKO,KAAK,CACNC,KAAM,QACNC,MAAO,UACPyD,KAAM,6DAGlB,GACJ,EA0CoBhT,UAAU,qCACVmC,MAAO,CAACsQ,OAAQ,WAAWvT,SAE1BN,GAAcI,EAAAA,EAAAA,KAAA,OACXgB,UAAU,gCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,kBAEtBxb,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,sCAQ7BhB,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXF,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CACF9T,UAAS,kCACTlD,OAAQA,EAAOoC,UAEfqB,EAAAA,EAAAA,MAAA,OACIP,UAAS,4BAAAtD,OACLI,EAAS,OAAS,IACnBoC,SAAA,EAEHqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,sFAAqFd,SAAA,EAChGF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,UACjBqB,EAAAA,EAAAA,MAAA,QAAMP,UAAU,wBAAuBd,SAAA,CAAC,cACxBkU,aAAO,EAAPA,EAAS9T,GAAG,KAAG,KAC3BN,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,qBAAoBd,SAC/BkU,aAAO,EAAPA,EAAS7D,QACN,UAGhBhP,EAAAA,EAAAA,MAAA,OAAKP,UAAU,oCAAmCd,SAAA,CAU7C42B,GAAcE,MAAuBh3B,EAAAA,EAAAA,KAAA,KAAG4U,KAAK,IAAIpB,QAzF/C,SAACxP,GAC5BA,EAAE6Q,iBACF+hB,EAAkBxiB,aAAO,EAAPA,EAAS9T,IAC1BoN,SACA3G,MAAK,SAAAiE,GACiB,OAAhBA,aAAG,EAAHA,EAAK6L,QACJ7J,OAAOmc,SAAW,kBAAHzrB,OAAqB0W,aAAO,EAAPA,EAAS9T,GAAE,SAE/CwP,KAAKO,KAAK,CACNC,KAAM,QACNC,MAAO,UACPyD,KAAM,6DAGlB,GACJ,EA0E+GhT,UAAU,kCAAiCd,SACzHN,GAAcI,EAAAA,EAAAA,KAAA,OACXgB,UAAU,gCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,kBAEtBxb,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,mCAErBhB,EAAAA,EAAAA,KAAA,KACI4U,KAAI,kBAAAlX,OAAoB0W,aAAO,EAAPA,EAAS9T,IACjC0U,OAAO,SACPhU,UAAU,kCAAiCd,UAG3CF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,8CAEjBhB,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QAAS,kBAAMoG,GAAU,EAAM,EAAE5Y,UAAU,GAAEd,UACjDF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,+BAKzBhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,iCAAgCd,UAC3CF,EAAAA,EAAAA,KAACk3B,GAAc,CACX1F,WAAYvzB,EACZmW,QAASA,eAQzC,qjCChDA,SA1H8B,SAAHzW,GAA8B,IAAxBG,EAAMH,EAANG,OAAQq5B,EAASx5B,EAATw5B,UAC0BhkB,EAAA9T,GAArB+T,EAAAA,UAAe,GAAM,GAAxDgkB,EAAajkB,EAAA,GAAEkkB,EAAgBlkB,EAAA,GAEa0H,EAAAxb,GAAjB+T,EAAAA,SAAe,GAAE,GAA5CkkB,EAASzc,EAAA,GAAE0c,EAAY1c,EAAA,GACxBrE,EAAO,IAAI1J,EAAAA,EAAKE,OAAOC,QAAQ5K,MA8BrC,OA5BA+Q,EAAAA,WAAgB,WACZ,GACIoD,EAAKC,cACiB,IAArBD,EAAKC,aACmB,KAArBD,EAAKC,aACgB,KAArBD,EAAKC,aACX,CACE,IAAI+W,EAAQ8J,QAAAA,EAAa,EAErBE,EAAiBC,aAAY,WAC7BF,EAAa/J,IACjB,GAAG,KAECkK,EAAYC,YAAW,WACvBN,GAAiB,GACjBO,cAAcJ,EAElB,GAAG,KAEH,OAAO,WACHK,aAAaH,GACbE,cAAcJ,EAClB,CACJ,CAEA,OAAO,kBAAML,GAAW,CAC5B,GAAG,KAGCn3B,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQA,EAAQkD,UAAU,oCAAmCd,UAChEF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,oCAAmCd,UAC9CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,sCAAqCd,SAAA,EAChDqB,EAAAA,EAAAA,MAAA,MAAIP,UAAU,OAAMd,SAAA,CACf,IAAI,0CACmC,QAG5CqB,EAAAA,EAAAA,MAAA,MAAIC,KAAK,IAAI2B,MAAO,CAAE20B,WAAY,QAAS53B,SAAA,EACvCqB,EAAAA,EAAAA,MAAA,MAAArB,SAAA,CACK,IAAI,gHAGI,QAEbqB,EAAAA,EAAAA,MAAA,MAAArB,SAAA,CAAI,sFAEiC,QAErCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iFAIJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oEAIJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,8JAMJqB,EAAAA,EAAAA,MAAA,MAAArB,SAAA,CAAI,wGAEkD,QAEtDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,2KAQRqB,EAAAA,EAAAA,MAAA,KAAArB,SAAA,CAAG,6LAI2B,QAG9BF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,kNAOHqB,EAAAA,EAAAA,MAAA,KAAArB,SAAA,CACK,IAAI,kZAWTF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UACtCqB,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CACHhG,QAAS2jB,EACTn2B,UAAU,UACVI,UAAWg2B,EAAcl3B,SAAA,CAC5B,+BACgC,KAC3Bk3B,GAAiB,IAAJ15B,OAAQ45B,EAAS,gBAO5D,oRC5HAvzB,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAhB,EAAAkB,OAAAC,UAAAC,EAAApB,EAAAqB,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAN,EAAAD,EAAAhB,GAAAiB,EAAAD,GAAAhB,EAAArC,KAAA,EAAA2B,EAAA,mBAAAkC,OAAAA,OAAA,GAAAC,EAAAnC,EAAAoC,UAAA,aAAAC,EAAArC,EAAAsC,eAAA,kBAAAC,EAAAvC,EAAAwC,aAAA,yBAAAC,EAAAd,EAAAD,EAAAhB,GAAA,OAAAkB,OAAAK,eAAAN,EAAAD,EAAA,CAAArD,MAAAqC,EAAAgC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,EAAA,KAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAhB,GAAA,OAAAiB,EAAAD,GAAAhB,CAAA,WAAAmC,EAAAlB,EAAAD,EAAAhB,EAAAoB,GAAA,IAAA9B,EAAA0B,GAAAA,EAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAA/C,EAAA6B,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAE,EAAAG,EAAA,WAAA9D,MAAA4E,EAAAtB,EAAAjB,EAAA2B,KAAAF,CAAA,UAAAe,EAAAvB,EAAAD,EAAAhB,GAAA,WAAAxB,KAAA,SAAAiE,IAAAxB,EAAAyB,KAAA1B,EAAAhB,GAAA,OAAAiB,GAAA,OAAAzC,KAAA,QAAAiE,IAAAxB,EAAA,EAAAD,EAAAmB,KAAAA,EAAA,IAAA1H,EAAA,iBAAAkI,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAApD,GAAAoB,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAM,EAAAtC,GAAA,0BAAAuC,SAAA,SAAAxC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAwC,QAAAzC,EAAAC,EAAA,gBAAAyC,EAAAzC,EAAAD,GAAA,SAAA2C,EAAA3D,EAAAsB,EAAAhC,EAAAmC,GAAA,IAAAE,EAAAa,EAAAvB,EAAAjB,GAAAiB,EAAAK,GAAA,aAAAK,EAAAnD,KAAA,KAAAqD,EAAAF,EAAAc,IAAAhI,EAAAoH,EAAAlE,MAAA,OAAAlD,GAAA,UAAAmJ,GAAAnJ,IAAA2G,EAAAsB,KAAAjI,EAAA,WAAAuG,EAAA6C,QAAApJ,EAAAqJ,SAAAC,MAAA,SAAA9C,GAAA0C,EAAA,OAAA1C,EAAA3B,EAAAmC,EAAA,aAAAR,GAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAT,EAAA6C,QAAApJ,GAAAsJ,MAAA,SAAA9C,GAAAY,EAAAlE,MAAAsD,EAAA3B,EAAAuC,EAAA,aAAAZ,GAAA,OAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAAzC,EAAAsB,EAAA,gBAAA3D,MAAA,SAAAsD,EAAAG,GAAA,SAAA4C,IAAA,WAAAhD,GAAA,SAAAA,EAAAhB,GAAA2D,EAAA1C,EAAAG,EAAAJ,EAAAhB,EAAA,WAAAA,EAAAA,EAAAA,EAAA+D,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAvB,EAAAhB,EAAAoB,GAAA,IAAAE,EAAA7G,EAAA,gBAAA6E,EAAAmC,GAAA,GAAAH,IAAAsB,EAAA,UAAAqB,MAAA,mCAAA3C,IAAAuB,EAAA,cAAAvD,EAAA,MAAAmC,EAAA,OAAA9D,MAAAsD,EAAAiD,MAAA,OAAA9C,EAAA+C,OAAA7E,EAAA8B,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAAgD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAT,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAA7G,EAAA,MAAA6G,EAAAuB,EAAAzB,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAsB,EAAA,IAAAK,EAAAT,EAAAxB,EAAAhB,EAAAoB,GAAA,cAAA6B,EAAAzE,KAAA,IAAA8C,EAAAF,EAAA8C,KAAArB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAnF,MAAAsF,EAAAR,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAjB,EAAAzE,OAAA8C,EAAAuB,EAAAzB,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAQ,EAAAR,IAAA,YAAA4B,EAAArD,EAAAhB,GAAA,IAAAoB,EAAApB,EAAAmE,OAAA7C,EAAAN,EAAAU,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAjB,EAAAoE,SAAA,eAAAhD,GAAAJ,EAAAU,SAAA,SAAA1B,EAAAmE,OAAA,SAAAnE,EAAAyC,IAAAxB,EAAAoD,EAAArD,EAAAhB,GAAA,UAAAA,EAAAmE,SAAA,WAAA/C,IAAApB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA0B,EAAA,IAAAxD,EAAAkD,EAAAlB,EAAAN,EAAAU,SAAA1B,EAAAyC,KAAA,aAAAnD,EAAAd,KAAA,OAAAwB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAAnD,EAAAmD,IAAAzC,EAAAoE,SAAA,KAAAtB,EAAA,IAAArB,EAAAnC,EAAAmD,IAAA,OAAAhB,EAAAA,EAAAyC,MAAAlE,EAAAgB,EAAA2D,YAAAlD,EAAA9D,MAAAqC,EAAA4E,KAAA5D,EAAA6D,QAAA,WAAA7E,EAAAmE,SAAAnE,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,GAAAjB,EAAAoE,SAAA,KAAAtB,GAAArB,GAAAzB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAA1E,EAAAoE,SAAA,KAAAtB,EAAA,UAAAgC,EAAA7D,GAAA,IAAAD,EAAA,CAAA+D,OAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,SAAA/D,EAAA,SAAAA,IAAAD,EAAAiE,WAAAhE,EAAA,GAAAD,EAAAkE,SAAAjE,EAAA,SAAAkE,WAAAC,KAAApE,EAAA,UAAAqE,EAAApE,GAAA,IAAAD,EAAAC,EAAAqE,YAAA,GAAAtE,EAAAxC,KAAA,gBAAAwC,EAAAyB,IAAAxB,EAAAqE,WAAAtE,CAAA,UAAAsB,EAAArB,GAAA,KAAAkE,WAAA,EAAAJ,OAAA,SAAA9D,EAAAuC,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAhB,EAAAgB,EAAAS,GAAA,GAAAzB,EAAA,OAAAA,EAAA0C,KAAA1B,GAAA,sBAAAA,EAAA4D,KAAA,OAAA5D,EAAA,IAAAwE,MAAAxE,EAAAyE,QAAA,KAAAnE,GAAA,EAAAhC,EAAA,SAAAsF,IAAA,OAAAtD,EAAAN,EAAAyE,QAAA,GAAArE,EAAAsB,KAAA1B,EAAAM,GAAA,OAAAsD,EAAAjH,MAAAqD,EAAAM,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,SAAAtF,EAAAsF,KAAAtF,CAAA,YAAAoF,UAAAd,GAAA5C,GAAA,2BAAA+B,EAAA5B,UAAA6B,EAAA1B,EAAAgC,EAAA,eAAA3F,MAAAqF,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAArF,MAAAoF,EAAAd,cAAA,IAAAc,EAAA2C,YAAA3D,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAA2E,oBAAA,SAAA1E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA2E,YAAA,QAAA5E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAA0E,aAAA1E,EAAA6E,MAAA,EAAA7E,EAAA8E,KAAA,SAAA7E,GAAA,OAAAC,OAAA6E,eAAA7E,OAAA6E,eAAA9E,EAAA+B,IAAA/B,EAAA+E,UAAAhD,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAiB,GAAArC,CAAA,EAAAD,EAAAiF,MAAA,SAAAhF,GAAA,OAAA6C,QAAA7C,EAAA,EAAAsC,EAAAG,EAAAvC,WAAAY,EAAA2B,EAAAvC,UAAAQ,GAAA,0BAAAX,EAAA0C,cAAAA,EAAA1C,EAAAkF,MAAA,SAAAjF,EAAAjB,EAAAoB,EAAAE,EAAAhC,QAAA,IAAAA,IAAAA,EAAA6G,SAAA,IAAA1E,EAAA,IAAAiC,EAAAvB,EAAAlB,EAAAjB,EAAAoB,EAAAE,GAAAhC,GAAA,OAAA0B,EAAA2E,oBAAA3F,GAAAyB,EAAAA,EAAAmD,OAAAb,MAAA,SAAA9C,GAAA,OAAAA,EAAAiD,KAAAjD,EAAAtD,MAAA8D,EAAAmD,MAAA,KAAArB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAAtC,EAAAoF,KAAA,SAAAnF,GAAA,IAAAD,EAAAE,OAAAD,GAAAjB,EAAA,WAAAoB,KAAAJ,EAAAhB,EAAAoF,KAAAhE,GAAA,OAAApB,EAAAqG,UAAA,SAAAzB,IAAA,KAAA5E,EAAAyF,QAAA,KAAAxE,EAAAjB,EAAAsG,MAAA,GAAArF,KAAAD,EAAA,OAAA4D,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA5D,EAAAqC,OAAAA,EAAAf,EAAAnB,UAAA,CAAAyE,YAAAtD,EAAAiD,MAAA,SAAAvE,GAAA,QAAAuF,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAAtD,EAAA,KAAAiD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAxB,EAAA,KAAAkE,WAAA3B,QAAA6B,IAAArE,EAAA,QAAAhB,KAAA,WAAAA,EAAAwG,OAAA,IAAApF,EAAAsB,KAAA,KAAA1C,KAAAwF,OAAAxF,EAAAyG,MAAA,WAAAzG,GAAAiB,EAAA,EAAAyF,KAAA,gBAAAxC,MAAA,MAAAjD,EAAA,KAAAkE,WAAA,GAAAG,WAAA,aAAArE,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,YAAAkE,IAAA,EAAAnC,kBAAA,SAAAxD,GAAA,QAAAkD,KAAA,MAAAlD,EAAA,IAAAhB,EAAA,cAAA4G,EAAAxF,EAAAE,GAAA,OAAAG,EAAAjD,KAAA,QAAAiD,EAAAgB,IAAAzB,EAAAhB,EAAA4E,KAAAxD,EAAAE,IAAAtB,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,KAAAK,CAAA,SAAAA,EAAA,KAAA6D,WAAAM,OAAA,EAAAnE,GAAA,IAAAA,EAAA,KAAAhC,EAAA,KAAA6F,WAAA7D,GAAAG,EAAAnC,EAAAgG,WAAA,YAAAhG,EAAAyF,OAAA,OAAA6B,EAAA,UAAAtH,EAAAyF,QAAA,KAAAwB,KAAA,KAAA5E,EAAAP,EAAAsB,KAAApD,EAAA,YAAAuC,EAAAT,EAAAsB,KAAApD,EAAA,iBAAAqC,GAAAE,EAAA,SAAA0E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,WAAAuB,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,SAAAtD,GAAA,QAAA4E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,YAAAnD,EAAA,UAAAoC,MAAA,kDAAAsC,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,KAAAR,OAAA,SAAAxD,EAAAD,GAAA,QAAAhB,EAAA,KAAAmF,WAAAM,OAAA,EAAAzF,GAAA,IAAAA,EAAA,KAAAsB,EAAA,KAAA6D,WAAAnF,GAAA,GAAAsB,EAAAyD,QAAA,KAAAwB,MAAAnF,EAAAsB,KAAApB,EAAA,oBAAAiF,KAAAjF,EAAA2D,WAAA,KAAA3F,EAAAgC,EAAA,OAAAhC,IAAA,UAAA2B,GAAA,aAAAA,IAAA3B,EAAAyF,QAAA/D,GAAAA,GAAA1B,EAAA2F,aAAA3F,EAAA,UAAAmC,EAAAnC,EAAAA,EAAAgG,WAAA,UAAA7D,EAAAjD,KAAAyC,EAAAQ,EAAAgB,IAAAzB,EAAA1B,GAAA,KAAA6E,OAAA,YAAAS,KAAAtF,EAAA2F,WAAAnC,GAAA,KAAA+D,SAAApF,EAAA,EAAAoF,SAAA,SAAA5F,EAAAD,GAAA,aAAAC,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,gBAAAxB,EAAAzC,MAAA,aAAAyC,EAAAzC,KAAA,KAAAoG,KAAA3D,EAAAwB,IAAA,WAAAxB,EAAAzC,MAAA,KAAAmI,KAAA,KAAAlE,IAAAxB,EAAAwB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA3D,EAAAzC,MAAAwC,IAAA,KAAA4D,KAAA5D,GAAA8B,CAAA,EAAAgE,OAAA,SAAA7F,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAAiF,aAAAhE,EAAA,YAAA4F,SAAA7G,EAAAsF,WAAAtF,EAAAkF,UAAAG,EAAArF,GAAA8C,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAA+E,SAAA9D,EAAA,KAAAG,EAAApB,EAAAsF,WAAA,aAAAlE,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAqB,IAAA4C,EAAArF,EAAA,QAAAsB,CAAA,YAAA2C,MAAA,0BAAA8C,cAAA,SAAA/F,EAAAhB,EAAAoB,GAAA,YAAAgD,SAAA,CAAA1C,SAAA2B,EAAArC,GAAA2D,WAAA3E,EAAA6E,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAxB,GAAA6B,CAAA,GAAA9B,CAAA,UAAAqH,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAAf,EAAAjF,GAAA,QAAAiG,EAAAJ,EAAAZ,GAAAjF,GAAA9E,EAAA+K,EAAA/K,KAAA,OAAAgL,GAAA,YAAAJ,EAAAI,EAAA,CAAAD,EAAAxE,KAAAL,EAAAlG,GAAAwI,QAAAtC,QAAAlG,GAAAoG,KAAAyE,EAAAC,EAAA,UAAApM,GAAA4M,EAAA3J,GAAA,gBAAA2J,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAA,CAAA,CAAAE,CAAAF,IAAA,SAAAjJ,EAAA2C,GAAA,IAAA1B,EAAA,MAAAjB,EAAA,yBAAAwB,QAAAxB,EAAAwB,OAAAE,WAAA1B,EAAA,uBAAAiB,EAAA,KAAAD,EAAAI,EAAA9B,EAAAuC,EAAAJ,EAAA,GAAAmB,GAAA,EAAAtB,GAAA,SAAAhC,GAAA2B,EAAAA,EAAAyB,KAAA1C,IAAA4E,KAAA,IAAAjC,EAAA,IAAAzB,OAAAD,KAAAA,EAAA,OAAA2B,GAAA,cAAAA,GAAA5B,EAAA1B,EAAAoD,KAAAzB,IAAAiD,QAAAzC,EAAA2D,KAAApE,EAAArD,OAAA8D,EAAAgE,SAAA9C,GAAAC,GAAA,UAAA5C,GAAAsB,GAAA,EAAAF,EAAApB,CAAA,iBAAA4C,GAAA,MAAA3B,EAAA,SAAAY,EAAAZ,EAAA,SAAAC,OAAAW,KAAAA,GAAA,kBAAAP,EAAA,MAAAF,CAAA,SAAAK,CAAA,EAAA2H,CAAAH,EAAA3J,IAAA,SAAAgC,EAAA+H,GAAA,IAAA/H,EAAA,2BAAAA,EAAA,OAAAgI,GAAAhI,EAAA+H,GAAA,IAAAjI,EAAAF,OAAAC,UAAAoI,SAAA7G,KAAApB,GAAAmF,MAAA,iBAAArF,GAAAE,EAAAsE,cAAAxE,EAAAE,EAAAsE,YAAAC,MAAA,WAAAzE,GAAA,QAAAA,EAAA,OAAAtB,MAAA0J,KAAAlI,GAAA,iBAAAF,GAAA,2CAAAqI,KAAArI,GAAA,OAAAkI,GAAAhI,EAAA+H,EAAA,CAAAK,CAAAT,EAAA3J,IAAA,qBAAAoF,UAAA,6IAAAiF,EAAA,UAAAL,GAAAL,EAAApK,IAAA,MAAAA,GAAAA,EAAAoK,EAAAxD,UAAA5G,EAAAoK,EAAAxD,QAAA,QAAAnG,EAAA,EAAAsK,EAAA,IAAA9J,MAAAjB,GAAAS,EAAAT,EAAAS,IAAAsK,EAAAtK,GAAA2J,EAAA3J,GAAA,OAAAsK,CAAA,CA0OA,SAlO+B,SAAHjP,GAAkC,IAA5BM,EAAIN,EAAJM,KAAMksB,EAAQxsB,EAARwsB,SAAUpsB,EAAKJ,EAALI,MACJqB,EAAAC,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnCy4B,EAAO34B,EAAA,GAAE44B,EAAU54B,EAAA,GACkC0e,EAAAze,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAArD24B,EAAgBna,EAAA,GAAEoa,EAAmBpa,EAAA,GACAG,EAAA5e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAArC64B,EAAQla,EAAA,GAAEma,EAAWna,EAAA,GAIZG,EAAA/e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAFZ+4B,EAAkCja,EAAA,GAClCka,EAAqCla,EAAA,GAEGG,EAAAlf,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAArC+V,EAAQkJ,EAAA,GAAEga,EAAWha,EAAA,GACQ+M,EAAAjsB,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAA7B0M,EAAGsf,EAAA,GAAEkJ,EAAMlJ,EAAA,GAEyDkN,EAAAn5B,IAA/Bo5B,EAAAA,EAAAA,MAA+B,GAApEC,EAAkBF,EAAA,GAAI34B,EAAS24B,EAAA,GAAT34B,UAGvBijB,EAAe,SAAC9e,EAAG6e,GACrB7e,EAAE6Q,iBACFgO,EAAS7e,EAAEgR,OAAOrU,MACtB,EAoDMuhB,EAAY,eA7EtBrW,EA6EsBoD,GA7EtBpD,EA6EsB9H,KAAA+E,MAAG,SAAAyE,EAAOvJ,GAAC,IAAArE,EAAA,OAAAoE,KAAAoB,MAAA,SAAAsI,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA7F,MAAA,OASxB,GARKjI,EAAO,CACTg5B,WAAY16B,aAAI,EAAJA,EAAM6uB,UAClB7X,SAAU8iB,EACV5iB,UAAWgjB,EACX/iB,MAAOijB,EACPhjB,SAAUA,EACVxD,QAAS5T,aAAI,EAAJA,EAAMqC,GACf4U,kBAAmB+iB,GAzDnBzK,SACE7hB,SADF6hB,EAAQ,EACN7hB,EAAQ,IAAIzH,OAEb6zB,GAGOa,EAAAA,GAAAA,GAAWb,KACnBvK,IACA7hB,EAAMosB,QAAU,2BAChB/nB,GAAAA,GAAMqa,KAAK,kDAAmD,CAC1Dpa,SAAU,gBANdud,IACA7hB,EAAMosB,QAAU,kDASfI,GAIOS,EAAAA,GAAAA,GAAWT,KACnB3K,IACA7hB,EAAMwsB,SAAW,2BACjBnoB,GAAAA,GAAMqa,KACF,8DACA,CAAEpa,SAAU,gBARhBud,IACA7hB,EAAMwsB,SACF,8DAUHE,IACD7K,IACA7hB,EAAMktB,SACF,mEAGHxjB,IACDmY,IACA7hB,EAAM0J,SACF,6DAGH4iB,IACDzK,IACA7hB,EAAMssB,iBACF,gEAGRzD,EAAO7oB,GACC6hB,EAcO,CAAF/f,EAAA7F,KAAA,gBAAA6F,EAAAlE,KAAA,EAAAkE,EAAA7F,KAAA,EAEC8wB,EAAmB/4B,GACpB+N,SACA3G,MAAK,SAACiE,GACHjN,IACA+R,KAAAA,KACI,yCACA,6BACA,WACF/I,MAAK,SAAA2I,GAAcA,EAAXopB,YACN3O,GACJ,GACJ,IAAE,OAAA1c,EAAA7F,KAAA,gBAAA6F,EAAAlE,KAAA,EAAAkE,EAAAe,GAAAf,EAAA,SAENgB,QAAQC,IAAGjB,EAAAe,IAAM,QAAAf,EAAA7F,KAAA,iBAGrBoI,GAAAA,GAAMrE,MAAM,qCAAsC,CAC9CsE,SAAU,cACX,yBAAAxC,EAAA/D,OAjFK,IACR8jB,EACE7hB,CA+EC,GAAA4B,EAAA,iBA5Gf,eAAAzB,EAAA,KAAAC,EAAA1B,UAAA,WAAAlB,SAAA,SAAAtC,EAAA0E,GAAA,IAAAD,EAAAO,EAAA1B,MAAA2B,EAAAC,GAAA,SAAAP,EAAA7K,GAAA0K,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,OAAA9K,EAAA,UAAA8K,EAAAO,GAAAX,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,QAAAO,EAAA,CAAAR,OAAAT,EAAA,MA8GK,gBAjCiB4D,GAAA,OAAAM,EAAA9E,MAAA,KAAAE,UAAA,KAmClB,OACI9I,EAAAA,EAAAA,MAAA,OAAKP,UAAU,qCAAoCd,SAAA,EAC/CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAKd,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,UACHO,MAAM,6BACNW,KAAK,OACLif,YAAY,kCACZ5X,KAAK,WACLqY,UAAU,EACVvgB,MAAOo3B,EACPpsB,MAAOK,aAAG,EAAHA,EAAK+rB,QACZn3B,SAAU,SAACoD,GAAC,OAAK8e,EAAa9e,EAAGg0B,EAAW,OAIpDh4B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,mBACHO,MAAM,oBACNW,KAAK,OACLif,YAAY,oBACZ5X,KAAK,wBACLqY,UAAU,EACVvgB,MAAOs3B,EACPtsB,MAAOK,aAAG,EAAHA,EAAKisB,iBACZr3B,SAAU,SAACoD,GAAC,OAAK8e,EAAa9e,EAAGk0B,EAAoB,UAKjE32B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAKd,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,WACHO,MAAM,yCACNW,KAAK,OACLif,YAAY,8CACZ5X,KAAK,YACLqY,UAAU,EACVvgB,MAAOw3B,EACPxsB,MAAOK,aAAG,EAAHA,EAAKmsB,SACZv3B,SAAU,SAACoD,GAAC,OAAK8e,EAAa9e,EAAGo0B,EAAY,OAIrDp4B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wBAAuBd,UAClCF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,sBACHO,MAAM,oDACNW,KAAK,OACLif,YAAY,yDACZ5X,KAAK,wBACLqY,UAAU,EACVvgB,MAAO03B,EACP1sB,MAAOK,aAAG,EAAHA,EAAK6sB,SACZj4B,SAAU,SAACoD,GAAC,OACR8e,EACI9e,EACAs0B,EACH,OAKbt4B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kCAAiCd,UAC5CF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,WACHO,MAAM,WACNW,KAAK,OACLif,YAAY,WACZ5X,KAAK,WACL7H,UAAU,aACVkgB,UAAU,EACVvgB,MAAO0U,EACP1J,MAAOK,aAAG,EAAHA,EAAKqJ,SACZzU,SAAU,SAACoD,GAAC,OAAK8e,EAAa9e,EAAGu0B,EAAY,YAM7Dv4B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,cAAad,UACxBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,gDAA+Cd,SAAA,EAC1DF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHiC,QAAQ,YACRza,UAAU,OACVwS,QAASzV,EAAMmC,SAClB,YAIDqB,EAAAA,EAAAA,MAAC8zB,GAAAA,EAAY,CAAC7hB,QAAS0O,EAAcriB,UAAWA,EAAUK,SAAA,EACtDF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,8BAA8B,mBAyBnE,yPCxOA+C,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAhB,EAAAkB,OAAAC,UAAAC,EAAApB,EAAAqB,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAN,EAAAD,EAAAhB,GAAAiB,EAAAD,GAAAhB,EAAArC,KAAA,EAAA2B,EAAA,mBAAAkC,OAAAA,OAAA,GAAAC,EAAAnC,EAAAoC,UAAA,aAAAC,EAAArC,EAAAsC,eAAA,kBAAAC,EAAAvC,EAAAwC,aAAA,yBAAAC,EAAAd,EAAAD,EAAAhB,GAAA,OAAAkB,OAAAK,eAAAN,EAAAD,EAAA,CAAArD,MAAAqC,EAAAgC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,EAAA,KAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAhB,GAAA,OAAAiB,EAAAD,GAAAhB,CAAA,WAAAmC,EAAAlB,EAAAD,EAAAhB,EAAAoB,GAAA,IAAA9B,EAAA0B,GAAAA,EAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAA/C,EAAA6B,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAE,EAAAG,EAAA,WAAA9D,MAAA4E,EAAAtB,EAAAjB,EAAA2B,KAAAF,CAAA,UAAAe,EAAAvB,EAAAD,EAAAhB,GAAA,WAAAxB,KAAA,SAAAiE,IAAAxB,EAAAyB,KAAA1B,EAAAhB,GAAA,OAAAiB,GAAA,OAAAzC,KAAA,QAAAiE,IAAAxB,EAAA,EAAAD,EAAAmB,KAAAA,EAAA,IAAA1H,EAAA,iBAAAkI,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAApD,GAAAoB,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAM,EAAAtC,GAAA,0BAAAuC,SAAA,SAAAxC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAwC,QAAAzC,EAAAC,EAAA,gBAAAyC,EAAAzC,EAAAD,GAAA,SAAA2C,EAAA3D,EAAAsB,EAAAhC,EAAAmC,GAAA,IAAAE,EAAAa,EAAAvB,EAAAjB,GAAAiB,EAAAK,GAAA,aAAAK,EAAAnD,KAAA,KAAAqD,EAAAF,EAAAc,IAAAhI,EAAAoH,EAAAlE,MAAA,OAAAlD,GAAA,UAAAmJ,GAAAnJ,IAAA2G,EAAAsB,KAAAjI,EAAA,WAAAuG,EAAA6C,QAAApJ,EAAAqJ,SAAAC,MAAA,SAAA9C,GAAA0C,EAAA,OAAA1C,EAAA3B,EAAAmC,EAAA,aAAAR,GAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAT,EAAA6C,QAAApJ,GAAAsJ,MAAA,SAAA9C,GAAAY,EAAAlE,MAAAsD,EAAA3B,EAAAuC,EAAA,aAAAZ,GAAA,OAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAAzC,EAAAsB,EAAA,gBAAA3D,MAAA,SAAAsD,EAAAG,GAAA,SAAA4C,IAAA,WAAAhD,GAAA,SAAAA,EAAAhB,GAAA2D,EAAA1C,EAAAG,EAAAJ,EAAAhB,EAAA,WAAAA,EAAAA,EAAAA,EAAA+D,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAvB,EAAAhB,EAAAoB,GAAA,IAAAE,EAAA7G,EAAA,gBAAA6E,EAAAmC,GAAA,GAAAH,IAAAsB,EAAA,UAAAqB,MAAA,mCAAA3C,IAAAuB,EAAA,cAAAvD,EAAA,MAAAmC,EAAA,OAAA9D,MAAAsD,EAAAiD,MAAA,OAAA9C,EAAA+C,OAAA7E,EAAA8B,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAAgD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAT,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAA7G,EAAA,MAAA6G,EAAAuB,EAAAzB,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAsB,EAAA,IAAAK,EAAAT,EAAAxB,EAAAhB,EAAAoB,GAAA,cAAA6B,EAAAzE,KAAA,IAAA8C,EAAAF,EAAA8C,KAAArB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAnF,MAAAsF,EAAAR,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAjB,EAAAzE,OAAA8C,EAAAuB,EAAAzB,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAQ,EAAAR,IAAA,YAAA4B,EAAArD,EAAAhB,GAAA,IAAAoB,EAAApB,EAAAmE,OAAA7C,EAAAN,EAAAU,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAjB,EAAAoE,SAAA,eAAAhD,GAAAJ,EAAAU,SAAA,SAAA1B,EAAAmE,OAAA,SAAAnE,EAAAyC,IAAAxB,EAAAoD,EAAArD,EAAAhB,GAAA,UAAAA,EAAAmE,SAAA,WAAA/C,IAAApB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA0B,EAAA,IAAAxD,EAAAkD,EAAAlB,EAAAN,EAAAU,SAAA1B,EAAAyC,KAAA,aAAAnD,EAAAd,KAAA,OAAAwB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAAnD,EAAAmD,IAAAzC,EAAAoE,SAAA,KAAAtB,EAAA,IAAArB,EAAAnC,EAAAmD,IAAA,OAAAhB,EAAAA,EAAAyC,MAAAlE,EAAAgB,EAAA2D,YAAAlD,EAAA9D,MAAAqC,EAAA4E,KAAA5D,EAAA6D,QAAA,WAAA7E,EAAAmE,SAAAnE,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,GAAAjB,EAAAoE,SAAA,KAAAtB,GAAArB,GAAAzB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAA1E,EAAAoE,SAAA,KAAAtB,EAAA,UAAAgC,EAAA7D,GAAA,IAAAD,EAAA,CAAA+D,OAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,SAAA/D,EAAA,SAAAA,IAAAD,EAAAiE,WAAAhE,EAAA,GAAAD,EAAAkE,SAAAjE,EAAA,SAAAkE,WAAAC,KAAApE,EAAA,UAAAqE,EAAApE,GAAA,IAAAD,EAAAC,EAAAqE,YAAA,GAAAtE,EAAAxC,KAAA,gBAAAwC,EAAAyB,IAAAxB,EAAAqE,WAAAtE,CAAA,UAAAsB,EAAArB,GAAA,KAAAkE,WAAA,EAAAJ,OAAA,SAAA9D,EAAAuC,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAhB,EAAAgB,EAAAS,GAAA,GAAAzB,EAAA,OAAAA,EAAA0C,KAAA1B,GAAA,sBAAAA,EAAA4D,KAAA,OAAA5D,EAAA,IAAAwE,MAAAxE,EAAAyE,QAAA,KAAAnE,GAAA,EAAAhC,EAAA,SAAAsF,IAAA,OAAAtD,EAAAN,EAAAyE,QAAA,GAAArE,EAAAsB,KAAA1B,EAAAM,GAAA,OAAAsD,EAAAjH,MAAAqD,EAAAM,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,SAAAtF,EAAAsF,KAAAtF,CAAA,YAAAoF,UAAAd,GAAA5C,GAAA,2BAAA+B,EAAA5B,UAAA6B,EAAA1B,EAAAgC,EAAA,eAAA3F,MAAAqF,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAArF,MAAAoF,EAAAd,cAAA,IAAAc,EAAA2C,YAAA3D,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAA2E,oBAAA,SAAA1E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA2E,YAAA,QAAA5E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAA0E,aAAA1E,EAAA6E,MAAA,EAAA7E,EAAA8E,KAAA,SAAA7E,GAAA,OAAAC,OAAA6E,eAAA7E,OAAA6E,eAAA9E,EAAA+B,IAAA/B,EAAA+E,UAAAhD,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAiB,GAAArC,CAAA,EAAAD,EAAAiF,MAAA,SAAAhF,GAAA,OAAA6C,QAAA7C,EAAA,EAAAsC,EAAAG,EAAAvC,WAAAY,EAAA2B,EAAAvC,UAAAQ,GAAA,0BAAAX,EAAA0C,cAAAA,EAAA1C,EAAAkF,MAAA,SAAAjF,EAAAjB,EAAAoB,EAAAE,EAAAhC,QAAA,IAAAA,IAAAA,EAAA6G,SAAA,IAAA1E,EAAA,IAAAiC,EAAAvB,EAAAlB,EAAAjB,EAAAoB,EAAAE,GAAAhC,GAAA,OAAA0B,EAAA2E,oBAAA3F,GAAAyB,EAAAA,EAAAmD,OAAAb,MAAA,SAAA9C,GAAA,OAAAA,EAAAiD,KAAAjD,EAAAtD,MAAA8D,EAAAmD,MAAA,KAAArB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAAtC,EAAAoF,KAAA,SAAAnF,GAAA,IAAAD,EAAAE,OAAAD,GAAAjB,EAAA,WAAAoB,KAAAJ,EAAAhB,EAAAoF,KAAAhE,GAAA,OAAApB,EAAAqG,UAAA,SAAAzB,IAAA,KAAA5E,EAAAyF,QAAA,KAAAxE,EAAAjB,EAAAsG,MAAA,GAAArF,KAAAD,EAAA,OAAA4D,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA5D,EAAAqC,OAAAA,EAAAf,EAAAnB,UAAA,CAAAyE,YAAAtD,EAAAiD,MAAA,SAAAvE,GAAA,QAAAuF,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAAtD,EAAA,KAAAiD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAxB,EAAA,KAAAkE,WAAA3B,QAAA6B,IAAArE,EAAA,QAAAhB,KAAA,WAAAA,EAAAwG,OAAA,IAAApF,EAAAsB,KAAA,KAAA1C,KAAAwF,OAAAxF,EAAAyG,MAAA,WAAAzG,GAAAiB,EAAA,EAAAyF,KAAA,gBAAAxC,MAAA,MAAAjD,EAAA,KAAAkE,WAAA,GAAAG,WAAA,aAAArE,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,YAAAkE,IAAA,EAAAnC,kBAAA,SAAAxD,GAAA,QAAAkD,KAAA,MAAAlD,EAAA,IAAAhB,EAAA,cAAA4G,EAAAxF,EAAAE,GAAA,OAAAG,EAAAjD,KAAA,QAAAiD,EAAAgB,IAAAzB,EAAAhB,EAAA4E,KAAAxD,EAAAE,IAAAtB,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,KAAAK,CAAA,SAAAA,EAAA,KAAA6D,WAAAM,OAAA,EAAAnE,GAAA,IAAAA,EAAA,KAAAhC,EAAA,KAAA6F,WAAA7D,GAAAG,EAAAnC,EAAAgG,WAAA,YAAAhG,EAAAyF,OAAA,OAAA6B,EAAA,UAAAtH,EAAAyF,QAAA,KAAAwB,KAAA,KAAA5E,EAAAP,EAAAsB,KAAApD,EAAA,YAAAuC,EAAAT,EAAAsB,KAAApD,EAAA,iBAAAqC,GAAAE,EAAA,SAAA0E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,WAAAuB,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,SAAAtD,GAAA,QAAA4E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,YAAAnD,EAAA,UAAAoC,MAAA,kDAAAsC,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,KAAAR,OAAA,SAAAxD,EAAAD,GAAA,QAAAhB,EAAA,KAAAmF,WAAAM,OAAA,EAAAzF,GAAA,IAAAA,EAAA,KAAAsB,EAAA,KAAA6D,WAAAnF,GAAA,GAAAsB,EAAAyD,QAAA,KAAAwB,MAAAnF,EAAAsB,KAAApB,EAAA,oBAAAiF,KAAAjF,EAAA2D,WAAA,KAAA3F,EAAAgC,EAAA,OAAAhC,IAAA,UAAA2B,GAAA,aAAAA,IAAA3B,EAAAyF,QAAA/D,GAAAA,GAAA1B,EAAA2F,aAAA3F,EAAA,UAAAmC,EAAAnC,EAAAA,EAAAgG,WAAA,UAAA7D,EAAAjD,KAAAyC,EAAAQ,EAAAgB,IAAAzB,EAAA1B,GAAA,KAAA6E,OAAA,YAAAS,KAAAtF,EAAA2F,WAAAnC,GAAA,KAAA+D,SAAApF,EAAA,EAAAoF,SAAA,SAAA5F,EAAAD,GAAA,aAAAC,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,gBAAAxB,EAAAzC,MAAA,aAAAyC,EAAAzC,KAAA,KAAAoG,KAAA3D,EAAAwB,IAAA,WAAAxB,EAAAzC,MAAA,KAAAmI,KAAA,KAAAlE,IAAAxB,EAAAwB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA3D,EAAAzC,MAAAwC,IAAA,KAAA4D,KAAA5D,GAAA8B,CAAA,EAAAgE,OAAA,SAAA7F,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAAiF,aAAAhE,EAAA,YAAA4F,SAAA7G,EAAAsF,WAAAtF,EAAAkF,UAAAG,EAAArF,GAAA8C,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAA+E,SAAA9D,EAAA,KAAAG,EAAApB,EAAAsF,WAAA,aAAAlE,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAqB,IAAA4C,EAAArF,EAAA,QAAAsB,CAAA,YAAA2C,MAAA,0BAAA8C,cAAA,SAAA/F,EAAAhB,EAAAoB,GAAA,YAAAgD,SAAA,CAAA1C,SAAA2B,EAAArC,GAAA2D,WAAA3E,EAAA6E,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAxB,GAAA6B,CAAA,GAAA9B,CAAA,UAAAnB,GAAAoJ,GAAA,gBAAAA,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAK,GAAAL,EAAA,CAAAonB,CAAApnB,IAAA,SAAAqnB,GAAA,uBAAA9uB,QAAA,MAAA8uB,EAAA9uB,OAAAE,WAAA,MAAA4uB,EAAA,qBAAAxwB,MAAA0J,KAAA8mB,EAAA,CAAAC,CAAAtnB,IAAAS,GAAAT,IAAA,qBAAAvE,UAAA,wIAAA8rB,EAAA,UAAAnoB,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAAf,EAAAjF,GAAA,QAAAiG,EAAAJ,EAAAZ,GAAAjF,GAAA9E,EAAA+K,EAAA/K,KAAA,OAAAgL,GAAA,YAAAJ,EAAAI,EAAA,CAAAD,EAAAxE,KAAAL,EAAAlG,GAAAwI,QAAAtC,QAAAlG,GAAAoG,KAAAyE,EAAAC,EAAA,UAAApM,GAAA4M,EAAA3J,GAAA,gBAAA2J,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAA,CAAA,CAAAE,CAAAF,IAAA,SAAAjJ,EAAA2C,GAAA,IAAA1B,EAAA,MAAAjB,EAAA,yBAAAwB,QAAAxB,EAAAwB,OAAAE,WAAA1B,EAAA,uBAAAiB,EAAA,KAAAD,EAAAI,EAAA9B,EAAAuC,EAAAJ,EAAA,GAAAmB,GAAA,EAAAtB,GAAA,SAAAhC,GAAA2B,EAAAA,EAAAyB,KAAA1C,IAAA4E,KAAA,IAAAjC,EAAA,IAAAzB,OAAAD,KAAAA,EAAA,OAAA2B,GAAA,cAAAA,GAAA5B,EAAA1B,EAAAoD,KAAAzB,IAAAiD,QAAAzC,EAAA2D,KAAApE,EAAArD,OAAA8D,EAAAgE,SAAA9C,GAAAC,GAAA,UAAA5C,GAAAsB,GAAA,EAAAF,EAAApB,CAAA,iBAAA4C,GAAA,MAAA3B,EAAA,SAAAY,EAAAZ,EAAA,SAAAC,OAAAW,KAAAA,GAAA,kBAAAP,EAAA,MAAAF,CAAA,SAAAK,CAAA,EAAA2H,CAAAH,EAAA3J,IAAAoK,GAAAT,EAAA3J,IAAA,qBAAAoF,UAAA,6IAAAiF,EAAA,UAAAD,GAAApI,EAAA+H,GAAA,GAAA/H,EAAA,qBAAAA,EAAA,OAAAgI,GAAAhI,EAAA+H,GAAA,IAAAjI,EAAAF,OAAAC,UAAAoI,SAAA7G,KAAApB,GAAAmF,MAAA,uBAAArF,GAAAE,EAAAsE,cAAAxE,EAAAE,EAAAsE,YAAAC,MAAA,QAAAzE,GAAA,QAAAA,EAAAtB,MAAA0J,KAAAlI,GAAA,cAAAF,GAAA,2CAAAqI,KAAArI,GAAAkI,GAAAhI,EAAA+H,QAAA,YAAAC,GAAAL,EAAApK,IAAA,MAAAA,GAAAA,EAAAoK,EAAAxD,UAAA5G,EAAAoK,EAAAxD,QAAA,QAAAnG,EAAA,EAAAsK,EAAA,IAAA9J,MAAAjB,GAAAS,EAAAT,EAAAS,IAAAsK,EAAAtK,GAAA2J,EAAA3J,GAAA,OAAAsK,CAAA,CA4iCA,SA3gCoB,SAAHjP,GAA0C,IAAAoP,EAAAud,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhb,EAAAqpB,EAAAC,EAAAjhB,EAAAI,EAAA8gB,EAAAC,EAAAC,EAAAC,EAAAC,EAApCt7B,EAAKJ,EAALI,MAAKu7B,EAAA37B,EAAE47B,eAAAA,OAAc,IAAAD,GAAQA,EAC1CE,EAAcC,KACpBja,GAIIrL,EAAAA,EAAAA,KAAY,SAACtO,GAAC,OAAKA,EAAEuO,OAAO,IAHtBslB,EAAWla,EAAjBvhB,KACAmW,EAAOoL,EAAPpL,QACAulB,EAA0Bna,EAA1Bma,2BAEEja,GAAWC,EAAAA,EAAAA,MACX/J,EAAQ,IAAIqT,GAAAA,EAGoB7pB,EAAAC,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA/BiR,EAAKnR,EAAA,GAAEqiB,EAAQriB,EAAA,GAC0B0e,EAAAze,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAzCkyB,EAAU1T,EAAA,GAAE8b,EAAa9b,EAAA,GACgBG,EAAA5e,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAAzC4rB,EAASjN,EAAA,GAAEkN,EAAYlN,EAAA,GACcG,EAAA/e,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAArC8rB,EAAOhN,EAAA,GAAEiN,EAAUjN,EAAA,GAC0BG,EAAAlf,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA7C2oB,EAAY1J,EAAA,GAAEkN,EAAelN,EAAA,GACc+M,EAAAjsB,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAA3CqsB,GAAUL,EAAA,GAAEM,GAAaN,EAAA,GAEkBE,GAAAnsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA3CwsB,GAAWN,GAAA,GAAEO,GAAcP,GAAA,GAEiBE,GAAArsB,IAAnBC,EAAAA,EAAAA,UAAS,WAAU,GAA5CwpB,GAAQ4C,GAAA,GAAEO,GAAWP,GAAA,GAKgBvY,GAAA9T,GAAlB+T,EAAAA,SAAe,IAAG,GAArCmO,GAAKpO,GAAA,GAAEqO,GAAQrO,GAAA,GAE4B0H,GAAAxb,GAAlB+T,EAAAA,SAAe,IAAG,GAA3CymB,GAAQhf,GAAA,GAAEif,GAAWjf,GAAA,GACkCG,GAAA3b,GAAlB+T,EAAAA,SAAe,IAAG,GAAvD2mB,GAAc/e,GAAA,GAAEgf,GAAiBhf,GAAA,GACU4G,GAAAviB,GAAlB+T,EAAAA,SAAe,IAAG,GAA3C6mB,GAAQrY,GAAA,GAAEsY,GAAWtY,GAAA,GACoBoB,GAAA3jB,GAAlB+T,EAAAA,SAAe,IAAG,GAAzC+mB,GAAOnX,GAAA,GAAEoX,GAAUpX,GAAA,GAC+B+O,GAAA1yB,GAAjB+T,EAAAA,SAAe,GAAE,GAAlDinB,GAAYtI,GAAA,GAAEuI,GAAevI,GAAA,GACkCC,GAAA3yB,GAAlB+T,EAAAA,SAAe,IAAG,GAA/DmnB,GAAkBvI,GAAA,GAAEwI,GAAqBxI,GAAA,GACkByI,GAAAp7B,GAAlB+T,EAAAA,SAAe,IAAG,GAA3DsnB,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GACcG,GAAAv7B,GAAlB+T,EAAAA,SAAe,IAAG,GAAnDynB,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GAEA/O,GAAAxsB,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAA7B0M,GAAG6f,GAAA,GAAE2I,GAAM3I,GAAA,GAEZ5tB,GAAO,IAAIw0B,EAAAA,GAAWiH,GACtBljB,GAAO,IAAI1J,EAAAA,EAAW,QAAPC,EAACC,cAAM,IAAAD,GAAS,QAATA,EAANA,EAAQE,eAAO,IAAAF,OAAA,EAAfA,EAAiB1K,MAGiC04B,GAAA17B,IAA1B27B,EAAAA,EAAAA,MAA0B,GAAjEC,GAAaF,GAAA,GAAAG,GAAAH,GAAA,GAAIl7B,GAASq7B,GAATr7B,UAAW8L,GAAKuvB,GAALvvB,MAGHuB,GAAA7N,IAA5B8N,EAAAA,EAAAA,MAA4B,GADzBC,GAAcF,GAAA,GAAAiuB,GAAAjuB,GAAA,GAGgCkuB,IAHZD,GAAhBx7B,KAA4Bw7B,GAAVv7B,WAGUP,GAArB+T,EAAAA,UAAe,GAAM,IAA9CioB,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GAEtBzO,GAAmC,OAAlBhhB,cAAK,EAALA,GAAOkL,QAAiBlL,cAAK,EAALA,GAAOhM,KAAO,KACQ47B,GAAAl8B,GAArB+T,EAAAA,UAAe,GAAM,GAA9CmoB,GAAA,GAAqBA,GAAA,IAE3BxW,EAAAA,EAAAA,MASjB3R,EAAAA,WAAgB,WACZwmB,EAAc37B,cAAI,EAAJA,GAAMsS,MACxB,GAAG,CAACtS,KAEJmV,EAAAA,WAAgB,WACZhG,GAAe,IAAD1P,OAAKO,cAAI,EAAJA,GAAMqC,GAAE,+BAA8BoN,QAC7D,GAAG,IAGH,IAAMoV,GAAe,SAAC9e,EAAG6e,GACrB7e,EAAE6Q,iBAEFgO,EADY7e,EAAEgR,OAAOrU,MAEzB,EAEM66B,GAAU,WACZ,IAAIhO,EAAQ,EACN7hB,EAAQ,IAAIzH,OAkHlB,OAhHKqM,IACD5E,EAAM4E,MAAQ,8BACdid,KAGCtC,IACDvf,EAAMuf,UAAY,kCAClBsC,KAGCpC,IACDzf,EAAMyf,QAAU,gCAChBoC,KAGCvF,IACDtc,EAAMsc,aAAe,mCACrBuF,KAGC7B,KACDhgB,EAAMggB,WAAa,6BACnB6B,KAGA7B,UAAcA,IAAAA,GAAYjD,eAC1B1Y,GAAAA,GAAMqa,KAAK,kCAAD3sB,OAC4BiuB,cAAU,EAAVA,GAAY9iB,KAAI,cAAAnL,OACvB,UAAvBiuB,cAAU,EAAVA,GAAYwC,QAAoB,MAAQ,OAAM,yCAGtDX,KAGCqM,IAIG/3B,IAAAA,QAAU+3B,MAAc/3B,IAAAA,QAAU,qBAC7B44B,KACD/uB,EAAM+uB,iBAAmB,+BACzBlN,KAGCyM,KACDtuB,EAAMsuB,SAAW,+BACjBzM,KAGC2M,IAGOvB,EAAAA,GAAAA,GAAWuB,MACnBxuB,EAAM8vB,QAAU,uCAChBzrB,GAAAA,GAAMqa,KAAK,wCACXmD,MALA7hB,EAAM8vB,QAAU,+BAChBjO,MAQJ1rB,IAAAA,QAAU+3B,MAAc/3B,IAAAA,QAAU,YAC7Bi4B,KACDpuB,EAAMouB,eAAiB,+BACvBvM,KAGCyM,KACDtuB,EAAMsuB,SAAW,+BACjBzM,KAGC2M,IAGOvB,EAAAA,GAAAA,GAAWuB,MACnBxuB,EAAM8vB,QAAU,uCAChBzrB,GAAAA,GAAMqa,KAAK,wCACXmD,MALA7hB,EAAM8vB,QAAU,+BAChBjO,MAQJ1rB,IAAAA,QAAU+3B,MAAc/3B,IAAAA,QAAU,6BAC7B+4B,KACDlvB,EAAMkvB,aAAe,+BACrBrN,KAGC6M,KACD1uB,EAAM0uB,aAAe,mCACrB7M,KAGC+M,IAIO3B,EAAAA,GAAAA,GAAW2B,MACnB5uB,EAAM4uB,mBACF,kDACJvqB,GAAAA,GAAMqa,KACF,mDAEJmD,MATA7hB,EAAM4uB,mBACF,0CACJ/M,MAWH1B,KACDngB,EAAMmgB,YAAc,oCACpB0B,OAxEJ7hB,EAAMpI,SAAW,+BACjBiqB,KA2EJgH,GAAO7oB,IACC6hB,CACZ,EAGMtL,GAAY,eArOtBrW,EAqOsBoD,GArOtBpD,EAqOsB9H,KAAA+E,MAAG,SAAAyE,EAAOvJ,GAAC,IAAAkrB,EAAAvB,EAAAC,EAAAzL,EAAA,OAAApe,KAAAoB,MAAA,SAAAsI,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA7F,MAAA,OAwCzB,GAvCA5D,EAAE6Q,iBACI8Y,EAAa/X,EAAMA,MAAMsV,GAAWpV,OAAO,cAC3C8X,EAAWhY,EAAMA,MAAMwV,GAAStV,OAAO,eAEvCqM,EAAK,IAAIC,UAEZC,OAAO,UAAWpkB,cAAI,EAAJA,GAAMqC,IAC3B6hB,EAAGE,OAAO,QAAS9R,GACnB4R,EAAGE,OAAO,aAAcsL,GACxBxL,EAAGE,OAAO,WAAYuL,GAEtBzL,EAAGE,OAAO,mBAAoB4F,aAAY,EAAZA,EAAc3nB,IAC5C6hB,EAAGE,OAAO,UAAWsJ,cAAU,EAAVA,GAAYrrB,IACjC6hB,EAAGE,OAAO,cAAeyJ,IACzB3J,EAAGE,OAAO,kBAAmBpkB,UAAiB,QAAbixB,EAAJjxB,GAAM6vB,mBAAW,IAAAoB,OAAA,EAAjBA,EAAmB5uB,IAChD6hB,EAAGE,OAAO,WAAYvgB,IAAAA,UAAYgnB,KAGlC3G,EAAGE,OAAO,YAAa,MACvBF,EAAGE,OAAO,YAAa,MACvBF,EAAGE,OAAO,aAAc,MACxBF,EAAGE,OAAO,YAAawX,SAAAA,GAAY,MACnC1X,EAAGE,OAAO,YAAaqY,IACvBvY,EAAGE,OAAO,YAAa4X,IACvB9X,EAAGE,OAAO,WAAY8X,IACtBhY,EAAGE,OAAO,kBAAmB0X,IAC7B5X,EAAGE,OAAO,iBAAkBwY,IAC5B1Y,EAAGE,OAAO,kBAAmBgY,IAC7BlY,EAAGE,OAAO,uBAAwBkY,IAClCpY,EAAGE,OACC,SACArQ,SACKC,cAAc,2BACdC,aAAa,YAEtBpP,MAAM0J,KAAK+U,IAAO/a,SAAQ,SAAC8b,GACvBH,EAAGE,OAAO,SAAUC,EACxB,KAIIkZ,KAAW,CAAF/tB,EAAA7F,KAAA,gBAAA6F,EAAA7F,KAAA,GACHqzB,GAAc9Y,GACfzU,SACA3G,MAAK,SAACiE,GACH,GAAoB,aAAhBA,aAAG,EAAHA,EAAK6L,QAAsB,KAAA6kB,EAAAC,EACvBC,EAAW,GAAHl+B,OAAAmF,GACLuR,GAAO,CACV,CACI9T,GAAI0K,SAAa,QAAV0wB,EAAH1wB,EAAK6wB,gBAAQ,IAAAH,OAAA,EAAbA,EAAep7B,GACnBiQ,MAAOvF,SAAa,QAAV2wB,EAAH3wB,EAAK6wB,gBAAQ,IAAAF,OAAA,EAAbA,EAAeprB,SAG9BmP,GAASoc,EAAAA,EAAAA,IAAcF,IACvB79B,IAEA+R,KAAKO,KAAK,CACNJ,SAAU,SACVK,KAAM,UACNC,MAAOvF,EAAIgZ,QACX9T,mBAAmB,EACnBC,MAAO,MAEf,CACJ,IAAE,OACK,SAACnE,GACgB,OAAhBA,aAAG,EAAHA,EAAK6K,SACL/G,KAAKO,KAAK,CACNJ,SAAU,SACVK,KAAM,QACNC,MAAO,8CACPL,mBAAmB,GAG/B,IAAE,yBAAAzC,EAAA/D,OAAA,GAAA6D,EAAA,IAhTlB,eAAAzB,EAAA,KAAAC,EAAA1B,UAAA,WAAAlB,SAAA,SAAAtC,EAAA0E,GAAA,IAAAD,EAAAO,EAAA1B,MAAA2B,EAAAC,GAAA,SAAAP,EAAA7K,GAAA0K,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,OAAA9K,EAAA,UAAA8K,EAAAO,GAAAX,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,QAAAO,EAAA,CAAAR,OAAAT,EAAA,MAkTK,gBA7EiB4D,GAAA,OAAAM,EAAA9E,MAAA,KAAAE,UAAA,KA+ElB+I,EAAAA,WAAgB,WAERpB,SAASiS,qBAAqB,QAAQ,GAAG9gB,MAAMsQ,OAD/C5T,GACwD,WAEA,SAEhE,GAAG,CAACA,KA+BJ,OAlBAE,EAAAA,EAAAA,YAAU,YAGF+B,IAAAA,SAAW,CAAC,EAAG,GAAI,IAAK0U,GAAKC,cAC7BD,GAAKulB,oBAAoB,MAEzBrc,GAASsc,EAAAA,EAAAA,KAA6BzC,GAE9C,GAAG,CAACA,KAWAv5B,EAAAA,EAAAA,KAAA4C,EAAAA,SAAA,CAAA1C,UACIqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wCAAuCd,SAAA,EAClDF,EAAAA,EAAAA,KAAA,MAAAE,SACMy5B,EAEI,kBADA,yBAGV35B,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACH,aAAW,cACXxY,UAAU,eACVwS,QAASzV,EAAMmC,UAEfF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIrBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,uDAAsDd,SAAA,EAE/Dy5B,IACE35B,EAAAA,EAAAA,KAACi8B,GAAsB,CACnBh+B,KAAMA,GACNksB,SAAU,WACNqP,GACJ,EACAz7B,MAAOA,IAKd47B,IACG35B,EAAAA,EAAAA,KAACk8B,GAAqB,CAClBp+B,QAASu9B,GACTlE,UAAW,kBAAMmE,IAAY,EAAK,IAGzCD,KACG95B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,8BAA6Bd,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,QACHO,MAAM,QACNW,KAAK,OACLif,YAAY,qBACZ5X,KAAK,QACLqY,UAAU,EACVvgB,MAAO4P,EACP5E,OACIK,cAAG,EAAHA,GAAKuE,SAASoc,UAAqB,QAAPrC,EAAdqC,GAAgBpc,aAAK,IAAA+Z,OAAA,EAArBA,EAAwB,IAE1C1pB,SAAU,SAACoD,GAAC,OAAK8e,GAAa9e,EAAGyd,EAAS,OAqBlDzhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SACIgB,UAAS,2BACT,aAAW,OAAMd,SACpB,iBAGDF,EAAAA,EAAAA,KAAA,SACIgB,UAAS,8BACTuf,UAAQ,EACRQ,aAAcyQ,UAsB1BxxB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAE/gB,SAAA,CAAC,eACHF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,UAErCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,8BAA6Bd,UACxCF,EAAAA,EAAAA,KAACmmB,GAAU,CACPD,gBAAe,OAAAxoB,OAASkY,EACnBA,QACAE,OAAO,eACZkQ,QAASpQ,EACJA,MAAM3X,cAAI,EAAJA,GAAMitB,WACZgC,SACLjH,QACImF,GACAxV,EACKA,MAAM3X,cAAI,EAAJA,GAAMmtB,SACZ8B,SAETvX,KAAMuV,EACNpF,QAASqF,OAGhBwB,UAA0B,QAAZpC,EAAdoC,GAAgBM,kBAAU,IAAA1C,OAAA,EAA1BA,EAA6B,MAC1BvqB,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxBysB,UAA0B,QAAZnC,EAAdmC,GAAgBM,kBAAU,IAAAzC,OAAA,EAA1BA,EAA6B,MAIrCxe,cAAG,EAAHA,GAAKkf,aACFlrB,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxB8L,cAAG,EAAHA,GAAKkf,kBAMtBlrB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAE/gB,SAAA,CAAC,aACLF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,UAEnCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,8BAA6Bd,UACxCF,EAAAA,EAAAA,KAACmmB,GAAU,CACPD,gBAAe,OAAAxoB,OAASkY,EACnBA,QACAE,OAAO,eACZkQ,QACIkF,GACAtV,EACKA,MAAM3X,cAAI,EAAJA,GAAMitB,WACZgC,SAETjH,QAASrQ,EACJA,MAAM3X,cAAI,EAAJA,GAAMmtB,SACZ8B,SACLvX,KAAMyV,EACNtF,QAASuF,OAGhBsB,UAAwB,QAAVlC,EAAdkC,GAAgBQ,gBAAQ,IAAA1C,OAAA,EAAxBA,EAA2B,MACxBzqB,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxBysB,UAAwB,QAAVjC,EAAdiC,GAAgBQ,gBAAQ,IAAAzC,OAAA,EAAxBA,EAA2B,MAInC1e,cAAG,EAAHA,GAAKof,WACFprB,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxB8L,cAAG,EAAHA,GAAKof,gBAMtB7pB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAACotB,GAAwB,CACrBrH,SAAUkC,EACVhB,SAAUwE,KAGbzf,cAAG,EAAHA,GAAKic,gBACFjoB,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxB8L,cAAG,EAAHA,GAAKic,mBAKlB1mB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAACm8B,GAAmB,CAChBpW,SAAU4F,GACV1E,SAAU2E,GACV3D,aAAcA,KAGjBjc,cAAG,EAAHA,GAAK2f,cACF3rB,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxB8L,cAAG,EAAHA,GAAK2f,cAIbA,cAAU,EAAVA,GAAYjD,gBACT1oB,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SAAA,kCAAAxC,OAErBiuB,cAAU,EAAVA,GAAY9iB,KAAI,cAAAnL,OAEO,UAAvBiuB,cAAU,EAAVA,GAAYwC,QACN,MACA,OAAM,6CAe5B5sB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAACgpB,GAAAA,EAAO,CACJroB,MAAOk5B,GACPj5B,SAAUk5B,GAAY55B,UAEtBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,oCAAmCd,SAAA,EAC9CqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAE/gB,SAAA,CACZ,IAAI,cACKF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,MAAQ,QAE3BqB,EAAAA,EAAAA,MAACynB,GAAAA,EAAQxP,OAAM,CAACxY,UAAU,iGAAgGd,SAAA,EACtHF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,2BAA0Bd,SACrC25B,SAAAA,GAAY,QAGjB75B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAGrBhB,EAAAA,EAAAA,KAACgpB,GAAAA,EAAQrB,QAAO,CAAC3mB,UAAU,qBAAoBd,SAK1C,QAL0CwP,EAC1C,CACG,kBACA,0BACA,iBACH,IAAAA,OAAA,EAJAA,EAIE3M,KAAI,SAAC8C,EAAGvD,GAAC,OACRtC,EAAAA,EAAAA,KAACgpB,GAAAA,EAAQlB,OAAM,CAEX9mB,UAAW,SAAA2W,GAAA,IAAGoQ,EAAMpQ,EAANoQ,OAAM,2BAAArqB,OAEZqqB,EACM,SACA,GAAE,EAGhBpnB,MAAOkF,EAAE3F,SAER,SAAA2X,GAAA,IAAGkO,EAAQlO,EAARkO,SAAQ,OACRxkB,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,CACK2F,EAEAkgB,GACG/lB,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAEb,KAEL,GAnBFsB,EAqBQ,YAMhCqqB,UAAwB,QAAVoM,EAAdpM,GAAgBkN,gBAAQ,IAAAd,OAAA,EAAxBA,EAA2B,MACxB/4B,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxBysB,UAAwB,QAAVqM,EAAdrM,GAAgBkN,gBAAQ,IAAAb,OAAA,EAAxBA,EAA2B,MAInChtB,cAAG,EAAHA,GAAKzI,YACFvD,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxB8L,cAAG,EAAHA,GAAKzI,cAKJ,oBAAbs2B,IACGt4B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAACgpB,GAAAA,EAAO,CACJroB,MAAO+5B,GACP95B,SAAU+5B,GAAoBz6B,UAE9BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,oCAAmCd,SAAA,EAC9CqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAE/gB,SAAA,CACZ,IAAI,cACKF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,MAAQ,QAE3BqB,EAAAA,EAAAA,MAACynB,GAAAA,EAAQxP,OAAM,CAACxY,UAAU,iGAAgGd,SAAA,EACtHF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,2BAA0Bd,SACrCw6B,SAAAA,GAAoB,QAGzB16B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAGrBhB,EAAAA,EAAAA,KAACgpB,GAAAA,EAAQrB,QAAO,CAAC3mB,UAAU,qBAAoBd,SAI1C,QAJ0C6X,EAC1C,CACG,2BACA,qCACH,IAAAA,OAAA,EAHAA,EAGEhV,KAAI,SAAC8C,EAAGvD,GAAC,OACRtC,EAAAA,EAAAA,KAACgpB,GAAAA,EAAQlB,OAAM,CAEX9mB,UAAW,SAAAiX,GAAA,IACP8P,EAAM9P,EAAN8P,OAAM,2BAAArqB,OAGFqqB,EACM,SACA,GAAE,EAGhBpnB,MAAOkF,EAAE3F,SAER,SAAAk8B,GAAA,IAAGrW,EAAQqW,EAARrW,SAAQ,OACRxkB,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,CACK2F,EAEAkgB,GACG/lB,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAEb,KAEL,GArBFsB,EAuBQ,YAMhC0J,cAAG,EAAHA,GAAK0uB,oBACF16B,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxB8L,cAAG,EAAHA,GAAK0uB,sBAIlB,KAGU,WAAbb,IACGt4B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAACgpB,GAAAA,EAAO,CACJroB,MAAOo5B,GACPn5B,SAAUo5B,GAAkB95B,UAE5BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,oCAAmCd,SAAA,EAC9CqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAE/gB,SAAA,CACZ,IAAI,WACEF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,MAAQ,QAExBqB,EAAAA,EAAAA,MAACynB,GAAAA,EAAQxP,OAAM,CAACxY,UAAU,iGAAgGd,SAAA,EACtHF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,2BAA0Bd,SACrC65B,SAAAA,GAAkB,QAGvB/5B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAGrBhB,EAAAA,EAAAA,KAACgpB,GAAAA,EAAQrB,QAAO,CAAC3mB,UAAU,qBAAoBd,SAM1C,QAN0CiY,EAC1C,CACG,qBACA,qBACA,qBACA,kEACH,IAAAA,OAAA,EALAA,EAKEpV,KAAI,SAAC8C,EAAGvD,GAAC,OACRtC,EAAAA,EAAAA,KAACgpB,GAAAA,EAAQlB,OAAM,CAEX9mB,UAAW,SAAAq7B,GAAA,IACPtU,EAAMsU,EAANtU,OAAM,2BAAArqB,OAGFqqB,EACM,SACA,GAAE,EAGhBpnB,MAAOkF,EAAE3F,SAER,SAAAo8B,GAAA,IAAGvW,EAAQuW,EAARvW,SAAQ,OACRxkB,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,CACK2F,EAEAkgB,GACG/lB,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAEb,KAEL,GArBFsB,EAuBQ,YAMhC0J,cAAG,EAAHA,GAAK+tB,kBACF/5B,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxB8L,cAAG,EAAHA,GAAK+tB,oBAIlB,KAEHF,IACGt4B,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,CACG,4BAAb25B,IACG75B,EAAAA,EAAAA,KAAA4C,EAAAA,SAAA,CAAA1C,UAcIqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAACgpB,GAAAA,EAAO,CACJroB,MAAOk6B,GACPj6B,SAAUk6B,GAAgB56B,UAE1BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,oCAAmCd,SAAA,EAC9CqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAE/gB,SAAA,CACZ,IAAI,iBACU,KACfF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,MAAQ,QAEjBqB,EAAAA,EAAAA,MAACynB,GAAAA,EAAQxP,OAAM,CAACxY,UAAU,iGAAgGd,SAAA,EACtHF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,2BAA0Bd,SACrC26B,SAAAA,GACG,QAGR76B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAGrBhB,EAAAA,EAAAA,KAACgpB,GAAAA,EAAQrB,QAAO,CAAC3mB,UAAU,qBAAoBd,SAI1C,QAJ0C+4B,EAC1C,CACG,2BACA,qCACH,IAAAA,OAAA,EAHAA,EAGEl2B,KAAI,SAAC8C,EAAGvD,GAAC,OACRtC,EAAAA,EAAAA,KAACgpB,GAAAA,EAAQlB,OAAM,CAEX9mB,UAAW,SAAAu7B,GAAA,IACPxU,EAAMwU,EAANxU,OAAM,2BAAArqB,OAGFqqB,EACM,SACA,GAAE,EAGhBpnB,MAAOkF,EAAE3F,SAER,SAAAs8B,GAAA,IACGzW,EAAQyW,EAARzW,SAAQ,OAERxkB,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,CACK2F,EAEAkgB,GACG/lB,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAEb,KAEL,GAvBFsB,EAyBQ,YAKhC0J,cAAG,EAAHA,GAAK6uB,gBACFlO,UACe,QADDuM,EAAdvM,GACM8P,iBAAS,IAAAvD,OAAA,EADfA,EACkB,UAI9B33B,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,YACHO,MAAM,YACNW,KAAK,OACLif,YAAY,kBACZ5X,KAAK,YACLqY,UAAU,EACVvgB,MAAOs5B,GACPtuB,MAAOK,cAAG,EAAHA,GAAKiuB,SACZr5B,SAAU,SAACoD,GAAC,OACR8e,GACI9e,EACAk2B,GACH,OAKbl6B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,WACHO,MAAM,WACNW,KAAK,OACLif,YAAY,iBACZ5X,KAAK,WACLqY,UAAU,EACVvgB,MAAOw5B,GACPxuB,OACIK,cAAG,EAAHA,GAAKyvB,WACL9O,UACc,QADAwM,EAAdxM,GACM+P,gBAAQ,IAAAvD,OAAA,EADdA,EACiB,IAErBv4B,SAAU,SAACoD,GAAC,OACR8e,GACI9e,EACAo2B,GACH,SAOP,4BAAbP,IACGt4B,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,kBACHO,MAAM,kBACNW,KAAK,SACLif,YAAY,KACZ5X,KAAK,kBACLqY,UAAU,EACVvgB,MAAO05B,GACP1uB,MAAOK,cAAG,EAAHA,GAAKquB,aACZz5B,SAAU,SAACoD,GAAC,OACR8e,GACI9e,EACAs2B,GACH,OAKbt6B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,sBACHO,MAAM,uBACNW,KAAK,OACLif,YAAY,KACZ5X,KAAK,sBACLqY,UAAU,EACVvgB,MAAO45B,GACP5uB,MACIK,cAAG,EAAHA,GAAKuuB,mBAET35B,SAAU,SAACoD,GAAC,OACR8e,GACI9e,EACAw2B,GACH,SAKjB,QAER,MAGJx6B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAACstB,GAAiB,CACdvH,SAAU+C,GACVC,YAAakD,QAgDrBjsB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOihB,QAAQ,GAAE/gB,SAAC,mBAClBF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,8BACVmC,MAAO,CAAE4S,UAAW,SAAU7V,UAE9BF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CACd9Y,SAzqBb,SAACoD,EAAG0e,GAC3B,IAAM/iB,EAAO+iB,EAAOC,UACpBoJ,GAAepsB,EACnB,OA0qBiCgtB,UAA2B,QAAbyM,EAAdzM,GAAgBb,mBAAW,IAAAsN,OAAA,EAA3BA,EAA8B,MAC3Bp5B,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,cAAad,UACzBqB,EAAAA,EAAAA,MAAA,SAAArB,SAAA,CACK,IAEGysB,UACiB,QADH0M,EAAd1M,GACMb,mBAAW,IAAAuN,OAAA,EADjBA,EACoB,GACtB,UAIbrtB,cAAG,EAAHA,GAAK8f,eACF9rB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,cAAad,UACzBqB,EAAAA,EAAAA,MAAA,SAAArB,SAAA,CAAO,IAAE8L,cAAG,EAAHA,GAAK8f,YAAY,eAM1C9rB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBF,EAAAA,EAAAA,KAAC+iB,GAAAA,EAAiB,CACdxB,MAAOA,GACPC,SAAUA,QAMlBxhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,mBAAkBd,UAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,gDAA+Cd,SAAA,EAC1DF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHiC,QAAQ,YACRza,UAAU,OACVwS,QAASzV,EAAMmC,SAClB,WAICL,IAME0B,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAACxY,UAAU,oBAAmBd,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,4BACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,UAET,oBAbX0C,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAAChG,QAAS0O,GAAahiB,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,8BAAgC,2BAwBzF,24CC1hCA,IAAM4U,GAAQ,IAAIqT,GAAAA,EAmblB,SAhbyB,SAAFtrB,GAAuB,IAAA2sB,EAAAC,EAAAC,EAAAC,EAAAC,EAAnB3sB,EAAKJ,EAALI,MAAO4+B,EAAMh/B,EAANg/B,OAC9Bnd,GAA0BrL,EAAAA,EAAAA,KAAY,SAAAtO,GAAC,OAAIA,EAAEuO,OAAO,IAA5CnW,EAAIuhB,EAAJvhB,KAAMmW,EAAOoL,EAAPpL,QACRsL,GAAWC,EAAAA,EAAAA,MAGmBvgB,EAAAC,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA/BiR,EAAKnR,EAAA,GAAEqiB,EAAQriB,EAAA,GACwB0e,EAAAze,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAvCyrB,EAASjN,EAAA,GAAE8e,EAAY9e,EAAA,GACkBG,EAAA5e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAzCkyB,EAAUvT,EAAA,GAAE2b,EAAa3b,EAAA,GACsBG,EAAA/e,IAApBC,EAAAA,EAAAA,UAAS,IAAI2rB,MAAO,GAA/CC,EAAS9M,EAAA,GAAE+M,EAAY/M,EAAA,GACoBG,EAAAlf,IAApBC,EAAAA,EAAAA,UAAS,IAAI2rB,MAAO,GAA3CG,EAAO7M,EAAA,GAAE8M,EAAU9M,EAAA,GACgB+M,EAAAjsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnCu9B,EAAOvR,EAAA,GAAEwR,EAAUxR,EAAA,GAC0BE,EAAAnsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA7C2oB,EAAYuD,EAAA,GAAEC,EAAeD,EAAA,GACYE,EAAArsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAzCqsB,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GACoBG,EAAAxsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GACF0sB,GAD/BH,EAAA,GAAiBA,EAAA,GACcxsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,IAA3CwsB,EAAWE,EAAA,GAAED,EAAcC,EAAA,GACWE,EAAA7sB,IAAjBC,EAAAA,EAAAA,UAAS,SAAQ,GACK+sB,GADrCH,EAAA,GAAWA,EAAA,GAC0B7sB,IAAlBC,EAAAA,EAAAA,UAAS,UAAS,IAA3CwpB,EAAQuD,EAAA,GAAEJ,EAAWI,EAAA,GACiCG,EAAAntB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAtD8sB,GAAgBI,EAAA,GAAEuQ,GAAmBvQ,EAAA,GACeC,GAAAptB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAApDitB,GAAeE,GAAA,GAAEuQ,GAAkBvQ,GAAA,GACYwQ,GAAA59B,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA/C2jB,GAAaga,GAAA,GAAE/Z,GAAgB+Z,GAAA,GACM9pB,GAAA9T,GAAlB+T,EAAAA,SAAe,IAAG,GAArCmO,GAAKpO,GAAA,GAAEqO,GAAQrO,GAAA,GAEdgU,IAASloB,EAAAA,EAAAA,MAKSsqB,GAAAlqB,IAAxBmqB,EAAAA,EAAAA,MAAwB,GAFxBC,GAAWF,GAAA,GAAAG,GAAAH,GAAA,GACT1pB,GAAS6pB,GAAT7pB,UAAW8L,GAAK+d,GAAL/d,MAMeuB,GAAA7N,IAA5B8N,EAAAA,EAAAA,MAA4B,GAF5BC,GAAcF,GAAA,GAAAiuB,GAAAjuB,GAAA,GACYyd,IAAdwQ,GAAVx7B,KAA0Cw7B,GAA9Bv7B,YAKZs9B,GAAc9oB,EAAQ+oB,MAAK,SAAAj3B,GAAC,OAAIA,EAAE5F,KAAOq8B,CAAM,IAErDlZ,IAAyCC,EAAAA,EAAAA,IAAuB,IAADhmB,OAAKypB,cAAM,EAANA,GAAQhpB,OAAM,+BAApEi/B,GAAU3Z,GAAhB9jB,KAGFgtB,IAH8BlJ,GAAV7jB,WAGe,OAAlB+L,cAAK,EAALA,GAAOkL,QAAiBlL,cAAK,EAALA,GAAOhM,KAAM,MAI5DyT,EAAAA,WAAgB,WACZ,IAAMiqB,EAAe,SAACn3B,GAElB,OADU0P,GAAMA,MAAM1P,GAAGgnB,QAE7B,EACA9f,GAAe,IAAD1P,OAAKi/B,EAAM,6BAA4BjvB,SAAS3G,MAAK,SAAAiE,GAC/D,GAAGA,EAAI,KAAAsyB,EACGnmB,EAAanM,SAAU,QAAPsyB,EAAHtyB,EAAKtJ,aAAK,IAAA47B,OAAA,EAAVA,EAAa,GAEhC7b,EAASzW,EAAI+C,SACb6uB,EAAa5xB,EAAI6f,iBACjB+O,EAAc37B,aAAI,EAAJA,EAAM8P,SACpBod,EAAakS,EAAaryB,EAAIiiB,aAC9B5B,EAAWgS,EAAaryB,EAAImiB,WAC5B2P,EAAW9xB,EAAIuyB,cACf9R,EAAgBzgB,EAAIwyB,eACpB5R,EAAczU,EAAa,CAAC7W,GAAI6W,aAAU,EAAVA,EAAY7W,GAAIuI,KAAMsO,aAAU,EAAVA,EAAYtO,MAAO,IACzEkjB,EAAe/gB,EAAI8gB,aACnBG,EAAYnqB,IAAAA,UAAYkJ,EAAI8d,WAC5BiU,GAAoB/xB,EAAIyyB,gBACxBT,GAAmBhyB,EAAI0yB,kBACvBxa,GAAiBlY,EAAIuW,MAIzB,CACJ,IAAE,OAAO,SAACvV,GACNyC,QAAQC,IAAI1C,EAChB,GACJ,GAAG,CAAC/N,EAAM0+B,IAKV,IAAM7Z,GAAe,SAAC9e,EAAG6e,GACrB7e,EAAE6Q,iBAEFgO,EADY7e,EAAEgR,OAAOrU,MAEzB,EAkEOosB,GAAqD1tB,IAA/B2tB,EAAAA,EAAAA,MAA+B,GAAnC,GAczB5Z,EAAAA,WAAgB,WAERpB,SAASiS,qBAAqB,QAAQ,GAAG9gB,MAAMsQ,OAD/C5T,IAAa8qB,GAC2C,WAEA,SAEhE,GAAG,CAAC9qB,GAAW8qB,KAIf,IAKsB3e,GAAO2xB,GAAAC,GACrBC,GACAC,GACAC,GAMN,OACE/9B,EAAAA,EAAAA,KAAA4C,EAAAA,SAAA,CAAA1C,UACIqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wCAAuCd,SAAA,EACjDqB,EAAAA,EAAAA,MAAA,MAAArB,SAAA,CAAI,gBAEIyqB,KAAsB3qB,EAAAA,EAAAA,KAAA,OACnBgB,UAAU,gCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,qBAIlCxb,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACH,aAAW,cACXxY,UAAU,eACVwS,QAASzV,EAAMmC,UAEfF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIrBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wDAAuDd,SAAA,CACjEyqB,KACG3qB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAQmC,MAAO,CAC1BjE,MAAO,OACPL,OAAQ,OACRoR,SAAU,WACVoJ,IAAK,EACLC,KAAM,EACNL,OAAQ,MAGhB1X,EAAAA,EAAAA,MAAA,OAAKP,UAAU,8BAA6Bd,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,QACHO,MAAM,QACNW,KAAK,OACLif,YAAY,qBACZ5X,KAAK,QACLqY,UAAU,EACVvgB,MAAO4P,EACP5E,MAAQghB,UAAqB,QAAPrC,EAAdqC,GAAgBpc,aAAK,IAAA+Z,OAAA,EAArBA,EAAwB,GAChC1pB,SAAU,SAAAoD,GAAC,OAAI8e,GAAa9e,EAAGyd,EAAS,OAIhDzhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SACIgB,UAAS,2BACT,aAAW,OAAMd,SACpB,eAGDF,EAAAA,EAAAA,KAAA,SACIgB,UAAS,8BACTuf,UAAQ,EACRQ,aAAcgK,UAK1B/qB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SACIgB,UAAS,2BACT,aAAW,OAAMd,SACpB,iBAGDF,EAAAA,EAAAA,KAAA,SACIgB,UAAS,8BACTuf,UAAQ,EACRQ,aAAcyQ,UAK1BxxB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SACIgB,UAAS,2BACT,aAAW,OAAMd,SACpB,aAGDF,EAAAA,EAAAA,KAAA,SACIgB,UAAS,8BACTuf,UAAQ,EACRQ,aAAc8b,UAK1B78B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAE/gB,SAAA,CAAC,eAAWF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,UACnDF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,8BAA6Bd,UACxCF,EAAAA,EAAAA,KAACmmB,GAAU,CACPD,gBAAe,OAAAxoB,OAASkY,GAAMA,QAAQE,OAAO,eAC7CkQ,QAASpQ,GAAMA,MAAM3X,aAAI,EAAJA,EAAMgvB,YAAYC,SACvCjH,QAASmF,GAAWxV,GAAMA,MAAM3X,aAAI,EAAJA,EAAMkvB,UAAUD,SAChDvX,KAAMuV,EACNpF,QAASqF,OAIbwB,UAA0B,QAAZpC,EAAdoC,GAAgBM,kBAAU,IAAA1C,OAAA,EAA1BA,EAA6B,MAC9BvqB,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAACC,MAAO,OAAOlD,SAAEysB,UAA0B,QAAZnC,EAAdmC,GAAgBM,kBAAU,IAAAzC,OAAA,EAA1BA,EAA6B,WAKrExqB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAE/gB,SAAA,CAAC,aAASF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,UACjDF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,8BAA6Bd,UACxCF,EAAAA,EAAAA,KAACmmB,GAAU,CACPD,gBAAe,OAAAxoB,OAASkY,GAAMA,QAAQE,OAAO,eAC7CkQ,QAASkF,GAAatV,GAAMA,MAAM3X,aAAI,EAAJA,EAAMgvB,YAAYC,SACpDjH,QAASrQ,GAAMA,MAAM3X,aAAI,EAAJA,EAAMkvB,UAAUD,SACrCvX,KAAMyV,EACNtF,QAASuF,OAIbsB,UAAwB,QAAVlC,EAAdkC,GAAgBQ,gBAAQ,IAAA1C,OAAA,EAAxBA,EAA2B,MAC5BzqB,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAACC,MAAO,OAAOlD,SAAEysB,UAAwB,QAAVjC,EAAdiC,GAAgBQ,gBAAQ,IAAAzC,OAAA,EAAxBA,EAA2B,WAKnE1qB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBF,EAAAA,EAAAA,KAACotB,GAAwB,CAACrH,SAAUkC,EAAchB,SAAUwE,OAGhEzrB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBF,EAAAA,EAAAA,KAACm8B,GAAmB,CAACpW,SAAU4F,EAAY1E,SAAU2E,OAWzD5rB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBF,EAAAA,EAAAA,KAACstB,GAAiB,CAACvH,SAAU+C,EAAUC,YAAakD,OAGxDjsB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,sBAAqBd,SAAA,CAAC,sBAAkBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,YAC1FqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,EACtCF,EAAAA,EAAAA,KAAA,SACIwB,KAAK,SACL2f,QAAS,SAAAnd,GAAC,OAAIA,EAAEod,cAAcC,MAAM,EACpCrgB,UAAU,mCACVL,MAAOyrB,GACPxrB,SAAU,SAACoD,GAAC,OAAK8e,GAAa9e,EAAG+4B,GAAoB,IACvD,QACF/8B,EAAAA,EAAAA,KAAA,SACIwB,KAAK,SACL2f,QAAS,SAAAnd,GAAC,OAAIA,EAAEod,cAAcC,MAAM,EACpCrgB,UAAU,wCACVL,MAAO4rB,GACP3rB,SAAU,SAAAoD,GAAC,OAAI8e,GAAa9e,EAAGg5B,GAAmB,IACpD,WAGNh9B,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAACC,MAAO,OAAOlD,UA3LjC8L,GA4LyB2gB,GA3LvCkR,GAAU,GACVC,GAAW9xB,UAAmB,QAAhB2xB,GAAH3xB,GAAKyxB,sBAAc,IAAAE,QAAA,EAAnBA,GAAsB,GACjCI,GAAS/xB,UAAqB,QAAlB4xB,GAAH5xB,GAAK0xB,wBAAgB,IAAAE,QAAA,EAArBA,GAAwB,GAClCE,KAAUD,IAAWC,IACrBC,KAAQF,IAAWE,IACfF,OAwLiBt8B,EAAAA,EAAAA,MAAA,OAAK4B,MAAO,CAACC,MAAO,OAAOlD,SAAA,CAAC,gCACEk9B,cAAU,EAAVA,GAAYY,WAAW,UAAQZ,cAAU,EAAVA,GAAYa,aAAa,oBAK9Fj+B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOihB,QAAQ,GAAE/gB,SAAC,mBAClBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,8BAA8BmC,MAAO,CAAC4S,UAAW,SAAS7V,UACrEF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CAAC/Z,KAAMmsB,EAAalrB,SA7M3C,SAACoD,EAAG0e,GAC3B,IAAM/iB,EAAO+iB,EAAOC,UACpBoJ,EAAepsB,EACnB,YAgNoBK,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBF,EAAAA,EAAAA,KAAC+iB,GAAAA,EAAiB,CACdyB,qBA5OH,SAACxgB,EAAGse,GAEzByK,GAAmBzK,aAAI,EAAJA,EAAMhiB,IAAIoN,SAG7B,IAAI2W,EAAYxhB,GAAOogB,IACnB3N,EAAQ+O,aAAY,EAAZA,EAAcC,QAAQhC,GAClC+B,EAAariB,OAAOsT,EAAM,GAC1B4N,GAAiBmB,EACrB,EAoO4BE,SAAUtB,GACV1B,MAAOA,GACPC,SAAUA,QAIlBxhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,cAAad,UAExBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,gDAA+Cd,SAAA,EAC1DF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHiC,QAAQ,YACRza,UAAU,OACVwS,QAASzV,EAAMmC,SAClB,WAICL,IAMF0B,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAACxY,UAAU,oBAAmBd,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,4BACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,UAGV,oBAdN0C,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAAChG,QA/TnB,SAACxP,GAClBA,EAAE6Q,iBACJ,IAAM8Y,EAAa/X,GAAMA,MAAMsV,GAAWpV,OAAO,cAC3C8X,EAAWhY,GAAMA,MAAMwV,GAAStV,OAAO,cAEvCqM,EAAK,IAAIC,SACbD,EAAGE,OAAO,eAAgBpkB,aAAI,EAAJA,EAAMigC,cAChC/b,EAAGE,OAAO,UAAWpkB,aAAI,EAAJA,EAAMqC,IAC3B6hB,EAAGE,OAAO,QAAS9R,GACnB4R,EAAGE,OAAO,aAAcsL,GACxBxL,EAAGE,OAAO,WAAYuL,GACtBzL,EAAGE,OAAO,aAAcpkB,aAAI,EAAJA,EAAM06B,YAC9BxW,EAAGE,OAAO,mBAAoB4F,aAAY,EAAZA,EAAc3nB,IAC5C6hB,EAAGE,OAAO,UAAWsJ,aAAU,EAAVA,EAAYrrB,IACjC6hB,EAAGE,OAAO,cAAeyJ,GACzB3J,EAAGE,OAAO,kBAAmBpkB,aAAI,EAAJA,EAAMkgC,iBACnChc,EAAGE,OAAO,WAAYvgB,IAAAA,UAAYgnB,IAClC3G,EAAGE,OAAO,iBAAkB+J,IAC5BjK,EAAGE,OAAO,mBAAoBkK,IAC9BpK,EAAGE,OAAO,YAAa,MACvBF,EAAGE,OAAO,YAAa6a,cAAW,EAAXA,GAAakB,YACpCjc,EAAGE,OAAO,aAAc,MACxBF,EAAGE,OAAO,UAAW,OACrBF,EAAGE,OAAO,SAAUrQ,SAASC,cAAc,2BAA2BC,aAAa,YACnFpP,MAAM0J,KAAK+U,IAAO/a,SAAQ,SAAC8b,GACvBH,EAAGE,OAAO,SAAUC,EACxB,IAEAmH,GAAY,CAAC9pB,KAAMwiB,EAAI7hB,GAAIq8B,IAASjvB,SAAS3G,MAAK,SAAAiE,GAC1C,GAAmB,aAAhBA,aAAG,EAAHA,EAAK6L,QAAqB,KAAAwnB,EAEpBzC,EAAQ/4B,GAAOuR,GACnBwnB,EAAmB,QAAXyC,EAAGzC,SAAQ,IAAAyC,OAAA,EAARA,EAAUt7B,KAAI,SAAA8C,GAAK,IAAA61B,EAC3B,OAAGxwB,OAAOrF,aAAC,EAADA,EAAGvF,MAAQ4K,OAAOF,SAAa,QAAV0wB,EAAH1wB,EAAK6wB,gBAAQ,IAAAH,OAAA,EAAbA,EAAep7B,IAChC0K,aAAG,EAAHA,EAAK6wB,SACHh2B,CAChB,IAED6Z,GAASoc,EAAAA,EAAAA,IAAcF,IAEvB9rB,KAAKO,KAAK,CACNJ,SAAU,SACVK,KAAM,UACNC,MAAOvF,aAAG,EAAHA,EAAKgZ,QACZ9T,mBAAmB,EACnBC,MAAO,OAGXpS,GACJ,CACR,IAAE,OAAO,SAACiO,GACa,OAAhBA,aAAG,EAAHA,EAAK6K,SACJ/G,KAAKO,KAAK,CACNJ,SAAU,SACVK,KAAM,QACNC,MAAO,sCACPL,mBAAmB,GAG/B,GACJ,EAmQ8DhQ,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,8BAAgC,2BAwBjF,yPCjcA+C,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAhB,EAAAkB,OAAAC,UAAAC,EAAApB,EAAAqB,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAN,EAAAD,EAAAhB,GAAAiB,EAAAD,GAAAhB,EAAArC,KAAA,EAAA2B,EAAA,mBAAAkC,OAAAA,OAAA,GAAAC,EAAAnC,EAAAoC,UAAA,aAAAC,EAAArC,EAAAsC,eAAA,kBAAAC,EAAAvC,EAAAwC,aAAA,yBAAAC,EAAAd,EAAAD,EAAAhB,GAAA,OAAAkB,OAAAK,eAAAN,EAAAD,EAAA,CAAArD,MAAAqC,EAAAgC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,EAAA,KAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAhB,GAAA,OAAAiB,EAAAD,GAAAhB,CAAA,WAAAmC,EAAAlB,EAAAD,EAAAhB,EAAAoB,GAAA,IAAA9B,EAAA0B,GAAAA,EAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAA/C,EAAA6B,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAE,EAAAG,EAAA,WAAA9D,MAAA4E,EAAAtB,EAAAjB,EAAA2B,KAAAF,CAAA,UAAAe,EAAAvB,EAAAD,EAAAhB,GAAA,WAAAxB,KAAA,SAAAiE,IAAAxB,EAAAyB,KAAA1B,EAAAhB,GAAA,OAAAiB,GAAA,OAAAzC,KAAA,QAAAiE,IAAAxB,EAAA,EAAAD,EAAAmB,KAAAA,EAAA,IAAA1H,EAAA,iBAAAkI,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAApD,GAAAoB,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAM,EAAAtC,GAAA,0BAAAuC,SAAA,SAAAxC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAwC,QAAAzC,EAAAC,EAAA,gBAAAyC,EAAAzC,EAAAD,GAAA,SAAA2C,EAAA3D,EAAAsB,EAAAhC,EAAAmC,GAAA,IAAAE,EAAAa,EAAAvB,EAAAjB,GAAAiB,EAAAK,GAAA,aAAAK,EAAAnD,KAAA,KAAAqD,EAAAF,EAAAc,IAAAhI,EAAAoH,EAAAlE,MAAA,OAAAlD,GAAA,UAAAmJ,GAAAnJ,IAAA2G,EAAAsB,KAAAjI,EAAA,WAAAuG,EAAA6C,QAAApJ,EAAAqJ,SAAAC,MAAA,SAAA9C,GAAA0C,EAAA,OAAA1C,EAAA3B,EAAAmC,EAAA,aAAAR,GAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAT,EAAA6C,QAAApJ,GAAAsJ,MAAA,SAAA9C,GAAAY,EAAAlE,MAAAsD,EAAA3B,EAAAuC,EAAA,aAAAZ,GAAA,OAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAAzC,EAAAsB,EAAA,gBAAA3D,MAAA,SAAAsD,EAAAG,GAAA,SAAA4C,IAAA,WAAAhD,GAAA,SAAAA,EAAAhB,GAAA2D,EAAA1C,EAAAG,EAAAJ,EAAAhB,EAAA,WAAAA,EAAAA,EAAAA,EAAA+D,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAvB,EAAAhB,EAAAoB,GAAA,IAAAE,EAAA7G,EAAA,gBAAA6E,EAAAmC,GAAA,GAAAH,IAAAsB,EAAA,UAAAqB,MAAA,mCAAA3C,IAAAuB,EAAA,cAAAvD,EAAA,MAAAmC,EAAA,OAAA9D,MAAAsD,EAAAiD,MAAA,OAAA9C,EAAA+C,OAAA7E,EAAA8B,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAAgD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAT,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAA7G,EAAA,MAAA6G,EAAAuB,EAAAzB,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAsB,EAAA,IAAAK,EAAAT,EAAAxB,EAAAhB,EAAAoB,GAAA,cAAA6B,EAAAzE,KAAA,IAAA8C,EAAAF,EAAA8C,KAAArB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAnF,MAAAsF,EAAAR,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAjB,EAAAzE,OAAA8C,EAAAuB,EAAAzB,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAQ,EAAAR,IAAA,YAAA4B,EAAArD,EAAAhB,GAAA,IAAAoB,EAAApB,EAAAmE,OAAA7C,EAAAN,EAAAU,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAjB,EAAAoE,SAAA,eAAAhD,GAAAJ,EAAAU,SAAA,SAAA1B,EAAAmE,OAAA,SAAAnE,EAAAyC,IAAAxB,EAAAoD,EAAArD,EAAAhB,GAAA,UAAAA,EAAAmE,SAAA,WAAA/C,IAAApB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA0B,EAAA,IAAAxD,EAAAkD,EAAAlB,EAAAN,EAAAU,SAAA1B,EAAAyC,KAAA,aAAAnD,EAAAd,KAAA,OAAAwB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAAnD,EAAAmD,IAAAzC,EAAAoE,SAAA,KAAAtB,EAAA,IAAArB,EAAAnC,EAAAmD,IAAA,OAAAhB,EAAAA,EAAAyC,MAAAlE,EAAAgB,EAAA2D,YAAAlD,EAAA9D,MAAAqC,EAAA4E,KAAA5D,EAAA6D,QAAA,WAAA7E,EAAAmE,SAAAnE,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,GAAAjB,EAAAoE,SAAA,KAAAtB,GAAArB,GAAAzB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAA1E,EAAAoE,SAAA,KAAAtB,EAAA,UAAAgC,EAAA7D,GAAA,IAAAD,EAAA,CAAA+D,OAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,SAAA/D,EAAA,SAAAA,IAAAD,EAAAiE,WAAAhE,EAAA,GAAAD,EAAAkE,SAAAjE,EAAA,SAAAkE,WAAAC,KAAApE,EAAA,UAAAqE,EAAApE,GAAA,IAAAD,EAAAC,EAAAqE,YAAA,GAAAtE,EAAAxC,KAAA,gBAAAwC,EAAAyB,IAAAxB,EAAAqE,WAAAtE,CAAA,UAAAsB,EAAArB,GAAA,KAAAkE,WAAA,EAAAJ,OAAA,SAAA9D,EAAAuC,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAhB,EAAAgB,EAAAS,GAAA,GAAAzB,EAAA,OAAAA,EAAA0C,KAAA1B,GAAA,sBAAAA,EAAA4D,KAAA,OAAA5D,EAAA,IAAAwE,MAAAxE,EAAAyE,QAAA,KAAAnE,GAAA,EAAAhC,EAAA,SAAAsF,IAAA,OAAAtD,EAAAN,EAAAyE,QAAA,GAAArE,EAAAsB,KAAA1B,EAAAM,GAAA,OAAAsD,EAAAjH,MAAAqD,EAAAM,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,SAAAtF,EAAAsF,KAAAtF,CAAA,YAAAoF,UAAAd,GAAA5C,GAAA,2BAAA+B,EAAA5B,UAAA6B,EAAA1B,EAAAgC,EAAA,eAAA3F,MAAAqF,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAArF,MAAAoF,EAAAd,cAAA,IAAAc,EAAA2C,YAAA3D,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAA2E,oBAAA,SAAA1E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA2E,YAAA,QAAA5E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAA0E,aAAA1E,EAAA6E,MAAA,EAAA7E,EAAA8E,KAAA,SAAA7E,GAAA,OAAAC,OAAA6E,eAAA7E,OAAA6E,eAAA9E,EAAA+B,IAAA/B,EAAA+E,UAAAhD,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAiB,GAAArC,CAAA,EAAAD,EAAAiF,MAAA,SAAAhF,GAAA,OAAA6C,QAAA7C,EAAA,EAAAsC,EAAAG,EAAAvC,WAAAY,EAAA2B,EAAAvC,UAAAQ,GAAA,0BAAAX,EAAA0C,cAAAA,EAAA1C,EAAAkF,MAAA,SAAAjF,EAAAjB,EAAAoB,EAAAE,EAAAhC,QAAA,IAAAA,IAAAA,EAAA6G,SAAA,IAAA1E,EAAA,IAAAiC,EAAAvB,EAAAlB,EAAAjB,EAAAoB,EAAAE,GAAAhC,GAAA,OAAA0B,EAAA2E,oBAAA3F,GAAAyB,EAAAA,EAAAmD,OAAAb,MAAA,SAAA9C,GAAA,OAAAA,EAAAiD,KAAAjD,EAAAtD,MAAA8D,EAAAmD,MAAA,KAAArB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAAtC,EAAAoF,KAAA,SAAAnF,GAAA,IAAAD,EAAAE,OAAAD,GAAAjB,EAAA,WAAAoB,KAAAJ,EAAAhB,EAAAoF,KAAAhE,GAAA,OAAApB,EAAAqG,UAAA,SAAAzB,IAAA,KAAA5E,EAAAyF,QAAA,KAAAxE,EAAAjB,EAAAsG,MAAA,GAAArF,KAAAD,EAAA,OAAA4D,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA5D,EAAAqC,OAAAA,EAAAf,EAAAnB,UAAA,CAAAyE,YAAAtD,EAAAiD,MAAA,SAAAvE,GAAA,QAAAuF,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAAtD,EAAA,KAAAiD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAxB,EAAA,KAAAkE,WAAA3B,QAAA6B,IAAArE,EAAA,QAAAhB,KAAA,WAAAA,EAAAwG,OAAA,IAAApF,EAAAsB,KAAA,KAAA1C,KAAAwF,OAAAxF,EAAAyG,MAAA,WAAAzG,GAAAiB,EAAA,EAAAyF,KAAA,gBAAAxC,MAAA,MAAAjD,EAAA,KAAAkE,WAAA,GAAAG,WAAA,aAAArE,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,YAAAkE,IAAA,EAAAnC,kBAAA,SAAAxD,GAAA,QAAAkD,KAAA,MAAAlD,EAAA,IAAAhB,EAAA,cAAA4G,EAAAxF,EAAAE,GAAA,OAAAG,EAAAjD,KAAA,QAAAiD,EAAAgB,IAAAzB,EAAAhB,EAAA4E,KAAAxD,EAAAE,IAAAtB,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,KAAAK,CAAA,SAAAA,EAAA,KAAA6D,WAAAM,OAAA,EAAAnE,GAAA,IAAAA,EAAA,KAAAhC,EAAA,KAAA6F,WAAA7D,GAAAG,EAAAnC,EAAAgG,WAAA,YAAAhG,EAAAyF,OAAA,OAAA6B,EAAA,UAAAtH,EAAAyF,QAAA,KAAAwB,KAAA,KAAA5E,EAAAP,EAAAsB,KAAApD,EAAA,YAAAuC,EAAAT,EAAAsB,KAAApD,EAAA,iBAAAqC,GAAAE,EAAA,SAAA0E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,WAAAuB,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,SAAAtD,GAAA,QAAA4E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,YAAAnD,EAAA,UAAAoC,MAAA,kDAAAsC,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,KAAAR,OAAA,SAAAxD,EAAAD,GAAA,QAAAhB,EAAA,KAAAmF,WAAAM,OAAA,EAAAzF,GAAA,IAAAA,EAAA,KAAAsB,EAAA,KAAA6D,WAAAnF,GAAA,GAAAsB,EAAAyD,QAAA,KAAAwB,MAAAnF,EAAAsB,KAAApB,EAAA,oBAAAiF,KAAAjF,EAAA2D,WAAA,KAAA3F,EAAAgC,EAAA,OAAAhC,IAAA,UAAA2B,GAAA,aAAAA,IAAA3B,EAAAyF,QAAA/D,GAAAA,GAAA1B,EAAA2F,aAAA3F,EAAA,UAAAmC,EAAAnC,EAAAA,EAAAgG,WAAA,UAAA7D,EAAAjD,KAAAyC,EAAAQ,EAAAgB,IAAAzB,EAAA1B,GAAA,KAAA6E,OAAA,YAAAS,KAAAtF,EAAA2F,WAAAnC,GAAA,KAAA+D,SAAApF,EAAA,EAAAoF,SAAA,SAAA5F,EAAAD,GAAA,aAAAC,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,gBAAAxB,EAAAzC,MAAA,aAAAyC,EAAAzC,KAAA,KAAAoG,KAAA3D,EAAAwB,IAAA,WAAAxB,EAAAzC,MAAA,KAAAmI,KAAA,KAAAlE,IAAAxB,EAAAwB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA3D,EAAAzC,MAAAwC,IAAA,KAAA4D,KAAA5D,GAAA8B,CAAA,EAAAgE,OAAA,SAAA7F,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAAiF,aAAAhE,EAAA,YAAA4F,SAAA7G,EAAAsF,WAAAtF,EAAAkF,UAAAG,EAAArF,GAAA8C,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAA+E,SAAA9D,EAAA,KAAAG,EAAApB,EAAAsF,WAAA,aAAAlE,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAqB,IAAA4C,EAAArF,EAAA,QAAAsB,CAAA,YAAA2C,MAAA,0BAAA8C,cAAA,SAAA/F,EAAAhB,EAAAoB,GAAA,YAAAgD,SAAA,CAAA1C,SAAA2B,EAAArC,GAAA2D,WAAA3E,EAAA6E,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAxB,GAAA6B,CAAA,GAAA9B,CAAA,UAAAqH,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAAf,EAAAjF,GAAA,QAAAiG,EAAAJ,EAAAZ,GAAAjF,GAAA9E,EAAA+K,EAAA/K,KAAA,OAAAgL,GAAA,YAAAJ,EAAAI,EAAA,CAAAD,EAAAxE,KAAAL,EAAAlG,GAAAwI,QAAAtC,QAAAlG,GAAAoG,KAAAyE,EAAAC,EAAA,UAAApM,GAAA4M,EAAA3J,GAAA,gBAAA2J,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAA,CAAA,CAAAE,CAAAF,IAAA,SAAAjJ,EAAA2C,GAAA,IAAA1B,EAAA,MAAAjB,EAAA,yBAAAwB,QAAAxB,EAAAwB,OAAAE,WAAA1B,EAAA,uBAAAiB,EAAA,KAAAD,EAAAI,EAAA9B,EAAAuC,EAAAJ,EAAA,GAAAmB,GAAA,EAAAtB,GAAA,SAAAhC,GAAA2B,EAAAA,EAAAyB,KAAA1C,IAAA4E,KAAA,IAAAjC,EAAA,IAAAzB,OAAAD,KAAAA,EAAA,OAAA2B,GAAA,cAAAA,GAAA5B,EAAA1B,EAAAoD,KAAAzB,IAAAiD,QAAAzC,EAAA2D,KAAApE,EAAArD,OAAA8D,EAAAgE,SAAA9C,GAAAC,GAAA,UAAA5C,GAAAsB,GAAA,EAAAF,EAAApB,CAAA,iBAAA4C,GAAA,MAAA3B,EAAA,SAAAY,EAAAZ,EAAA,SAAAC,OAAAW,KAAAA,GAAA,kBAAAP,EAAA,MAAAF,CAAA,SAAAK,CAAA,EAAA2H,CAAAH,EAAA3J,IAAA,SAAAgC,EAAA+H,GAAA,IAAA/H,EAAA,2BAAAA,EAAA,OAAAgI,GAAAhI,EAAA+H,GAAA,IAAAjI,EAAAF,OAAAC,UAAAoI,SAAA7G,KAAApB,GAAAmF,MAAA,iBAAArF,GAAAE,EAAAsE,cAAAxE,EAAAE,EAAAsE,YAAAC,MAAA,WAAAzE,GAAA,QAAAA,EAAA,OAAAtB,MAAA0J,KAAAlI,GAAA,iBAAAF,GAAA,2CAAAqI,KAAArI,GAAA,OAAAkI,GAAAhI,EAAA+H,EAAA,CAAAK,CAAAT,EAAA3J,IAAA,qBAAAoF,UAAA,6IAAAiF,EAAA,UAAAL,GAAAL,EAAApK,IAAA,MAAAA,GAAAA,EAAAoK,EAAAxD,UAAA5G,EAAAoK,EAAAxD,QAAA,QAAAnG,EAAA,EAAAsK,EAAA,IAAA9J,MAAAjB,GAAAS,EAAAT,EAAAS,IAAAsK,EAAAtK,GAAA2J,EAAA3J,GAAA,OAAAsK,CAAA,CA0SA,SAnRuB,SAAHjP,GAAmB,IAAAoP,EAAb8J,EAAMlZ,EAANkZ,OACtB2I,GAA0BrL,EAAAA,EAAAA,KAAY,SAACtO,GAAC,OAAKA,EAAEuO,OAAO,IAA9CnW,EAAIuhB,EAAJvhB,KAAMmW,EAAOoL,EAAPpL,QACRsL,GAAWC,EAAAA,EAAAA,MACXmF,GAAWC,EAAAA,EAAAA,MAC2B5R,EAAA9T,GAApB+T,EAAAA,SAAe,MAAK,GAArCkrB,EAAInrB,EAAA,GAAEorB,EAAOprB,EAAA,GACiC0H,EAAAxb,GAArB+T,EAAAA,SAAe,OAAM,GAA9CorB,EAAQ3jB,EAAA,GAAE4jB,EAAW5jB,EAAA,GACuCG,EAAA3b,GAArB+T,EAAAA,UAAe,GAAM,GAA5DsrB,EAAe1jB,EAAA,GAAE2jB,EAAkB3jB,EAAA,GAElB4G,EAAAviB,GAApB+T,EAAAA,SAAe,MAAK,GADjBwrB,EAAqBhd,EAAA,GAAEid,EAAwBjd,EAAA,GAE9C1iB,GAAUC,EAAAA,GAAAA,KAAVD,MACFsX,EAAO,IAAI1J,EAAAA,EAAW,QAAPC,EAACC,cAAM,IAAAD,GAAS,QAATA,EAANA,EAAQE,eAAO,IAAAF,OAAA,EAAfA,EAAiB1K,MAIEy8B,EAAAz/B,IAArC0/B,EAAAA,EAAAA,MAAqC,GADKC,GAAhBF,EAAA,GAAoCA,EAAA,GAAhCl/B,YAG5Bq/B,EAAe,eAvCzBpzB,EAuCyBoD,GAvCzBpD,EAuCyB9H,KAAA+E,MAAG,SAAAyE,IAAA,OAAAxJ,KAAAoB,MAAA,SAAAsI,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA7F,MAAA,OAapB+2B,GAAoBD,GAAiB,wBAAAjxB,EAAA/D,OAAA,GAAA6D,EAAA,IApD7C,eAAAzB,EAAA,KAAAC,EAAA1B,UAAA,WAAAlB,SAAA,SAAAtC,EAAA0E,GAAA,IAAAD,EAAAO,EAAA1B,MAAA2B,EAAAC,GAAA,SAAAP,EAAA7K,GAAA0K,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,OAAA9K,EAAA,UAAA8K,EAAAO,GAAAX,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,QAAAO,EAAA,CAAAR,OAAAT,EAAA,MAqDK,kBAdoB,OAAAkE,EAAA9E,MAAA,KAAAE,UAAA,KAgBf60B,EAAgB,WAClBP,GAAmB,GACnBF,EAAY,OACZ3Z,EAAS,kBAADpnB,OAAmBO,aAAI,EAAJA,EAAMqC,IACrC,EAOMm2B,EAAiB,SAACzyB,EAAG1D,GACvB0D,EAAE6Q,iBACF0pB,EAAQj+B,GACRq+B,GAAmB,EACvB,EAEMQ,EAAgB,WAClBZ,EAAQ,MACRI,GAAmB,EACvB,EAoBEzxB,EAAA7N,IAFuC8N,EAAAA,EAAAA,IAA2B,GAAI,CACpEiN,KAAMhG,aAAO,EAAPA,EAAS3L,SACjB,GAFK2E,EAAcF,EAAA,GAAItN,EAAUsN,EAAA,GAAVtN,WASzBwT,EAAAA,WAAgB,WACRnV,GAAQA,EAAKqC,IACb8M,EAAe,IAAD1P,OAAKO,aAAI,EAAJA,EAAMqC,GAAE,wBACtBoN,SACA3G,MAAK,SAACiE,GACCA,GACA0U,GAASoc,EAAAA,EAAAA,IAAc9wB,GAE/B,IAAE,OACK,SAACgB,GACJyC,QAAQC,IAAI1C,EAChB,GAEZ,GAAG,CAAC/N,IAQJ,IAAMmhC,EAAO,IAAI3M,EAAAA,GAAWx0B,GAE5B,OACIsD,EAAAA,EAAAA,MAAA,OACIP,UAAU,2BACVuT,IAAKsqB,EACL17B,MAAO,CAAE8V,OAAQylB,EAAkB,KAAO,IAAKx+B,SAAA,CAE9ChB,EAAQ,MACLc,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UAEXF,EAAAA,EAAAA,KAAC2c,GAAW,CACR9e,UAAW+gC,EACX9gC,OAAQ4gC,EACR3gC,MAAOmhC,EACPV,SAAUA,EAASt+B,SAEjBo+B,GAMEt+B,EAAAA,EAAAA,KAACq/B,GAAgB,CACbthC,MAAOohC,EACPxC,OAAQ2B,KAPZt+B,EAAAA,EAAAA,KAACs/B,GAAW,CACRvhC,MAAOmhC,EACP3F,gBAAiB6F,EAAKG,mBAWtCv/B,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UAEXF,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQ4gC,EAAgBx+B,SACzBo+B,GAMEt+B,EAAAA,EAAAA,KAACq/B,GAAgB,CACbthC,MAAOohC,EACPxC,OAAQ2B,KAPZt+B,EAAAA,EAAAA,KAACs/B,GAAW,CACRvhC,MAAOmhC,EACP3F,gBAAiB6F,EAAKG,kBAczCb,IACG1+B,EAAAA,EAAAA,KAAA,UACI,aAAW,yBACXgB,UAAU,2BACVwS,QAASyrB,EACT97B,MAAO,CAAE8V,OAAQylB,EAAkB,MAAQ,IAAKx+B,UAEhDF,EAAAA,EAAAA,KAAA,KACIgB,UAAS,8BAAAtD,OACLghC,EAAkB,QAAU,QAEhCv7B,MAAO,CAAEC,MAAO,gBAM5B7B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,6FAA4Fd,SAAA,EACvGqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,aACLN,IACGI,EAAAA,EAAAA,KAAA,OACIgB,UAAU,gCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,oBAMjCtD,EAAyB,CAAEja,KAAMmhC,EAAM5oB,KAAAA,EAAMK,OAAAA,MAC1C7W,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHiC,QAAQ,WACRza,UAAU,oBACV,aAAW,YACXwS,QAASyrB,EAAgB/+B,SAExBw+B,GACGn9B,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXF,EAAAA,EAAAA,KAAA,KACIgB,UAAU,oBACVmC,MAAO,CAAEuY,SAAU,UACpB,IAAI,YAIX1b,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SACV8+B,GACGh/B,EAAAA,EAAAA,KAAC4nB,GAAM,CAACrX,MAAM,gBAEdhP,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,EACIF,EAAAA,EAAAA,KAAA,KACIgB,UAAU,mBACVmC,MAAO,CAAEuY,SAAU,UACpB,IAAI,sBAUnC1b,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,SACpCN,GA0BE2B,EAAAA,EAAAA,MAAA,OACIP,UAAU,mDACVmC,MAAO,CACHC,MAAO,UACPsY,SAAU,OACVQ,UAAW,SACXrd,OAAQ,OACRK,MAAO,QACTgB,SAAA,EAEFF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,gCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,cAClByE,YAAa,UAEnB,gBA7Cc,IAApBne,IAAAA,KAAOsS,GACHA,aAAO,EAAPA,EAASrR,KAAI,SAACy8B,GAAG,OACbx/B,EAAAA,EAAAA,KAACy/B,GAAO,CAEJrrB,QAASorB,EACTvhC,KAAMA,EACN4Y,OAAQA,EACR4f,eAAgBA,GAJX+I,EAAIl/B,GAKX,KAGNN,EAAAA,EAAAA,KAAA,OACIgB,UAAU,mDACVmC,MAAO,CACHC,MAAO,UACPsY,SAAU,OACVQ,UAAW,SACXrd,OAAQ,OACRK,MAAO,QACTgB,SACL,kCAgCzB,25CC1QA,IAAM0V,GAAQ,IAAIqT,GAAAA,EAyDlB,SAtDyB,SAAHtrB,GAAiB,IAAXM,EAAIN,EAAJM,KACjBklB,EAAiC9jB,IAAjB+jB,EAAAA,GAAAA,MAAiB,GAArB,GACb8F,EAA0C,SAA9B/F,EAAa5D,IAAI,SAC7BphB,EAASglB,EAAa5D,IAAI,QAC1BuF,GAAWC,EAAAA,EAAAA,MACXoE,GAAWC,EAAAA,EAAAA,MAEXrrB,EAAQ,WAAH,OAAS+mB,EAASqE,EAASE,SAAU,CAAEC,SAAS,GAAO,EAGAoW,EAAArgC,IAAvBsgC,EAAAA,GAAAA,MAAuB,GAA3DC,EAAUF,EAAA,GAAAG,EAAAH,EAAA,GAAI7/B,EAASggC,EAAThgC,UAAgBggC,EAALl0B,MAiBhC,OACI3L,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQorB,EAAUhpB,UACrBqB,EAAAA,EAAAA,MAACooB,GAAAA,EAAI,CAAC3oB,UAAWiB,GAAO2nB,UAAU1pB,SAAA,EAC9BF,EAAAA,EAAAA,KAAC2pB,GAAAA,EAAKE,KAAI,CACNC,QAAS/rB,EACTiD,UAAWiB,GAAO8nB,eAAe7pB,UAEjCqB,EAAAA,EAAAA,MAAA,MAAArB,SAAA,CAAI,gBAAc/B,EAAO,UAG7B6B,EAAAA,EAAAA,KAAC2pB,GAAAA,EAAKK,KAAI,CAAChpB,UAAWiB,GAAOgoB,eAAe/pB,UACxCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAEd,SACZjC,IACG+B,EAAAA,EAAAA,KAAC8/B,GAAY,CACT7hC,KAAMA,EACNksB,SA9BH,SAACzY,GACtBkuB,EAAWluB,GAAUhE,SAAS3G,MAAK,SAAAiE,GACX,OAAhBA,aAAG,EAAHA,EAAK6L,UACL7G,GAAAA,GAAMoa,QAAQ,8BACdrsB,IAER,IAAE,OAAO,SAACiO,GACc,OAAhBA,aAAG,EAAHA,EAAK6K,SACL7G,GAAAA,GAAMqa,KAAK,sCAEnB,GACJ,EAoB4BxqB,UAAWA,EACXiqB,QAAS/rB,YAQzC,EAIA,IAAM+hC,GAAe,SAAH7wB,GAA+C,IAAAqb,EAAAyV,EAAAC,EAAAzV,EAAAC,EAAAC,EAAAC,EAAzCzsB,EAAIgR,EAAJhR,KAAMksB,EAAQlb,EAARkb,SAAUtqB,EAASoP,EAATpP,UAAWiqB,EAAO7a,EAAP6a,QACzCa,GAAsB1sB,EAEkBmB,EAAAC,IAApBC,EAAAA,EAAAA,UAASrB,EAAKsS,OAAM,GAAvCA,EAAKnR,EAAA,GAAEqiB,EAAQriB,EAAA,GACoF0e,EAAAze,IAAxEC,EAAAA,EAAAA,UAAS,CAAEgB,GAAIrC,EAAK2sB,YAAaC,gBAAiB5sB,EAAK6sB,iBAAiB,GAAnGC,EAASjN,EAAA,GAAE8e,EAAY9e,EAAA,GACoCG,EAAA5e,IAA9BC,EAAAA,EAAAA,UAASrB,EAAK+sB,iBAAgB,GACE5M,GADnDH,EAAA,GAAeA,EAAA,GACoC5e,IAAlCC,EAAAA,EAAAA,UAAS,IAAI2rB,KAAKhtB,EAAKitB,YAAW,IAA7DA,EAAS9M,EAAA,GAAE+M,EAAY/M,EAAA,GACgCG,EAAAlf,IAAhCC,EAAAA,EAAAA,UAAS,IAAI2rB,KAAKhtB,EAAKmtB,UAAS,GAAvDA,EAAO7M,EAAA,GAAE8M,EAAU9M,EAAA,GAC8B+M,EAAAjsB,IAA1BC,EAAAA,EAAAA,UAASrB,EAAKstB,aAAY,GAAjDsR,EAAOvR,EAAA,GAIZE,GAJwBF,EAAA,GAIxBjsB,IAHsCC,EAAAA,EAAAA,UAAS,CAC7CgB,GAAIrC,EAAKuF,SAASlD,GAClBinB,cAAetpB,EAAKuF,SAASqF,OAC/B,IAHKof,EAAYuD,EAAA,GAAEC,EAAeD,EAAA,GAOlCE,EAAArsB,IAHkCC,EAAAA,EAAAA,UAAS,CACzCgB,GAAIrC,EAAKkZ,WAAW7W,GACpBuI,KAAM5K,EAAKkZ,WAAWtO,OACxB,GAHK8iB,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAIgCG,EAAAxsB,IAA1BC,EAAAA,EAAAA,UAASrB,EAAK6tB,aAAY,GAAzDA,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GACqBG,EAAA3sB,IAAvBC,EAAAA,EAAAA,UAASrB,EAAK6qB,UAAS,GAAhDA,EAAQkD,EAAA,GAAEC,EAAWD,EAAA,GAG3BE,EAAA7sB,IAF+CC,EAAAA,EAAAA,UAC5CrB,EAAKkuB,eACR,GAFMC,EAAgBF,EAAA,GAAE6Q,EAAmB7Q,EAAA,GAK3CG,EAAAhtB,IAF6CC,EAAAA,EAAAA,UAC1CrB,EAAKquB,iBACR,GAFMC,EAAeF,EAAA,GAAE2Q,EAAkB3Q,EAAA,GAGYG,EAAAntB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA/C2jB,EAAauJ,EAAA,GAAEtJ,EAAgBsJ,EAAA,GACMrZ,GAAA9T,GAAlB+T,EAAAA,SAAe,IAAG,GAArCmO,GAAKpO,GAAA,GAAEqO,GAAQrO,GAAA,GACkBsZ,GAAAptB,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAAjCqM,GAAK8gB,GAAA,GAAEC,GAAQD,GAAA,GAEtBhJ,IAAyCC,EAAAA,EAAAA,IAAuB,IAADhmB,OACvDO,aAAI,EAAJA,EAAMqC,GAAE,8BAA8B,CAAE8Z,OAAOnc,SAAAA,EAAMqC,MAGvDqsB,IAJkBlJ,GAAhB9jB,KAA4B8jB,GAAV7jB,WAIe,OAAlB+L,cAAK,EAALA,GAAOkL,QAAiBlL,cAAK,EAALA,GAAOhM,KAAO,MAGvDmjB,GAAe,SAAC9e,EAAG6e,GACrB7e,EAAE6Q,iBAEFgO,EADY7e,EAAEgR,OAAOrU,MAEzB,EAwFAisB,IAA4DC,EAAAA,GAAAA,IAA4B5uB,aAAI,EAAJA,EAAM6uB,WAAhFmT,GAAQrT,GAAdjtB,KAA4BugC,GAAmBtT,GAA/BhtB,WAKjBmtB,GAAqD1tB,IAA/B2tB,EAAAA,EAAAA,MAA+B,GAAnC,GAazB5Z,EAAAA,WAAgB,WAERpB,SAASiS,qBAAqB,QAAQ,GAAG9gB,MAAMsQ,OAD/C5T,GAAa8qB,EAC2C,WAEA,SAEhE,GAAG,CAAC9qB,EAAW8qB,IAGf,IAKuB3e,GAAQ2xB,GAAAC,GACvBC,GACAC,GACAC,GAMR,OACI/9B,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wDAAuDd,SAAA,CACjEyqB,IACG3qB,EAAAA,EAAAA,KAAA,OACIgB,UAAU,QACVmC,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACRoR,SAAU,WACVoJ,IAAK,EACLC,KAAM,EACNL,OAAQ,MAIpB1X,EAAAA,EAAAA,MAAA,OAAKP,UAAU,8BAA6Bd,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBF,EAAAA,EAAAA,KAAC4iB,GAAK,CACFtiB,GAAG,QACHO,MAAM,QACNW,KAAK,OACLif,YAAY,qBACZ5X,KAAK,QACLqY,UAAU,EACVvgB,MAAO4P,EACP5E,MAAOghB,UAAqB,QAAPrC,EAAdqC,GAAgBpc,aAAK,IAAA+Z,OAAA,EAArBA,EAAwB,GAC/B1pB,SAAU,SAACoD,GAAC,OAAK8e,GAAa9e,EAAGyd,EAAS,OAIlDzhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SACIgB,UAAS,2BACT,aAAW,OAAMd,SACpB,aAGDF,EAAAA,EAAAA,KAAA,SACIgB,UAAS,8BACTuf,UAAQ,EACRQ,aAAc8b,UAO1B78B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BF,EAAAA,EAAAA,KAACgpB,GAAAA,EAAO,CAACroB,MAAOoqB,EAAWnqB,SAAUg8B,EAAa18B,UAC9CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,oCAAmCd,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SACIgB,UAAS,2BACT,aAAW,OAAMd,SACpB,eAGDqB,EAAAA,EAAAA,MAACynB,GAAAA,EAAQxP,OAAM,CAACxY,UAAU,iGAAgGd,SAAA,EACtHF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,sBAAqBd,SAA6B,QAA7B6/B,EAAGhV,aAAS,EAATA,EAAWF,uBAAe,IAAAkV,EAAAA,EAAI,QACtE//B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAGrBO,EAAAA,EAAAA,MAACynB,GAAAA,EAAQrB,QAAO,CAAC3mB,UAAU,qBAAoBd,SAAA,CAC1CggC,KAAuBlgC,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,2BAA0Bd,SAAC,eAElE4B,IAAAA,IAAMm+B,cAAQ,EAARA,GAAUE,YAAY,SAACpV,GAAS,OACnC/qB,EAAAA,EAAAA,KAACgpB,GAAAA,EAAQlB,OAAM,CAEX9mB,UAAW,SAAA0O,GAAA,IAAGqY,EAAMrY,EAANqY,OAAM,2BAAArqB,OAA4BuE,GAAOm+B,aAAW1iC,OAAGqqB,EAAS,SAAW,GAAE,EAC3FpnB,MAAOoqB,EAAU7qB,SAEhB6qB,aAAS,EAATA,EAAWF,iBAJPE,EAAUzqB,GAKF,QAIxBqL,cAAK,EAALA,GAAOof,aACJ/qB,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxByL,cAAK,EAALA,GAAOof,oBAQ5B/qB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SACIgB,UAAS,2BACT,aAAW,OAAMd,SACpB,yBAGDF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,gGAA+Fd,UAC1GF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,sBAAqBd,SAAEggC,GAAsB,aAAuE,QAA3DF,EAAGl+B,IAAAA,KAAOm+B,cAAQ,EAARA,GAAUE,YAAY,SAAAj6B,GAAC,OAAIA,EAAE5F,KAAOyqB,EAAUzqB,EAAE,WAAC,IAAA0/B,OAAA,EAAxDA,EAA0DjS,2BAyBlJ/tB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAElBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAE/gB,SAAA,CAAC,eACHF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,UAErCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,8BAA6Bd,UACxCF,EAAAA,EAAAA,KAACmmB,GAAU,CACPD,gBAAe,OAAAxoB,OAASkY,GACnBA,QACAE,OAAO,eACZkQ,QAASpQ,GACJA,MAAM3X,aAAI,EAAJA,EAAMgvB,YACZC,SACLjH,QACImF,GACAxV,GAAMA,MAAM3X,aAAI,EAAJA,EAAMkvB,UAAUD,SAEhCvX,KAAMuV,EACNpF,QAASqF,OAGhBwB,UAA0B,QAAZpC,EAAdoC,GAAgBM,kBAAU,IAAA1C,OAAA,EAA1BA,EAA6B,MAC1BvqB,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxBysB,UAA0B,QAAZnC,EAAdmC,GAAgBM,kBAAU,IAAAzC,OAAA,EAA1BA,EAA6B,WAM9CxqB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAE/gB,SAAA,CAAC,aACLF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,UAEnCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,8BAA6Bd,UACxCF,EAAAA,EAAAA,KAACmmB,GAAU,CACPD,gBAAe,OAAAxoB,OAASkY,GACnBA,QACAE,OAAO,eACZkQ,QACIkF,GACAtV,GAAMA,MAAM3X,aAAI,EAAJA,EAAMgvB,YAAYC,SAElCjH,QAASrQ,GACJA,MAAM3X,aAAI,EAAJA,EAAMkvB,UACZD,SACLvX,KAAMyV,EACNtF,QAASuF,OAGhBsB,UAAwB,QAAVlC,EAAdkC,GAAgBQ,gBAAQ,IAAA1C,OAAA,EAAxBA,EAA2B,MACxBzqB,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,SACxBysB,UAAwB,QAAVjC,EAAdiC,GAAgBQ,gBAAQ,IAAAzC,OAAA,EAAxBA,EAA2B,WAM5C1qB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBF,EAAAA,EAAAA,KAACotB,GAAwB,CACrBrH,SAAUkC,EACVhB,SAAUwE,OAIlBzrB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBF,EAAAA,EAAAA,KAACqtB,GAAmB,CAChBtH,SAAU4F,EACV1E,SAAU2E,OAYlB5rB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBF,EAAAA,EAAAA,KAACstB,GAAiB,CACdvH,SAAU+C,EACVC,YAAakD,OAIrBjsB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,QAAOd,UAClBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,sBAAqBd,SAAA,CAAC,oBAC5B,KAClBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,YAE1BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,EACtCF,EAAAA,EAAAA,KAAA,SACIwB,KAAK,SACL2f,QAAS,SAACnd,GAAC,OAAKA,EAAEod,cAAcC,MAAM,EACtCrgB,UAAU,mCACVL,MAAOyrB,EACPxrB,SAAU,SAACoD,GAAC,OACR8e,GAAa9e,EAAG+4B,EAAoB,IAEzC,IAAI,OAEP/8B,EAAAA,EAAAA,KAAA,SACIwB,KAAK,SACL2f,QAAS,SAACnd,GAAC,OAAKA,EAAEod,cAAcC,MAAM,EACtCrgB,UAAU,wCACVL,MAAO4rB,EACP3rB,SAAU,SAACoD,GAAC,OACR8e,GAAa9e,EAAGg5B,EAAmB,IAExC,IAAI,UAIXh9B,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEC,MAAO,OAAQlD,UAxP9B8L,GAyPoB2gB,GAxPnCkR,GAAU,GACVC,GAAW9xB,UAAmB,QAAhB2xB,GAAH3xB,GAAKyxB,sBAAc,IAAAE,QAAA,EAAnBA,GAAsB,GACjCI,GAAS/xB,UAAqB,QAAlB4xB,GAAH5xB,GAAK0xB,wBAAgB,IAAAE,QAAA,EAArBA,GAAwB,GACjCE,KAAUD,IAAWC,IACrBC,KAAQF,IAAWE,IAChBF,OAqPat8B,EAAAA,EAAAA,MAAA,OAAK4B,MAAO,CAAEC,MAAO,OAAQlD,SAAA,CACyB,+BACrB,KAC5B/C,EAAAA,GAAAA,GAAY+N,OAAO+0B,cAAQ,EAARA,GAAUhC,cAAgB,EAAI/yB,OAAO+0B,cAAQ,EAARA,GAAUhC,cAAgB,YAK/Fj+B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOihB,QAAQ,GAAE/gB,SAAC,mBAClBF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,8BACVmC,MAAO,CAAE4S,UAAW,SAAU7V,UAE9BF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CACd/Z,KAAMmsB,EACNlrB,SAjRL,SAACoD,EAAG0e,GAC3B,IAAM/iB,EAAO+iB,EAAOC,UACpBoJ,EAAepsB,EACnB,YAoRgBK,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,SAAQd,UACnBF,EAAAA,EAAAA,KAAC+iB,GAAAA,EAAiB,CACdyB,qBA9SC,SAACxgB,EAAGse,GAEzByK,GAAmBzK,aAAI,EAAJA,EAAMhiB,IAAIoN,SAG7B,IAAI2W,EAAYxhB,GAAOogB,GACnB3N,EAAQ+O,aAAY,EAAZA,EAAcC,QAAQhC,GAClC+B,EAAariB,OAAOsT,EAAO,GAC3B4N,EAAiBmB,EACrB,EAsSwBE,SAAUtB,EACV1B,MAAOA,GACPC,SAAUA,QAIlBxhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,mBAAkBd,UAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,gDAA+Cd,SAAA,EAC1DF,EAAAA,EAAAA,KAACwZ,GAAAA,EAAM,CACHiC,QAAQ,YACRza,UAAU,OACVwS,QAASsW,EAAQ5pB,SACpB,YAKDqB,EAAAA,EAAAA,MAACiY,GAAAA,EAAM,CACHhG,QAjXP,WAAM,IAAA+Z,EAzCnBC,EACExhB,EAEAyhB,EAYAC,EA4BAC,EAAa/X,GAAMA,MAAMsV,GAAWpV,OAAO,cAC3C8X,EAAWhY,GAAMA,MAAMwV,GAAStV,OAAO,cAEvCqM,EAAK,IAAIC,SACfD,EAAGE,OAAO,eAAgBpkB,aAAI,EAAJA,EAAM2sB,aAChCzI,EAAGE,OAAO,UAAWpkB,aAAI,EAAJA,EAAMqC,IAC3B6hB,EAAGE,OAAO,UAAW9R,GACrB4R,EAAGE,OAAO,aAAcsL,GACxBxL,EAAGE,OAAO,WAAYuL,GACtBzL,EAAGE,OAAO,aAAcpkB,aAAI,EAAJA,EAAM6uB,WAC9B3K,EAAGE,OAAO,cAAe4F,aAAY,EAAZA,EAAc3nB,IACvC6hB,EAAGE,OAAO,UAAWsJ,aAAU,EAAVA,EAAYrrB,IACjC6hB,EAAGE,OAAO,cAAeyJ,GACzB3J,EAAGE,OAAO,kBAAmBpkB,aAAI,EAAJA,EAAM6vB,YAAYxtB,IAC/C6hB,EAAGE,OAAO,WAAYvgB,IAAAA,UAAYgnB,IAClC3G,EAAGE,OAAO,iBAAkB+J,GAC5BjK,EAAGE,OAAO,mBAAoBkK,GAC9BpK,EAAGE,OAAO,iBAA6C,QAA7BkL,EAAExC,aAAS,EAATA,EAAWgD,wBAAgB,IAAAR,EAAAA,EAAI,IAC3DpL,EAAGE,OAAO,YAAa,MACvBF,EAAGE,OAAO,aAAc,MACxBF,EAAGE,OAAO,UAAW,QACrBF,EAAGE,OACC,SACArQ,SACKC,cAAc,2BACdC,aAAa,YAEtBpP,MAAM0J,KAAK+U,IAAO/a,SAAQ,SAAC8b,GACvBH,EAAGE,OAAO,SAAUC,EACxB,IAxEIkL,EAAQ,EACNxhB,EAAM,IAAI9H,OAEVupB,EAAgB,CAClBQ,cAAe,0BACf/C,UAAW,8BACXE,QAAS,4BACTnD,aAAc,iCACd0D,WAAY,wBACZuC,eAAgB,SAACrlB,EAAMslB,GAAM,wCAAAzwB,OACSmL,EAAI,aAAAnL,OAAuB,SAAXywB,EAAoB,MAAQ,OAAM,yCAExFrC,YAAa,2BAGX4B,EAAY,SAACU,GACfpiB,EAAIoiB,GAASX,EAAcW,GAC3BZ,GACJ,EAGKjd,GAAOmd,EAAU,SACjBxC,GAAWwC,EAAU,aACrBtC,GAASsC,EAAU,WACnBzF,GAAcyF,EAAU,gBACxB/B,GAAY+B,EAAU,cAEvB/B,SAAcA,GAAAA,EAAYjD,eAC1B1c,EAAI2f,WAAauC,eAAevC,EAAW9iB,KAAMwlB,eACjDb,KAGC1B,GAAa4B,EAAU,eAE5BhB,GAAS/gB,IACQ,IAAV6hB,EAwCHrD,EAAShI,GAETnS,GAAAA,GAAMqa,KAAK,uCAGnB,EA2U4BxqB,UAAWA,EAAUK,SAAA,EAErBF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,8BAAgC,wBAU7E,EC1SA,SA3PsB,SAAHrD,GAAmD,IAA7CG,EAAMH,EAANG,OAAQC,EAAKJ,EAALI,MAAOwe,EAAM5e,EAAN4e,OAAQ5c,EAAIhC,EAAJgC,KAAME,EAASlC,EAATkC,UAC5C61B,EAAQ5zB,EAAE6zB,QAAQ7zB,EAAEgb,MAAMnd,aAAI,EAAJA,EAAM+1B,MAAO,MACvCE,EAAW9zB,EAAE6zB,QAAQ7zB,EAAEgb,MAAMnd,aAAI,EAAJA,EAAMi2B,SAAU,MAG7CpZ,EAAU,WAAM,IAAA6jB,EAClB,OACI9+B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mDAAkDd,SAAA,EAC7DqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wCAAuCd,SAAA,EAClDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,EACtCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACHL,IACGG,EAAAA,EAAAA,KAAA,OACIgB,UAAU,gCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,qBAKlCxb,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACH,aAAW,cACXxY,UAAU,eACVwS,QAASzV,EAAMmC,UAEfF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIrBhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,6DAA4Dd,UACvEqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,0BACVmC,MAAO,CAAEkT,IAAK,QAASnW,SAAA,EAEvBqB,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,sCACVmC,MAAO,CAAEC,MAAO,WAAYlD,SAC/B,kBAIDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAAE,SACKP,SAAAA,EAAM2gC,OACHtgC,EAAAA,EAAAA,KAAA,OACIuC,IAAG,wBAAA7E,OAA0BiC,aAAI,EAAJA,EAAM2gC,OACnC99B,IAAK7C,aAAI,EAAJA,EAAMkJ,KACX3J,MAAO,GACPL,OAAQ,GACRmC,UAAU,oBAGdhB,EAAAA,EAAAA,KAAA,OACIgB,UAAU,wCACVmC,MAAO,CACHjE,MAAO,OACPL,OAAQ,QACVqB,UAEFF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,mBACVmC,MAAO,CAAEuY,SAAU,UAAWxb,SAE7BP,SAAU,QAAN0gC,EAAJ1gC,EAAMkJ,YAAI,IAAAw3B,OAAA,EAAVA,EAAY52B,MAAM,EAAG,UAKtClI,EAAAA,EAAAA,MAAA,OAAKP,UAAU,0BAAyBd,SAAA,EACpCqB,EAAAA,EAAAA,MAAA,KACIP,UAAU,8BACV4T,KAAI,sBAAAlX,OAAwBiC,aAAI,EAAJA,EAAMo1B,SAClC5xB,MAAO,CAAEC,MAAO,WAAYlD,SAAA,CAE3B,IACAP,aAAI,EAAJA,EAAMkJ,KAAM,QAEjBtH,EAAAA,EAAAA,MAAA,QACIP,UAAU,UACVmC,MAAO,CAAEC,MAAO,WAAYlD,SAAA,CAE3B0V,IAAMjW,aAAI,EAAJA,EAAMk2B,iBAAiB/f,OAC1B,gBACD,IAAI,KACJ,IACFF,IAAMjW,aAAI,EAAJA,EAAMk2B,iBAAiB/f,OAC1B,wBAOpBvU,EAAAA,EAAAA,MAAA,OACIP,UAAU,0BACVmC,MAAO,CAAEkT,IAAK,QAASnW,SAAA,EAEvBqB,EAAAA,EAAAA,MAAA,QACIP,UAAU,iCACVmC,MAAO,CAAEC,MAAO,WAAYlD,SAAA,CAE3B,IAAI,QACC,QAEVF,EAAAA,EAAAA,KAAA,MACImD,MAAO,CACH2yB,UAAW,QACXgC,WAAY,QACd53B,SAEDw1B,aAAK,EAALA,EAAO3yB,KAAI,SAACgzB,EAAMzzB,GAAC,OAChBtC,EAAAA,EAAAA,KAAA,MACImD,MAAO,CAAE2yB,UAAW,SAAU51B,UAG9BqB,EAAAA,EAAAA,MAAA,KACIP,UAAU,+BACVgU,OAAO,SACPJ,KAAMmhB,EAAK71B,SAAA,CAEV,IACA61B,EAAM,QARNA,EAAOzzB,EAUX,UAIhB3C,aAAI,EAAJA,EAAM4gC,sBACHh/B,EAAAA,EAAAA,MAAA,OACIP,UAAU,0BACVmC,MAAO,CAAEkT,IAAK,QAASnW,SAAA,EAEvBqB,EAAAA,EAAAA,MAAA,QACIP,UAAU,iCACVmC,MAAO,CAAEC,MAAO,WAAYlD,SAAA,CAE3B,IAAI,qBACc,QAEvBF,EAAAA,EAAAA,KAAA,MACImD,MAAO,CACH2yB,UAAW,QACXgC,WAAY,QACd53B,UAEFF,EAAAA,EAAAA,KAAA,MAAImD,MAAO,CAAE2yB,UAAW,SAAU51B,UAC9BqB,EAAAA,EAAAA,MAAA,KACIP,UAAU,+BACVgU,OAAO,SACPJ,KAAMjV,aAAI,EAAJA,EAAM4gC,mBAAmBrgC,SAAA,CAE9B,IACAP,aAAI,EAAJA,EAAM4gC,mBAAoB,eAO/Ch/B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,YAAWd,SAAA,EACtBF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,sCACVmC,MAAO,CAAEC,MAAO,WAAYlD,SAC/B,gBAGAP,SAAAA,EAAMqU,MACHhU,EAAAA,EAAAA,KAAA,OACIgB,UAAU,iBACV0T,wBAAyB,CACrBC,OAAQhV,aAAI,EAAJA,EAAMqU,SAItBhU,EAAAA,EAAAA,KAAA,QAAMmD,MAAO,CAAEC,MAAO,sBAAuBlD,SAAC,oCAMtDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,sCACVmC,MAAO,CAAEC,MAAO,WAAYlD,SAC/B,mBAIA4B,EAAE+tB,KAAK+F,GAAY,GAChB51B,EAAAA,EAAAA,KAACg2B,EAAAA,EAAY,CAAA91B,SACR4B,EAAEiB,IAAI6yB,GAAU,SAACtT,EAAMhN,GAAK,OACzBtV,EAAAA,EAAAA,KAACg2B,EAAAA,EAAaC,QAAO,CAEjBC,SAAU5T,EACV6T,cAAc,EACdC,YAAY,EACZC,YAAW,GAAA34B,OAAK4kB,GAChBgU,WAAU,GAAA54B,OAAK4kB,GACfiU,SACIz0B,EAAEuV,SACE,CACI,MACA,MACA,OACA,MACA,OAEJvV,EAAEiuB,KAAKjuB,EAAEgb,MAAMwF,EAAM,OAEnB,SACA,SAEVkU,IAAI,IAAE,GAAA94B,OApBE4kB,EAAI,KAAA5kB,OAAI4X,GAqBlB,OAIVtV,EAAAA,EAAAA,KAAA,QACIgB,UAAU,GACVmC,MAAO,CAAEC,MAAO,sBAAuBlD,SAC1C,yCAS7B,EAEA,OAzO+Bf,EAAAA,GAAAA,KAAvBD,MAyOU,MAEVc,EAAAA,EAAAA,KAAC2c,GAAW,CAAC7e,OAAQA,EAAQD,UAAW0e,EAAOrc,SAC1Csc,OAKLxc,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAACuT,EAAAA,EAAK,CAAChX,OAAQA,EAAOoC,SAAA,CAAC,IAAEsc,IAAU,QAInD,qiCC7NA,SAhCiB,SAAH7e,GAAmD,IAA9CgC,EAAIhC,EAAJgC,KAAc4Y,GAAF5a,EAAN4e,OAAgB5e,EAAR4a,UAAUxa,EAAKJ,EAALI,MAAO8B,EAASlC,EAATkC,UAE1C2gC,EADkCnhC,IAAjB+jB,EAAAA,GAAAA,MAAiB,GAArB,GACY7D,IAAI,mBAAqB,EAExD,OACEhe,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wEAAuEd,SAAA,EAClFqB,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACIqB,EAAAA,EAAAA,MAAA,KAAGP,UAAU,+BAA+B4T,KAAI,kBAAAlX,OAAoBiC,aAAI,EAAJA,EAAMkS,SAAU3R,SAAA,CAAC,SAAOP,aAAI,EAAJA,EAAMkS,QAAQ,OAAK,IAC7GlS,aAAI,EAAJA,EAAMu1B,cAAc,mBAAel1B,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,+BAA+B4T,KAAI,sBAAAlX,OAAwBiC,aAAI,EAAJA,EAAMo1B,SAAU70B,SAAEP,aAAI,EAAJA,EAAMkJ,OAAS,QAElJ7I,EAAAA,EAAAA,KAAA,OAAAE,SAAM0V,IAAMjW,aAAI,EAAJA,EAAMk2B,iBAAiB/f,OAAO,mBAE1C9V,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UACtCF,EAAAA,EAAAA,KAACogB,GAAAA,GAAI,CAACC,GAAE,mBAAA3iB,OAAqBiC,aAAI,EAAJA,EAAMkS,SAAOnU,OAAGiC,aAAI,EAAJA,EAAMu1B,eAAiBl0B,UAAU,qCAAoCd,UAChHF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,0BAKnBkK,OAAOs1B,KAAet1B,OAAO,GAADxN,OAAIiC,aAAI,EAAJA,EAAMkS,SAAOnU,OAAGiC,aAAI,EAAJA,EAAMu1B,kBACtDl1B,EAAAA,EAAAA,KAACygC,GAAa,CACV3iC,OAAQoN,OAAOs1B,KAAet1B,OAAO,GAADxN,OAAIiC,aAAI,EAAJA,EAAMkS,SAAOnU,OAAGiC,aAAI,EAAJA,EAAMu1B,gBAC9D3Y,OAAQhE,EACR5Y,KAAMA,EACN5B,MAAOA,EACP8B,UAAWA,MAKvB,ECPA,SAvBsB,SAAHlC,GAAe,IAAVgC,EAAIhC,EAAJgC,KACtB,OACE4B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kFAAkF0/B,MAAO,CAACrqB,IAAK,QAAQnW,SAAA,EAClHqB,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACIqB,EAAAA,EAAAA,MAAA,KACEP,UAAU,+BACV4T,KAAI,kBAAAlX,OAAoBiC,aAAI,EAAJA,EAAMkS,SAAU3R,SAAA,CACzC,QACOP,aAAI,EAAJA,EAAMkS,WACV,IACFlS,aAAI,EAAJA,EAAMu1B,cAAc,mBAAel1B,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,+BAA+B4T,KAAI,sBAAAlX,OAAwBiC,aAAI,EAAJA,EAAMo1B,SAAU70B,SAAEP,aAAI,EAAJA,EAAMkJ,OAAS,QAElJ7I,EAAAA,EAAAA,KAAA,OAAAE,SAAM0V,IAAMjW,aAAI,EAAJA,EAAMk2B,iBAAiB/f,OAAO,mBAE1C9V,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UACtCF,EAAAA,EAAAA,KAACogB,GAAAA,GAAI,CAACC,GAAE,mBAAA3iB,OAAqBiC,aAAI,EAAJA,EAAMkS,SAAOnU,OAAGiC,aAAI,EAAJA,EAAMu1B,eAAiBl0B,UAAU,qCAAoCd,UAChHF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAK3B,ECqCA,SAxD2B,SAAHrD,GAMlB,IALFG,EAAMH,EAANG,OACAye,EAAM5e,EAAN4e,OACA5c,EAAIhC,EAAJgC,KACA5B,EAAKJ,EAALI,MACA8B,EAASlC,EAATkC,UAII2c,EAAU,WACV,OACIjb,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mDAAkDd,SAAA,EAC7DqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wCAAuCd,SAAA,EAClDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,EACtCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACHL,IAAaG,EAAAA,EAAAA,KAAA,OACVgB,UAAU,gCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,qBAI9Bxb,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACH,aAAW,cACXxY,UAAU,eACVwS,QAASzV,EAAMmC,UAEfF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIrBhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2CAA0Cd,SACpDP,aAAI,EAAJA,EAAMoD,KAAI,SAAAmD,GAAC,OACRlG,EAAAA,EAAAA,KAAC2gC,GAAa,CAAyChhC,KAAMuG,GAAE,GAAAxI,OAAxCwI,EAAE2L,QAAO,KAAAnU,OAAIwI,EAAEgvB,eAA4B,QAKxF,EAGA,OAtC+B/1B,EAAAA,GAAAA,KAAvBD,MAuCY,MACdc,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAACob,GAAW,CAAC7e,OAAQA,EAAQD,UAAW0e,EAAOrc,SAAA,CAAE,IAAEsc,IAAU,UAEjExc,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAACuT,EAAAA,EAAK,CAAChX,OAAQA,EAAOoC,SAAA,CAAC,IAAGsc,IAAW,QAGjD,qiCCrDA,IAAM6C,GAAU,SAAC7N,GAAG,OAAK8N,MAAMC,IAAI/N,GAAKzK,MAAK,SAAAiE,GAAG,OAAIA,EAAIrL,IAAI,GAAC,EAyG7D,SAvGsB,SAAHhC,GAAe,IAAVM,EAAIN,EAAJM,KAC0CkV,EAAA9T,GAApB+T,EAAAA,SAAe,MAAK,GAAzD8K,EAAc/K,EAAA,GAAEgL,EAAiBhL,EAAA,GACS0H,EAAAxb,GAArB+T,EAAAA,UAAe,GAAM,GAC3C0R,GADOjK,EAAA,GAAWA,EAAA,IACPkK,EAAAA,EAAAA,OACXoE,GAAWC,EAAAA,EAAAA,MACjBxJ,GAAmCC,EAAAA,GAAAA,IAAO,uCAADniB,OAAwCO,aAAI,EAAJA,EAAMqC,IAAM+e,GAAS,CAACS,gBAAiB,OAAhHngB,EAAIigB,EAAJjgB,KAAaE,GAAF+f,EAALjU,MAAgBiU,EAAT/f,WACdsjB,EAAiC9jB,IAAjB+jB,EAAAA,GAAAA,MAAiB,GAArB,GACbwd,EAAUzd,EAAa5D,IAAI,kBAC3BshB,EAAQ1d,EAAa5D,IAAI,cAEzBhD,EAAS,SAACvY,GACdA,EAAE6Q,iBACC+rB,GAAWC,EACT1X,EAAS2X,OAAS3X,EAAS2X,MAAMt0B,KAClCsY,EAASqE,EAAS2X,MAAMt0B,MACpBsY,EAAS,kBAADpnB,OAAmBO,aAAI,EAAJA,EAAMqC,KAEvCwkB,EAAS,kBAADpnB,OAAmBO,aAAI,EAAJA,EAAMqC,GAAE,8BAEvC,EACMvC,EAAQ,WACTorB,EAAS2X,OAAS3X,EAAS2X,MAAMt0B,KAClCsY,EAASqE,EAAS2X,MAAMt0B,MACpBsY,EAAS,kBAADpnB,OAAmBO,aAAI,EAAJA,EAAMqC,IACzC,EAEA,OACEiB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,2BACfuT,IAAK4J,EACLhb,MAAO,CAAC8V,OAAU2nB,GAAqB,mBAAVC,EAA8B,GAAK,IAAI3gC,SAAA,EAChEqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,6FAA4Fd,SAAA,EAC3GF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,OAAMd,SAAC,oBACpBL,IACCG,EAAAA,EAAAA,KAAA,OACIgB,UAAU,wCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,oBAS9B1Z,IAAAA,KAAOnC,GAAQ,IACfK,EAAAA,EAAAA,KAAA,UACI,aAAW,yBACXgB,UAAU,2BACVwS,QAAS+I,EACTpZ,MAAO,CAAC8V,OAAU2nB,GAAqB,mBAAVC,EAA8B,MAAQ,IAAI3gC,UAEvEF,EAAAA,EAAAA,KAAA,KACEgB,UAAS,8BAAAtD,OAAkCkjC,GAAqB,mBAAVC,EAA8B,QAAU,QAC9F19B,MAAO,CAACC,MAAO,gBAKrBpD,EAAAA,EAAAA,KAAC+gC,GAAkB,CACfjjC,OAAkB,mBAAV+iC,EACRtkB,OAAQ2B,EACRve,KAAMmC,IAAAA,QAAUnC,EAAM,CAAC,UAAW,iBAAkB,CAAC,OAAQ,SAC7D5B,MAAOA,EACP8B,UAAWA,KAIfG,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,SAExC4B,IAAAA,KAAOnC,GAAQ,EACbmC,IAAAA,IAAMA,IAAAA,QAAUnC,EAAM,CAAC,UAAW,iBAAkB,CAAC,OAAQ,UAAU,SAAAkc,GAAI,OACzE7b,EAAAA,EAAAA,KAACghC,GAAQ,CAEPrhC,KAAMkc,EACNU,OAAQA,EACRxe,MAAOA,EACP8B,UAAWA,EACX0Y,SAAU2F,IALLrC,aAAI,EAAJA,EAAMga,kBAAkBha,aAAI,EAAJA,EAAMqZ,eAMnC,KAEJl1B,EAAAA,EAAAA,KAAA,OACIgB,UAAU,mDACVmC,MAAO,CACHC,MAAO,UACPsY,SAAU,OACVQ,UAAW,SACXrd,OAAQ,OACRK,MAAO,QACTgB,SACL,uCAOb,ikCC2LA,SA9RkC,SAAHvC,GAA+D,IAAAsjC,EAAzDthC,EAAIhC,EAAJgC,KAAMgW,EAAIhY,EAAJgY,KAAML,EAAK3X,EAAL2X,MAAO4rB,EAAIvjC,EAAJujC,KAAMC,EAAOxjC,EAAPwjC,QAAS5gC,EAAO5C,EAAP4C,QAAST,EAAOnC,EAAPmC,QACtEglB,GAAWC,EAAAA,EAAAA,MACXoE,GAAWC,EAAAA,EAAAA,MACuChqB,EAAAC,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAjD8hC,EAAchiC,EAAA,GAAEiiC,EAAiBjiC,EAAA,GACK0e,EAAAze,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAtCwB,EAAOgd,EAAA,GAAEwjB,EAAUxjB,EAAA,GACYG,EAAA5e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA/BiiB,EAAKtD,EAAA,GAAEuD,EAAQvD,EAAA,GACoCG,EAAA/e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnDiiC,EAAenjB,EAAA,GAAEojB,EAAkBpjB,EAAA,GAEkBkN,GADtBjsB,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAAnB,GACyCD,IAAZC,EAAAA,EAAAA,UAAS,IAAG,IAArDmiC,EAAgBnW,EAAA,GAAEoW,EAAmBpW,EAAA,GACmDqW,EAAAtiC,IAAlCuiC,EAAAA,GAAAA,MAAkC,GAAxFC,EAAqBF,EAAA,GAAeG,EAAYH,EAAA,GAAvB9hC,UAIkC2rB,EAAAnsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA3DyiC,EAAmBvW,EAAA,GAAEwW,EAAsBxW,EAAA,GACkBE,EAAArsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA7D2iC,EAAoBvW,EAAA,GAAEwW,EAAuBxW,EAAA,GACkBG,EAAAxsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA/D6iC,EAAqBtW,EAAA,GAAEuW,EAAwBvW,EAAA,GAsEtD,OACItqB,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,EACIqB,EAAAA,EAAAA,MAAA,MACIP,UAAS,cAAAtD,OAAgBwjC,IAAS5rB,GAAS,cAG3CpV,SAAA,EAGAF,EAAAA,EAAAA,KAAA,MAAIgB,UAAS,aAAgBmC,MAAO,CAAEsW,SAAU,QAASvZ,SAAEK,GAAUP,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,IAAMhB,EAAQ,KAC/FtV,EAAAA,EAAAA,KAAA,MAAIgB,UAAS,aAAed,SAAEK,GAAUP,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,IAAM3W,aAAI,EAAJA,EAAM0iC,cAChEriC,EAAAA,EAAAA,KAAA,MAAIgB,UAAS,aAAed,SAAEK,GAAUP,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,IAChD3W,SAAAA,EAAM+8B,UACF18B,EAAAA,EAAAA,KAAA,KAAG4U,KAAMjV,EAAK+8B,SAAUnsB,MAAO5Q,EAAK+8B,SAAU1nB,OAAO,SAAQ9U,SAAC,cAE9D,sBAERF,EAAAA,EAAAA,KAAA,MAAIgB,UAAS,aAAed,SAAEK,GAAUP,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,KAAMnZ,EAAAA,GAAAA,GAAYwC,EAAK2iC,qBAC3EtiC,EAAAA,EAAAA,KAAA,MAAIgB,UAAS,aAAed,SAAEK,GAAUP,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,IAAwB,QAArB2qB,EAAIthC,aAAI,EAAJA,EAAM4iC,mBAAW,IAAAtB,EAAAA,EAAI,SAChFjhC,EAAAA,EAAAA,KAAA,MAAIgB,UAAS,aAAed,SAEpBK,GACIP,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,KAEZtW,EAAAA,EAAAA,KAAA,UACIwT,QAAS,WACD7T,EAAK6iC,yBAGTrB,GAAQ,SAAC53B,GACL,OAAIA,IAAS+L,EACF,KAEAA,CAEf,GACJ,EAEAtU,UAAS,cAAAtD,OAAgBiC,EAAK6iC,wBAA0B,cAAgB,uBAAwBtiC,SAG5FP,EAAK6iC,wBAA0B,YAAc,yBAMpEtB,IAAS5rB,IACNtV,EAAAA,EAAAA,KAAA,MAAIgB,UAAS,GAAMmC,MAAO,CAAEoY,OAAQ,iBAAkBknB,UAAW,QAASviC,UACtEF,EAAAA,EAAAA,KAAA,MAAIuwB,QAAS,EAAErwB,UACXqB,EAAAA,EAAAA,MAAA,QAAMP,UAAU,uBAAsBd,SAAA,EAGlCqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,cAAa/gB,SAAA,CAAC,2BACFF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,OAC5BF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,OACV,cAAY,UACZ,iBAAe,MACfuP,MAAM,gBACN,gBAAc,SACdpN,MAAO,CAAEsQ,OAAQ,WAAYvT,UAE7BF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,wCAGrBhB,EAAAA,EAAAA,KAAA,SACIW,MAAO8gC,EACPjgC,KAAK,OACLlB,GAAG,cACH6C,MAAO,CACHjE,MAAO,OACP+c,OAAQ,QACRymB,aAAc,MACdnnB,OAAQ,OACRG,SAAU,SACV6B,QAAS,OACTna,MAAO,QAEXxC,SAAU,SAACoD,GAAC,OAAK09B,EAAoB19B,EAAEgR,OAAOrU,MAAM,IAEvDwhC,IAAyBniC,EAAAA,EAAAA,KAAA,SAAOgB,UAAU,wBAAuBd,SAAEiiC,QAIxE5gC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,cAAa/gB,SAAA,CAAC,+CACkBF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,OAChDF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,OACV,cAAY,UACZ,iBAAe,MACfuP,MAAM,gBACN,gBAAc,SACdpN,MAAO,CAAEsQ,OAAQ,WAAYvT,UAE7BF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,wCAGrBhB,EAAAA,EAAAA,KAAA,SACIW,MAAOygC,EACP5/B,KAAK,OACLlB,GAAG,cACH6C,MAAO,CACHjE,MAAO,OACP+c,OAAQ,QACRymB,aAAc,MACdnnB,OAAQ,OACRG,SAAU,SACV6B,QAAS,OACTna,MAAO,QAEXxC,SAAU,SAACoD,GAAC,OAAKq9B,EAAkBr9B,EAAEgR,OAAOrU,MAAM,IAErDohC,IAAuB/hC,EAAAA,EAAAA,KAAA,SAAOgB,UAAU,wBAAuBd,SAAE6hC,QAItExgC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,2BAA0B/gB,SAAA,CAAC,eAEtCF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,OACV,cAAY,UACZ,iBAAe,MACfuP,MAAM,aACN,gBAAc,SACdpN,MAAO,CAAEsQ,OAAQ,WAAYvT,UAE7BF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,wCAGrBO,EAAAA,EAAAA,MAACy0B,EAAAA,EAAY,CAACzU,MAAOA,EAAOC,SAAUA,EAASthB,SAAA,EAC3CF,EAAAA,EAAAA,KAACg2B,EAAAA,EAAapT,MAAK,KACnB5iB,EAAAA,EAAAA,KAACg2B,EAAAA,EAAa2M,cAAa,CAAAziC,SACtB,SAAA+O,GAAA,IAAA2zB,EAAGC,EAAQ5zB,EAAR4zB,SAAUC,EAAQ7zB,EAAR6zB,SAAQ,OACE,QADFF,EAClB9/B,MAAM0J,KAAKq2B,UAAS,IAAAD,OAAA,EAApBA,EAAsB7/B,KAClB,SAACkD,EAAG3D,GAAC,OACDtC,EAAAA,EAAAA,KAACg2B,EAAAA,EAAaC,QAAO,CAEjB31B,GAAIgC,EACJ4zB,SAAUjwB,EAAE4C,KACZytB,WAAYrwB,EAAE26B,QACdrK,SAAUtwB,EAAEzE,KACZuhC,SAAUD,GALLxgC,EAMP,GAET,WAOjBf,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,2BAA2B9d,MAAO,CAAEoW,SAAU,OAAQrZ,SAAA,CAAC,qDACjBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,cAAad,SAAC,OAC9EF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,OACV,cAAY,UACZ,iBAAe,MACfuP,MAAM,4BACN,gBAAc,SACdpN,MAAO,CAAEsQ,OAAQ,WAAYvT,UAE7BF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,wCAIrBhB,EAAAA,EAAAA,KAAA,OACIgB,UAAU,8BACVmC,MAAO,CAAE4S,UAAW,SAAU7V,UAE9BF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CACd/Y,MAAO4gC,EACP3gC,SAAU,SAACoD,EAAG0e,GACV,IAAM/iB,EAAO+iB,EAAOC,UACpB6e,EAAmB7hC,EACvB,MAGPsiC,IAAwBjiC,EAAAA,EAAAA,KAAA,SAAOgB,UAAU,wBAAuBd,SAAE+hC,QAGvEjiC,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,aAAYd,UACvBF,EAAAA,EAAAA,KAACgjC,GAAAA,EAAQ,CAACliC,QAASA,EAASF,SAAU,SAACoD,GAAC,OAAKs9B,EAAWt9B,EAAEgR,OAAOlU,QAAQ,EAAED,MAAO,mBAAoBG,UAAU,wBAGpHhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,iCAAiCmC,MAAO,CAAEkT,IAAK,OAAQnW,UAClEF,EAAAA,EAAAA,KAACq1B,GAAAA,EAAY,CAAC7hB,QA9OrB,WAAM,IAAAyvB,EACvB,GAnBIC,GAAQ,EACW,KAAnB9B,IACAY,EAAuB,0CACvBkB,GAAQ,GAEY,KAApB3B,IACAW,EAAwB,sCACxBgB,GAAQ,GAEa,KAArBzB,IACAW,EAAyB,sEACzBc,GAAQ,GAELA,EAMP,CApBY,IACRA,EAsBExxB,EAAW,IAAI0Q,SACrB1Q,EAAS2Q,OAAO,UAAW1iB,EAAKW,IAChCoR,EAAS2Q,OAAO,UAAyB,QAAhB4gB,EAAEj2B,OAAOC,eAAO,IAAAg2B,GAAM,QAANA,EAAdA,EAAgB5gC,YAAI,IAAA4gC,OAAA,EAApBA,EAAsB3iC,IACjDoR,EAAS2Q,OAAO,aAAc1iB,EAAKmtB,WACnCpb,EAAS2Q,OAAO,eAAgB1iB,EAAK0iC,YACrC3wB,EAAS2Q,OAAO,YAAa1iB,EAAKwjC,UAClCzxB,EAAS2Q,OAAO,cAAe1iB,EAAK4iC,aACpC7wB,EAAS2Q,OAAO,cAAe1iB,EAAK2iC,kBACpC5wB,EAAS2Q,OAAO,YAAa+e,GAC7B1vB,EAAS2Q,OAAO,eAAgBof,GAChC/vB,EAAS2Q,OAAO,UAAWkf,GAC3B7vB,EAAS2Q,OAAO,mBAAoBvhB,GACpC4Q,EAAS2Q,OAAO,cAAe1M,GAC/B,IAAM5D,EAASC,SAASC,cAAc,2BAA2BC,aAAa,WAC9ER,EAAS2Q,OAAO,SAAUtQ,GAC1BwP,EAAM/a,SAAQ,SAAC8b,GAAI,OAAK5Q,EAAS2Q,OAAO,SAAUC,EAAK,IAGvDuf,EAAsBnwB,GACjBhE,SACA3G,MAAK,SAAAiE,GAEyB,SAAvBA,EAAIo4B,mBAAoD,IAAvBp4B,EAAIo4B,kBACrCte,EAAS,GAADpnB,OAAIyrB,EAASE,SAAQ,yBAEnBvZ,KAAAA,MAAW,CACrBE,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,IAGhBC,KAAK,CACPC,KAAM,UACNC,MAAO,2BAEX4wB,EAAQ,MACRrhC,GACJ,IAAE,OACK,SAAAkM,GAAG,OAAIyC,QAAQC,IAAI1C,EAAI,GAzClC,CA0CJ,EAiMiEnM,UAAWiiC,EAAcvxB,MAAM,sBASpG,kBCrSI,GAAU,CAEd,OAAiB,OACjB,WAAoB,GAEP,KAAI,KAAS,IAIX,KAAQ7P,uBCTnB,GAAU,CAEd,OAAiB,OACjB,WAAoB,GAEP,KAAI,KAAS,IAIX,KAAQA,0iCCsDvB,SAzD+B,WAAM,IAAAuiC,EACK7jC,EAAAC,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAA/B4hC,EAAI9hC,EAAA,GAAE+hC,EAAO/hC,EAAA,GAId0X,GAHkCzX,IAAjB+jB,EAAAA,GAAAA,MAAiB,GAArB,GACY7D,IAAI,aAEhB,IAAIzS,EAAAA,EAAmB,QAAfm2B,EAACj2B,OAAOC,eAAO,IAAAg2B,OAAA,EAAdA,EAAgB5gC,OAEtCghC,EAAQztB,MAAQE,OAAO,cAE7BwtB,GAAqCC,EAAAA,GAAAA,IAA2B,GAAD7lC,OACxDoZ,aAAU,EAAVA,EAAYxW,GAAE,eAAA5C,OAAc2lC,IAD3B1jC,EAAI2jC,EAAJ3jC,KAAME,EAASyjC,EAATzjC,UAAWC,EAAOwjC,EAAPxjC,QAKzB,OACIE,EAAAA,EAAAA,KAAA,OAAKgB,UAAS,sBAAyBmC,MAAO,CAAE0W,SAAU,QAAS3Z,UAC/DqB,EAAAA,EAAAA,MAAA,SAAOP,UAAS,gBAAmBmC,MAAO,CAAEsW,SAAU,KAAMvZ,SAAA,EACxDF,EAAAA,EAAAA,KAAA,SAAAE,UACIqB,EAAAA,EAAAA,MAAA,MAAIP,UAAS,GAAKd,SAAA,EACdF,EAAAA,EAAAA,KAAA,MAAIgB,UAAS,aAAed,SAAC,YAC7BF,EAAAA,EAAAA,KAAA,MAAIgB,UAAS,aAAed,SAAC,eAC7BF,EAAAA,EAAAA,KAAA,MAAIgB,UAAS,aAAed,SAAC,eAC7BF,EAAAA,EAAAA,KAAA,MAAIgB,UAAS,aAAed,SAAC,yCAG7BF,EAAAA,EAAAA,KAAA,MAAIgB,UAAS,aAAed,SAAC,iBAC7BF,EAAAA,EAAAA,KAAA,MAAIgB,UAAS,aAAgBmC,MAAO,CAAEjE,MAAO,SAAUgB,SAAC,iBAMhEF,EAAAA,EAAAA,KAAA,SAAOgB,UAAS,gBAAkBd,UAI5BL,EACI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5BF,aAAI,EAAJA,EAAMA,MACVoD,KAAI,SAACmD,EAAG5D,GAAC,OACPtC,EAAAA,EAAAA,KAACwjC,GAAyB,CACtB7jC,KAAMuG,EACNyP,KAAMhW,aAAI,EAAJA,EAAMgW,KAEZL,MAAOhT,EACP4+B,KAAMA,EACNC,QAASA,EACT5gC,QAASV,EACTC,QAASA,GALJwC,EAMP,UAM1B,qiCCkCA,SArF+B,WAC3B,IACmBlD,EAAAC,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GADamkC,GAAFrkC,EAAA,GAA4BA,EAAA,IAEpD0lB,GAAWC,EAAAA,EAAAA,MACXoE,GAAWC,EAAAA,EAAAA,MACX5X,EAAM,IAAIkyB,gBAAgBva,EAASwa,QAGnC7lC,EAA8B,qBAArB0T,EAAI+N,IAAI,SAOjBxhB,EAAQ,WACgB,gBAAvByT,EAAI+N,IAAI,YACPzP,KAAAA,KAAU,CACNQ,KAAM,UACNC,MAAO,6FACPL,mBAAmB,IAI3B4U,EAAS,GAADpnB,OAAIyrB,EAASE,WACrBoa,GAA2B,EAC/B,EAGA,OACIliC,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACIF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHiC,QAAQ,WAERjI,QAPC,WAAH,OAASsR,EAAS,GAADpnB,OAAIyrB,EAASE,SAAQ,2CAA0C,EAQ9EroB,UAAU,uDAAsDd,UAGhEF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gBAAed,SAAC,+BAGpCF,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQA,EAAQkD,UAAU,sBAAqBd,UAClDF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wCAAuCd,UAClDqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,2BACVmC,MAAO,CAAE0W,SAAU,UAAWN,SAAU,SAAUrZ,SAAA,EAGlDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,6BAA4Bd,SAAA,EACvCF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,OAAMd,SAAC,2BAErBF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAC,aAAW,aAAahG,QAASzV,EAAMmC,UAC3CF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAKrBO,EAAAA,EAAAA,MAAA,OACIP,UAAU,+BACVmC,MAAO,CAAE0W,SAAU,WAAY3Z,SAAA,EAE/BF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kCAAiCd,SAAC,+FAKhDpC,IAAUkC,EAAAA,EAAAA,KAAC4jC,GAAsB,KAClC5jC,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,iCAAgCd,UAC3CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHiC,QAAQ,WACRza,UAAU,eACVwS,QAASzV,EAAMmC,SAClB,wBAWjC,24CC8VA,SA3auB,SAAHvC,GAAuB,IAAjBM,EAAIN,EAAJM,KAAMuY,EAAI7Y,EAAJ6Y,KAE8BpX,EAAAC,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnDukC,EAAezkC,EAAA,GAAE0kC,EAAkB1kC,EAAA,GACsB0e,EAAAze,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAzDykC,EAAkBjmB,EAAA,GAAEkmB,EAAqBlmB,EAAA,GAGRG,IADvB0B,EAAAA,EAAAA,MACuBtgB,IAAdC,EAAAA,EAAAA,UAAS,CAAC,KAAI,IAAjCo2B,EAAKzX,EAAA,GAAEgmB,EAAQhmB,EAAA,GACoBG,EAAA/e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnC4kC,EAAO9lB,EAAA,GAAE+lB,EAAU/lB,EAAA,GACyBG,EAAAlf,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAA5C8kC,EAAU7lB,EAAA,GAAE8lB,EAAa9lB,EAAA,GACM+M,EAAAjsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA/BiiB,EAAK+J,EAAA,GAAE9J,EAAQ8J,EAAA,GACoBE,EAAAnsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnCe,EAAOmrB,EAAA,GAAEyI,EAAUzI,EAAA,GACsBE,EAAArsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAzCglC,EAAU5Y,EAAA,GAAE6Y,EAAa7Y,EAAA,GAC1B5G,GAAWC,EAAAA,EAAAA,MACXoE,GAAWC,EAAAA,EAAAA,MAGcob,EAAAnlC,IAA3BolC,EAAAA,EAAAA,MAA2B,GADxBC,EAAcF,EAAA,GAAe1C,EAAY0C,EAAA,GAAvB3kC,UAEkD8kC,EAAAtlC,IAA/BulC,EAAAA,EAAAA,MAA+B,GAApEC,EAAiBF,EAAA,GAAI/kC,EAAU+kC,EAAA,GAAV/kC,WAGTisB,EAAAxsB,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GADZwlC,EAAwBjZ,EAAA,GAAEkZ,EAA4BlZ,EAAA,GASvD9tB,EAAQ,WACV+mB,EAAS,GAADpnB,OAAIyrB,EAASE,UACzB,GAIAtpB,EAAAA,EAAAA,YAAU,WAEmB,kBADb,IAAI2jC,gBAAgBva,EAASwa,QACjCpkB,IAAI,SACR8kB,GAAc,GAEdA,GAAc,EAEtB,GAAG,CAAClb,KAEJppB,EAAAA,EAAAA,YAAU,WAIFqkC,EACiC,IAA7Bl5B,OAAOsL,EAAKC,aACZouB,EAAkB5mC,aAAI,EAAJA,EAAMqC,IACnBoN,SACA3G,MAAK,SAACiE,GACgB,SAAfA,EAAI6L,SAAoC,IAAf7L,EAAI6L,QAC7B/G,KAAAA,KAAU,CACNQ,KAAM,UACNC,MAAO,yGAGXxS,KAEAgnC,GAA6B,EAErC,IAEJA,GAA6B,GAGjCA,GAA6B,EAErC,GAAG,CAACX,IAsGJ,OACI7iC,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,EACIqB,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CACHiC,QAAQ,WACRjI,QAxJC,WACTsR,EAAS,GAADpnB,OAAIyrB,EAASE,SAAQ,wBACjC,EAuJYroB,UAAU,uDAAsDd,SAAA,CAE/DN,GACGI,EAAAA,EAAAA,KAAC4nB,GAAM,CAACrX,MAAM,mBAEdvQ,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,uBAEjBO,EAAAA,EAAAA,MAAA,QAAMP,UAAU,gBAAed,SAAA,CAC1B,IACAN,EAAa,GAAK,0BAI3BI,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CACFhX,OAAQgnC,EACR9jC,UAAU,qBAAoBd,UAE9BF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wCAAuCd,UAClDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,2BAA0Bd,SAAA,EAErCqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,6BAA4Bd,SAAA,EACvCF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,OAAMd,SAAC,iBAErBF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAC,aAAW,aAAahG,QAASzV,EAAMmC,UAC3CF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAKrBhB,EAAAA,EAAAA,KAAA,OACIgB,UAAU,+BACVmC,MAAO,CAAE0W,SAAU,SAAU3Z,UAE7BqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EAEIqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,2BAA0B/gB,SAAA,CAAC,iCAEtCF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,OACLF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,OACV,cAAY,UACZ,iBAAe,MACfuP,MAAM,gCACN,gBAAc,SACdpN,MAAO,CAAEsQ,OAAQ,WAAYvT,UAE7BF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,uCAGpB00B,aAAK,EAALA,EAAO3yB,KAAI,SAACgzB,EAAMzzB,GAAC,OAChBf,EAAAA,EAAAA,MAAA,OAEIP,UAAU,+BAA8Bd,SAAA,EAExCF,EAAAA,EAAAA,KAAA,SACIwB,KAAK,OACLR,UAAU,oBACVV,GAAG,2BACHmgB,YAAY,KACZ9f,MAAOo1B,EACPn1B,SAAU,SAACoD,GAAC,OAxJxB,SAACA,EAAGsR,GAChC,IAAM0vB,EAAMniC,GAAO6yB,GAClBsP,EAAO1vB,GAAStR,EAAEgR,OAAOrU,MAAQsjC,EAASe,EAC/C,CAsJgDC,CACIjhC,EACA1B,EACH,KAIRozB,aAAK,EAALA,EAAOjtB,QAAS,IACbzI,EAAAA,EAAAA,KAAA,UACIwT,QAAS,SAACxP,GAAC,OAzK9BsR,EA0K2ChT,GAzK9D0iC,EAAMniC,GAAO6yB,IACZ1zB,OAAOsT,EAAO,QACrB2uB,EAASe,GAHY,IAAI1vB,EACnB0vB,CAyKgE,EACzB9kC,UAEDF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,gCAvBhBsB,EA0BH,IAGT4hC,IACGlkC,EAAAA,EAAAA,KAAA,SACIM,GAAG,YACH4kC,MAAM,wBAAuBhlC,SAE5BgkC,KAIT3iC,EAAAA,EAAAA,MAAA,UACIP,UAAU,gDACVmC,MAAO,CAAEkT,IAAK,QACd7C,QAAS,SAACxP,GACNA,EAAE6Q,iBACFovB,GAAS,SAAC16B,GAAI,SAAA7L,OAAAmF,GAAS0G,GAAI,CAAE,IAAE,GACnC,EAAErJ,SAAA,EAEFF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAA4B,yBAMhDc,IAAAA,SACG,CAAC,GAAI,GAAI,GAAI,IACboJ,OAAOsL,EAAK2uB,WAEZ5jC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,2BAA0B/gB,SAAA,CAAC,0CAGtCF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,OACLF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,OACV,cAAY,UACZ,iBAAe,MACfuP,MAAM,gDACN,gBAAc,SACdpN,MAAO,CAAEsQ,OAAQ,WAAYvT,UAE7BF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,wCAIrBhB,EAAAA,EAAAA,KAAA,SACIwB,KAAK,OACLR,UAAU,oBACVV,GAAG,2BACHmgB,YAAY,KACZ9f,MAAOkjC,EACPjjC,SAAU,SAACoD,GAAC,OAzNR,SAACA,GACzC8/B,EAAmB9/B,EAAEgR,OAAOrU,MAChC,CAwN4CykC,CACIphC,EACH,IAIR+/B,IACG/jC,EAAAA,EAAAA,KAAA,SACIM,GAAG,YACH4kC,MAAM,wBAAuBhlC,SAE5B6jC,QAOjBxiC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,2BAA0B/gB,SAAA,CAAC,eAEtCF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,OACV,cAAY,UACZ,iBAAe,MACfuP,MAAM,aACN,gBAAc,SACdpN,MAAO,CAAEsQ,OAAQ,WAAYvT,UAE7BF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,wCAGrBO,EAAAA,EAAAA,MAACy0B,EAAAA,EAAY,CACTzU,MAAOA,EACPC,SAAUA,EAASthB,SAAA,EAEnBF,EAAAA,EAAAA,KAACg2B,EAAAA,EAAapT,MAAK,KACnB5iB,EAAAA,EAAAA,KAACg2B,EAAAA,EAAa2M,cAAa,CAAAziC,SACtB,SAAA+O,GAAA,IAAA2zB,EAAGC,EAAQ5zB,EAAR4zB,SAAUC,EAAQ7zB,EAAR6zB,SAAQ,OACE,QADFF,EAClB9/B,MAAM0J,KAAKq2B,UAAS,IAAAD,OAAA,EAApBA,EAAsB7/B,KAClB,SAACkD,EAAG3D,GAAC,OACDtC,EAAAA,EAAAA,KAACg2B,EAAAA,EAAaC,QAAO,CAEjB31B,GAAIgC,EACJ4zB,SAAUjwB,EAAE4C,KACZytB,WACIrwB,EAAE26B,QAENrK,SAAUtwB,EAAEzE,KACZuhC,SAAUD,GAPLxgC,EAQP,GAET,WAOjBf,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SACI0f,QAAQ,2BACR9d,MAAO,CAAEoW,SAAU,OAAQrZ,SAAA,CAC9B,6KAKYF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,OACdF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,OACV,cAAY,UACZ,iBAAe,MACfuP,MAAM,4BACN,gBAAc,SACdpN,MAAO,CAAEsQ,OAAQ,WAAYvT,UAE7BF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,wCAIrBhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sCAAqCd,UAChDF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CACd9Y,SA/Tb,SAACoD,EAAG0e,GAC3B,IAAM/iB,EAAO+iB,EAAOC,UACpBsR,EAAWt0B,EACf,MA+TiC2kC,IACGtkC,EAAAA,EAAAA,KAAA,SACIM,GAAG,YACH4kC,MAAM,wBAAuBhlC,SAE5BokC,QAKb/iC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHiC,QAAQ,WACRza,UAAU,eACVwS,QAASzV,EAAMmC,SAClB,WAGDF,EAAAA,EAAAA,KAACq1B,GAAAA,EAAY,CACT7hB,QA7Rf,SAACxP,GAClB,IAjCIk/B,EAiCExxB,EAAW,IAAI0Q,SACrB1Q,EAAS2Q,OAAO,OAAQhiB,GACxBqR,EAAS2Q,OAAO,UAAW7L,aAAI,EAAJA,EAAMG,SACjCjF,EAAS2Q,OAAO,UAAWpkB,aAAI,EAAJA,EAAMqC,IACjCoR,EAAS2Q,OAAO,qBAAsBwhB,GACtCnO,EAAM3yB,KAAI,SAACgzB,GAAI,OAAKrkB,EAAS2Q,OAAO,SAAU0T,EAAK,IACnDxU,SAAAA,EAAOxe,KAAI,SAACuf,GAAI,OAAK5Q,EAAS2Q,OAAO,SAAUC,EAAK,IACpD5Q,EAAS2Q,OACL,SACArQ,SACKC,cAAc,2BACdC,aAAa,YA5ClBgxB,GAAQ,EACPphC,IAAAA,KAAO4zB,IAAuB,KAAbA,EAAM,KACxByO,EAAW,mDACXn0B,GAAAA,GAAMqa,KAAK,mDACX6Y,GAAQ,GAGRphC,IAAAA,KAAO4zB,IACP5zB,IAAAA,QAAU4zB,GAAO,SAACK,IACT6C,EAAAA,GAAAA,GAAW7C,KACZ/lB,GAAAA,GAAMqa,KAAK,8BACX8Z,EAAW,8BACXjB,GAAQ,EAEhB,IAGY,KAAZ7iC,IACAkkC,EAAc,sCACdv0B,GAAAA,GAAMqa,KAAK,qCACX6Y,GAAQ,GAEQ,KAAhB1sB,EAAK2uB,SAAkBvM,EAAAA,GAAAA,GAAWiL,KAClC7zB,GAAAA,GAAMqa,KAAK,8BACX2Z,EAAsB,8BACtBd,GAAQ,GAGLA,GAoBHwB,EAAehzB,GACVhE,SACA3G,MAAK,SAACiE,GACW8E,KAAAA,MAAW,CACrBE,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,IAGhBC,KAAK,CACPC,KAAM,UACNC,MAAO,gCAEXxS,GACJ,IAAE,OACK,SAACiO,GACJjO,IACA0Q,QAAQC,IAAI1C,EAChB,IAAE,SACO,WACLjO,GACJ,GAEZ,EAqPoC8B,UAAWiiC,EACXvxB,MAAM,4BAU9C,qjCCpOA,SA9M8B,SAAH5S,GAA8B,IAAxBI,EAAKJ,EAALI,MAAOE,EAAIN,EAAJM,KAAMuY,EAAI7Y,EAAJ6Y,KACApX,EAAAC,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAAnC+lC,EAAMjmC,EAAA,GAAEkmC,EAASlmC,EAAA,GAC0B0e,EAAAze,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA3CimC,EAAWznB,EAAA,GAAE0nB,EAAc1nB,EAAA,GACQG,EAAA5e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnCe,EAAO4d,EAAA,GAAEgW,EAAUhW,EAAA,GAC0BG,EAAA/e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA7CmmC,EAAYrnB,EAAA,GAAEsnB,EAAetnB,EAAA,GACeG,EAAAlf,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAEnDqmC,GAFiBpnB,EAAA,GAAeA,EAAA,IACfoB,EAAAA,EAAAA,OAIbtc,EAAAA,GAAAA,GAAYpF,IAFZ0F,EAAsCgiC,EAAtChiC,uCACAG,EAAuC6hC,EAAvC7hC,wCAEIulB,GAAaD,EAAAA,EAAAA,MAAbC,SACFvE,GAAWC,EAAAA,EAAAA,MAGXzJ,EAAO9E,EAAKC,YAEZmvB,EACO,IAATtqB,GAAuB,IAATA,GAAuB,IAATA,EACtBxX,IACAH,IAEyDkiC,EAAAxmC,IAA3BymC,EAAAA,EAAAA,MAA2B,GAA5DC,EAAcF,EAAA,GAAIhmC,EAASgmC,EAAA,GAAThmC,UAiFzB,OACIG,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,+BACVmC,MAAO,CAAEoW,SAAU,SAAUrZ,SAAA,EAE7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iFAAgFd,SAAA,EAC3FqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,oBACjBjC,aAAI,EAAJA,EAAMqC,GAAG,KAC1BrC,aAAI,EAAJA,EAAMsS,SAAStS,aAAI,EAAJA,EAAM8P,aAE1B/N,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QAASzV,EAAOiD,UAAU,GAAEd,UAChCF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIrBO,EAAAA,EAAAA,MAAA,QAAMP,UAAU,OAAMd,SAAA,EAClBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,mBAAkBd,SAAA,CAAC,8BAE3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,MAAO,SAEjCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAChB0lC,EAAgB7iC,KAAI,SAACijC,GAAM,OACxBzkC,EAAAA,EAAAA,MAAA,OAEIP,UAAU,2CAA0Cd,SAAA,EAEpDF,EAAAA,EAAAA,KAAA,SACIgB,UAAU,wBACVQ,KAAK,QACLqH,KAAK,gBACLvI,GAAI0lC,EAAO1lC,GACX4gB,UAAU,EACVtgB,SAAU,WA/G1C0kC,EA+G6DU,EAAO,EACpCrlC,MAAOqlC,EAAOpiC,SACdT,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACRonC,UAAW,UAGnBjmC,EAAAA,EAAAA,KAAA,SACIgB,UAAU,mBACVigB,QAAS+kB,EAAO1lC,GAChB6C,MAAO,CAAE+iC,aAAc,OAAQhmC,SAE9B8lC,EAAOpiC,aAtBPoiC,EAAO1lC,GAwBV,MAGbilC,IACGvlC,EAAAA,EAAAA,KAAA,SACIM,GAAG,YACHU,UAAU,wBAAuBd,SAEhCqlC,QAKbhkC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,mBAAkBd,SAAA,CAAC,sBACzBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,MAAO,SAEnDF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,mBAAkBd,UAC7BF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CACd9Y,SA7IG,SAACoD,EAAG0e,GAC/B,IAAM/iB,EAAO+iB,EAAOC,UACpBsR,EAAWt0B,EACf,MA6IqB8lC,IACGzlC,EAAAA,EAAAA,KAAA,SACIM,GAAG,YACHU,UAAU,wBAAuBd,SAEhCulC,QAKbzlC,EAAAA,EAAAA,KAAA,OAAAE,UACIqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHhG,QAASzV,EACT0d,QAAQ,WACRza,UAAU,eAAcd,SAC3B,WAGDF,EAAAA,EAAAA,KAACq1B,GAAAA,EAAY,CACT9kB,MAAM,SACNiD,QA5IH,SAACxP,GAAM,IAAAmiC,EAAAC,EAC5BpiC,EAAE6Q,iBAEF,IArBIwxB,EAqBE1mC,EAAO,CACTkS,QAAS5T,aAAI,EAAJA,EAAMqC,GACfy0B,QAASve,aAAI,EAAJA,EAAMlW,GACfgmC,yBAA0C,QAAlBH,EAAEd,aAAM,EAANA,EAAQzhC,gBAAQ,IAAAuiC,EAAAA,EAAI,GAC9CI,mBAAoBlB,aAAM,EAANA,EAAQ/kC,GAC5BD,QAAAA,EACAmmC,YAA+B,QAApBJ,EAAEf,aAAM,EAANA,EAAQxhC,kBAAU,IAAAuiC,GAAAA,IA3B/BC,EAAa,EAED,KAAZhmC,IACAgmC,IACAX,EACI,0HAIHL,IACDgB,IACAb,EAAe,mDAGG,IAAfa,GAiBHN,EAAepmC,GACV+N,SACA3G,MAAK,SAACiE,GACW8E,KAAAA,MAAW,CACrBE,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,IAGhBC,KAAK,CACPC,KAAM,UACNC,MAAO,6CAEXuU,EAAS,GAADpnB,OAAI2rB,IACZtrB,GACJ,IAAE,OACK,SAACiO,GAAG,OAAKyC,QAAQC,IAAI1C,EAAI,IAEtB8D,KAAAA,MAAW,CACrBE,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,IAGhBC,KAAK,CACPC,KAAM,QACNC,MAAO,+CAGnB,EA+F4B1Q,UAAWA,gBAQ3C,qiCCpLA,SA5BwB,SAAHlC,GAAuB,IAAjBM,EAAIN,EAAJM,KAAMuY,EAAI7Y,EAAJ6Y,KAC4BpX,EAAAC,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAlDmnC,EAAarnC,EAAA,GAAEsnC,EAAgBtnC,EAAA,GAGtC,OACImC,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXqB,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CACHiC,QAAQ,WACRjI,QAAS,kBAAMkzB,GAAiB,EAAK,EACrC1lC,UAAU,oEAAmEd,SAAA,EAE7EF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BACbhB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gBAAed,SAAC,sBAGpCF,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQ2oC,EAAezlC,UAAU,yBAAwBd,UAC5DF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wCAAuCd,UAClDF,EAAAA,EAAAA,KAAC2mC,GAAqB,CAClBnwB,KAAMA,EACNvY,KAAMA,EACNF,MAAO,kBAAM2oC,GAAiB,EAAM,UAM5D,qiCCzBO,IAAME,GAA0B,SAAHjpC,GAA+B,IAAzBkC,EAASlC,EAATkC,UAAW2T,EAAO7V,EAAP6V,QACjD,IAAK3T,EACD,OAAOG,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QAASA,EAAQtT,SAAC,sBAEhCkT,EAAAA,SACIoG,EAAAA,CAab,EAGaqtB,GAA4B,SAAH53B,GAC9BA,EAAJhR,KACQgR,EAARrL,SAKE,IAAAmJ,EAJFod,EAAQlb,EAARkb,SACApsB,EAAKkR,EAALlR,MACM+oC,GAAA73B,EAAN83B,OAAM93B,EACN6yB,cAAAA,OAAY,IAAAgF,GAAQA,EAEsB1nC,EAAAC,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnCe,EAAOjB,EAAA,GAAE60B,EAAU70B,EAAA,GACQ0e,EAAAze,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA3B0M,EAAG8R,EAAA,GAAE0W,EAAM1W,EAAA,GAOZ8W,EAAiB,SAAA5wB,GACnBA,EAAE6Q,iBACa,KAAZxU,EACC8pB,EAAS,CAAC9pB,QAAAA,IAEVm0B,EAAO,iDAEf,EAEMhe,EAAa,QAATzJ,EAAGC,cAAM,IAAAD,GAAS,QAATA,EAANA,EAAQE,eAAO,IAAAF,OAAA,EAAfA,EAAiB1K,KAE9B,OACIrC,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXF,EAAAA,EAAAA,KAAA,QAAMm1B,OAAO,GAAEj1B,UACXqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,mBAAkBd,SAAA,CAAC,4CACD,KAC1CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,gBAAed,SAAC,UAEnCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,mBAAkBd,UAC7BF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CAAC9Y,SAzBR,SAACoD,EAAG0e,GAC/B,IAAM/iB,EAAO+iB,EAAOC,UACpBsR,EAAWt0B,EACf,MAwBiBqM,IAAOhM,EAAAA,EAAAA,KAAA,SAAOM,GAAG,YAAYU,UAAU,wBAAuBd,SAC1D8L,KAGLzK,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHhG,QAASzV,EACT0d,QAAQ,WACRza,UAAU,eAAcd,SAC3B,SAIC4hC,GAaE9hC,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAACxY,UAAU,oBAAmBd,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,4BACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,UAEb,IAAI,sBArBfmB,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SACV4B,EAAEuV,SAAS,CAAC,EAAG,GAAIb,aAAI,EAAJA,EAAMgS,UACtBxoB,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QAASohB,EAAe10B,SAAC,UAEjCF,EAAAA,EAAAA,KAACq1B,GAAAA,EAAY,CACT9kB,MAAM,SACN1Q,UAAWiiC,EACXtuB,QAASohB,eAwBjD,ECwCA,SAhJqB,SAAHj3B,GAOZ,IAAAoP,EAgEKi6B,EAtEPpjC,EAAQjG,EAARiG,SACA/D,EAASlC,EAATkC,UACAonC,EAAQtpC,EAARspC,SACAC,EAAMvpC,EAANupC,OACAC,EAAUxpC,EAAVwpC,WACAC,EAAUzpC,EAAVypC,WAEM5wB,EAAO,IAAI1J,EAAAA,EAAW,QAAPC,EAACC,cAAM,IAAAD,GAAS,QAATA,EAANA,EAAQE,eAAO,IAAAF,OAAA,EAAfA,EAAiB1K,MAuCjChC,EArBEmW,SAAAA,EAAMulB,oBAAoB,IAAMvlB,SAAAA,EAAMulB,oBAAoB,IACnDn4B,aAAQ,EAARA,EAAUyjC,WAEjB7wB,SAAAA,EAAMulB,oBAAoB,IAC1BvlB,SAAAA,EAAMulB,oBAAoB,KAC1BvlB,SAAAA,EAAMulB,oBAAoB,KAC1BvlB,SAAAA,EAAMulB,oBAAoB,GAGQ,8BAA9Bn4B,aAAQ,EAARA,EAAU0jC,kBACoB,yBAA9B1jC,aAAQ,EAARA,EAAU0jC,iBAEH1jC,aAAQ,EAARA,EAAUyjC,WAEVzjC,aAAQ,EAARA,EAAU2jC,aAGd3jC,aAAQ,EAARA,EAAUyjC,WAKzB,OAAIxnC,GAEI0B,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXF,EAAAA,EAAAA,KAAA,OAAAE,UACIqB,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACIF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,QAAQ8B,UAAU,UACrChB,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,QAAQ8B,UAAU,eAI7ChB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2BAA0Bd,SACpCL,IACG0B,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACIF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,OAAO8B,UAAU,UACpChB,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,OAAO8B,UAAU,UACpChB,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,MAAM8B,UAAU,iBAM/CX,GAAYR,GAIhB0B,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACV0D,aAAQ,EAARA,EAAU0iC,4BACPtmC,EAAAA,EAAAA,KAAA,OAAAE,SACML,GASE0B,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACIF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,QAAQ8B,UAAU,UACrChB,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,QAAQ8B,UAAU,aAVzCO,EAAAA,EAAAA,MAAA,KAAArB,SAAA,EACIqB,EAAAA,EAAAA,MAAA,QAAMP,UAAU,oCAAmCd,SAAA,CAAC,UACxC,OAEuB,QAD5B8mC,EACNpjC,aAAQ,EAARA,EAAU0iC,gCAAwB,IAAAU,EAAAA,EAC/BpjC,aAAQ,EAARA,EAAU4jC,sBAW9BjmC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,sBAAqBd,SAAA,EAC9BL,IACEG,EAAAA,EAAAA,KAAA,OACIgB,UAAU,iBACV0T,wBAAyB,CAAEC,OAAQtU,KAI1CR,IACG0B,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACIF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,OAAO8B,UAAU,UACpChB,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,OAAO8B,UAAU,UACpChB,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,MAAM8B,UAAU,gBAI/ChB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sCAAqCd,UAC9CL,IACG+D,SAAAA,EAAU4iC,aACPjlC,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHhG,QAAS0zB,EACTzrB,QAAQ,WACRza,UAAU,eAAcd,SAC3B,qBAIDF,EAAAA,EAAAA,KAAC4mC,GAAuB,CACpBpzB,QAASyzB,EACTpnC,WAAW,QAInBG,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,UAASd,UACpBF,EAAAA,EAAAA,KAACq1B,GAAAA,EAAY,CACT7hB,QAAS2zB,EACT1rB,QAAQ,UACR5b,UAAWunC,EACX72B,MAAM,uBA/D/B,IAwEf,24CC7IA,IAAM9P,GAAU,CACZ,CACIH,GAAI,SACJsD,SAAU,2CACVC,YAAY,GAEhB,CACIvD,GAAI,SACJsD,SAAU,wDACVC,YAAY,IA2OpB,SAvO8B,SAAHlG,GAOrB,IAAA8pC,EANFxpC,EAAIN,EAAJM,KAEAksB,GADMxsB,EAAN+pC,OACQ/pC,EAARwsB,UACAvmB,EAAQjG,EAARiG,SAAQkd,EAAAnjB,EACR6D,KAAAA,OAAI,IAAAsf,GAAQA,EAAA6mB,EAAAhqC,EACZmkC,aAAAA,OAAY,IAAA6F,GAAQA,EAEsBvoC,EAAAC,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAAnC+lC,EAAMjmC,EAAA,GAAEkmC,EAASlmC,EAAA,GAC0B0e,EAAAze,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA3CimC,EAAWznB,EAAA,GAAE0nB,EAAc1nB,EAAA,GACUG,EAAA5e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAArCpB,EAAQ+f,EAAA,GAAE2pB,EAAW3pB,EAAA,GAC2BG,EAAA/e,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAhDmmC,EAAYrnB,EAAA,GAAEsnB,EAAetnB,EAAA,GACQG,EAAAlf,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAArCuoC,EAAQtpB,EAAA,GAAEupB,EAAWvpB,EAAA,GACwB+M,EAAAjsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA/ByoC,GAAFzc,EAAA,GAAiBA,EAAA,IACeE,EAAAnsB,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAlCksB,EAAA,GAAeA,EAAA,GAqFhC,OACIxrB,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAAA,QAAM4zB,OAAO,GAAEj1B,SAAA,CACgB,KAA1B0D,aAAQ,EAARA,EAAU4iC,cAAqBhlC,GAC5BD,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,mBAAkBd,SAAA,CAAC,4BAE3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,MAAO,SAEjCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAChB4B,IAAAA,IAAMrB,IAAS,SAACmD,GAAQ,OACrBrC,EAAAA,EAAAA,MAAA,OAEIP,UAAU,2CAA0Cd,SAAA,EAEpDF,EAAAA,EAAAA,KAAA,SACIgB,UAAU,wBACVQ,KAAK,QACLqH,KAAK,gBACLvI,GAAIsD,EAAStD,GACb4gB,UAAU,EACVtgB,SAAU,WAtG1C0kC,EAsG6D1hC,EAAS,EACtCjD,MAAOiD,EAASA,SAChBT,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACRonC,UAAW,UAGnBjmC,EAAAA,EAAAA,KAAA,SACIgB,UAAU,mBACVigB,QAASrd,EAAStD,GAClB6C,MAAO,CAAE+iC,aAAc,OAAQhmC,SAE9B0D,EAASA,aAtBTA,EAAStD,GAwBZ,MAGbilC,IACGvlC,EAAAA,EAAAA,KAAA,SACIM,GAAG,YACHU,UAAU,wBAAuBd,SAEhCqlC,OAIb,MAEHtnC,SAAiB,QAAbwpC,EAAJxpC,EAAMqQ,mBAAW,IAAAm5B,OAAA,EAAjBA,EAAmBh/B,QAAS,IACzBlH,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,mBAAkBd,SAAA,CAAC,kBAE3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wBAAuBd,SAAC,MAAO,SAElDF,EAAAA,EAAAA,KAACgoC,GAAoB,CACjB/pC,KAAMA,EACNgqC,SAAUJ,EACVC,YAAaA,QAKxBD,aAAQ,EAARA,EAAUp/B,QAAS,IAChBlH,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOihB,QAAQ,GAAGjgB,UAAU,mBAAkBd,SAAC,aAG9C2nC,EAAS9kC,KAAI,SAAC8C,EAAGvD,GAAC,OACftC,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SACI0f,QAAQ,GACRjgB,UAAU,mBAAkBd,SAAA,CAE3BoC,EAAI,EAAE,WAASuD,aAAC,EAADA,EAAG0K,SACd,KACTvQ,EAAAA,EAAAA,KAAA,UACAuB,EAAAA,EAAAA,MAAA,SAAOP,UAAU,mBAAkBd,SAAA,CAAC,uBAEhCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wBAAuBd,SAAC,MAEjC,IACJ,QAENF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,mBAAkBd,UAC7BF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CACd9Y,SAAU,SAACoD,EAAG0e,GAAM,OArK7B,SAAC1e,EAAG0e,EAAQpiB,GACvC,IAIkB4nC,EAOXC,EAXDxoC,EAAO+iB,EAAOC,UACdylB,EAASvlC,GAAO3E,GAEhBoX,EAAQ8yB,aAAS,EAATA,EAAWC,WAAU,SAACniC,GAAC,OAAKA,EAAEk4B,aAAe99B,CAAE,KAC9C,IAAXgV,EACA8yB,EAAUhgC,KAAK,CACX9H,GAAIA,EACJ89B,WAAY99B,EACZD,QAASV,EACT4mC,mBAA8B,QAAZ2B,EAAE7C,aAAM,EAANA,EAAQ/kC,UAAE,IAAA4nC,EAAAA,EAAI,KAGtCE,EAAU9yB,GAAS,CACfhV,GAAIA,EACJ89B,WAAY99B,EACZD,QAASV,EACT4mC,mBAA8B,QAAZ4B,EAAE9C,aAAM,EAANA,EAAQ/kC,UAAE,IAAA6nC,EAAAA,EAAI,IAI1CP,EAAW/kC,GAAKulC,GACpB,CAgJ4CE,CACItkC,EACA0e,EACA7c,aAAC,EAADA,EAAGu4B,WACN,MAIZqH,IACGzlC,EAAAA,EAAAA,KAAA,SACIM,GAAG,YACHU,UAAU,wBAAuBd,SACpC,+GA/BQ2F,EAAEu4B,WAsCN,QAK7Bp+B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sCAAqCd,UAShDF,EAAAA,EAAAA,KAACuoC,GAAqB,CAClB/0B,QA/II,SAACxP,GAAM,IAAAoiC,EAC3BpiC,EAAE6Q,iBAEF,IAlCIwxB,EAkCE1mC,EAAO,CACTkS,QAAS5T,aAAI,EAAJA,EAAMqC,GACf+kC,OAAQA,aAAM,EAANA,EAAQzhC,SAChB1F,SAAAA,EACAsoC,YAA+B,QAApBJ,EAAEf,aAAM,EAANA,EAAQxhC,kBAAU,IAAAuiC,GAAAA,GAtC/BC,EAAa,EACF,OAAXhB,SAAmBzhC,GAAAA,EAAU4iC,aAAehlC,IAC5C6kC,IACAb,EAAe,mDAGf1jC,IAAAA,KAAO7D,aAAI,EAAJA,EAAMqZ,SAAW,IACA,IAApBuwB,EAASp/B,SACT49B,IACA0B,EACI,0DAIgB,IAApB7pC,EAASuK,QAAgBvK,EAASuK,SAAWo/B,EAASp/B,SACtD49B,IACAX,GAAgB,IAGpBxnC,SAAAA,EAAU6E,KAAI,SAAC1C,GACc,MAArBA,aAAO,EAAPA,EAASA,WACTgmC,IACAX,GAAgB,GAExB,KAGkB,IAAfW,GAcHlc,EAASxqB,EAEjB,EAoIoBE,UAAWiiC,UAMnC,EAIA,IAAMyG,GAAwB,SAAHt5B,GAA+B,IAAzBuE,EAAOvE,EAAPuE,QAC7B,OAD+CvE,EAATpP,WAU9B0B,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAACxY,UAAU,4BAA2Bd,SAAA,EACzCF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,iCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,UAEd,oBAfN0C,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAACxY,UAAU,UAAUwS,QAASA,EAAQtT,SAAA,CACxC,IAAI,aAmBrB,EAGM8nC,GAAuB,SAAHt4B,GAAwC,IAAA84B,EAAAC,EAAlCxqC,EAAIyR,EAAJzR,KAAMgqC,EAAQv4B,EAARu4B,SAAUH,EAAWp4B,EAAXo4B,YAC5C,OACI9nC,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,oBAAmBd,UAC9BqB,EAAAA,EAAAA,MAACynB,GAAAA,EAAO,CAACroB,MAAOsnC,EAAUrnC,SAAUknC,EAAaY,UAAQ,EAAAxoC,SAAA,EACrDqB,EAAAA,EAAAA,MAACynB,GAAAA,EAAQxP,OAAM,CAACxY,UAAU,2GAA0Gd,SAAA,EAChIF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,8DACVmC,MAAO,CAAEkT,IAAK,OAAQnW,UAErB+nC,aAAQ,EAARA,EAAUx/B,QAAS,EACdw/B,EAASllC,KAAI,SAAC8C,GAAC,OACXtE,EAAAA,EAAAA,MAAA,QAEIP,UAAU,oBACVmC,MAAO,CAAEuY,SAAU,QAASxb,SAAA,CAE3B,IACA2F,aAAC,EAADA,EAAG0K,MAAO,MALN1K,EAAEu4B,WAMJ,IAEX,qBAEVp+B,EAAAA,EAAAA,KAACg1B,GAAAA,IAAiB,QAEtBh1B,EAAAA,EAAAA,KAACgpB,GAAAA,EAAQrB,QAAO,CACZ3mB,UAAU,8CACVmC,MAAO,CACH8V,OAAQ,GACRuM,UAAW,QACXmjB,UAAW,QACbzoC,UAEDjC,SAAiB,QAAbuqC,EAAJvqC,EAAMqQ,mBAAW,IAAAk6B,OAAA,EAAjBA,EAAmB//B,QAAS,EACzBxK,SAAiB,QAAbwqC,EAAJxqC,EAAMqQ,mBAAW,IAAAm6B,OAAA,EAAjBA,EAAmB1lC,KAAI,SAAC8C,GAAC,OACrB7F,EAAAA,EAAAA,KAACgpB,GAAAA,EAAQlB,OAAM,CACXnnB,MAAOkF,EAEP+iC,UAAW,EACX5nC,UAAW,SAAA2W,GAAS,OAAAA,EAANoQ,OAEJ,oCACA,4BAA4B,EACrC7nB,SAEA,SAAA2X,GAAA,IAAGkO,EAAQlO,EAARkO,SAAQ,OACRxkB,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXqB,EAAAA,EAAAA,MAAA,OAAArB,SAAA,CAAM2F,EAAE0K,MAAM,KAACvQ,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,sBAAqBd,SAAE2F,EAAEgjC,sBACvD9iB,IACG/lB,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,0BAGR,GAhBhB6E,EAAEu4B,WAkBM,KAGrBp+B,EAAAA,EAAAA,KAAA,OAAAE,SAAK,wBAM7B,qiCC/UA,IAAM4oC,GAAc,SAACtnC,GACjB,OAAOA,GACH,IAAK,WACD,MAAQ,CACJ,CAAClB,GAAI,QAASiQ,MAAO,0GACrB,CAACjQ,GAAI,QAASiQ,MAAO,kIAE7B,IAAK,MACD,MAAO,CACH,CAACjQ,GAAI,QAASiQ,MAAO,yGACrB,CAACjQ,GAAI,QAASiQ,MAAO,iIAIrC,EAqJA,SAjJwB,SAAH5S,GAA+C,IAAAoP,EAA1Cod,EAAQxsB,EAARwsB,SAAU2X,EAAYnkC,EAAZmkC,aAAc4F,EAAM/pC,EAAN+pC,OACxClxB,GADoD7Y,EAAJM,KACzC,IAAI6O,EAAAA,EAAW,QAAPC,EAACC,cAAM,IAAAD,GAAS,QAATA,EAANA,EAAQE,eAAO,IAAAF,OAAA,EAAfA,EAAiB1K,OACCjD,EAAAC,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAjC+lC,EAAMjmC,EAAA,GAAEkmC,EAASlmC,EAAA,GAC0B0e,EAAAze,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA3CimC,EAAWznB,EAAA,GAAE0nB,EAAc1nB,EAAA,GACQG,EAAA5e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnCe,EAAO4d,EAAA,GAAEgW,EAAUhW,EAAA,GAC0BG,EAAA/e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA7CmmC,EAAYrnB,EAAA,GAAEsnB,EAAetnB,EAAA,GACAG,EAAAlf,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAAxBk1B,GAAFjW,EAAA,GAAQA,EAAA,IAQZuE,EAAe,SAAC9e,GAClBshC,EAAUthC,EAAEgR,OAAOrU,MACvB,EAoBMi0B,EAAiB,SAAA5wB,GAjBL,IACVqiC,EAiBJriC,EAAE6Q,iBAjBEwxB,EAAa,EAEF,KAAZhmC,IACEgmC,IACAX,EAAgB,0HAGP,KAAXL,IACEgB,IACAb,EAAe,mDAGE,IAAfa,EAOHlc,EAAS,CACL9pB,QAAAA,EACA0oC,WAAY1D,IAGhB7Q,EAAO,wCAEf,EAKM/zB,EAAgC,KAAtB+V,aAAI,EAAJA,EAAMC,aAAoBqyB,GAAY,YAAcA,GAAY,OAChF,OACI9oC,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAAA,QAAM4zB,OAAO,GAAEj1B,SAAA,EAEXqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,mBAAkBd,SAAA,CAAC,0BACrBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,MAAO,SAEvDF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAChBO,EAAQsC,KAAI,SAAAijC,GAAM,OACfzkC,EAAAA,EAAAA,MAAA,OAAqBP,UAAU,2CAA0Cd,SAAA,EACrEF,EAAAA,EAAAA,KAAA,SACIgB,UAAU,wBACVQ,KAAK,QACLqH,KAAK,gBACLvI,GAAI0lC,EAAO1lC,GACX4gB,UAAW,EACXtgB,SAAUkiB,EACVniB,MAAOqlC,EAAOz1B,MACdpN,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACRonC,UAAW,UAInBjmC,EAAAA,EAAAA,KAAA,SACIgB,UAAU,mBACVigB,QAAS+kB,EAAO1lC,GAChB6C,MAAO,CAAE+iC,aAAc,OAAQhmC,SAE9B8lC,EAAOz1B,UArBNy1B,EAAO1lC,GAuBX,MAGbilC,IAAevlC,EAAAA,EAAAA,KAAA,SAAOM,GAAG,YAAYU,UAAU,wBAAuBd,SAAEqlC,QAK7EhkC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,mBAAkBd,SAAA,CAAC,qCACVF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,gBAAed,SAAC,UAEpEF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,mBAAkBd,UAC7BF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CAAC9Y,SA1FR,SAACoD,EAAG0e,GAC/B,IAAM/iB,EAAO+iB,EAAOC,UACpBsR,EAAWt0B,EACf,MAyFiB8lC,IAAgBzlC,EAAAA,EAAAA,KAAA,SAAOM,GAAG,YAAYU,UAAU,wBAAuBd,SACnEulC,QAITlkC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EACvCF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QAASk0B,EAAQjsB,QAAQ,WAAWza,UAAU,eAAcd,SAAC,SAInE4hC,GAeE9hC,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAACxY,UAAU,oBAAmBd,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,4BACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,UAEb,IAAI,sBAvBfmB,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SACd4B,EAAEuV,SAAS,CAAC,EAAG,GAAIb,aAAI,EAAJA,EAAMC,cACtBzW,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QAASohB,EAAe10B,SAAC,UAEjCF,EAAAA,EAAAA,KAACq1B,GAAAA,EAAY,CACT9kB,MAAM,SACN1Q,UAAWiiC,EACXtuB,QAASohB,eAwBjD,qiCC1BA,SAjI8B,SAAHj3B,GAAwB,IAAAoP,EAAlB9O,EAAIN,EAAJM,KAAMF,EAAKJ,EAALI,MACSqB,EAAAC,IAApBC,EAAAA,EAAAA,UAAS,YAAW,GAArCsC,EAAIxC,EAAA,GAAE4pC,EAAO5pC,EAAA,GACoB0e,EAAAze,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAjC2pC,EAAMnrB,EAAA,GAAEorB,EAASprB,EAAA,GAClB4B,GAAWC,EAAAA,EAAAA,MACjBwpB,GACIC,EAAAA,EAAAA,IAA2BnrC,aAAI,EAAJA,EAAMqC,IADvBsD,EAAQulC,EAAdxpC,KAA4B0pC,EAAkBF,EAA9BvpC,WAGa0pC,EAAAjqC,IAAjCkqC,EAAAA,EAAAA,MAAiC,GAD9BC,EAAoBF,EAAA,GAAeG,EAAuBH,EAAA,GAAlCzpC,UAEzB2W,EAAO,IAAI1J,EAAAA,EAAW,QAAPC,EAACC,cAAM,IAAAD,GAAS,QAATA,EAANA,EAAQE,eAAO,IAAAF,OAAA,EAAfA,EAAiB1K,MAGjCqnC,EAAoC,SAAC/pC,EAAM6B,GAAS,IAAAmoC,EAAAC,EAChDC,EAAQ,CACVxpC,QAAsB,QAAfspC,EAAEhqC,aAAI,EAAJA,EAAMU,eAAO,IAAAspC,EAAAA,EAAI,GAC1BG,YAA6B,QAAlBF,EAAEjqC,aAAI,EAAJA,EAAMopC,kBAAU,IAAAa,EAAAA,EAAI,GACjC/3B,QAAS5T,aAAI,EAAJA,EAAMqC,GACfy0B,QAASve,aAAI,EAAJA,EAAMG,QACfozB,YAAanmC,aAAQ,EAARA,EAAUtD,GACvBskB,KAAMjlB,SAAAA,EAAI,SAAa,WAAaspC,GAGxCO,EAAqBK,GAChBn8B,SACA3G,MAAK,SAACiE,GACClJ,EAAEuV,SAAS,CAAC,EAAG,GAAIb,aAAI,EAAJA,EAAMC,aACzBuyB,EAAQxnC,IAERke,GAASsqB,EAAAA,EAAAA,IAAch/B,aAAG,EAAHA,EAAKi/B,cAC5BlsC,IAER,IAAE,OACK,SAACiO,GAAG,OAAKyC,QAAQC,IAAI1C,EAAI,GACxC,EAyBA,OACIhM,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,+BACVmC,MAAO,CAAEoW,SAAU,SAAUrZ,SAAA,EAE7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iFAAgFd,SAAA,EAC3FqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,QAC7BjC,aAAI,EAAJA,EAAMqC,GAAG,KA5BN,IAArBkW,EAAKC,YACW,oBAAT7U,EACD,8BACA,6CACsB,IAArB4U,EAAKC,YACI,oBAAT7U,EACD,yBACA,6CACsB,IAArB4U,EAAKC,aAA0C,KAArBD,EAAKC,YAEJ,8BAA9B7S,aAAQ,EAARA,EAAU0jC,kBACoB,yBAA9B1jC,aAAQ,EAARA,EAAU0jC,iBAEH,8CAEA,4BAED,iCAaFtnC,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QAASzV,EAAOiD,UAAU,GAAEd,UAChCF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIrBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,CACP,aAAT0B,IACG5B,EAAAA,EAAAA,KAACkqC,GAAY,CACTtmC,SAAUA,EACV/D,UAAWwpC,EACXjC,WAAYqC,EACZxC,SAAU,WACNiC,EAAU,UACVF,EAAQ,sBACZ,EACA9B,OAAQ,WACJgC,EAAU,QACVF,EAAQ,oBACZ,EACA7B,WAAY,WACR+B,EAAU,YACVQ,EACI,CAAES,UAAU,GACZ,GAER,IAIE,wBAATvoC,IACG5B,EAAAA,EAAAA,KAAC6mC,GAAyB,CACtB5oC,KAAMA,EACN6jC,aAAc2H,EACdtf,SAAU,SAACxqB,GAAI,OACX+pC,EACI/pC,EACA,kBACH,EAEL5B,MAAO,kBAAMirC,EAAQ,WAAW,IAI9B,sBAATpnC,IACG5B,EAAAA,EAAAA,KAACoqC,GAAe,CACZnsC,KAAMA,EACNksB,SAAU,SAACxqB,GAAI,OACX+pC,EACI/pC,EACA,uBACH,EAELmiC,aAAc2H,EACd/B,OAAQ,kBAAMsB,EAAQ,WAAW,WAO7D,yPC5IAjlC,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAhB,EAAAkB,OAAAC,UAAAC,EAAApB,EAAAqB,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAN,EAAAD,EAAAhB,GAAAiB,EAAAD,GAAAhB,EAAArC,KAAA,EAAA2B,EAAA,mBAAAkC,OAAAA,OAAA,GAAAC,EAAAnC,EAAAoC,UAAA,aAAAC,EAAArC,EAAAsC,eAAA,kBAAAC,EAAAvC,EAAAwC,aAAA,yBAAAC,EAAAd,EAAAD,EAAAhB,GAAA,OAAAkB,OAAAK,eAAAN,EAAAD,EAAA,CAAArD,MAAAqC,EAAAgC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,EAAA,KAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAhB,GAAA,OAAAiB,EAAAD,GAAAhB,CAAA,WAAAmC,EAAAlB,EAAAD,EAAAhB,EAAAoB,GAAA,IAAA9B,EAAA0B,GAAAA,EAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAA/C,EAAA6B,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAE,EAAAG,EAAA,WAAA9D,MAAA4E,EAAAtB,EAAAjB,EAAA2B,KAAAF,CAAA,UAAAe,EAAAvB,EAAAD,EAAAhB,GAAA,WAAAxB,KAAA,SAAAiE,IAAAxB,EAAAyB,KAAA1B,EAAAhB,GAAA,OAAAiB,GAAA,OAAAzC,KAAA,QAAAiE,IAAAxB,EAAA,EAAAD,EAAAmB,KAAAA,EAAA,IAAA1H,EAAA,iBAAAkI,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAApD,GAAAoB,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAM,EAAAtC,GAAA,0BAAAuC,SAAA,SAAAxC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAwC,QAAAzC,EAAAC,EAAA,gBAAAyC,EAAAzC,EAAAD,GAAA,SAAA2C,EAAA3D,EAAAsB,EAAAhC,EAAAmC,GAAA,IAAAE,EAAAa,EAAAvB,EAAAjB,GAAAiB,EAAAK,GAAA,aAAAK,EAAAnD,KAAA,KAAAqD,EAAAF,EAAAc,IAAAhI,EAAAoH,EAAAlE,MAAA,OAAAlD,GAAA,UAAAmJ,GAAAnJ,IAAA2G,EAAAsB,KAAAjI,EAAA,WAAAuG,EAAA6C,QAAApJ,EAAAqJ,SAAAC,MAAA,SAAA9C,GAAA0C,EAAA,OAAA1C,EAAA3B,EAAAmC,EAAA,aAAAR,GAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAT,EAAA6C,QAAApJ,GAAAsJ,MAAA,SAAA9C,GAAAY,EAAAlE,MAAAsD,EAAA3B,EAAAuC,EAAA,aAAAZ,GAAA,OAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAAzC,EAAAsB,EAAA,gBAAA3D,MAAA,SAAAsD,EAAAG,GAAA,SAAA4C,IAAA,WAAAhD,GAAA,SAAAA,EAAAhB,GAAA2D,EAAA1C,EAAAG,EAAAJ,EAAAhB,EAAA,WAAAA,EAAAA,EAAAA,EAAA+D,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAvB,EAAAhB,EAAAoB,GAAA,IAAAE,EAAA7G,EAAA,gBAAA6E,EAAAmC,GAAA,GAAAH,IAAAsB,EAAA,UAAAqB,MAAA,mCAAA3C,IAAAuB,EAAA,cAAAvD,EAAA,MAAAmC,EAAA,OAAA9D,MAAAsD,EAAAiD,MAAA,OAAA9C,EAAA+C,OAAA7E,EAAA8B,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAAgD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAT,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAA7G,EAAA,MAAA6G,EAAAuB,EAAAzB,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAsB,EAAA,IAAAK,EAAAT,EAAAxB,EAAAhB,EAAAoB,GAAA,cAAA6B,EAAAzE,KAAA,IAAA8C,EAAAF,EAAA8C,KAAArB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAnF,MAAAsF,EAAAR,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAjB,EAAAzE,OAAA8C,EAAAuB,EAAAzB,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAQ,EAAAR,IAAA,YAAA4B,EAAArD,EAAAhB,GAAA,IAAAoB,EAAApB,EAAAmE,OAAA7C,EAAAN,EAAAU,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAjB,EAAAoE,SAAA,eAAAhD,GAAAJ,EAAAU,SAAA,SAAA1B,EAAAmE,OAAA,SAAAnE,EAAAyC,IAAAxB,EAAAoD,EAAArD,EAAAhB,GAAA,UAAAA,EAAAmE,SAAA,WAAA/C,IAAApB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA0B,EAAA,IAAAxD,EAAAkD,EAAAlB,EAAAN,EAAAU,SAAA1B,EAAAyC,KAAA,aAAAnD,EAAAd,KAAA,OAAAwB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAAnD,EAAAmD,IAAAzC,EAAAoE,SAAA,KAAAtB,EAAA,IAAArB,EAAAnC,EAAAmD,IAAA,OAAAhB,EAAAA,EAAAyC,MAAAlE,EAAAgB,EAAA2D,YAAAlD,EAAA9D,MAAAqC,EAAA4E,KAAA5D,EAAA6D,QAAA,WAAA7E,EAAAmE,SAAAnE,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,GAAAjB,EAAAoE,SAAA,KAAAtB,GAAArB,GAAAzB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAA1E,EAAAoE,SAAA,KAAAtB,EAAA,UAAAgC,EAAA7D,GAAA,IAAAD,EAAA,CAAA+D,OAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,SAAA/D,EAAA,SAAAA,IAAAD,EAAAiE,WAAAhE,EAAA,GAAAD,EAAAkE,SAAAjE,EAAA,SAAAkE,WAAAC,KAAApE,EAAA,UAAAqE,EAAApE,GAAA,IAAAD,EAAAC,EAAAqE,YAAA,GAAAtE,EAAAxC,KAAA,gBAAAwC,EAAAyB,IAAAxB,EAAAqE,WAAAtE,CAAA,UAAAsB,EAAArB,GAAA,KAAAkE,WAAA,EAAAJ,OAAA,SAAA9D,EAAAuC,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAhB,EAAAgB,EAAAS,GAAA,GAAAzB,EAAA,OAAAA,EAAA0C,KAAA1B,GAAA,sBAAAA,EAAA4D,KAAA,OAAA5D,EAAA,IAAAwE,MAAAxE,EAAAyE,QAAA,KAAAnE,GAAA,EAAAhC,EAAA,SAAAsF,IAAA,OAAAtD,EAAAN,EAAAyE,QAAA,GAAArE,EAAAsB,KAAA1B,EAAAM,GAAA,OAAAsD,EAAAjH,MAAAqD,EAAAM,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,SAAAtF,EAAAsF,KAAAtF,CAAA,YAAAoF,UAAAd,GAAA5C,GAAA,2BAAA+B,EAAA5B,UAAA6B,EAAA1B,EAAAgC,EAAA,eAAA3F,MAAAqF,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAArF,MAAAoF,EAAAd,cAAA,IAAAc,EAAA2C,YAAA3D,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAA2E,oBAAA,SAAA1E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA2E,YAAA,QAAA5E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAA0E,aAAA1E,EAAA6E,MAAA,EAAA7E,EAAA8E,KAAA,SAAA7E,GAAA,OAAAC,OAAA6E,eAAA7E,OAAA6E,eAAA9E,EAAA+B,IAAA/B,EAAA+E,UAAAhD,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAiB,GAAArC,CAAA,EAAAD,EAAAiF,MAAA,SAAAhF,GAAA,OAAA6C,QAAA7C,EAAA,EAAAsC,EAAAG,EAAAvC,WAAAY,EAAA2B,EAAAvC,UAAAQ,GAAA,0BAAAX,EAAA0C,cAAAA,EAAA1C,EAAAkF,MAAA,SAAAjF,EAAAjB,EAAAoB,EAAAE,EAAAhC,QAAA,IAAAA,IAAAA,EAAA6G,SAAA,IAAA1E,EAAA,IAAAiC,EAAAvB,EAAAlB,EAAAjB,EAAAoB,EAAAE,GAAAhC,GAAA,OAAA0B,EAAA2E,oBAAA3F,GAAAyB,EAAAA,EAAAmD,OAAAb,MAAA,SAAA9C,GAAA,OAAAA,EAAAiD,KAAAjD,EAAAtD,MAAA8D,EAAAmD,MAAA,KAAArB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAAtC,EAAAoF,KAAA,SAAAnF,GAAA,IAAAD,EAAAE,OAAAD,GAAAjB,EAAA,WAAAoB,KAAAJ,EAAAhB,EAAAoF,KAAAhE,GAAA,OAAApB,EAAAqG,UAAA,SAAAzB,IAAA,KAAA5E,EAAAyF,QAAA,KAAAxE,EAAAjB,EAAAsG,MAAA,GAAArF,KAAAD,EAAA,OAAA4D,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA5D,EAAAqC,OAAAA,EAAAf,EAAAnB,UAAA,CAAAyE,YAAAtD,EAAAiD,MAAA,SAAAvE,GAAA,QAAAuF,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAAtD,EAAA,KAAAiD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAxB,EAAA,KAAAkE,WAAA3B,QAAA6B,IAAArE,EAAA,QAAAhB,KAAA,WAAAA,EAAAwG,OAAA,IAAApF,EAAAsB,KAAA,KAAA1C,KAAAwF,OAAAxF,EAAAyG,MAAA,WAAAzG,GAAAiB,EAAA,EAAAyF,KAAA,gBAAAxC,MAAA,MAAAjD,EAAA,KAAAkE,WAAA,GAAAG,WAAA,aAAArE,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,YAAAkE,IAAA,EAAAnC,kBAAA,SAAAxD,GAAA,QAAAkD,KAAA,MAAAlD,EAAA,IAAAhB,EAAA,cAAA4G,EAAAxF,EAAAE,GAAA,OAAAG,EAAAjD,KAAA,QAAAiD,EAAAgB,IAAAzB,EAAAhB,EAAA4E,KAAAxD,EAAAE,IAAAtB,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,KAAAK,CAAA,SAAAA,EAAA,KAAA6D,WAAAM,OAAA,EAAAnE,GAAA,IAAAA,EAAA,KAAAhC,EAAA,KAAA6F,WAAA7D,GAAAG,EAAAnC,EAAAgG,WAAA,YAAAhG,EAAAyF,OAAA,OAAA6B,EAAA,UAAAtH,EAAAyF,QAAA,KAAAwB,KAAA,KAAA5E,EAAAP,EAAAsB,KAAApD,EAAA,YAAAuC,EAAAT,EAAAsB,KAAApD,EAAA,iBAAAqC,GAAAE,EAAA,SAAA0E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,WAAAuB,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,SAAAtD,GAAA,QAAA4E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,YAAAnD,EAAA,UAAAoC,MAAA,kDAAAsC,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,KAAAR,OAAA,SAAAxD,EAAAD,GAAA,QAAAhB,EAAA,KAAAmF,WAAAM,OAAA,EAAAzF,GAAA,IAAAA,EAAA,KAAAsB,EAAA,KAAA6D,WAAAnF,GAAA,GAAAsB,EAAAyD,QAAA,KAAAwB,MAAAnF,EAAAsB,KAAApB,EAAA,oBAAAiF,KAAAjF,EAAA2D,WAAA,KAAA3F,EAAAgC,EAAA,OAAAhC,IAAA,UAAA2B,GAAA,aAAAA,IAAA3B,EAAAyF,QAAA/D,GAAAA,GAAA1B,EAAA2F,aAAA3F,EAAA,UAAAmC,EAAAnC,EAAAA,EAAAgG,WAAA,UAAA7D,EAAAjD,KAAAyC,EAAAQ,EAAAgB,IAAAzB,EAAA1B,GAAA,KAAA6E,OAAA,YAAAS,KAAAtF,EAAA2F,WAAAnC,GAAA,KAAA+D,SAAApF,EAAA,EAAAoF,SAAA,SAAA5F,EAAAD,GAAA,aAAAC,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,gBAAAxB,EAAAzC,MAAA,aAAAyC,EAAAzC,KAAA,KAAAoG,KAAA3D,EAAAwB,IAAA,WAAAxB,EAAAzC,MAAA,KAAAmI,KAAA,KAAAlE,IAAAxB,EAAAwB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA3D,EAAAzC,MAAAwC,IAAA,KAAA4D,KAAA5D,GAAA8B,CAAA,EAAAgE,OAAA,SAAA7F,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAAiF,aAAAhE,EAAA,YAAA4F,SAAA7G,EAAAsF,WAAAtF,EAAAkF,UAAAG,EAAArF,GAAA8C,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAA+E,SAAA9D,EAAA,KAAAG,EAAApB,EAAAsF,WAAA,aAAAlE,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAqB,IAAA4C,EAAArF,EAAA,QAAAsB,CAAA,YAAA2C,MAAA,0BAAA8C,cAAA,SAAA/F,EAAAhB,EAAAoB,GAAA,YAAAgD,SAAA,CAAA1C,SAAA2B,EAAArC,GAAA2D,WAAA3E,EAAA6E,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAxB,GAAA6B,CAAA,GAAA9B,CAAA,UAAAgG,GAAAhG,EAAAhB,GAAA,IAAAiB,EAAAC,OAAAkF,KAAApF,GAAA,GAAAE,OAAA+F,sBAAA,KAAA3F,EAAAJ,OAAA+F,sBAAAjG,GAAAhB,IAAAsB,EAAAA,EAAAlE,QAAA,SAAA4C,GAAA,OAAAkB,OAAAgG,yBAAAlG,EAAAhB,GAAAgC,UAAA,KAAAf,EAAAmE,KAAA+B,MAAAlG,EAAAK,EAAA,QAAAL,CAAA,UAAAmG,GAAApG,GAAA,QAAAhB,EAAA,EAAAA,EAAAqH,UAAA5B,OAAAzF,IAAA,KAAAiB,EAAA,MAAAoG,UAAArH,GAAAqH,UAAArH,GAAA,GAAAA,EAAA,EAAAgH,GAAA9F,OAAAD,IAAA,GAAAuC,SAAA,SAAAxD,GAAAsH,GAAAtG,EAAAhB,EAAAiB,EAAAjB,GAAA,IAAAkB,OAAAqG,0BAAArG,OAAAsG,iBAAAxG,EAAAE,OAAAqG,0BAAAtG,IAAA+F,GAAA9F,OAAAD,IAAAuC,SAAA,SAAAxD,GAAAkB,OAAAK,eAAAP,EAAAhB,EAAAkB,OAAAgG,yBAAAjG,EAAAjB,GAAA,WAAAgB,CAAA,UAAAsG,GAAAG,EAAAC,EAAA/J,GAAA,OAAA+J,EAAA,SAAAjF,GAAA,IAAAiF,EAAA,SAAAC,EAAAC,GAAA,cAAAhE,GAAA+D,IAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAAnG,OAAAsG,aAAA,QAAAC,IAAAF,EAAA,KAAAG,EAAAH,EAAAnF,KAAAiF,EAAAC,GAAA,yBAAAhE,GAAAoE,GAAA,OAAAA,EAAA,UAAAtD,UAAA,kEAAAkD,EAAAK,OAAAC,QAAAP,EAAA,CAAAQ,CAAA1F,EAAA,2BAAAmB,GAAA8D,GAAAA,EAAAO,OAAAP,EAAA,CAAAU,CAAAV,MAAAD,EAAAvG,OAAAK,eAAAkG,EAAAC,EAAA,CAAA/J,MAAAA,EAAAqE,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAuF,EAAAC,GAAA/J,EAAA8J,CAAA,UAAAY,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAAf,EAAAjF,GAAA,QAAAiG,EAAAJ,EAAAZ,GAAAjF,GAAA9E,EAAA+K,EAAA/K,KAAA,OAAAgL,GAAA,YAAAJ,EAAAI,EAAA,CAAAD,EAAAxE,KAAAL,EAAAlG,GAAAwI,QAAAtC,QAAAlG,GAAAoG,KAAAyE,EAAAC,EAAA,UAAApM,GAAA4M,EAAA3J,GAAA,gBAAA2J,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAA,CAAA,CAAAE,CAAAF,IAAA,SAAAjJ,EAAA2C,GAAA,IAAA1B,EAAA,MAAAjB,EAAA,yBAAAwB,QAAAxB,EAAAwB,OAAAE,WAAA1B,EAAA,uBAAAiB,EAAA,KAAAD,EAAAI,EAAA9B,EAAAuC,EAAAJ,EAAA,GAAAmB,GAAA,EAAAtB,GAAA,SAAAhC,GAAA2B,EAAAA,EAAAyB,KAAA1C,IAAA4E,KAAA,IAAAjC,EAAA,IAAAzB,OAAAD,KAAAA,EAAA,OAAA2B,GAAA,cAAAA,GAAA5B,EAAA1B,EAAAoD,KAAAzB,IAAAiD,QAAAzC,EAAA2D,KAAApE,EAAArD,OAAA8D,EAAAgE,SAAA9C,GAAAC,GAAA,UAAA5C,GAAAsB,GAAA,EAAAF,EAAApB,CAAA,iBAAA4C,GAAA,MAAA3B,EAAA,SAAAY,EAAAZ,EAAA,SAAAC,OAAAW,KAAAA,GAAA,kBAAAP,EAAA,MAAAF,CAAA,SAAAK,CAAA,EAAA2H,CAAAH,EAAA3J,IAAA,SAAAgC,EAAA+H,GAAA,IAAA/H,EAAA,2BAAAA,EAAA,OAAAgI,GAAAhI,EAAA+H,GAAA,IAAAjI,EAAAF,OAAAC,UAAAoI,SAAA7G,KAAApB,GAAAmF,MAAA,iBAAArF,GAAAE,EAAAsE,cAAAxE,EAAAE,EAAAsE,YAAAC,MAAA,WAAAzE,GAAA,QAAAA,EAAA,OAAAtB,MAAA0J,KAAAlI,GAAA,iBAAAF,GAAA,2CAAAqI,KAAArI,GAAA,OAAAkI,GAAAhI,EAAA+H,EAAA,CAAAK,CAAAT,EAAA3J,IAAA,qBAAAoF,UAAA,6IAAAiF,EAAA,UAAAL,GAAAL,EAAApK,IAAA,MAAAA,GAAAA,EAAAoK,EAAAxD,UAAA5G,EAAAoK,EAAAxD,QAAA,QAAAnG,EAAA,EAAAsK,EAAA,IAAA9J,MAAAjB,GAAAS,EAAAT,EAAAS,IAAAsK,EAAAtK,GAAA2J,EAAA3J,GAAA,OAAAsK,CAAA,CA8KA,SAlK0B,SAAHjP,GAAsB,IAAAoP,EAAjB9O,EAAIN,EAAJM,KAAMF,EAAKJ,EAALI,MACYqB,EAAAC,IAApBC,EAAAA,EAAAA,UAAS,YAAW,GAArCsC,EAAIxC,EAAA,GAAE4pC,EAAO5pC,EAAA,GACoB0e,EAAAze,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAjC2pC,EAAMnrB,EAAA,GAAEorB,EAASprB,EAAA,GACkBG,EAAA5e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnCe,EAAO4d,EAAA,GAAEgW,EAAUhW,EAAA,GACsBG,EAAA/e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAzCypC,EAAU3qB,EAAA,GAAEisB,EAAajsB,EAAA,GAEhC+qB,IADiBxpB,EAAAA,EAAAA,OACsBypB,EAAAA,EAAAA,IAA2BnrC,aAAI,EAAJA,EAAMqC,KAA1DsD,EAAQulC,EAAdxpC,KAAgBC,EAAUupC,EAAVvpC,WAElB4W,EAAO,IAAI1J,EAAAA,EAAW,QAAPC,EAACC,cAAM,IAAAD,GAAS,QAATA,EAANA,EAAQE,eAAO,IAAAF,OAAA,EAAfA,EAAiB1K,MAIainC,EAAAjqC,IAAhDirC,EAAAA,EAAAA,MAAgD,GAFlDd,EAAoBF,EAAA,GACRG,EAAuBH,EAAA,GAAlCzpC,UAiBG+0B,EAAc,eAxCtB/oB,EAwCsBoD,GAxCtBpD,EAwCsB9H,KAAA+E,MAAG,SAAAyE,EAAO5N,EAAM6B,GAAI,IAAA+oC,EAAAC,EAAAC,EAAAC,EAAAvjB,EAAA,OAAApjB,KAAAoB,MAAA,SAAAsI,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA7F,MAAA,OAekD,OAdpF8iC,EAAO,CACPrqC,QAAyB,QAAlBkqC,EAAElqC,aAAO,EAAPA,EAASA,eAAO,IAAAkqC,EAAAA,EAAI,GAC7B14B,QAASlS,aAAI,EAAJA,EAAMkS,QACf8mB,WAAY16B,aAAI,EAAJA,EAAM6uB,UAClBiI,QAASve,aAAI,EAAJA,EAAMG,QACfvC,QAAStS,IAAAA,IAAMnC,aAAI,EAAJA,EAAMzB,UAAU,SAAAmC,GAAO,OAAA+J,GAAAA,GAAA,GAAS/J,GAAO,IAAEmmC,YAAa7mC,aAAI,EAAJA,EAAM6mC,aAAW,IACtFF,yBAAsC,QAAdkE,EAAE7qC,aAAI,EAAJA,EAAM0lC,cAAM,IAAAmF,EAAAA,EAAI,GAC1CT,YAAanmC,aAAQ,EAARA,EAAUtD,GACvBskB,KAAMjlB,SAAAA,EAAI,SAAa,WAAaspC,EACpCa,YAAaf,QAAAA,EAAc,GAC3BvC,YAA8B,QAAnBiE,EAAE9qC,aAAI,EAAJA,EAAM6mC,mBAAW,IAAAiE,GAAAA,GAI5BtjB,EAAWxnB,SAAAA,EAAI,UAAuB,SAATspC,EAAoC,kBAAjB,gBAAkCx7B,EAAA7F,KAAA,EAElF4hC,EAAqB,CAACkB,MAAAA,EAAOvjB,OAAAA,IAClCzZ,SACA3G,MAAK,SAAAiE,GACFgF,GAAAA,GAAMoa,QAAQ,gDACdrsB,GACJ,IAAE,OACK,SAAAiO,GAAG,OAAIyC,QAAQC,IAAI1C,EAAI,IAAC,wBAAAyB,EAAA/D,OAAA,GAAA6D,EAAA,IA/DnC,eAAAzB,EAAA,KAAAC,EAAA1B,UAAA,WAAAlB,SAAA,SAAAtC,EAAA0E,GAAA,IAAAD,EAAAO,EAAA1B,MAAA2B,EAAAC,GAAA,SAAAP,EAAA7K,GAAA0K,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,OAAA9K,EAAA,UAAA8K,EAAAO,GAAAX,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,QAAAO,EAAA,CAAAR,OAAAT,EAAA,MAgEG,gBAxBmB4D,EAAAS,GAAA,OAAAH,EAAA9E,MAAA,KAAAE,UAAA,KAoDpB,OACErK,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,+BACVmC,MAAO,CAAEoW,SAAU,SAAUrZ,SAAA,EAE7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iFAAgFd,SAAA,EAC3FqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,QAC7BjC,aAAI,EAAJA,EAAMqC,GAAG,IArBP,IAArBkW,EAAKC,YACY,oBAAT7U,EAA8B,8BAA8B,8BACzC,IAArB4U,EAAKC,YACM,oBAAT7U,EAA8B,yBAAyB,8BACpC,IAArB4U,EAAKC,aAA0C,KAArBD,EAAKC,YAC7B,8BACE,iCAkBDzW,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QAASzV,EAAOiD,UAAU,GAAEd,UAChCF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIrBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,CACR,aAAT0B,IACI5B,EAAAA,EAAAA,KAACkqC,GAAY,CACTtmC,SAAUA,EACV/D,UAAYD,EACZwnC,WAAYqC,EACZxC,SAAU,WACNiC,EAAU,UACVF,EAAQ,sBACZ,EACA9B,OAAQ,WACJgC,EAAU,QACVF,EAAQ,oBACZ,EACA7B,WAxDO,WAC3B+B,EAAU,YAC2B,IAAlCpnC,IAAAA,KAAO8B,aAAQ,EAARA,EAAU0K,aAChB06B,EAAQ,wBAERpU,EAAe,CACXuV,UAAU,GACX,GAET,IAoD2B,wBAATvoC,IACA5B,EAAAA,EAAAA,KAAC6mC,GAAyB,CACtB5oC,KAAMA,EACN6jC,aAAc2H,EACdtf,SAAU,SAAAxqB,GAAI,OAxGK,SAACA,EAAM6B,GAC9CyyB,EAAWt0B,GACXqpC,EAAQxnC,EACV,CAqGwCmpC,CAAiChrC,EAAM,kBAAkB,EAC3E5B,MAAO,kBAAMirC,EAAQ,WAAW,IAI9B,oBAATpnC,IACG5B,EAAAA,EAAAA,KAAC4qC,GAAqB,CAClB3sC,KAAMA,EACN2F,SAAUA,EACVpC,MAAM,EACN2oB,SAAU,SAACxqB,GAAI,OAAIi1B,EAAgBj1B,EAAM,kBAAmB,EAC5DmiC,aAAgB2H,EAChB/B,OAAQ,kBAAMsB,EAAQ,sBAAsB,IAI1C,sBAATpnC,IACG5B,EAAAA,EAAAA,KAACoqC,GAAe,CACZnsC,KAAMA,EACNksB,SAAU,SAAAxqB,GAAI,OArHI,SAACA,EAAM6B,GAC7CyyB,EAAWt0B,GACX0qC,EAAc1qC,aAAI,EAAJA,EAAMopC,YACpBC,EAAQxnC,EACV,CAiHwCqpC,CAA+BlrC,EAAM,uBAAuB,EAC9EmiC,aAAgB2H,EAChB/B,OAAQ,kBAAMsB,EAAQ,WAAW,IAKxClnC,IAAAA,KAAO7D,aAAI,EAAJA,EAAMqQ,aAAe,GAAc,yBAAT1M,IAC9B5B,EAAAA,EAAAA,KAAC4qC,GAAqB,CAClB3sC,KAAMA,EACN2F,SAAUA,EACVpC,MAAM,EACN2oB,SAAU,SAACxqB,GAAI,OAAKi1B,EAAej1B,EAAM,uBAAuB,EAChEmiC,aAAgB2H,EAChB/B,OAAQ,kBAAMsB,EAAQ,oBAAoB,WAOlE,qiCChIA,SAtC4B,SAAHrrC,GAA6B,IAAxBM,EAAIN,EAAJM,KAC+BmB,GADrBzB,EAAJ6Y,KAAY7Y,EAANkZ,OACmBxX,IAAfC,EAAAA,EAAAA,WAAS,GAAM,IAAlDmnC,EAAarnC,EAAA,GAAEsnC,EAAgBtnC,EAAA,GAChC0rC,EAAa7sC,EAGrB,OADEwQ,QAAQC,IAAI,CAACzQ,KAAAA,KAEbsD,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXqB,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CACHiC,QAAQ,WACRjI,QAAS,kBAAMkzB,GAAiB,EAAK,EACrC1lC,UAAU,gEAA+Dd,SAAA,EAEzEF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BACbhB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gBAAed,SAAC,iBAGpCF,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQ2oC,EAAezlC,UAAU,yBAAwBd,UAC5DF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wCAAuCd,SAG9CjC,SAAAA,EAAM8sC,YACN/qC,EAAAA,EAAAA,KAACgrC,GAAiB,CACd/sC,KAAM6sC,EACN/sC,MAAO,kBAAM2oC,GAAiB,EAAM,KAGxC1mC,EAAAA,EAAAA,KAACirC,GAAqB,CAClBhtC,KAAMA,EACNF,MAAO,kBAAM2oC,GAAiB,EAAM,UAQ5D,ECxCe,SAASwE,KAGtB,OACElrC,EAAAA,EAAAA,KAAA,OAAK0U,wBAAyB,CAACC,OAFlB,wgOAIjB,oiCCFe,SAASw2B,GAAsBxtC,GAAgB,IAAbqD,EAASrD,EAATqD,UACoC5B,EAAAC,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAA5E8rC,EAA0BhsC,EAAA,GAAEisC,EAA6BjsC,EAAA,GAKxDrB,EAAQ,WAAH,OAASstC,GAA8B,EAAM,EAGxD,OACI9pC,EAAAA,EAAAA,MAAA,OAAKP,UAAS,IAAAtD,OAAMsD,GAAYd,SAAA,EAC5BF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHiC,QAAQ,WAERjI,QAPC,WAAH,OAAS63B,GAA8B,EAAK,EAQ1CrqC,UAAU,uDAAsDd,UAGhEF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gBAAed,SAAC,gCAGpCF,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQstC,EAA4BpqC,UAAU,sBAAqBd,UACtEF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wCAAuCd,UAClDqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,2BACVmC,MAAO,CAAE0W,SAAU,UAAWN,SAAU,SAAUrZ,SAAA,EAGlDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,6BAA4Bd,SAAA,EACvCF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,YAAYmC,MAAO,CAACmoC,UAAU,SAASC,WAAW,QAAQrrC,SAAC,4BAEzEF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAC,aAAW,aAAahG,QAASzV,EAAMmC,UAC3CF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAKrBO,EAAAA,EAAAA,MAAA,OACIP,UAAU,+BACVmC,MAAO,CAAE0W,SAAU,WAAY3Z,SAAA,EAG/BF,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAACqiB,UAAU,OAAO3L,SAAS,OAAO0D,QAAQ,cAAcrd,UAChEF,EAAAA,EAAAA,KAACkrC,GAAa,OAGlBlrC,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,iCAAgCd,UAC3CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHiC,QAAQ,WACRza,UAAU,eACVwS,QAASzV,EAAMmC,SAClB,wBAWjC,oiCCKA,SArEoC,SAAHvC,GAA4B,IAAvBG,EAAMH,EAANG,OAAQq5B,EAASx5B,EAATw5B,UACmBhkB,EAAA9T,GAArB+T,EAAAA,UAAe,GAAM,GAAxDgkB,EAAajkB,EAAA,GAAEkkB,EAAgBlkB,EAAA,GACc0H,EAAAxb,GAAlB+T,EAAAA,SAAe,IAAG,GAA7CkkB,EAASzc,EAAA,GAAE0c,EAAY1c,EAAA,GAE9BzH,EAAAA,WAAgB,WACd,IAAIoa,EAAQ8J,QAAAA,EAAa,EAErBE,EAAiBC,aAAY,WAC7BF,EAAa/J,IACjB,GAAG,KAGCkK,EAAYC,YAAW,WACzBN,GAAiB,GACjBO,cAAcJ,EAChB,GAAG,MAIH,OAAO,WACLK,aAAaH,GACbE,cAAcJ,EAChB,CACF,GAAG,IAKH,OACEx3B,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQA,EAAQkD,UAAU,oCAAmCd,UAChEF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,oCAAmCd,UAC/CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,sCAAqCd,SAAA,EACnDF,EAAAA,EAAAA,KAAA,OAAK0U,wBAAyB,CAACC,OAP5B,+6eA6BC3U,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,UACrCqB,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CACJhG,QAAS2jB,EACTn2B,UAAU,UACVI,UAAWg2B,EAAcl3B,SAAA,CAC1B,iCACgCk3B,GAAiB,IAAJ15B,OAAQ45B,EAAS,gBAOrF,ECjEA,IAAMkU,GAA6Bp4B,EAAAA,MAAW,kBAC1C,8BAAsC,IA8C1C,SA3C4B,SAAHzV,GAAkC,IAA5B8tC,EAAS9tC,EAAT8tC,UAAWC,EAAU/tC,EAAV+tC,WACtClsB,GAAoDrL,EAAAA,EAAAA,KAChD,SAACtO,GAAC,OAAKA,EAAEuO,OAAO,IADNu3B,GAAFnsB,EAAJvhB,KAAoBuhB,EAAdmsB,gBAAgBC,EAAiBpsB,EAAjBosB,kBAGxBlsB,GAAWC,EAAAA,EAAAA,MAEX5hB,EAAQ,WACV2hB,GAASmsB,EAAAA,EAAAA,IAAkB,CAAEjqC,MAAM,EAAOJ,KAAM,KACpD,EAeA,OACIxB,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQ6tC,EAAgB3qC,UAAU,yBAAwBd,UAC7DF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wCAAuCd,UAClDF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CACX6L,UACIjf,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,+BAA8Bd,UACzCF,EAAAA,EAAAA,KAAC4nB,GAAM,MAEd1nB,UAEDF,EAAAA,EAAAA,KAACwrC,GAA0B,CACvBM,2BAvBS,WACC,eAAtBF,GACAH,IAGsB,gBAAtBG,GACAF,IAGJ3tC,GACJ,EAcoBA,MAAOA,SAM/B,yJChDO,IAAMguC,GAA0B,WACnC,OACGxqC,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACKF,EAAAA,EAAAA,KAACgsC,GAAK,CAAA9rC,SAAC,0DACPF,EAAAA,EAAAA,KAACisC,GAAI,CAAA/rC,SAAC,gDACNqB,EAAAA,EAAAA,MAAC6jB,GAAI,CAAAllB,SAAA,EAACF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,UAAc,6FAGxC,EAGM8rC,GAAQ3zB,EAAAA,GAAO6zB,GAAE5zB,KAAAA,GAAA6zB,GAAA,mFAMjBF,GAAO5zB,EAAAA,GAAOpS,EAACmmC,KAAAA,GAAAD,GAAA,uDAKf/mB,GAAO/M,EAAAA,GAAOpS,EAAComC,KAAAA,GAAAF,GAAA,isCCiFrB,SAvGuC,SAAHxuC,GAM9B,IALF2uC,EAA0B3uC,EAA1B2uC,2BACAC,EAA6B5uC,EAA7B4uC,8BACAC,EAAQ7uC,EAAR6uC,SACAC,EAAW9uC,EAAX8uC,YACAC,EAA0B/uC,EAA1B+uC,2BAEoDttC,EAAAC,IAAdC,EAAAA,EAAAA,WAAS,GAAK,GAA7CqtC,EAAWvtC,EAAA,GAAEwtC,EAAcxtC,EAAA,IAElCW,EAAAA,EAAAA,YAAU,WACN,IAAMoQ,EAAQsnB,aAAY,WACtBgV,GAAY,SAACI,GACT,OAAIA,GAAY,EACLA,EAAW,GAElBjV,cAAcznB,GACP08B,EAEf,GACJ,GAAG,KAEH,OAAO,kBAAMjV,cAAcznB,EAAM,CACrC,GAAG,KAEHpQ,EAAAA,EAAAA,YAAU,WACN,IAAM+sC,EAAWrV,aAAY,WACzBmV,GAAe,EACnB,GAAG,KAEH,OAAO,kBAAMhV,cAAckV,EAAS,CACxC,GAAG,KAQH/sC,EAAAA,EAAAA,YAAU,WAEF4sC,GACAH,GAAY,MACZA,EAAW,GACXE,GAEAH,GAA8B,EAEtC,GAAG,CAACI,EAAaH,IAEjB,IAAMO,EAAa,WACfR,GAA8B,GAC9BK,GAAe,EACnB,EAEMI,EAAU1vC,KAAKC,MAAMivC,EAAW,IAChCS,EAAUT,EAAW,GAE3B,OACIjrC,EAAAA,EAAAA,MAAC2rC,KAAU,CACPpvC,OAAQwuC,EACRa,eAAgBJ,EAChBK,aAAa,qBACbC,2BAA2B,EAC3BlqC,MAAO,CACHmqC,QAAS,CACLpc,gBAAiB,qBACjBjY,OAAQ,YAEZuD,QAAS,CACLtd,MAAO,QACPL,OAAQ,cACRod,OAAQ,OACRsB,QAAS,OACTmlB,aAAc,MACdxmB,UAAW,SACXqxB,MAAO,aAEbrtC,SAAA,EAEFF,EAAAA,EAAAA,KAAA,MAAImD,MAAO,CAAE+iC,aAAc,QAAShmC,SAAC,oDAGrCqB,EAAAA,EAAAA,MAAA,MAAI4B,MAAO,CAAE+iC,aAAc,QAAShmC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,QAAMmD,MAAO,CAAEC,MAAO,OAAQlD,UACZ,IAAb8sC,EAAiB,EAAIA,IAClB,IAAI,UACJ,KACRhtC,EAAAA,EAAAA,KAAA,QAAMmD,MAAO,CAAEC,MAAO,OAAQlD,UACZ,IAAb+sC,EAAiB,EAAIA,IAClB,IAAI,eAGhBjtC,EAAAA,EAAAA,KAAA,MAAAE,SAAI,6EAIJF,EAAAA,EAAAA,KAAA,UAAQwT,QAASu5B,EAAY/rC,UAAU,sBAAqBd,SAAC,YAKzE,g5EC6GA,SApL0B,SAAHvC,GAQjB,IAAA6vC,EAPF7tC,EAAIhC,EAAJgC,KAAI8tC,EAAA9vC,EACJ+vC,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EACZ5tC,EAASlC,EAATkC,UACA8tC,EAAYhwC,EAAZgwC,aACAC,EAAOjwC,EAAPiwC,QACAhwB,EAASjgB,EAATigB,UACAiwB,EAAUlwC,EAAVkwC,WAEoD16B,EAAA9T,GAAlB+T,EAAAA,SAAe,IAAG,GAA7CsK,EAASvK,EAAA,GAAE26B,EAAY36B,EAAA,GACiC0H,EAAAxb,GAAvB+T,EAAAA,SAAes6B,GAAQ,GAAxD/vB,EAAY9C,EAAA,GAIjBG,GAJkCH,EAAA,GAIlCxb,GAH+C+T,EAAAA,SAAe,CAC5D26B,UAAW,EACXC,SAAU,KACZ,IAAAC,EAAAjzB,EAAA,GAHO+yB,EAASE,EAATF,UAAWC,EAAQC,EAARD,SAAYE,EAAalzB,EAAA,GAKOmzB,EAAA9uC,IAA1B+uC,EAAAA,GAAAA,GAAgBxwB,GAAU,GAA7Cjd,EAAKwtC,EAAA,GA0B8DvsB,GA1BpDusB,EAAA,GA0BoD9uC,GAApC+T,EAAAA,SAAetR,IAAAA,IAAM4rC,EAAS,OAAM,IAAnEW,EAAWzsB,EAAA,GAAE0sB,EAAc1sB,EAAA,GAIlCxO,EAAAA,WAAgB,WACRzS,GAASA,EAAM0tC,aACfC,EAAe3tC,EAAM0tC,YAE7B,GAAG,IAQHj7B,EAAAA,WAAgB,WACL06B,EAAPnuC,EAAoBmC,IAAAA,QAAUnC,EAAM,QAAwB,GAChE,GAAG,CAACA,IAGJ,IAAM4uC,EAAan7B,EAAAA,SACf,iBAAO,CAAE26B,UAAAA,EAAWC,SAAAA,EAAU,GAC9B,CAACD,EAAWC,IAIVQ,GAAQC,EAAAA,GAAAA,IAAc,CACxB9uC,KAAM+d,EACNgwB,QAAS/vB,EACTmjB,MAAO,CACH8M,QAAAA,EACAW,WAAAA,EACA3wB,UAAAA,EACAywB,YAAAA,GAGJK,gBAAiBb,EACjBc,oBAAqBL,EACrBM,iBAAiBA,EAAAA,GAAAA,MACjBC,uBAAuBA,EAAAA,GAAAA,MAEvBC,mBAAmBA,EAAAA,GAAAA,QAGvB,OACI9uC,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXF,EAAAA,EAAAA,KAAC+uC,GAAAA,GAAc,CAAA7uC,UACXqB,EAAAA,EAAAA,MAACytC,GAAAA,GAAK,CAAA9uC,SAAA,EACFF,EAAAA,EAAAA,KAACivC,GAAAA,EAAe,CAACT,MAAOA,EAAOd,QAAS/vB,KACxCpc,EAAAA,EAAAA,MAAC2tC,GAAAA,GAAS,CAAAhvC,SAAA,EACJL,GACE2uC,EAAMW,cAAcC,KAAKrsC,KAAI,SAACssC,GAAG,OAC7BrvC,EAAAA,EAAAA,KAACswB,GAAAA,GAAQ,CAAApwB,SACJmvC,EAAIC,kBAAkBvsC,KAAI,SAACua,GAAI,OAC5Btd,EAAAA,EAAAA,KAACuvC,GAAAA,GAAS,CAAArvC,UACLsvC,EAAAA,GAAAA,IACGlyB,EAAKmyB,OAAOC,UAAUpyB,KACtBA,EAAKqyB,eAHGryB,EAAKhd,GAKT,KAPL+uC,EAAI/uC,GASR,IAIlBT,GACGiC,IAAAA,MAAQksC,GAAU,SAACnyB,GAAI,OACnB7b,EAAAA,EAAAA,KAACswB,GAAAA,GAAQ,CAAApwB,SACJ4B,IAAAA,MAAQ6b,EAAalV,QAAQ,SAACmnC,GAAG,OAC9B5vC,EAAAA,EAAAA,KAACuvC,GAAAA,GAAS,CAENvuC,UAAU,OAAMd,UAEhBF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,KAHPs5B,EAIG,KAPL/zB,EASJ,KAGjBhc,GAAmC,IAAtBiC,IAAAA,KAAO4b,KAClB1d,EAAAA,EAAAA,KAACswB,GAAAA,GAAQ,CAAApwB,UACLF,EAAAA,EAAAA,KAACuvC,GAAAA,GAAS,CAAChf,QAASzuB,IAAAA,KAAO6b,GAAczd,UACrCF,EAAAA,EAAAA,KAAC6vC,GAAAA,EAAU,iBAQlClwC,aAAI,EAAJA,EAAM8I,QAAS,KACZlH,EAAAA,EAAAA,MAACuuC,GAAAA,GAAW,CAAA5vC,SAAA,EACRqB,EAAAA,EAAAA,MAACwuC,GAAAA,GAAI,CAAA7vC,SAAA,CAAC,QAEFqB,EAAAA,EAAAA,MAACyuC,GAAAA,GAAM,CACHrvC,MAAOqtC,EACPptC,SA9GC,SAACoD,GAC1BA,EAAE6Q,iBAEF,IAAMo7B,EAAW,CACblC,UAAAA,EACAC,SAAUhqC,EAAEgR,OAAOrU,OAEvButC,EAAa9jC,GAAAA,GAAC,CAAC,EAAI6lC,GAAQ,IAAElC,UAAW,KACxCJ,EAAasC,EACjB,EAqG2D/vC,SAAA,EAE/BF,EAAAA,EAAAA,KAAA,UAAQW,MAAM,KAAIT,SAAC,QACnBF,EAAAA,EAAAA,KAAA,UAAQW,MAAM,KAAIT,SAAC,QACnBF,EAAAA,EAAAA,KAAA,UAAQW,MAAM,KAAIT,SAAC,QACnBF,EAAAA,EAAAA,KAAA,UAAQW,MAAM,KAAIT,SAAC,QACnBF,EAAAA,EAAAA,KAAA,UAAQW,MAAM,MAAKT,SAAC,WACf,cAIbqB,EAAAA,EAAAA,MAACwuC,GAAAA,GAAI,CAAA7vC,SAAA,EACDqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,CAAM,WACOP,aAAI,EAAJA,EAAM6M,KAAK,OAAK7M,aAAI,EAAJA,EAAM0gB,GAAG,MAAI,IACrC1gB,aAAI,EAAJA,EAAMuwC,MAAM,eAGjBlwC,EAAAA,EAAAA,KAACmwC,KAAa,CACVC,WAAW,MACXzC,aA5IH,SAAH1+B,GAAqB,IACjCghC,EAAW,CACblC,UAF4B9+B,EAAR8W,SAGpBioB,SAAAA,GAGJE,EAAa9jC,GAAAA,GAAC,CAAC,EAAI6lC,GAAQ,IAAElC,UAAW,KACxCJ,EAAasC,EACjB,EAqI4BI,cAAc,WACdC,UAAU,OACVC,mBAAoB,EACpBC,qBAAsB,EACtBC,UAA0B,QAAjBjD,EAAE7tC,aAAI,EAAJA,EAAM+wC,iBAAS,IAAAlD,EAAAA,EAAI,EAC9BmD,sBAAuB,KACvBC,mBAAoB3uC,GAAAA,EAAO2uC,mBAC3BC,kBAAmB5uC,GAAAA,EAAO4uC,kBAC1BC,oBAAqB7uC,GAAAA,EAAO6uC,oBAC5BC,sBAAuB9uC,GAAAA,EAAO4uC,kBAC9BG,kBAAmB/uC,GAAAA,EAAO4uC,8BAQ1D,0CC7MaI,sBAA2B,CACpC,CACI3wC,GAAI,YACJ6c,OAAQ,YACRE,YAAa,YAEbC,KAAM,SAAA3f,GAAsC,IAA5BuzC,EAAQvzC,EAAf0xC,IAAO6B,SAAqBvzC,EAATqD,UACxB,OAAOkwC,SAAAA,EAAUC,WACbnxC,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAEsW,SAAU,SAAUvZ,UAC9BqB,EAAAA,EAAAA,MAAC6vC,GAAAA,EAAO,CAAAlxC,SAAA,EACJF,EAAAA,EAAAA,KAACoxC,GAAAA,EAAQ53B,OAAM,CAAAtZ,UACXF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,kCAAiCd,UAC7CF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,aAAYd,SACvBgxC,aAAQ,EAARA,EAAUC,iBAKvBnxC,EAAAA,EAAAA,KAACoxC,GAAAA,EAAQC,MAAK,CAAAnxC,UACVF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,UACnCF,EAAAA,EAAAA,KAAA,KACI4U,KAAI,kBAAAlX,OAAoBwzC,aAAQ,EAARA,EAAUr/B,SAClC7Q,UAAU,kBACVgU,OAAO,SAAQ9U,UAEfF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,cAAad,SACxBgxC,aAAQ,EAARA,EAAUC,wBAQnCnxC,EAAAA,EAAAA,KAAA,QAAAE,SAAM,iBAEd,GAGJ,CACII,GAAI,SACJ6c,OAAQ,cACRE,YAAa,yBACbC,KAAM,SAAArO,GAAa,IAAAqiC,EAAVjC,EAAGpgC,EAAHogC,IACC1vC,EAAO0vC,aAAG,EAAHA,EAAK6B,SAElB,OACIlxC,EAAAA,EAAAA,KAAA,QACIgB,UAAU,mBACVmC,MAAO,CAAE4R,WAAYpV,aAAI,EAAJA,EAAM4xC,yBAA0BrxC,SAExB,QAFwBoxC,EAEpD3xC,aAAI,EAAJA,EAAM6xC,8BAAsB,IAAAF,EAAAA,EAAI,MAG7C,GAGJ,CACIhxC,GAAI,cACJ6c,OAAQ,sBACRE,YAAa,cACbC,KAAM,SAAA5N,GAAa,IACT/P,EADE+P,EAAH2/B,IACY6B,SACjB,OACIlxC,EAAAA,EAAAA,KAAA,OAAKmD,MAAO,CAAE20B,WAAY,QAAS53B,UAC9B/C,EAAAA,GAAAA,GAAYwC,aAAI,EAAJA,EAAM8xC,YAG/B,GAGJ,CACIt0B,OAAQ,SACRE,YAAa,cAEbC,KAAM,SAAA3F,GAAa,IACThY,EADEgY,EAAH03B,IACY6B,SAEjB,OACIlxC,EAAAA,EAAAA,KAACwZ,GAAAA,EAAM,CAACiC,QAAQ,UAAUza,UAAU,aAAYd,UAC5CF,EAAAA,EAAAA,KAAA,KACI4U,KAAI,kBAAAlX,OAAoBiC,aAAI,EAAJA,EAAMkS,SAC9B7Q,UAAU,6BACVgU,OAAO,SAAQ9U,SAClB,YAKb,84CChBR,SAnE+B,SAAHvC,GAGtB,IAFF+zC,EAAkB/zC,EAAlB+zC,mBACAC,EAAqBh0C,EAArBg0C,sBAEMn7B,GAAOo7B,EAAAA,GAAAA,KAEbC,GAA4BC,EAAAA,GAAAA,IAAoBt7B,EAAKlW,IAA7CX,EAAIkyC,EAAJlyC,KAAME,EAASgyC,EAAThyC,UAGRkyC,EAAQpyC,aAAI,EAAJA,EAAMA,KAAKS,QAAO,SAACnC,GAAI,OACjC6D,IAAAA,SAAW,CAAC,EAAG,EAAG,EAAG,GAAIoJ,OAAOjN,EAAK+zC,sBAAsB,IAGrB5yC,EAAAC,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnCsuC,EAAOxuC,EAAA,GAAEyuC,EAAUzuC,EAAA,GAK1B,OACIY,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAACktC,KAAU,CACP/pC,MAAO,CACHmqC,QAAS,CACLpc,gBAAiB,qBACjBjV,OAAQ,YACRhD,OAAQ,OAEZuD,QAAS,CACLkmB,aAAc,OACdnpB,SAAU,QACV1a,OAAQ,cACR2mB,UAAW,OACXvJ,OAAQ,YACRsB,QAAS,OACTorB,UAAW,OACX1vB,OAAQ,QAGhBnb,OAAQ4zC,EACRvE,eAAgB,kBAAMwE,GAAsB,EAAM,EAClDM,aAAa,EAAM/xC,UAEnBqB,EAAAA,EAAAA,MAACooB,GAAAA,EAAI,CAAC3oB,UAAWiB,GAAAA,EAAOiwC,KAAKhyC,SAAA,EACzBF,EAAAA,EAAAA,KAAC2pB,GAAAA,EAAKE,KAAI,CACNC,QAAS,kBAAM6nB,GAAsB,EAAM,EAC3C3wC,UAAWiB,GAAAA,EAAOkwC,UAAUjyC,SAC/B,mBAIDF,EAAAA,EAAAA,KAAC2pB,GAAAA,EAAKK,KAAI,CAAChpB,UAAWiB,GAAAA,EAAOmwC,UAAUlyC,UACnCF,EAAAA,EAAAA,KAACqyC,GAAiB,CACd1yC,KAAMoyC,EACNrE,QAAO7qC,GAAMouC,IACbpxC,UAAWA,EACX8tC,aAzCH,SAACsC,GAClB/B,cAAc+B,EAClB,EAwCwBrC,QAASA,EACThwB,UAAU,sBACViwB,WAAYA,YAOxC,qiCCDA,SAxEyC,SAAHlwC,GAKhC,IAJF20C,EAAoB30C,EAApB20C,qBACAC,EAAyB50C,EAAzB40C,0BACAC,EAA4B70C,EAA5B60C,6BACAhG,EAAQ7uC,EAAR6uC,SAEmEptC,EAAAC,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAA5DoyC,EAAkBtyC,EAAA,GAAEuyC,EAAqBvyC,EAAA,IAChDW,EAAAA,EAAAA,YAAU,WACN,IAAM0yC,EAAa,IAAIxnB,KAAKqnB,GACR,IAAIrnB,KACNwnB,GAEdD,GAA6B,EAErC,GAAG,CAAChG,IAEJ,IAAMO,EAAa,WACfyF,GAA6B,EACjC,EAKA,OACIjxC,EAAAA,EAAAA,MAAC2rC,KAAU,CACPpvC,OAAQy0C,EACRpF,eAAgBJ,EAChBK,aAAa,qBACbC,2BAA2B,EAC3B4E,aAAa,EACb9uC,MAAO,CACHmqC,QAAS,CACLpc,gBAAiB,qBACjBjY,OAAQ,MAEZuD,QAAS,CACLtd,MAAO,QACPL,OAAQ,cACRod,OAAQ,OACRsB,QAAS,OACTmlB,aAAc,MACdxmB,UAAW,SACXjD,OAAQ,OAEd/Y,SAAA,EAEFF,EAAAA,EAAAA,KAAA,MAAImD,MAAO,CAAE+iC,aAAc,OAAQ9iC,MAAO,OAAQlD,SAAC,2BAGnDqB,EAAAA,EAAAA,MAAA,MAAArB,SAAA,CAAI,qBACmB,KACnBF,EAAAA,EAAAA,KAAA,QACIwT,QAhCW,WACvBm+B,GAAsB,EAC1B,EA+BgB3wC,UAAU,aACVmC,MAAO,CAAEsQ,OAAQ,WAAYvT,SAChC,YAEO,IAAI,YAGhBF,EAAAA,EAAAA,KAAA,UAAQwT,QAASu5B,EAAY/rC,UAAU,sBAAqBd,SAAC,WAI7DF,EAAAA,EAAAA,KAAC0yC,GAAsB,CACnBhB,mBAAoBA,EACpBC,sBAAuBA,MAIvC,yPCzEA5tC,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAhB,EAAAkB,OAAAC,UAAAC,EAAApB,EAAAqB,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAN,EAAAD,EAAAhB,GAAAiB,EAAAD,GAAAhB,EAAArC,KAAA,EAAA2B,EAAA,mBAAAkC,OAAAA,OAAA,GAAAC,EAAAnC,EAAAoC,UAAA,aAAAC,EAAArC,EAAAsC,eAAA,kBAAAC,EAAAvC,EAAAwC,aAAA,yBAAAC,EAAAd,EAAAD,EAAAhB,GAAA,OAAAkB,OAAAK,eAAAN,EAAAD,EAAA,CAAArD,MAAAqC,EAAAgC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,EAAA,KAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAhB,GAAA,OAAAiB,EAAAD,GAAAhB,CAAA,WAAAmC,EAAAlB,EAAAD,EAAAhB,EAAAoB,GAAA,IAAA9B,EAAA0B,GAAAA,EAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAA/C,EAAA6B,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAE,EAAAG,EAAA,WAAA9D,MAAA4E,EAAAtB,EAAAjB,EAAA2B,KAAAF,CAAA,UAAAe,EAAAvB,EAAAD,EAAAhB,GAAA,WAAAxB,KAAA,SAAAiE,IAAAxB,EAAAyB,KAAA1B,EAAAhB,GAAA,OAAAiB,GAAA,OAAAzC,KAAA,QAAAiE,IAAAxB,EAAA,EAAAD,EAAAmB,KAAAA,EAAA,IAAA1H,EAAA,iBAAAkI,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAApD,GAAAoB,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAM,EAAAtC,GAAA,0BAAAuC,SAAA,SAAAxC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAwC,QAAAzC,EAAAC,EAAA,gBAAAyC,EAAAzC,EAAAD,GAAA,SAAA2C,EAAA3D,EAAAsB,EAAAhC,EAAAmC,GAAA,IAAAE,EAAAa,EAAAvB,EAAAjB,GAAAiB,EAAAK,GAAA,aAAAK,EAAAnD,KAAA,KAAAqD,EAAAF,EAAAc,IAAAhI,EAAAoH,EAAAlE,MAAA,OAAAlD,GAAA,UAAAmJ,GAAAnJ,IAAA2G,EAAAsB,KAAAjI,EAAA,WAAAuG,EAAA6C,QAAApJ,EAAAqJ,SAAAC,MAAA,SAAA9C,GAAA0C,EAAA,OAAA1C,EAAA3B,EAAAmC,EAAA,aAAAR,GAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAT,EAAA6C,QAAApJ,GAAAsJ,MAAA,SAAA9C,GAAAY,EAAAlE,MAAAsD,EAAA3B,EAAAuC,EAAA,aAAAZ,GAAA,OAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAAzC,EAAAsB,EAAA,gBAAA3D,MAAA,SAAAsD,EAAAG,GAAA,SAAA4C,IAAA,WAAAhD,GAAA,SAAAA,EAAAhB,GAAA2D,EAAA1C,EAAAG,EAAAJ,EAAAhB,EAAA,WAAAA,EAAAA,EAAAA,EAAA+D,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAvB,EAAAhB,EAAAoB,GAAA,IAAAE,EAAA7G,EAAA,gBAAA6E,EAAAmC,GAAA,GAAAH,IAAAsB,EAAA,UAAAqB,MAAA,mCAAA3C,IAAAuB,EAAA,cAAAvD,EAAA,MAAAmC,EAAA,OAAA9D,MAAAsD,EAAAiD,MAAA,OAAA9C,EAAA+C,OAAA7E,EAAA8B,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAAgD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAT,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAA7G,EAAA,MAAA6G,EAAAuB,EAAAzB,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAsB,EAAA,IAAAK,EAAAT,EAAAxB,EAAAhB,EAAAoB,GAAA,cAAA6B,EAAAzE,KAAA,IAAA8C,EAAAF,EAAA8C,KAAArB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAnF,MAAAsF,EAAAR,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAjB,EAAAzE,OAAA8C,EAAAuB,EAAAzB,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAQ,EAAAR,IAAA,YAAA4B,EAAArD,EAAAhB,GAAA,IAAAoB,EAAApB,EAAAmE,OAAA7C,EAAAN,EAAAU,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAjB,EAAAoE,SAAA,eAAAhD,GAAAJ,EAAAU,SAAA,SAAA1B,EAAAmE,OAAA,SAAAnE,EAAAyC,IAAAxB,EAAAoD,EAAArD,EAAAhB,GAAA,UAAAA,EAAAmE,SAAA,WAAA/C,IAAApB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA0B,EAAA,IAAAxD,EAAAkD,EAAAlB,EAAAN,EAAAU,SAAA1B,EAAAyC,KAAA,aAAAnD,EAAAd,KAAA,OAAAwB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAAnD,EAAAmD,IAAAzC,EAAAoE,SAAA,KAAAtB,EAAA,IAAArB,EAAAnC,EAAAmD,IAAA,OAAAhB,EAAAA,EAAAyC,MAAAlE,EAAAgB,EAAA2D,YAAAlD,EAAA9D,MAAAqC,EAAA4E,KAAA5D,EAAA6D,QAAA,WAAA7E,EAAAmE,SAAAnE,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,GAAAjB,EAAAoE,SAAA,KAAAtB,GAAArB,GAAAzB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAA1E,EAAAoE,SAAA,KAAAtB,EAAA,UAAAgC,EAAA7D,GAAA,IAAAD,EAAA,CAAA+D,OAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,SAAA/D,EAAA,SAAAA,IAAAD,EAAAiE,WAAAhE,EAAA,GAAAD,EAAAkE,SAAAjE,EAAA,SAAAkE,WAAAC,KAAApE,EAAA,UAAAqE,EAAApE,GAAA,IAAAD,EAAAC,EAAAqE,YAAA,GAAAtE,EAAAxC,KAAA,gBAAAwC,EAAAyB,IAAAxB,EAAAqE,WAAAtE,CAAA,UAAAsB,EAAArB,GAAA,KAAAkE,WAAA,EAAAJ,OAAA,SAAA9D,EAAAuC,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAhB,EAAAgB,EAAAS,GAAA,GAAAzB,EAAA,OAAAA,EAAA0C,KAAA1B,GAAA,sBAAAA,EAAA4D,KAAA,OAAA5D,EAAA,IAAAwE,MAAAxE,EAAAyE,QAAA,KAAAnE,GAAA,EAAAhC,EAAA,SAAAsF,IAAA,OAAAtD,EAAAN,EAAAyE,QAAA,GAAArE,EAAAsB,KAAA1B,EAAAM,GAAA,OAAAsD,EAAAjH,MAAAqD,EAAAM,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,SAAAtF,EAAAsF,KAAAtF,CAAA,YAAAoF,UAAAd,GAAA5C,GAAA,2BAAA+B,EAAA5B,UAAA6B,EAAA1B,EAAAgC,EAAA,eAAA3F,MAAAqF,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAArF,MAAAoF,EAAAd,cAAA,IAAAc,EAAA2C,YAAA3D,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAA2E,oBAAA,SAAA1E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA2E,YAAA,QAAA5E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAA0E,aAAA1E,EAAA6E,MAAA,EAAA7E,EAAA8E,KAAA,SAAA7E,GAAA,OAAAC,OAAA6E,eAAA7E,OAAA6E,eAAA9E,EAAA+B,IAAA/B,EAAA+E,UAAAhD,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAiB,GAAArC,CAAA,EAAAD,EAAAiF,MAAA,SAAAhF,GAAA,OAAA6C,QAAA7C,EAAA,EAAAsC,EAAAG,EAAAvC,WAAAY,EAAA2B,EAAAvC,UAAAQ,GAAA,0BAAAX,EAAA0C,cAAAA,EAAA1C,EAAAkF,MAAA,SAAAjF,EAAAjB,EAAAoB,EAAAE,EAAAhC,QAAA,IAAAA,IAAAA,EAAA6G,SAAA,IAAA1E,EAAA,IAAAiC,EAAAvB,EAAAlB,EAAAjB,EAAAoB,EAAAE,GAAAhC,GAAA,OAAA0B,EAAA2E,oBAAA3F,GAAAyB,EAAAA,EAAAmD,OAAAb,MAAA,SAAA9C,GAAA,OAAAA,EAAAiD,KAAAjD,EAAAtD,MAAA8D,EAAAmD,MAAA,KAAArB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAAtC,EAAAoF,KAAA,SAAAnF,GAAA,IAAAD,EAAAE,OAAAD,GAAAjB,EAAA,WAAAoB,KAAAJ,EAAAhB,EAAAoF,KAAAhE,GAAA,OAAApB,EAAAqG,UAAA,SAAAzB,IAAA,KAAA5E,EAAAyF,QAAA,KAAAxE,EAAAjB,EAAAsG,MAAA,GAAArF,KAAAD,EAAA,OAAA4D,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA5D,EAAAqC,OAAAA,EAAAf,EAAAnB,UAAA,CAAAyE,YAAAtD,EAAAiD,MAAA,SAAAvE,GAAA,QAAAuF,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAAtD,EAAA,KAAAiD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAxB,EAAA,KAAAkE,WAAA3B,QAAA6B,IAAArE,EAAA,QAAAhB,KAAA,WAAAA,EAAAwG,OAAA,IAAApF,EAAAsB,KAAA,KAAA1C,KAAAwF,OAAAxF,EAAAyG,MAAA,WAAAzG,GAAAiB,EAAA,EAAAyF,KAAA,gBAAAxC,MAAA,MAAAjD,EAAA,KAAAkE,WAAA,GAAAG,WAAA,aAAArE,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,YAAAkE,IAAA,EAAAnC,kBAAA,SAAAxD,GAAA,QAAAkD,KAAA,MAAAlD,EAAA,IAAAhB,EAAA,cAAA4G,EAAAxF,EAAAE,GAAA,OAAAG,EAAAjD,KAAA,QAAAiD,EAAAgB,IAAAzB,EAAAhB,EAAA4E,KAAAxD,EAAAE,IAAAtB,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,KAAAK,CAAA,SAAAA,EAAA,KAAA6D,WAAAM,OAAA,EAAAnE,GAAA,IAAAA,EAAA,KAAAhC,EAAA,KAAA6F,WAAA7D,GAAAG,EAAAnC,EAAAgG,WAAA,YAAAhG,EAAAyF,OAAA,OAAA6B,EAAA,UAAAtH,EAAAyF,QAAA,KAAAwB,KAAA,KAAA5E,EAAAP,EAAAsB,KAAApD,EAAA,YAAAuC,EAAAT,EAAAsB,KAAApD,EAAA,iBAAAqC,GAAAE,EAAA,SAAA0E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,WAAAuB,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,SAAAtD,GAAA,QAAA4E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,YAAAnD,EAAA,UAAAoC,MAAA,kDAAAsC,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,KAAAR,OAAA,SAAAxD,EAAAD,GAAA,QAAAhB,EAAA,KAAAmF,WAAAM,OAAA,EAAAzF,GAAA,IAAAA,EAAA,KAAAsB,EAAA,KAAA6D,WAAAnF,GAAA,GAAAsB,EAAAyD,QAAA,KAAAwB,MAAAnF,EAAAsB,KAAApB,EAAA,oBAAAiF,KAAAjF,EAAA2D,WAAA,KAAA3F,EAAAgC,EAAA,OAAAhC,IAAA,UAAA2B,GAAA,aAAAA,IAAA3B,EAAAyF,QAAA/D,GAAAA,GAAA1B,EAAA2F,aAAA3F,EAAA,UAAAmC,EAAAnC,EAAAA,EAAAgG,WAAA,UAAA7D,EAAAjD,KAAAyC,EAAAQ,EAAAgB,IAAAzB,EAAA1B,GAAA,KAAA6E,OAAA,YAAAS,KAAAtF,EAAA2F,WAAAnC,GAAA,KAAA+D,SAAApF,EAAA,EAAAoF,SAAA,SAAA5F,EAAAD,GAAA,aAAAC,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,gBAAAxB,EAAAzC,MAAA,aAAAyC,EAAAzC,KAAA,KAAAoG,KAAA3D,EAAAwB,IAAA,WAAAxB,EAAAzC,MAAA,KAAAmI,KAAA,KAAAlE,IAAAxB,EAAAwB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA3D,EAAAzC,MAAAwC,IAAA,KAAA4D,KAAA5D,GAAA8B,CAAA,EAAAgE,OAAA,SAAA7F,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAAiF,aAAAhE,EAAA,YAAA4F,SAAA7G,EAAAsF,WAAAtF,EAAAkF,UAAAG,EAAArF,GAAA8C,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAA+E,SAAA9D,EAAA,KAAAG,EAAApB,EAAAsF,WAAA,aAAAlE,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAqB,IAAA4C,EAAArF,EAAA,QAAAsB,CAAA,YAAA2C,MAAA,0BAAA8C,cAAA,SAAA/F,EAAAhB,EAAAoB,GAAA,YAAAgD,SAAA,CAAA1C,SAAA2B,EAAArC,GAAA2D,WAAA3E,EAAA6E,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAxB,GAAA6B,CAAA,GAAA9B,CAAA,UAAAqH,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAAf,EAAAjF,GAAA,QAAAiG,EAAAJ,EAAAZ,GAAAjF,GAAA9E,EAAA+K,EAAA/K,KAAA,OAAAgL,GAAA,YAAAJ,EAAAI,EAAA,CAAAD,EAAAxE,KAAAL,EAAAlG,GAAAwI,QAAAtC,QAAAlG,GAAAoG,KAAAyE,EAAAC,EAAA,UAAApM,GAAA4M,EAAA3J,GAAA,gBAAA2J,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAA,CAAA,CAAAE,CAAAF,IAAA,SAAAjJ,EAAA2C,GAAA,IAAA1B,EAAA,MAAAjB,EAAA,yBAAAwB,QAAAxB,EAAAwB,OAAAE,WAAA1B,EAAA,uBAAAiB,EAAA,KAAAD,EAAAI,EAAA9B,EAAAuC,EAAAJ,EAAA,GAAAmB,GAAA,EAAAtB,GAAA,SAAAhC,GAAA2B,EAAAA,EAAAyB,KAAA1C,IAAA4E,KAAA,IAAAjC,EAAA,IAAAzB,OAAAD,KAAAA,EAAA,OAAA2B,GAAA,cAAAA,GAAA5B,EAAA1B,EAAAoD,KAAAzB,IAAAiD,QAAAzC,EAAA2D,KAAApE,EAAArD,OAAA8D,EAAAgE,SAAA9C,GAAAC,GAAA,UAAA5C,GAAAsB,GAAA,EAAAF,EAAApB,CAAA,iBAAA4C,GAAA,MAAA3B,EAAA,SAAAY,EAAAZ,EAAA,SAAAC,OAAAW,KAAAA,GAAA,kBAAAP,EAAA,MAAAF,CAAA,SAAAK,CAAA,EAAA2H,CAAAH,EAAA3J,IAAA,SAAAgC,EAAA+H,GAAA,IAAA/H,EAAA,2BAAAA,EAAA,OAAAgI,GAAAhI,EAAA+H,GAAA,IAAAjI,EAAAF,OAAAC,UAAAoI,SAAA7G,KAAApB,GAAAmF,MAAA,iBAAArF,GAAAE,EAAAsE,cAAAxE,EAAAE,EAAAsE,YAAAC,MAAA,WAAAzE,GAAA,QAAAA,EAAA,OAAAtB,MAAA0J,KAAAlI,GAAA,iBAAAF,GAAA,2CAAAqI,KAAArI,GAAA,OAAAkI,GAAAhI,EAAA+H,EAAA,CAAAK,CAAAT,EAAA3J,IAAA,qBAAAoF,UAAA,6IAAAiF,EAAA,UAAAL,GAAAL,EAAApK,IAAA,MAAAA,GAAAA,EAAAoK,EAAAxD,UAAA5G,EAAAoK,EAAAxD,QAAA,QAAAnG,EAAA,EAAAsK,EAAA,IAAA9J,MAAAjB,GAAAS,EAAAT,EAAAS,IAAAsK,EAAAtK,GAAA2J,EAAA3J,GAAA,OAAAsK,CAAA,CAogBA,SA1eqB,SAAHjP,GAAkD,IAAAg1C,EAAA5lC,EAAA6lC,EAA5C30C,EAAIN,EAAJM,KAAM40C,EAAUl1C,EAAVk1C,WAAYC,EAAan1C,EAAbm1C,cAAet8B,EAAI7Y,EAAJ6Y,KACrDu8B,GAA4CC,EAAAA,GAAAA,IACxCx8B,aAAI,EAAJA,EAAMlW,IADI2yC,EAAcF,EAApBpzC,KAIF8yC,GAJiCM,EAATlzC,UAIXozC,SAAuB,QAATN,EAAdM,EAAgBtzC,KAAK,UAAE,IAAAgzC,OAAA,EAAvBA,EAAyBO,UAM1B9zC,EAAAC,IAAdC,EAAAA,EAAAA,WAAS,GAAK,GADXotC,EAA0BttC,EAAA,GAAE+zC,EAA6B/zC,EAAA,GAErB0e,EAAAze,IAAXC,EAAAA,EAAAA,UAAS,GAAE,GAApCktC,EAAQ1uB,EAAA,GAAE2uB,EAAW3uB,EAAA,GAETG,EAAA5e,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GADZgtC,EAA0BruB,EAAA,GAAEsuB,EAA6BtuB,EAAA,GAG7CG,EAAA/e,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GADZizC,EAAyBn0B,EAAA,GAAEo0B,EAA4Bp0B,EAAA,GAG3CG,EAAAlf,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GADZ8zC,EAA0B70B,EAAA,GAAE80B,EAA6B90B,EAAA,GAIxC+M,EAAAjsB,IAApBC,EAAAA,EAAAA,UAASmzC,GAAW,GADjBH,EAAoBhnB,EAAA,GAAEgoB,EAAuBhoB,EAAA,GAIRE,EAAAnsB,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAArCi0C,EAAO/nB,EAAA,GAAEgoB,EAAUhoB,EAAA,GACeE,EAAArsB,IAAXC,EAAAA,EAAAA,UAAS,GAAE,GAAlC2tC,EAAOvhB,EAAA,GAAE+nB,EAAU/nB,EAAA,GAEPG,EAAAxsB,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GADZo0C,EAAuB7nB,EAAA,GAAE8nB,EAA0B9nB,EAAA,GAGpDnM,GAAWC,EAAAA,EAAAA,MACX/J,EAAQ,IAAIqT,GAAAA,EACZnS,EAAa,IAAIhK,EAAAA,EAAW,QAAPC,EAACC,cAAM,IAAAD,GAAS,QAATA,EAANA,EAAQE,eAAO,IAAAF,OAAA,EAAfA,EAAiB1K,MAGvCuxC,IAFW7uB,EAAAA,EAAAA,MAEG9mB,SAAkB,QAAd20C,EAAJ30C,EAAM41C,oBAAY,IAAAjB,OAAA,EAAlBA,EAAoB/7B,QAClCi9B,GAAcC,EAAAA,EAAAA,UAAQ,kBAAMH,CAAW,GAAE,CAACA,KAEhD7zC,EAAAA,EAAAA,YAAU,WACN,GAAoB,YAAhB+zC,EAA2B,KAAAE,EAAAC,EACvBC,EAAaj2C,SAAkB,QAAd+1C,EAAJ/1C,EAAM41C,oBAAY,IAAAG,OAAA,EAAlBA,EAAoB52C,KAEjC+S,EADYyF,EAAMA,QAAQu+B,OACND,EACxBpB,GAAc,GACdW,EAAWtjC,GACXqjC,EAAWv1C,SAAkB,QAAdg2C,EAAJh2C,EAAM41C,oBAAY,IAAAI,OAAA,EAAlBA,EAAoB3zC,GACnC,CACJ,GAAG,CAACwzC,KAKJ/zC,EAAAA,EAAAA,YAAU,WACN,IAAI+sC,EAAW,KAOf,OANI+F,EAEA/F,EAAWrV,aAAY,WACnBgc,GAAW,SAAC5tC,GAAC,OAAKA,EAAI,CAAC,GAC3B,GAAG,KACA+xB,cAAckV,GACd,kBAAMlV,cAAckV,EAAS,CACxC,GAAG,CAAC+F,IAEJ,IAAMuB,GAAc5/B,EAAAA,EAAAA,QAAO,OAC3BzU,EAAAA,EAAAA,YAAU,WACNuzC,EAAwBb,EAC5B,GAAG,CAACc,EAASO,EAAarB,KAE1B1yC,EAAAA,EAAAA,YAAU,WAEN,IAAMs0C,EAAkB,WACpB,GAA6B,OAAzB/B,EAA+B,CAC/B,IAAMG,EAAa,IAAIxnB,KAAKqnB,GACtBgC,EAAc,IAAIrpB,KAClBspB,EACF9B,EAAW+B,UAAYF,EAAYE,UACvC/H,EAAYnvC,KAAKm3C,IAAI,EAAGn3C,KAAKC,MAAMg3C,EAAiB,OAGhDD,GAAe7B,GACf3wC,IAAAA,SAAW,CAAC,GAAI,GAAI,GAAI,IAAKoJ,OAAOsL,EAAK2uB,WAEzCkO,GAA8B,GAC9B5H,KACA7T,cAAcwc,EAAY3tB,SAElC,CACJ,EAOA,OAJA4tB,IAEAD,EAAY3tB,QAAUgR,YAAY4c,EAAiB,KAE5C,kBAAMzc,cAAcwc,EAAY3tB,QAAQ,CACnD,GAAG,CAAC6rB,EAAsBiB,IAG1B,IACUl2C,EACA2vC,GACAnnC,GAGF6uC,GACAl3C,GACAm3C,GAKFC,GAAQ9kC,KAAAA,MAAW,CACrBE,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,IASUlD,GAAA7N,IAA5B8N,EAAAA,EAAAA,MAA4B,GAF5B0nC,GAAoB3nC,GAAA,GACN4nC,GAA8B5nC,GAAA,GAA1CtN,WAKwBm1C,GAAA11C,IAA1B21C,EAAAA,EAAAA,MAA0B,GADvBC,GAAaF,GAAA,GAAeG,GAAyBH,GAAA,GAApCl1C,UAKKs1C,GAAA91C,IAAzB+1C,EAAAA,EAAAA,MAAyB,GADtBC,GAAYF,GAAA,GAAeG,GAAwBH,GAAA,GAAnCt1C,UAGhB01C,GAAkDl2C,IAA/Bm2C,EAAAA,EAAAA,MAA+B,GAAnC,GAGhBC,GAAiB,eAnK3B5pC,EAmK2BoD,GAnK3BpD,EAmK2B9H,KAAA+E,MAAG,SAAAyE,IAAA,IAAAmoC,EAAAC,EAAA,OAAA5xC,KAAAoB,MAAA,SAAAsI,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA7F,MAAA,OAGtB,OAFA+rC,GAA2B,GAE3BlmC,EAAAlE,KAAA,EAAAkE,EAAA7F,KAAA,EAI6B2tC,KAAkB7nC,SAAQ,OAAnC,KAAVgoC,EAAUjoC,EAAAnG,QAKZouC,EAAW/1C,OACV+1C,EAAW/1C,KAAKi2C,mBAAmBC,kBAChC/zC,IAAAA,SAAW,CAAC,GAAI,GAAI,GAAI,IAAKoJ,OAAOsL,EAAK2uB,WAC5CuQ,EAAW/1C,KAAKm2C,kBAAkBtT,0BAC/B1gC,IAAAA,SAAW,CAAC,GAAI,GAAI,GAAI,IAAKoJ,OAAOsL,EAAK2uB,WAC5CuQ,EAAW/1C,KAAKo2C,iBAAiBC,0BAC9Bl0C,IAAAA,SAAW,CAAC,GAAI,GAAI,GAAI,IAAKoJ,OAAOsL,EAAK2uB,SAAS,CAAA13B,EAAA7F,KAAA,gBAAA6F,EAAA7F,KAAA,EAEhDqtC,GAAc,CAChBpjC,QAAS5T,aAAI,EAAJA,EAAMqC,GACfq4B,WAAY16B,aAAI,EAAJA,EAAM6uB,UAClB8D,KAAM3yB,aAAI,EAAJA,EAAMsS,MACZwkB,QAAe,QAAR4gB,EAAE3oC,cAAM,IAAA2oC,GAAS,QAATA,EAANA,EAAQ1oC,eAAO,IAAA0oC,GAAM,QAANA,EAAfA,EAAiBtzC,YAAI,IAAAszC,OAAA,EAArBA,EAAuBr1C,KAE/BoN,SACA3G,MAAK,SAACiE,GACiB,aAAhBA,aAAG,EAAHA,EAAK6L,SAAwC,OAAhB7L,aAAG,EAAHA,EAAK6L,SAClCi8B,GAAc,GACdU,EAAWxoC,aAAG,EAAHA,EAAK1K,IAChBof,GAASsqB,EAAAA,EAAAA,IAAch/B,aAAG,EAAHA,EAAKi/B,cAK5B2K,GAAMvkC,KAAK,CACPC,KAAM,UACNC,MAAOzO,IAAAA,UAAYkJ,aAAG,EAAHA,EAAKgZ,YAG5B4wB,GAAMvkC,KAAK,CACPC,KAAM,UACNC,MAAOzO,IAAAA,UAAYkJ,aAAG,EAAHA,EAAKgZ,UAGpC,IAAE,OAAAvW,EAAA7F,KAAA,iBC5MlBquC,KAAiBnmC,MAAMO,KAAK,CACxBC,KAAM,QACN4lC,MAAMl2C,EAAAA,EAAAA,KAAC+rC,GAAuB,IAC9BoK,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,KAClBC,YAAa,CACTC,cAAe,4BACfC,aAAc,8BAEnBzvC,MAAK,SAAAqL,GACDA,EAAO0mB,aACN9rB,OAAOmc,SAASstB,QAExB,IDgMiC,QAAAhpC,EAAA7F,KAAA,iBAAA6F,EAAAlE,KAAA,GAAAkE,EAAAe,GAAAf,EAAA,SAGzBgB,QAAQC,IAAGjB,EAAAe,IAAQ,yBAAAf,EAAA/D,OAAA,GAAA6D,EAAA,kBAtN/B,eAAAzB,EAAA,KAAAC,EAAA1B,UAAA,WAAAlB,SAAA,SAAAtC,EAAA0E,GAAA,IAAAD,EAAAO,EAAA1B,MAAA2B,EAAAC,GAAA,SAAAP,EAAA7K,GAAA0K,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,OAAA9K,EAAA,UAAA8K,EAAAO,GAAAX,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,QAAAO,EAAA,CAAAR,OAAAT,EAAA,MAwRK,kBArHsB,OAAAkE,EAAA9E,MAAA,KAAAE,UAAA,KAyIjBohC,GAAY,WAEd0H,GAA8B,GAC9BkC,GAAa,CAAEqB,OAAQnD,EAAS1hC,QAAS5T,aAAI,EAAJA,EAAMqC,KAC1CoN,SACA3G,MAAK,SAACiE,GACiB,aAAhBA,aAAG,EAAHA,EAAK6L,SAAwC,OAAhB7L,aAAG,EAAHA,EAAK6L,SAClC+9B,GAAMvkC,KAAK,CACPC,KAAM,UACNC,MAAOzO,IAAAA,UAAYkJ,aAAG,EAAHA,EAAKgZ,WAE5B8uB,GAAc,GACdW,EAAW,GACXF,EAAQ,OACe,OAAhBvoC,aAAG,EAAHA,EAAK6L,SACZ/G,KAAAA,KAAU,CACNQ,KAAM,UACNC,MAAOzO,IAAAA,UAAYkJ,aAAG,EAAHA,EAAKgZ,SACxB9T,mBAAmB,IAEvBlD,OAAOmc,SAASstB,UAEhB7B,GAAMvkC,KAAK,CACPC,KAAM,UACNC,MAAOzO,IAAAA,UAAYkJ,aAAG,EAAHA,EAAKgZ,UAGpC,GACR,EAEkC2yB,GAAAt3C,IAA9Bu3C,EAAAA,EAAAA,MAA8B,GAD3BC,GAAgBF,GAAA,GAAgBG,GAAiBH,GAAA,GAA7B/2C,WAwD3B,OARAG,EAAAA,EAAAA,YAAU,WAEFiS,SAASiS,qBAAqB,QAAQ,GAAG9gB,MAAMsQ,OAD/CqhC,IAAkCI,GACsB,WAEA,SAEhE,GAAG,CAACJ,GAAgCI,MAGhC3zC,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,CACT2yC,GA4CEtxC,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXqB,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CACHiC,QAAQ,WACRza,UAAU,uDAAsDd,SAAA,EAEhEF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BACbhB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gBAAed,UAzTzC7C,EAAQC,KAAKC,MAAM0vC,EAAU,MAC7BD,GAAU1vC,KAAKC,MAAO0vC,EAAU,KAAQ,IACxCpnC,GAAIvI,KAAKC,MAAO0vC,EAAU,KAAQ,IAGpCyH,GAAM7uC,GAAI,GAAK,IAAHnI,OAAOmI,IAAMA,GACzBrI,GAAMwvC,GAAU,GAAK,IAAHtvC,OAAOsvC,IAAYA,GACrC2H,GAAKt3C,EAAQ,GAAK,IAAHK,OAAOL,GAAUA,EAC7B,GAAPK,OAAUi3C,GAAE,KAAAj3C,OAAIF,GAAG,KAAAE,OAAIg3C,UAyTVoC,IACGv1C,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAACxY,UAAU,oBAAmBd,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,4BACVsa,KAAK,SACLnY,MAAO,CAAEjE,MAAO,OAAQL,OAAQ,UAClC,mBAGLy2C,IAUD/zC,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAACxY,UAAU,oBAAmBd,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,4BACVsa,KAAK,SACLnY,MAAO,CAAEjE,MAAO,OAAQL,OAAQ,UAClC,kBAdN0C,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CACHiC,QAAQ,WACRjI,QA5HA,WAEpBqjC,GAAiB//B,aAAU,EAAVA,EAAYH,SACxBjJ,SACA3G,MAAK,SAACiE,GACH,GAAIA,EAAK,CACL,IAAIspC,EAAc1+B,EAAMA,MAAM5K,EAAI+rC,cAC9B/hC,EAASs/B,EACR0C,IAAI,OAAQ,IACZA,IAAI,SAAU,IACdA,IAAI,SAAU,GACsB,IAAtB1C,EAAY2C,QAG3BjiC,EAASs/B,EACJ0C,IAAI,OAAQ,IACZA,IAAI,SAAU,GACdA,IAAI,SAAU,IAGvB,IAAIE,EAAQthC,EAAMA,MAAM0+B,GAAa6C,SAASniC,GAC1CoiC,EAAQt1C,IAAAA,SACR,CAAC,EAAG,EAAG,IACPoJ,OAAOsL,aAAI,EAAJA,EAAMC,eAEZygC,GAASE,GACVpsC,EAAIqsC,cAAgBrsC,EAAIssC,YAClB53B,GACImsB,EAAAA,EAAAA,IAAkB,CACdjqC,MAAM,EACNJ,KAAM,aACNmU,KAAM,WAKpB81B,IAER,CACJ,IAAE,OACK,SAACz/B,GAAG,OAAKyC,QAAQC,IAAI1C,EAAI,GACxC,EAoFwBhL,UAAU,uDAAsDd,SAAA,EAEhEF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,uBACbhB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gBAAed,SAAC,sBAzE5CqB,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,CACTg1C,IACDJ,IA0BGvzC,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CAACxY,UAAU,yBAAwBd,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,4BACVsa,KAAK,SACLnY,MAAO,CAAEjE,MAAO,OAAQL,OAAQ,UAC7B,kBA9BXmB,EAAAA,EAAAA,KAAA,OAAAE,SACMkzC,GAUE7xC,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CACHiC,QAAQ,SACRza,UAAU,8BAA6Bd,SAAA,EAEvCF,EAAAA,EAAAA,KAAA,KACIgB,UAAU,0BACVmC,MAAO,CAAEC,MAAO,YAGpBpD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,qBAlBVqB,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CACHiC,QAAQ,WACRjI,QAhHb,SAACxP,GAChBA,EAAE6Q,iBACFs+B,GAA8B,GAC9B0B,GAAqB,IAADn3C,OACZO,aAAI,EAAJA,EAAMqC,GAAE,qDAAA5C,OAAoDO,aAAI,EAAJA,EAAM6uB,YAErEpf,SACA3G,MAAK,SAACiE,GACCA,EAAIusC,cACJ5D,GAA2B,GACxB8B,IACX,GACR,EAqGgCz0C,UAAU,uDAAsDd,SAAA,EAEhEF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,6BACbhB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,sBA0BtBF,EAAAA,EAAAA,KAACw3C,GAA2B,CACxB15C,OAAQ41C,EACRvc,UAAWse,SAkDvBz1C,EAAAA,EAAAA,KAACy3C,GAAmB,CAChBhM,UAAWA,GACXC,WAAY+J,KAGf3zC,IAAAA,SAAW,CAAC,GAAI,GAAI,GAAI,IAAKoJ,OAAOsL,EAAK2uB,WACtC5jC,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,EACIF,EAAAA,EAAAA,KAAC03C,GAA8B,CAC3BpL,2BAA4BA,EAC5BC,8BACIA,EAEJC,SAAUA,EACVC,YAAaA,EACbqH,YAAaA,EACb71C,KAAMA,EACNyuC,2BAA4BA,KAEhC1sC,EAAAA,EAAAA,KAAC23C,GAAgC,CAC7BrF,qBAAsBA,EACtBC,0BAA2BA,EAC3BC,6BACIA,EAEJhG,SAAUA,OAKrB/9B,QAAQC,IACL,gDACA89B,EACA8F,EACAC,KAIhB,qiCE5fO,IAAMqF,GAA0B,SAAHj6C,GAAqB,IAAhBM,EAAIN,EAAJM,KAAMuY,EAAI7Y,EAAJ6Y,KACFpX,EAAAC,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAApCxB,EAAMsB,EAAA,GAAEwa,EAASxa,EAAA,GAClB2tC,EAAa,WAAH,OAASnzB,GAAU,EAAM,EAEnCrF,GAAMC,EAAAA,EAAAA,WACZC,EAAAA,EAAAA,GAAaF,EAAKw4B,GAGlB,IAAmF8K,EAAAx4C,IAApCy4C,EAAAA,EAAAA,MAAoC,GAA5EhgC,EAAuB+/B,EAAA,GAAGh4C,EAASg4C,EAAA,GAATh4C,UAoBjC,OACE0B,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SAEXL,GACAG,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACbqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,0DAAyDd,SAAA,EAClEF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,4BACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,UAET,sBAKb0C,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CACHiC,QAAQ,UACRjI,QA9CE,WAAH,OAASoG,GAAU,EAAK,EA+CvB5Y,UAAU,2CAA0Cd,SAAA,EAEpDF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,iCACbhB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gBAAed,SAAC,qCAI1CF,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQA,EAAQkD,UAAU,yBAAwBd,UACrDF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wCAAuCd,UACpDqB,EAAAA,EAAAA,MAAA,OACEgT,IAAKA,EACLvT,UAAU,0DACVmC,MAAO,CAACkW,IAAI,MAAOC,KAAK,MAAMy+B,UAAU,wBAAyB74C,MAAO,SAASgB,SAAA,EAE/EL,IACAG,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,+CAA8Cd,UAC3DF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAACiC,QAAQ,WAAWjI,QAASu5B,EAAY/rC,UAAU,mBAAkBd,UAC1EF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAInBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4CAA4CmC,MAAO,CAACkT,IAAI,QAAQnW,SAAA,CAC5EL,IACCG,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACbF,EAAAA,EAAAA,KAAC4nB,GAAM,CAACrX,MAAM,qBAIhB1Q,IACA0B,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACbF,EAAAA,EAAAA,KAAA,OAAKuC,IAAI,mBAAmBC,IAAI,GAAGW,MAAO,CAACjE,MAAO,OAAQL,OAAQ,WAClE0C,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wCAAuCd,SAAA,EACpDF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,eAAcd,SAAC,mBAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mDAAkDd,SAAA,EAC/DF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QAzET,WACrBsE,EAAwB,CAACjG,QAAS5T,aAAI,EAAJA,EAAMqC,GAAIy0B,QAASve,aAAI,EAAJA,EAAMG,UAC1DjJ,SACA3G,MAAK,SAAAiE,GACJ8E,KAAKO,KAAK,CACNJ,SAAU,SACVK,KAAM,UACNC,MAAO,kDACPL,mBAAmB,EACnBC,MAAO,MAEb,IAAE,OACK,SAAAnE,GAAG,OAAIyC,QAAQC,IAAI1C,EAAI,IAAC,SACtB,kBAAM+gC,GAAY,GAC7B,EA2DyD/rC,UAAU,YAAWd,SAAC,SACvDF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAACiC,QAAQ,WAAWjI,QAASu5B,EAAY/rC,UAAU,OAAMd,SAAC,4BAW3F,qiCCxEA,SA1B2B,SAAHvC,GAAe,IAAVM,EAAIN,EAAJM,KAEoD+5C,EAAA34C,IAAlC44C,EAAAA,EAAAA,MAAkC,GAAxEC,EAAqBF,EAAA,GAAGn4C,EAASm4C,EAAA,GAATn4C,UAS/B,OACEG,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAAC8zB,GAAAA,EAAY,CACT7hB,QAVQ,SAACxP,GACjBA,EAAE6Q,iBACFqjC,EAAsB,CAClBrmC,QAAS5T,aAAI,EAAJA,EAAMqC,KAChBoN,QACL,EAMU+N,QAAQ,UACR5b,UAAWA,EACXmB,UAAU,2CAA0Cd,SAAA,EAEpDF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,uBACbhB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gBAAed,SAAC,sCAI5C,qiCClBA,IAAMi4C,GAAgC,CAClC,CACI73C,GAAI,SACJiQ,MAAO,uFACP1M,YAAY,GAEhB,CACIvD,GAAI,SACJiQ,MAAO,yEACP1M,YAAY,GAEhB,CACIvD,GAAI,SACJiQ,MAAO,4DACP1M,YAAY,GAEhB,CACIvD,GAAI,SACJiQ,MAAO,sHACP1M,YAAY,GAEhB,CACIvD,GAAI,SACJiQ,MAAO,6KACP1M,YAAY,EACZu0C,eAAe,GAEnB,CACI93C,GAAI,SACJiQ,MAAO,0IACP1M,YAAY,GAEhB,CACIvD,GAAI,SACJiQ,MAAO,qHACP1M,YAAY,EACZu0C,eAAe,GAEnB,CACI93C,GAAI,SACJiQ,MAAO,qGACP1M,YAAY,EACZu0C,eAAe,GAEnB,CACI93C,GAAI,SACJiQ,MAAO,wHACP1M,YAAY,EACZu0C,eAAe,IAiSvB,SA5RyC,SAAHz6C,GAAWA,EAALI,MAAwD,IAAjD2pC,EAAM/pC,EAAN+pC,OAAQvd,EAAQxsB,EAARwsB,SAAUlsB,EAAIN,EAAJM,KAAMuY,EAAI7Y,EAAJ6Y,KAAMsrB,EAAYnkC,EAAZmkC,aACnC1iC,EAAAC,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAAnC+lC,EAAMjmC,EAAA,GAAEkmC,EAASlmC,EAAA,GAC0B0e,EAAAze,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA3CimC,EAAWznB,EAAA,GAAE0nB,EAAc1nB,EAAA,GACQG,EAAA5e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnCe,EAAO4d,EAAA,GAAEgW,EAAUhW,EAAA,GAC0BG,EAAA/e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA7CmmC,EAAYrnB,EAAA,GAAEsnB,EAAetnB,EAAA,GACoBG,EAAAlf,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAjD+4C,EAAc95B,EAAA,GAAE+5B,EAAiB/5B,EAAA,GACkB+M,EAAAjsB,IAAdC,EAAAA,EAAAA,UAAS,MAAK,GAAnDi5C,EAAcjtB,EAAA,GAAEktB,EAAiBltB,EAAA,GACmBE,EAAAnsB,IAAXC,EAAAA,EAAAA,UAAS,GAAE,GAApDm5C,EAAgBjtB,EAAA,GAAEktB,EAAmBltB,EAAA,GACcE,EAAArsB,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnDq5C,EAAejtB,EAAA,GAAEktB,EAAkBltB,EAAA,GA0BpCmtB,EAAuB,SAACC,GAC1BR,GAAkB,kBAAMQ,EAAQ,MAAO,IAAI,GAC/C,EAmEA,OACI94C,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACPqB,EAAAA,EAAAA,MAAA,QAAMP,UAAU,OAAMd,SAAA,EAClBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,mBAAkBd,SAAA,CAAC,8BACjBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,MAAO,SAE3DF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAEb4B,EAAEiB,IAAIo1C,IAA+B,SAAAnS,GAAM,OACvCzkC,EAAAA,EAAAA,MAAA,OAAqBP,UAAU,2CAA0Cd,SAAA,EACrEF,EAAAA,EAAAA,KAAA,SACIgB,UAAU,wBACVQ,KAAK,QACLqH,KAAK,gBACLvI,GAAI0lC,EAAO1lC,GACX4gB,UAAW,EACXtgB,SAAU,SAAAoD,GAAC,OA7G9B,SAACA,EAAGqhC,GACrBC,EAAUD,GACVqT,EAAoB,GACpBJ,EAAkB,IAClBE,EAAkB,KACtB,CAwGuD11B,CAAa9e,EAAGgiC,EAAO,EACtCrlC,MAAOqlC,EAAOz1B,MACdpN,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACRonC,UAAW,UAInBjmC,EAAAA,EAAAA,KAAA,SACIgB,UAAU,mBACVigB,QAAS+kB,EAAO1lC,GAChB6C,MAAO,CAAE+iC,aAAc,OAAQhmC,SAE/B8lC,EAAOz1B,UArBLy1B,EAAO1lC,GAuBX,MAIjBilC,IAAevlC,EAAAA,EAAAA,KAAA,SAAOM,GAAG,YAAYU,UAAU,wBAAuBd,SAAEqlC,OAG7D,YAAfF,aAAM,EAANA,EAAQ/kC,MACLiB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,2BAA0Bd,SAAA,CAAC,yDAAqDF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,UACjHqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,UAASd,SAAA,EAChBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,+BAA8Bd,SAAA,EACzCF,EAAAA,EAAAA,KAAA,SACIgB,UAAU,mBACV6H,KAAK,YACLrH,KAAK,QACLlB,GAAG,qBACHK,MAAM,IACNC,SAAU,SAACoD,GAAC,OAAG60C,GAAqB,EAAK,EACzC11C,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACRonC,UAAW,UAGnBjmC,EAAAA,EAAAA,KAAA,SAAOihB,QAAQ,qBAAqBjgB,UAAU,mBAAkBd,SAAC,YAErEqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,+BAA8Bd,SAAA,EACzCF,EAAAA,EAAAA,KAAA,SACIgB,UAAU,mBACV6H,KAAK,YACLrH,KAAK,QACLlB,GAAG,oBACHK,MAAM,IACNC,SAAU,SAACoD,GAAC,OAAK60C,GAAqB,EAAM,EAC5C11C,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACRonC,UAAW,UAGnBjmC,EAAAA,EAAAA,KAAA,SAAOihB,QAAQ,oBAAoBjgB,UAAU,mBAAkBd,SAAC,gBAMhE,QAAnBm4C,IACG92C,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,2BAA0Bd,SAAA,CAAC,YAAQF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,UACpEqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,cAAad,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sBAAqBd,UAChCF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,mBAAkBd,SAAC,SAEtCF,EAAAA,EAAAA,KAAA,SACIwB,KAAK,SACLZ,SAAU,SAAAoD,GAAC,OAAI00C,EAAoB10C,EAAEgR,OAAOrU,MAAM,EAClDK,UAAU,eACVV,GAAG,uBACHmgB,YAAY,MACZs4B,OAhLR,WACpBjpC,KAAKO,KAAK,CACNE,MAAO,qCAEP6lC,kBAAmB,QAEhBrvC,MAAK,SAAAiE,GACLA,EAAI8tB,aACH9rB,OAAOk0B,KAAK,qBAADxjC,OAAsBO,aAAI,EAAJA,EAAM6uB,UAAS,mBAAmB,SAE3E,GACJ,UA4KuC,OAAnBurB,IACA92C,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,2BAA0Bd,SAAA,CAAC,yDAAqDF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,UACjHqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,UAASd,SAAA,EAChBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SACI6I,KAAK,wBACL7H,UAAU,mBACVQ,KAAK,QACLlB,GAAG,yBACHM,SAAU,SAAAoD,GAAC,OAAIw0C,EAAkB,CAC7B9sC,KAAM1H,EAAEgR,OAAOrU,MACfq4C,eAAe,GACjB,EACFr4C,MAAM,oIACNwC,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACRonC,UAAW,UAGnBjmC,EAAAA,EAAAA,KAAA,SAAOihB,QAAQ,yBAAyBjgB,UAAU,mBAAkBd,SAAC,0IAIzEqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SACIgB,UAAU,mBACV6H,KAAK,wBACLrH,KAAK,QACLlB,GAAG,yBACHK,MAAM,6EACNC,SAAU,SAACoD,GAAC,OAAKw0C,EAAkB,CAC/B9sC,KAAM1H,EAAEgR,OAAOrU,MACfq4C,eAAe,GACjB,EACF71C,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACRonC,UAAW,UAGnBjmC,EAAAA,EAAAA,KAAA,SAAOihB,QAAQ,yBAAyBjgB,UAAU,mBAAkBd,SAAC,wFAQvFy4C,IAAmB34C,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,UACtCF,EAAAA,EAAAA,KAAA,SAAOM,GAAG,YAAYU,UAAU,wBAAuBd,SAClDy4C,OAKTp3C,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYd,SAAA,EACvBqB,EAAAA,EAAAA,MAAA,SAAO0f,QAAQ,GAAGjgB,UAAU,mBAAkBd,SAAA,CAAC,sBACzBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAAC,MAAO,SAEnDF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,mBAAkBd,UAC7BF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CAAC9Y,SAlOb,SAACoD,EAAG0e,GAC9B,IAAM/iB,EAAO+iB,EAAOC,UACpBsR,EAAWt0B,EACf,MAiOqB8lC,IAAgBzlC,EAAAA,EAAAA,KAAA,SAAOM,GAAG,YAAYU,UAAU,wBAAuBd,SAAEulC,QAI9EzlC,EAAAA,EAAAA,KAAA,OAAAE,UACIqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QAASk0B,EAAQjsB,QAAQ,WAAWza,UAAU,eAAcd,SAAC,UAGrEF,EAAAA,EAAAA,KAACq1B,GAAAA,EAAY,CAAC9kB,MAAM,SAASiD,QAxM9B,SAACxP,GAAI,IAAAi1C,EACxBj1C,EAAE6Q,iBAIF,IAnCGwxB,EAmCG1mC,EAAO,CACT4mC,mBAAoBlB,aAAM,EAANA,EAAQ/kC,GAC5BuR,QAAS5T,aAAI,EAAJA,EAAMqC,GACfy0B,QAASve,aAAI,EAAJA,EAAMlW,GACfkmC,YAAanB,aAAM,EAANA,EAAQxhC,WACrByiC,yBAA0BjB,aAAM,EAANA,EAAQ90B,MAClClQ,QAASA,EACT64C,kBAAmBhuC,OAAOutC,GAC1BU,kBAAmBd,EACnBe,mBAAwC,QAAtBH,EAAEV,aAAc,EAAdA,EAAgB7sC,YAAI,IAAAutC,EAAAA,EAAI,GAC5CI,gBAAgBhU,aAAM,EAANA,EAAQ+S,iBAAiBG,aAAc,EAAdA,EAAgBS,iBAAiB,GA7C3E3S,EAAa,EAEF,KAAZhmC,IACEgmC,IACAX,EAAgB,gHAGjBL,IACCgB,IACAb,EAAe,mDAIjBH,GAAyB,YAAfA,aAAM,EAANA,EAAQ/kC,MACM,QAAnB+3C,GAAiD,IAArBI,IAC3BpS,IACAuS,EAAmB,+BAGD,OAAnBP,GAA4BE,IAC3BlS,IACAuS,EAAmB,kCAIN,IAAfvS,EAwBFlc,EAASxqB,GAET8O,QAAQC,IAAI,6CAEpB,EAiLgF7O,UAAWiiC,aAM/F,qxEC7OA,SArGuB,SAAHnkC,GAAqB,IAAhBM,EAAIN,EAAJM,KAAMuY,EAAI7Y,EAAJ6Y,KAC8BpX,EAAAC,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAlDmnC,EAAarnC,EAAA,GAAEsnC,EAAgBtnC,EAAA,GACW0e,EAAAze,IAA1BC,EAAAA,EAAAA,UAAS,kBAAiB,GAArC0pC,GAADlrB,EAAA,GAAQA,EAAA,IAKmCG,EAAA5e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,GACgB8e,GADlDH,EAAA,GAAkBA,EAAA,GACgC5e,IAAZC,EAAAA,EAAAA,UAAS,IAAG,IAGag6C,GAHvDl7B,EAAA,GAA0BA,EAAA,GAG6B/e,IAApCk6C,EAAAA,EAAAA,MAAoC,IAA5EC,EAAuBF,EAAA,GAAGz5C,EAASy5C,EAAA,GAATz5C,UAwCnC,OACE0B,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXqB,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CACHiC,QAAQ,WACRjI,QAAS,kBAAMkzB,GAAiB,EAAK,EACrC1lC,UAAU,oEAAmEd,SAAA,EAE7EF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BACbhB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gBAAed,SAAC,4BAGpCF,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQ2oC,EAAezlC,UAAU,yBAAwBd,UAC5DF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wCAAuCd,UAClDqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,0CACVmC,MAAO,CAAEoW,SAAU,SAAUrZ,SAAA,EAE7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iFAAgFd,SAAA,EAC3FqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,QAC7BjC,aAAI,EAAJA,EAAMqC,GAAG,yBAEnBN,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QArDd,WACVkzB,GAAiB,EACrB,EAmD4C1lC,UAAU,GAAEd,UAChCF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAYjBhB,EAAAA,EAAAA,KAACy5C,GAAgC,CAC7Bx7C,KAAMA,EACNuY,KAAMA,EACNsrB,aAAgBjiC,EAChBsqB,SAlEI,SAACxqB,GACzB,IAAM+5C,EAAKtvC,GAAAA,GAAA,GACJzK,GAAI,IACPg5B,WAAY16B,aAAI,EAAJA,EAAM6uB,YAkBtB0sB,EAAwBE,GACvBhsC,SACA3G,MAAK,SAAAiE,GAfY8E,KAAKC,MAAM,CACrBC,OAAO,EACHC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,IAEpBC,KAAK,CACPC,KAAM,UACNC,MAAO,4CAMU,IAAC,OACnB,SAAAvE,GAAG,OAAIyC,QAAQC,IAAI1C,EAAI,GAClC,EA0CwBjO,MAAO,kBAAM2oC,GAAiB,EAAM,EACpCgB,OAAQ,kBAAMsB,EAAQ,kBAAkB,aAQpE,ECtFA,SAduB,SAAHrrC,GAA6B,IAAxBM,EAAIN,EAAJM,KAAM4Y,EAAMlZ,EAANkZ,OAAQL,EAAI7Y,EAAJ6Y,KACrC,OACEjV,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,CACT4X,EAAwB,CAAC7Z,KAAAA,EAAM4Y,OAAAA,EAAQL,KAAAA,MAAUxW,EAAAA,EAAAA,KAAC43C,GAAuB,CAAC35C,KAAMA,EAAMuY,KAAMA,IAC5FwB,EAA0C,CAAC/Z,KAAAA,EAAM4Y,OAAAA,EAAQL,KAAAA,MACzDjV,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACbF,EAAAA,EAAAA,KAAC25C,GAAkB,CAAC17C,KAAMA,EAAMuY,KAAMA,KACtCxW,EAAAA,EAAAA,KAAC45C,GAAc,CAAC37C,KAAMA,EAAMuY,KAAMA,SAK9C,qiCCdA,IAAMqjC,IAAa96B,EAAAA,EAAAA,OAAK,kBAAM,8BAAsB,IAyCpD,SAvCsB,SAAHphB,GAAiB,IAAXM,EAAIN,EAAJM,KACwCmB,EAAAC,IAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAtDw6C,EAAe16C,EAAA,GAAE26C,EAAkB36C,EAAA,GAEpCrB,EAAQ,WAAH,OAASg8C,GAAmB,EAAM,EAE7C,OACIx4C,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXqB,EAAAA,EAAAA,MAACiY,EAAAA,EAAM,CACHiC,QAAQ,WACRjI,QAAS,kBAAMumC,GAAmB,EAAK,EACvC/4C,UAAU,uFAAsFd,SAAA,EAEhGF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,sBACbhB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gBAAed,SAAC,eAGpCF,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQg8C,EAAiB94C,UAAU,yBAAwBd,UAC9DF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wCAAuCd,UAClDqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,6DAA4Dd,SAAA,EAEtEqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iFAAgFd,SAAA,EAC3FqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,QAC7BjC,aAAI,EAAJA,EAAMqC,GAAG,gBAEnBN,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QAASzV,EAAOiD,UAAU,GAAEd,UAChCF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAGrBhB,EAAAA,EAAAA,KAACkgB,EAAAA,SAAQ,CAACjB,UAAUjf,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,wDAAuDd,UAACF,EAAAA,EAAAA,KAAC4nB,GAAM,MAAU1nB,UACxGF,EAAAA,EAAAA,KAAC65C,GAAU,CAAC57C,KAAMA,EAAMF,MAAOA,eAO3D,qiCCyHA,SA/ImB,SAAHJ,GAAyB,IAAAoP,EAAnB9O,EAAIN,EAAJM,KAAM4Y,EAAMlZ,EAANkZ,OAClBC,EAAa,IAAIhK,EAAAA,EAAW,QAAPC,EAACC,cAAM,IAAAD,GAAS,QAATA,EAANA,EAAQE,eAAO,IAAAF,OAAA,EAAfA,EAAiB1K,MACY8Q,EAAA9T,GAArB+T,EAAAA,UAAe,GAAM,GAAlDy/B,EAAU1/B,EAAA,GAAE2/B,EAAa3/B,EAAA,GACxB6mC,GAAaC,EAAAA,GAAAA,KAAbD,SAGmEtjB,EAAAr3B,IAA/Bs3B,EAAAA,EAAAA,MAA+B,GAE3EujB,GAFwBxjB,EAAA,GAAcA,EAAA,GAAV92B,YAE0Du6C,EAAAA,EAAAA,IAAiCl8C,aAAI,EAAJA,EAAMqC,GAAI,CAAC8Z,MAAOnc,EAAKqC,MAA/H85C,EAA+BF,EAArCv6C,KAAkD06C,EAAsBH,EAAjCr6C,UAC1Cy6C,EAA+Br8C,IAASA,UAAAA,EAAMqxB,WAAyD,sCAA7C8qB,aAA+B,EAA/BA,EAAiCp2B,UAuBtF/lB,EAAKqxB,UAAYrxB,SAAAA,EAAM2xB,kBAAoB3xB,SAAAA,EAAMs8C,aAE5D,OACIh5C,EAAAA,EAAAA,MAAA,OACIP,UAAU,yDACVmC,MAAO,CAAEkT,IAAK,QAASnW,SAAA,CAGtB0W,EAAqB,CAAE3Y,KAAAA,EAAM4Y,OAAAA,EAAQC,WAAAA,KAClC9W,EAAAA,EAAAA,KAACw6C,GAAY,CACTv8C,KAAMA,EACN40C,WAAYA,EACZC,cAAeA,EACft8B,KAAMM,IAEV,MACF+7B,IAAewH,GACjBC,GAAgC/iC,EAAgC,CAAEtZ,KAAAA,EAAM4Y,OAAAA,EAAQC,WAAAA,KAC5E9W,EAAAA,EAAAA,KAACy6C,GAAc,CAACx8C,KAAMA,EAAMuY,KAAMM,IAClC,KAIHU,EAAwB,CAAEvZ,KAAAA,EAAM4Y,OAAAA,EAAQC,WAAAA,KACrC9W,EAAAA,EAAAA,KAAC06C,GAAW,CAACz8C,KAAMA,EAAM4Y,OAAQA,EAAQL,KAAMM,IAC/C,KAEHY,EAAsB,CAAEzZ,KAAAA,EAAM4Y,OAAAA,EAAQC,WAAAA,KACnC9W,EAAAA,EAAAA,KAAC26C,GAAe,CAAC18C,KAAMA,EAAMuY,KAAMM,IACnC,KAGHc,EAAyB,CAAE3Z,KAAAA,EAAM4Y,OAAAA,EAAQC,WAAAA,MACtC9W,EAAAA,EAAAA,KAAC46C,GAAmB,CAChB38C,KAAMA,EACN4Y,OAAQA,EACRL,KAAMM,KAId9W,EAAAA,EAAAA,KAAC66C,GAAc,CAAC58C,KAAMA,EAAM4Y,OAAQA,EAAQL,KAAMM,IAGhDhV,IAAAA,SAAW,CAAC,EAAG,EAAG,IAAKgV,aAAU,EAAVA,EAAYL,cAAgBujC,IACjDh6C,EAAAA,EAAAA,KAAC86C,GAAsB,KAM3Bv5C,EAAAA,EAAAA,MAAA,OAAK4B,MAAO,CAAC43C,QAAQ,cAAcjjB,WAAW,OAAOzhB,IAAI,UAAUnW,SAAA,CAG9D4B,IAAAA,SAAW,CAAC,EAAG,EAAG,GAAIgV,aAAU,EAAVA,EAAYL,gBAAiBxY,SAAAA,EAAMqxB,aAActvB,EAAAA,EAAAA,KAACmrC,GAAsB,IAI9FrpC,IAAAA,SAAW,CAAC,EAAG,EAAG,EAAG,IAAKgV,aAAU,EAAVA,EAAYL,eACnCzW,EAAAA,EAAAA,KAACg7C,GAAa,CAAC/8C,KAAMA,SAmDzC,EChIA,SAhCiB,SAAHN,GAAc,IAAT+Q,EAAG/Q,EAAH+Q,IACTrM,EAAOqM,SAAAA,EAAKrM,KAAO,IAAIyK,EAAAA,EAAK4B,EAAIrM,MAAQ,KAC9C,OACId,EAAAA,EAAAA,MAAA,MAAIP,UAAU,aAAYd,SAAA,EACtBqB,EAAAA,EAAAA,MAAA,MAAIP,UAAU,gCAA+Bd,SAAA,EACzCF,EAAAA,EAAAA,KAAA,OAAKuC,IAAKF,aAAI,EAAJA,EAAMoiB,YAAajiB,IAAKH,aAAI,EAAJA,EAAMqiB,aACxC1kB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,OAAMd,SAAEmC,aAAI,EAAJA,EAAMqiB,gBAGlCnjB,EAAAA,EAAAA,MAAA,MAAIP,UAAU,kCAAiCd,SAAA,CAC1C0V,IAAMlH,aAAG,EAAHA,EAAKusC,YAAYnlC,OAAO,gBAAgB,KAAC9V,EAAAA,EAAAA,KAAA,SAC/C4V,IAAMlH,aAAG,EAAHA,EAAKusC,YAAYnlC,OAAO,eAGnC9V,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,sDAAqDd,SAC9DwO,SAAAA,EAAKwsC,UAAW35C,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,CACZ0V,IAAMlH,aAAG,EAAHA,EAAKwsC,UAAUplC,OAAO,gBAAgB,KAAC9V,EAAAA,EAAAA,KAAA,SAC7C4V,IAAMlH,aAAG,EAAHA,EAAKwsC,UAAUplC,OAAO,eAC3B9V,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,gCAA+Bd,SAAC,cAG1DF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,4BAA2Bd,SACpCwO,aAAG,EAAHA,EAAKkiB,QAGV5wB,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,mCAAkCd,SAC3CwO,aAAG,EAAHA,EAAKysC,iBAItB,kBClBMnM,GAAQ,SAAHrxC,GAAe,IAAVgC,EAAIhC,EAAJgC,KACZ,OACI4B,EAAAA,EAAAA,MAAA,SAAOP,UAAU,sBAAqBd,SAAA,EAClCF,EAAAA,EAAAA,KAAA,SAAOgB,UAAU,UAASd,UACtBqB,EAAAA,EAAAA,MAAA,MAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,uBAIZF,EAAAA,EAAAA,KAAA,SAAOgB,UAAU,UAASd,SACrBP,EACKA,EAAKoD,KAAI,SAAC2L,GAAG,OACX1O,EAAAA,EAAAA,KAACswB,GAAQ,CAAc5hB,IAAKA,GAAbA,EAAIpO,GAAgB,IAErC,SAItB,EAGMqpB,GAAO,SAAH1a,GAAyB,IAApBP,EAAGO,EAAHP,IAAK1N,EAASiO,EAATjO,UACVqB,EAAO,IAAIyK,EAAAA,EAAK4B,EAAIrM,MAC1B,OACId,EAAAA,EAAAA,MAAA,OAAKP,UAAS,iBAAAtD,OAAmBsD,GAAYd,SAAA,EACzCqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA4BmC,MAAO,CAACkT,IAAI,QAAQnW,SAAA,EAC3DF,EAAAA,EAAAA,KAACo7C,GAAAA,EAAM,CACH74C,IAAKF,aAAI,EAAJA,EAAMoiB,YACX5b,KAAMxG,aAAI,EAAJA,EAAMqiB,UACZliB,IAAKH,aAAI,EAAJA,EAAMqiB,UACXljB,KAAK,YAETxB,EAAAA,EAAAA,KAAA,MAAAE,SAAKmC,aAAI,EAAJA,EAAMqiB,gBAEfnjB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,oCAAoCmC,MAAO,CAACkT,IAAK,OAAOnW,SAAA,EACnEqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EAAMF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,mBAAkBd,SAAC,UAAY,IAAEwO,aAAG,EAAHA,EAAKkiB,SAC5DrvB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EAAMF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,mBAAkBd,SAAC,kBAAoB,IAAEwO,aAAG,EAAHA,EAAKysC,iBACpE55C,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EAAMF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,mBAAkBd,SAAC,gBAAkB,IAAE0V,IAAMlH,aAAG,EAAHA,EAAKusC,YAAYnlC,OAAO,wBAAwB,QACnHvU,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EAAMF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,mBAAkBd,SAAC,cAAgB,IAAE0V,IAAMlH,aAAG,EAAHA,EAAKwsC,UAAUplC,OAAO,wBAAwB,YAI/H,EAEMulC,GAAW,SAAH3rC,GAAe,IAAV/P,EAAI+P,EAAJ/P,KACf,OACIK,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,qBAAqBmC,MAAO,CAACkT,IAAK,QAAQnW,SACpD4B,IAAAA,IAAMnC,GAAM,SAAC+O,GAAG,OACT1O,EAAAA,EAAAA,KAAC2pB,GAAI,CAACjb,IAAKA,EAAkB1N,UAAU,cAAlB0N,EAAIpO,GAA6B,KAI1E,EAkDA,SA/CqB,SAAHqX,GAA6C,IAAvC7Z,EAAM6Z,EAAN7Z,OAAQC,EAAK4Z,EAAL5Z,MAAOwe,EAAM5E,EAAN4E,OAAM++B,EAAA3jC,EAAEhY,KAAAA,OAAI,IAAA27C,EAAG,GAAEA,EAC9C/mC,EAAMnB,EAAAA,OAAa,MACX0O,GAAe3iB,EAAAA,GAAAA,KAAtBD,OACPuV,EAAAA,EAAAA,GAAaF,EAAKxW,GAIlB,IAAMye,EAAU,WACZ,OACIjb,EAAAA,EAAAA,MAAA,OAAKgT,IAAKA,EAAKvT,UAAU,iCAAgCd,SAAA,EACrDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wCAAuCd,SAAA,EAClDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACH,aAAW,cACXxY,UAAU,eACVwS,QAASzV,EAAMmC,UAEfF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAIrBhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,sCAAqCd,UAChDF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,SAChB4hB,EAAc,KAAM9hB,EAAAA,EAAAA,KAACgvC,GAAK,CAACrvC,KAAMA,KAAUK,EAAAA,EAAAA,KAACq7C,GAAQ,CAAC17C,KAAMA,UAKhF,EAIA,OAAGmiB,EAAc,MAET9hB,EAAAA,EAAAA,KAAC2c,GAAW,CAAC7e,OAAQA,EAAQD,UAAW0e,EAAOrc,UAC3CF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SAAEsc,SAKrBxc,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CAAChX,OAAQA,EAAOoC,UAClBF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SAAEsc,OAKjC,EC7FA,SAxB0B,SAAH7e,GAErB,2EAFgC49C,CAAA59C,IAG9B4D,EAAAA,EAAAA,MAAA,OAAKP,UAAU,6EAA6EmC,MAAO,CAACkT,IAAK,OAAQxX,OAAQ,QAAQqB,SAAA,EAC7HqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,4BAA2Bd,SAAA,EACtCF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,OAAOL,OAAO,OAAO2C,KAAK,SAASR,UAAU,UAChEhB,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,4BAA2Bd,UACvCF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACpX,MAAM,gBAI3Bc,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACzX,OAAO,OAAOK,MAAM,YAErCc,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACzX,OAAO,OAAOK,MAAM,YAErCc,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAACsW,EAAAA,EAAW,CAACzX,OAAO,OAAOK,MAAM,aAI7C,qiCCxBA,IAAMs8C,IAAcz8B,EAAAA,EAAAA,OAAK,kBAAM,6BAAuB,IAuHtD,SA1GuB,WACrB,IAAAS,GAAyBrL,EAAAA,EAAAA,KAAY,SAAAtO,GAAC,OAAIA,EAAEuO,OAAO,IAA5CnW,EAAIuhB,EAAJvhB,KAAMw9C,EAAQj8B,EAARi8B,SACmDtoC,EAAA9T,GAApB+T,EAAAA,SAAe,MAAK,GAAzD8K,EAAc/K,EAAA,GAAEgL,EAAiBhL,EAAA,GACS0H,EAAAxb,GAArB+T,EAAAA,UAAe,GAAM,GAA1CtV,EAAM+c,EAAA,GAAEjB,EAASiB,EAAA,GAClB6E,GAAWC,EAAAA,EAAAA,MAObzS,EAAA7N,IAFqC8N,EAAAA,EAAAA,IAA2B,GAAI,CACpEiN,KAAMqhC,aAAQ,EAARA,EAAUhzC,SAChB,GAFK2E,EAAcF,EAAA,GAAGtN,EAAUsN,EAAA,GAAVtN,WAKxBwT,EAAAA,WAAgB,WACXnV,GAAQA,EAAKqC,IACd8M,EAAe,IAAD1P,OAAKO,aAAI,EAAJA,EAAMqC,GAAE,6BAC1BoN,SACA3G,MAAK,SAAAiE,GACDA,GACD0U,GAASg8B,EAAAA,EAAAA,IAAc1wC,GAE3B,IAAE,OACK,SAAAgB,GACLyC,QAAQC,IAAI1C,EACd,GAEJ,GAAG,CAAC/N,IAON,OACEsD,EAAAA,EAAAA,MAAA,OAAKP,UAAU,2BACfuT,IAAK4J,EAAmBhb,MAAO,CAAC8V,OAAQnb,EAAS,KAAO,IAAIoC,SAAA,EACxDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,6FAA4Fd,SAAA,EAC3GF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,OAAMd,SAAC,iBACtBN,IACOI,EAAAA,EAAAA,KAAA,OACIgB,UAAU,wCACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,OACR0c,OAAQ,kCACRC,iBAAkB,oBAQjC1Z,IAAAA,KAAO25C,GAAY,IAClBz7C,EAAAA,EAAAA,KAAA,UACI,aAAW,yBACXgB,UAAU,2BACVwS,QA5BG,WAAH,OAASoG,GAAW9b,EAAO,EA6B3BqF,MAAO,CAAC8V,OAAQnb,EAAS,IAAM,IAAIoC,UAEnCF,EAAAA,EAAAA,KAAA,KACEgB,UAAS,8BAAAtD,OAAiCI,EAAS,QAAU,QAC7DqF,MAAO,CAACC,MAAO,gBAMrBpD,EAAAA,EAAAA,KAAC27C,GAAY,CACX79C,OAAQA,EACRC,MAxCI,WAAH,OAAS6b,GAAU,EAAM,EAyC1B2C,OAAQ2B,EACRve,KAAM87C,KAIVz7C,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bd,SACtC4B,IAAAA,KAAO25C,GAAY,EACnB35C,IAAAA,IAAM25C,GAAU,SAAA/sC,GAAG,OACjB1O,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACbF,EAAAA,EAAAA,KAACkgB,EAAAA,SAAQ,CAACjB,UAAUjf,EAAAA,EAAAA,KAAC47C,GAAiB,IAAI17C,UACxCF,EAAAA,EAAAA,KAACw7C,GAAW,CAAC9sC,IAAKA,OAFDA,EAAIpO,GAIR,KAEnBN,EAAAA,EAAAA,KAAA,OACIgB,UAAU,mDACVmC,MAAO,CACHC,MAAO,UACPsY,SAAU,OACVQ,UAAW,SACXrd,OAAQ,OACRK,MAAO,QACTgB,SACL,uCAQb,yPCrHA6D,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAhB,EAAAkB,OAAAC,UAAAC,EAAApB,EAAAqB,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAN,EAAAD,EAAAhB,GAAAiB,EAAAD,GAAAhB,EAAArC,KAAA,EAAA2B,EAAA,mBAAAkC,OAAAA,OAAA,GAAAC,EAAAnC,EAAAoC,UAAA,aAAAC,EAAArC,EAAAsC,eAAA,kBAAAC,EAAAvC,EAAAwC,aAAA,yBAAAC,EAAAd,EAAAD,EAAAhB,GAAA,OAAAkB,OAAAK,eAAAN,EAAAD,EAAA,CAAArD,MAAAqC,EAAAgC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,EAAA,KAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAhB,GAAA,OAAAiB,EAAAD,GAAAhB,CAAA,WAAAmC,EAAAlB,EAAAD,EAAAhB,EAAAoB,GAAA,IAAA9B,EAAA0B,GAAAA,EAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAA/C,EAAA6B,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAE,EAAAG,EAAA,WAAA9D,MAAA4E,EAAAtB,EAAAjB,EAAA2B,KAAAF,CAAA,UAAAe,EAAAvB,EAAAD,EAAAhB,GAAA,WAAAxB,KAAA,SAAAiE,IAAAxB,EAAAyB,KAAA1B,EAAAhB,GAAA,OAAAiB,GAAA,OAAAzC,KAAA,QAAAiE,IAAAxB,EAAA,EAAAD,EAAAmB,KAAAA,EAAA,IAAA1H,EAAA,iBAAAkI,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAApD,GAAAoB,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAM,EAAAtC,GAAA,0BAAAuC,SAAA,SAAAxC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAwC,QAAAzC,EAAAC,EAAA,gBAAAyC,EAAAzC,EAAAD,GAAA,SAAA2C,EAAA3D,EAAAsB,EAAAhC,EAAAmC,GAAA,IAAAE,EAAAa,EAAAvB,EAAAjB,GAAAiB,EAAAK,GAAA,aAAAK,EAAAnD,KAAA,KAAAqD,EAAAF,EAAAc,IAAAhI,EAAAoH,EAAAlE,MAAA,OAAAlD,GAAA,UAAAmJ,GAAAnJ,IAAA2G,EAAAsB,KAAAjI,EAAA,WAAAuG,EAAA6C,QAAApJ,EAAAqJ,SAAAC,MAAA,SAAA9C,GAAA0C,EAAA,OAAA1C,EAAA3B,EAAAmC,EAAA,aAAAR,GAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAT,EAAA6C,QAAApJ,GAAAsJ,MAAA,SAAA9C,GAAAY,EAAAlE,MAAAsD,EAAA3B,EAAAuC,EAAA,aAAAZ,GAAA,OAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAAzC,EAAAsB,EAAA,gBAAA3D,MAAA,SAAAsD,EAAAG,GAAA,SAAA4C,IAAA,WAAAhD,GAAA,SAAAA,EAAAhB,GAAA2D,EAAA1C,EAAAG,EAAAJ,EAAAhB,EAAA,WAAAA,EAAAA,EAAAA,EAAA+D,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAvB,EAAAhB,EAAAoB,GAAA,IAAAE,EAAA7G,EAAA,gBAAA6E,EAAAmC,GAAA,GAAAH,IAAAsB,EAAA,UAAAqB,MAAA,mCAAA3C,IAAAuB,EAAA,cAAAvD,EAAA,MAAAmC,EAAA,OAAA9D,MAAAsD,EAAAiD,MAAA,OAAA9C,EAAA+C,OAAA7E,EAAA8B,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAAgD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAT,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAA7G,EAAA,MAAA6G,EAAAuB,EAAAzB,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAsB,EAAA,IAAAK,EAAAT,EAAAxB,EAAAhB,EAAAoB,GAAA,cAAA6B,EAAAzE,KAAA,IAAA8C,EAAAF,EAAA8C,KAAArB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAnF,MAAAsF,EAAAR,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAjB,EAAAzE,OAAA8C,EAAAuB,EAAAzB,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAQ,EAAAR,IAAA,YAAA4B,EAAArD,EAAAhB,GAAA,IAAAoB,EAAApB,EAAAmE,OAAA7C,EAAAN,EAAAU,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAjB,EAAAoE,SAAA,eAAAhD,GAAAJ,EAAAU,SAAA,SAAA1B,EAAAmE,OAAA,SAAAnE,EAAAyC,IAAAxB,EAAAoD,EAAArD,EAAAhB,GAAA,UAAAA,EAAAmE,SAAA,WAAA/C,IAAApB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA0B,EAAA,IAAAxD,EAAAkD,EAAAlB,EAAAN,EAAAU,SAAA1B,EAAAyC,KAAA,aAAAnD,EAAAd,KAAA,OAAAwB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAAnD,EAAAmD,IAAAzC,EAAAoE,SAAA,KAAAtB,EAAA,IAAArB,EAAAnC,EAAAmD,IAAA,OAAAhB,EAAAA,EAAAyC,MAAAlE,EAAAgB,EAAA2D,YAAAlD,EAAA9D,MAAAqC,EAAA4E,KAAA5D,EAAA6D,QAAA,WAAA7E,EAAAmE,SAAAnE,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,GAAAjB,EAAAoE,SAAA,KAAAtB,GAAArB,GAAAzB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAA1E,EAAAoE,SAAA,KAAAtB,EAAA,UAAAgC,EAAA7D,GAAA,IAAAD,EAAA,CAAA+D,OAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,SAAA/D,EAAA,SAAAA,IAAAD,EAAAiE,WAAAhE,EAAA,GAAAD,EAAAkE,SAAAjE,EAAA,SAAAkE,WAAAC,KAAApE,EAAA,UAAAqE,EAAApE,GAAA,IAAAD,EAAAC,EAAAqE,YAAA,GAAAtE,EAAAxC,KAAA,gBAAAwC,EAAAyB,IAAAxB,EAAAqE,WAAAtE,CAAA,UAAAsB,EAAArB,GAAA,KAAAkE,WAAA,EAAAJ,OAAA,SAAA9D,EAAAuC,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAhB,EAAAgB,EAAAS,GAAA,GAAAzB,EAAA,OAAAA,EAAA0C,KAAA1B,GAAA,sBAAAA,EAAA4D,KAAA,OAAA5D,EAAA,IAAAwE,MAAAxE,EAAAyE,QAAA,KAAAnE,GAAA,EAAAhC,EAAA,SAAAsF,IAAA,OAAAtD,EAAAN,EAAAyE,QAAA,GAAArE,EAAAsB,KAAA1B,EAAAM,GAAA,OAAAsD,EAAAjH,MAAAqD,EAAAM,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,SAAAtF,EAAAsF,KAAAtF,CAAA,YAAAoF,UAAAd,GAAA5C,GAAA,2BAAA+B,EAAA5B,UAAA6B,EAAA1B,EAAAgC,EAAA,eAAA3F,MAAAqF,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAArF,MAAAoF,EAAAd,cAAA,IAAAc,EAAA2C,YAAA3D,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAA2E,oBAAA,SAAA1E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA2E,YAAA,QAAA5E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAA0E,aAAA1E,EAAA6E,MAAA,EAAA7E,EAAA8E,KAAA,SAAA7E,GAAA,OAAAC,OAAA6E,eAAA7E,OAAA6E,eAAA9E,EAAA+B,IAAA/B,EAAA+E,UAAAhD,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAiB,GAAArC,CAAA,EAAAD,EAAAiF,MAAA,SAAAhF,GAAA,OAAA6C,QAAA7C,EAAA,EAAAsC,EAAAG,EAAAvC,WAAAY,EAAA2B,EAAAvC,UAAAQ,GAAA,0BAAAX,EAAA0C,cAAAA,EAAA1C,EAAAkF,MAAA,SAAAjF,EAAAjB,EAAAoB,EAAAE,EAAAhC,QAAA,IAAAA,IAAAA,EAAA6G,SAAA,IAAA1E,EAAA,IAAAiC,EAAAvB,EAAAlB,EAAAjB,EAAAoB,EAAAE,GAAAhC,GAAA,OAAA0B,EAAA2E,oBAAA3F,GAAAyB,EAAAA,EAAAmD,OAAAb,MAAA,SAAA9C,GAAA,OAAAA,EAAAiD,KAAAjD,EAAAtD,MAAA8D,EAAAmD,MAAA,KAAArB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAAtC,EAAAoF,KAAA,SAAAnF,GAAA,IAAAD,EAAAE,OAAAD,GAAAjB,EAAA,WAAAoB,KAAAJ,EAAAhB,EAAAoF,KAAAhE,GAAA,OAAApB,EAAAqG,UAAA,SAAAzB,IAAA,KAAA5E,EAAAyF,QAAA,KAAAxE,EAAAjB,EAAAsG,MAAA,GAAArF,KAAAD,EAAA,OAAA4D,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA5D,EAAAqC,OAAAA,EAAAf,EAAAnB,UAAA,CAAAyE,YAAAtD,EAAAiD,MAAA,SAAAvE,GAAA,QAAAuF,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAAtD,EAAA,KAAAiD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAxB,EAAA,KAAAkE,WAAA3B,QAAA6B,IAAArE,EAAA,QAAAhB,KAAA,WAAAA,EAAAwG,OAAA,IAAApF,EAAAsB,KAAA,KAAA1C,KAAAwF,OAAAxF,EAAAyG,MAAA,WAAAzG,GAAAiB,EAAA,EAAAyF,KAAA,gBAAAxC,MAAA,MAAAjD,EAAA,KAAAkE,WAAA,GAAAG,WAAA,aAAArE,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,YAAAkE,IAAA,EAAAnC,kBAAA,SAAAxD,GAAA,QAAAkD,KAAA,MAAAlD,EAAA,IAAAhB,EAAA,cAAA4G,EAAAxF,EAAAE,GAAA,OAAAG,EAAAjD,KAAA,QAAAiD,EAAAgB,IAAAzB,EAAAhB,EAAA4E,KAAAxD,EAAAE,IAAAtB,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,KAAAK,CAAA,SAAAA,EAAA,KAAA6D,WAAAM,OAAA,EAAAnE,GAAA,IAAAA,EAAA,KAAAhC,EAAA,KAAA6F,WAAA7D,GAAAG,EAAAnC,EAAAgG,WAAA,YAAAhG,EAAAyF,OAAA,OAAA6B,EAAA,UAAAtH,EAAAyF,QAAA,KAAAwB,KAAA,KAAA5E,EAAAP,EAAAsB,KAAApD,EAAA,YAAAuC,EAAAT,EAAAsB,KAAApD,EAAA,iBAAAqC,GAAAE,EAAA,SAAA0E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,WAAAuB,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,SAAAtD,GAAA,QAAA4E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,YAAAnD,EAAA,UAAAoC,MAAA,kDAAAsC,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,KAAAR,OAAA,SAAAxD,EAAAD,GAAA,QAAAhB,EAAA,KAAAmF,WAAAM,OAAA,EAAAzF,GAAA,IAAAA,EAAA,KAAAsB,EAAA,KAAA6D,WAAAnF,GAAA,GAAAsB,EAAAyD,QAAA,KAAAwB,MAAAnF,EAAAsB,KAAApB,EAAA,oBAAAiF,KAAAjF,EAAA2D,WAAA,KAAA3F,EAAAgC,EAAA,OAAAhC,IAAA,UAAA2B,GAAA,aAAAA,IAAA3B,EAAAyF,QAAA/D,GAAAA,GAAA1B,EAAA2F,aAAA3F,EAAA,UAAAmC,EAAAnC,EAAAA,EAAAgG,WAAA,UAAA7D,EAAAjD,KAAAyC,EAAAQ,EAAAgB,IAAAzB,EAAA1B,GAAA,KAAA6E,OAAA,YAAAS,KAAAtF,EAAA2F,WAAAnC,GAAA,KAAA+D,SAAApF,EAAA,EAAAoF,SAAA,SAAA5F,EAAAD,GAAA,aAAAC,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,gBAAAxB,EAAAzC,MAAA,aAAAyC,EAAAzC,KAAA,KAAAoG,KAAA3D,EAAAwB,IAAA,WAAAxB,EAAAzC,MAAA,KAAAmI,KAAA,KAAAlE,IAAAxB,EAAAwB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA3D,EAAAzC,MAAAwC,IAAA,KAAA4D,KAAA5D,GAAA8B,CAAA,EAAAgE,OAAA,SAAA7F,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAAiF,aAAAhE,EAAA,YAAA4F,SAAA7G,EAAAsF,WAAAtF,EAAAkF,UAAAG,EAAArF,GAAA8C,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAA+E,SAAA9D,EAAA,KAAAG,EAAApB,EAAAsF,WAAA,aAAAlE,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAqB,IAAA4C,EAAArF,EAAA,QAAAsB,CAAA,YAAA2C,MAAA,0BAAA8C,cAAA,SAAA/F,EAAAhB,EAAAoB,GAAA,YAAAgD,SAAA,CAAA1C,SAAA2B,EAAArC,GAAA2D,WAAA3E,EAAA6E,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAxB,GAAA6B,CAAA,GAAA9B,CAAA,UAAAnB,GAAAoJ,GAAA,gBAAAA,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAK,GAAAL,EAAA,CAAAonB,CAAApnB,IAAA,SAAAqnB,GAAA,uBAAA9uB,QAAA,MAAA8uB,EAAA9uB,OAAAE,WAAA,MAAA4uB,EAAA,qBAAAxwB,MAAA0J,KAAA8mB,EAAA,CAAAC,CAAAtnB,IAAAS,GAAAT,IAAA,qBAAAvE,UAAA,wIAAA8rB,EAAA,UAAAnoB,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAAf,EAAAjF,GAAA,QAAAiG,EAAAJ,EAAAZ,GAAAjF,GAAA9E,EAAA+K,EAAA/K,KAAA,OAAAgL,GAAA,YAAAJ,EAAAI,EAAA,CAAAD,EAAAxE,KAAAL,EAAAlG,GAAAwI,QAAAtC,QAAAlG,GAAAoG,KAAAyE,EAAAC,EAAA,UAAApM,GAAA4M,EAAA3J,GAAA,gBAAA2J,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAA,CAAA,CAAAE,CAAAF,IAAA,SAAAjJ,EAAA2C,GAAA,IAAA1B,EAAA,MAAAjB,EAAA,yBAAAwB,QAAAxB,EAAAwB,OAAAE,WAAA1B,EAAA,uBAAAiB,EAAA,KAAAD,EAAAI,EAAA9B,EAAAuC,EAAAJ,EAAA,GAAAmB,GAAA,EAAAtB,GAAA,SAAAhC,GAAA2B,EAAAA,EAAAyB,KAAA1C,IAAA4E,KAAA,IAAAjC,EAAA,IAAAzB,OAAAD,KAAAA,EAAA,OAAA2B,GAAA,cAAAA,GAAA5B,EAAA1B,EAAAoD,KAAAzB,IAAAiD,QAAAzC,EAAA2D,KAAApE,EAAArD,OAAA8D,EAAAgE,SAAA9C,GAAAC,GAAA,UAAA5C,GAAAsB,GAAA,EAAAF,EAAApB,CAAA,iBAAA4C,GAAA,MAAA3B,EAAA,SAAAY,EAAAZ,EAAA,SAAAC,OAAAW,KAAAA,GAAA,kBAAAP,EAAA,MAAAF,CAAA,SAAAK,CAAA,EAAA2H,CAAAH,EAAA3J,IAAAoK,GAAAT,EAAA3J,IAAA,qBAAAoF,UAAA,6IAAAiF,EAAA,UAAAD,GAAApI,EAAA+H,GAAA,GAAA/H,EAAA,qBAAAA,EAAA,OAAAgI,GAAAhI,EAAA+H,GAAA,IAAAjI,EAAAF,OAAAC,UAAAoI,SAAA7G,KAAApB,GAAAmF,MAAA,uBAAArF,GAAAE,EAAAsE,cAAAxE,EAAAE,EAAAsE,YAAAC,MAAA,QAAAzE,GAAA,QAAAA,EAAAtB,MAAA0J,KAAAlI,GAAA,cAAAF,GAAA,2CAAAqI,KAAArI,GAAAkI,GAAAhI,EAAA+H,QAAA,YAAAC,GAAAL,EAAApK,IAAA,MAAAA,GAAAA,EAAAoK,EAAAxD,UAAA5G,EAAAoK,EAAAxD,QAAA,QAAAnG,EAAA,EAAAsK,EAAA,IAAA9J,MAAAjB,GAAAS,EAAAT,EAAAS,IAAAsK,EAAAtK,GAAA2J,EAAA3J,GAAA,OAAAsK,CAAA,CAmCA,IAAMivC,GAAsBzoC,EAAAA,cAAoB,CAAC,GACpCqmB,GAAwB,WACjC,IAAQqiB,EAAmB1oC,EAAAA,WAAiByoC,IAApCC,eACR,OAAO,WACHA,GAAe,SAACvyC,GAAI,OAAMA,CAAI,GAClC,CACJ,EAiiCA,SA/hC8B,WAAM,IAAAwD,EAAAuhB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA8sB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA74C,EAAA84C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAztB,EAClBiQ,GAASjrB,EAAAA,EAAAA,KAAY,SAACtO,GAAC,OAAKA,EAAEuO,OAAO,IAA3CnW,KACmDkV,EAAA9T,GAArB+T,EAAAA,UAAe,GAAM,GAApDomB,EAAWrmB,EAAA,GAAE2oC,EAAc3oC,EAAA,GAC1B0pC,GAAeC,EAAAA,EAAAA,KAAfD,WACFn9B,GAAWC,EAAAA,EAAAA,MACXwH,IAASloB,EAAAA,EAAAA,MAM0CiO,GAAA7N,IAArD8N,EAAAA,EAAAA,IAA2B,CAAEiN,OAAO+M,UAAAA,GAAQhpB,UAAS,GAFrDiP,GAAcF,GAAA,GAAAiuB,GAAAjuB,GAAA,GACA6vC,GAAc5hB,GAA1Bv7B,WAAuCo9C,GAAa7hB,GAAxBt7B,UAIpBo9C,IAAeC,EAAAA,EAAAA,IAAsB/1B,cAAM,EAANA,GAAQhpB,QAAnDwB,KAM+Bw9C,GAAA99C,IAAnC+9C,EAAAA,EAAAA,MAAmC,GAFnCC,GAAaF,GAAA,GAAAG,GAAAH,GAAA,GACCI,GAAoBD,GAAhC19C,WAA6C49C,GAAmBF,GAA9Bz9C,UAGlC5B,GAAO,IAAIw0B,EAAAA,GAAW2M,GACtBtoB,GAAa,IAAIhK,EAAAA,EAAW,QAAPC,EAACC,cAAM,IAAAD,GAAS,QAATA,EAANA,EAAQE,eAAO,IAAAF,OAAA,EAAfA,EAAiB1K,MAEiBwY,GAAAxb,GAAlB+T,EAAAA,SAAe,CAAC,GAAE,GAAvDqqC,GAAc5iC,GAAA,GAAE6iC,GAAiB7iC,GAAA,GACYG,GAAA3b,GAAlB+T,EAAAA,SAAe,IAAG,GAA7CuqC,GAAS3iC,GAAA,GAAE4iC,GAAY5iC,GAAA,GACxB7c,GAASF,cAAI,EAAJA,GAAMqC,GAErBmO,QAAQC,IAAI,aAAcivC,IAC1B,IAAcE,IAAgBC,EAAAA,GAAAA,IAA4B3/C,GAAQ,CAC9Dic,MAAOjc,KADHwB,MAGRI,EAAAA,EAAAA,YAAU,WACN29C,GAAkBG,GACtB,GAAG,CAACA,MAgDJ99C,EAAAA,EAAAA,YAAU,WACF09C,IAhDmB,SAACx/C,GACxB,GAAIA,EAAM,KAAA8/C,EAAAC,EACFC,EAAqB,EACnBC,EAAkBjgD,SAA0B,QAAtB8/C,EAAJ9/C,EAAMkgD,4BAAoB,IAAAJ,OAAA,EAA1BA,EAA4BjhC,MAAM,KACpDshC,EAAengD,SAAuB,QAAnB+/C,EAAJ//C,EAAMogD,yBAAiB,IAAAL,OAAA,EAAvBA,EAAyBlhC,MAAM,KAEvB,KAAzB7e,aAAI,EAAJA,EAAMqZ,QAAQ7O,QACVy1C,GAAmBA,EAAgBz1C,QAAU,IAC7Cw1C,GAAqD,GAA/B/6C,SAASg7C,EAAgB,IAC/CD,GAAsB/6C,SACK,KAAvBg7C,EAAgB,GACV,EACAh7C,SAASg7C,EAAgB,MAKnCA,GACAA,EAAgBz1C,QAAU,GAC1B21C,GACAA,EAAa31C,QAAU,IAEvBw1C,GAAqD,GAA/B/6C,SAASg7C,EAAgB,IAC/CD,GAAsB/6C,SACK,KAAvBg7C,EAAgB,GACV,EACAh7C,SAASg7C,EAAgB,KAGnCD,GAAkD,GAA5B/6C,SAASk7C,EAAa,IACxCA,EAAa,KACbH,GAAsB/6C,SACE,KAApBk7C,EAAa,GACP,EACAl7C,SAASk7C,EAAa,OAM5C,IAAM/gD,EAAQC,KAAKC,MAAM0gD,EAAqB,IACxCjR,EAAUiR,EAAqB,GAErCL,GAAa,GAADlgD,OAAIL,EAAK,SAAAK,OAAQsvC,EAAO,SACxC,CACJ,CAIQsR,CAAmBb,GAAex/C,KAE1C,GAAG,CAACw/C,MAEJ19C,EAAAA,EAAAA,YAAU,WApId,IAAA8L,KAqIQ9H,KAAA+E,MAAC,SAAAyE,IAAA,IAAAgxC,EAAA,OAAAx6C,KAAAoB,MAAA,SAAAsI,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA7F,MAAA,OACyB,OAAhB22C,EAAc,CAAC,EAAC9wC,EAAA7F,KAAA,EAEhBwF,GAAe,IAAD1P,OAAKypB,cAAM,EAANA,GAAQhpB,OAAM,qBAClCuP,SACA3G,MACG,SAAAkI,GASM,IARFhR,EAAIgR,EAAJhR,KACA6P,EAAmBmB,EAAnBnB,oBACAF,EAAkBqB,EAAlBrB,mBACAi6B,EAAQ54B,EAAR44B,SACA15B,EAAcc,EAAdd,eACAE,EAASY,EAATZ,UACAE,EAASU,EAATV,UACAiwC,EAAWvvC,EAAXuvC,YAEA,IAAK,IAAM9zC,KAAOzM,EACdsgD,EAAY7zC,GAAOzM,EAAKyM,GAE5B6zC,EAAY1wC,mBACRC,aAAmB,EAAnBA,EAAqBC,UAAW,KACpCwwC,EAAY3wC,mBAAqBA,EACjC2wC,EAAYjnC,QAAUuwB,EACtB0W,EAAYrwC,kBAAoBC,EAChCowC,EAAYnwC,eAAiBC,EAC7BkwC,EAAYjwC,YAAcC,EAC1BgwC,EAAY5wC,UAAS9K,GAAO27C,EAChC,IACH,cAAA/wC,EAAA7F,KAAA,EAICy1C,GACFkB,EAAYngB,WACNmgB,EAAYE,eACZF,EAAYj+C,IAEjBoN,SACA3G,MAAK,SAAA2I,GAAkC,IAA/BgvC,EAAwBhvC,EAAxBgvC,yBACLH,EAAYtwC,yBACRywC,CACR,IAAE,OAQyD,GAA3CnoC,EAJN,IAAIkc,EAAAA,GAAW8rB,GAIuBznC,IAEhC,CAAFrJ,EAAA7F,KAAA,gBAAA6F,EAAAhG,OAAA,SACPo1C,EAAW,CACdtsC,MAAO,gBACPyT,QACI,yFACJ26B,KAAM,OACR,QAGFj/B,GAASk/B,EAAAA,EAAAA,IAAUL,IAAc,yBAAA9wC,EAAA/D,OAAA,GAAA6D,EAAA,IAjMjD,eAAAzB,EAAA,KAAAC,EAAA1B,UAAA,WAAAlB,SAAA,SAAAtC,EAAA0E,GAAA,IAAAD,EAAAO,EAAA1B,MAAA2B,EAAAC,GAAA,SAAAP,EAAA7K,GAAA0K,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,OAAA9K,EAAA,UAAA8K,EAAAO,GAAAX,GAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,QAAAO,EAAA,CAAAR,OAAAT,EAAA,OAoMI,GAAG,CAACyuB,IAEJ,IAAMqlB,GACF9B,IAAkBC,GAAgB,mBAAqB,GAE3D,GACID,IACAC,IACAO,IACAC,GAEA,OAAOx9C,EAAAA,EAAAA,KAAC8+C,EAAAA,EAAO,CAACj/C,WAAW,IAG/B,IAAMk/C,GAAc,IAAIC,EAAAA,GAAY/B,IAEpC,OAAKh/C,IAKD+B,EAAAA,EAAAA,KAAC67C,GAAoBoD,SAAQ,CAACt+C,MAAO,CAAEm7C,eAAAA,GAAiB57C,UACpDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,oCAAmCd,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,UACjBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAS,QAAAtD,OAAUmhD,IAAe3+C,SAAA,EACnCqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,CACK,KACDF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,WAAgB,QAE5BF,EAAAA,EAAAA,KAAA,KAAG4U,KAAI,kBAAAlX,OAAoBO,cAAI,EAAJA,GAAMqC,IAAKJ,SACjCjC,cAAI,EAAJA,GAAMoxB,oBAEVvtB,IAAAA,SACG,CAAC,EAAG,EAAG,EAAG,EAAG,GACbgV,cAAU,EAAVA,GAAYL,eAEZlV,EAAAA,EAAAA,MAAA,QAAMP,UAAU,OAAMd,SAAA,CAAC,KAEnBF,EAAAA,EAAAA,KAAA,KACI4U,KAAI,qBAAAlX,OAAuBO,GAAK6uB,UAAS,cACzC9rB,UAAU,OAAMd,SACnB,kBAEG,aAOpBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAKd,SAAA,CACf68C,IAAkBC,IACfh9C,EAAAA,EAAAA,KAACovB,EAAa,KAEdpvB,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,gCAA+Bd,UAC1CqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,0BAAyBd,SAAA,EACpCF,EAAAA,EAAAA,KAACk/C,GAAU,CACPjhD,KAAMA,GACN4Y,OAAQomC,MAIZj9C,EAAAA,EAAAA,KAAA,OAAAE,UACIqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,0BACVmC,MAAO,CAAEkT,IAAK,QAASnW,SAAA,EAEtBjC,cAAI,EAAJA,GAAMqxB,aACH/tB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CACjC,IAAI,eACQ,QAEjBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,UACnCF,EAAAA,EAAAA,KAAA,KACI4U,KAAI,kBAAAlX,OAAoBO,cAAI,EAAJA,GAAM4vB,cAC9B7sB,UAAU,uBAAsBd,SAG5BjC,cAAI,EAAJA,GAAM+sB,wBAmB1BzpB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,WAC1B,QAEbqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,yBAAwBd,SAAA,EACnCF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,4BAChBhB,EAAAA,EAAAA,KAAA,QAAAE,SACKk/B,SAAAA,EAAM+f,aACD/f,aAAI,EAAJA,EAAMggB,gBACNhgB,aAAI,EAAJA,EAAMigB,iCA0DxB99C,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,gBACrB,QAElBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,yBAAwBd,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OACImD,MAAO,CACHjE,MAAO,OACPL,OAAQ,QACVqB,UAEFF,EAAAA,EAAAA,KAAA,OACIuC,IAAKtE,UAAgB,QAAZqwB,EAAJrwB,GAAMkZ,kBAAU,IAAAmX,OAAA,EAAhBA,EAAkB7J,YACvBjiB,IAAKvE,UAAgB,QAAZswB,EAAJtwB,GAAMkZ,kBAAU,IAAAoX,OAAA,EAAhBA,EAAkB7J,UACvBxlB,MAAM,OACNL,OAAO,OACPmC,UAAU,sBAGlBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBqB,EAAAA,EAAAA,MAAA,QACIP,UAAS,gCAAkCd,SAAA,EAE3CF,EAAAA,EAAAA,KAAA,KACI4U,KAAM3W,UAAgB,QAAZuwB,EAAJvwB,GAAMkZ,kBAAU,IAAAqX,OAAA,EAAhBA,EAAkBe,cACxBvuB,UAAU,kBAAiBd,SAE1BjC,UAAgB,QAAZwwB,EAAJxwB,GAAMkZ,kBAAU,IAAAsX,OAAA,EAAhBA,EAAkB/J,YAEtBxZ,OACGjN,UAAgB,QAAZywB,EAAJzwB,GAAMkZ,kBAAU,IAAAuX,OAAA,EAAhBA,EAAkB/X,WAElBzL,OACI4L,cAAU,EAAVA,GAAYH,WAEhB3W,EAAAA,EAAAA,KAAA,OACIgB,UAAU,4CACVmC,MAAO,CACHuY,SACI,OACJ4jC,WACI,UACNp/C,SACL,iBAMTF,EAAAA,EAAAA,KAAA,QACImD,MAAO,CACHuY,SACI,QACNxb,SAEDjC,UAAgB,QAAZ0wB,EAAJ1wB,GAAMkZ,kBAAU,IAAAwX,OAAA,EAAhBA,EAAkBhK,iCAOnCpjB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,eACtB,QAEjBqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,yBAAwBd,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OACImD,MAAO,CACHjE,MAAO,OACPL,OAAQ,QACVqB,UAEFF,EAAAA,EAAAA,KAAA,OACIuC,IAAKtE,UAAgB,QAAZ2wB,EAAJ3wB,GAAMwZ,kBAAU,IAAAmX,OAAA,EAAhBA,EAAkBnK,YACvBjiB,IAAKvE,UAAgB,QAAZ4wB,EAAJ5wB,GAAMwZ,kBAAU,IAAAoX,OAAA,EAAhBA,EAAkBnK,UACvBxlB,MAAM,OACNL,OAAO,OACPmC,UAAU,sBAGlBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBqB,EAAAA,EAAAA,MAAA,QACIP,UAAS,gCAAkCd,SAAA,EAE3CF,EAAAA,EAAAA,KAAA,KACI4U,KAAM3W,UAAgB,QAAZ6wB,EAAJ7wB,GAAMwZ,kBAAU,IAAAqX,OAAA,EAAhBA,EAAkBS,cACxBvuB,UAAU,kBAAiBd,SAE1BjC,UAAgB,QAAZ8wB,EAAJ9wB,GAAMwZ,kBAAU,IAAAsX,OAAA,EAAhBA,EAAkBrK,YAEtBxZ,OACGjN,UAAgB,QAAZ+wB,EAAJ/wB,GAAMwZ,kBAAU,IAAAuX,OAAA,EAAhBA,EAAkBrY,WAElBzL,OACI4L,cAAU,EAAVA,GAAYH,WAEhB3W,EAAAA,EAAAA,KAAA,OACIgB,UAAU,uCACVmC,MAAO,CACHuY,SACI,QACNxb,SACL,iBAMTF,EAAAA,EAAAA,KAAA,QACImD,MAAO,CACHuY,SACI,QACNxb,SAEDjC,UAAgB,QAAZgxB,EAAJhxB,GAAMwZ,kBAAU,IAAAwX,OAAA,EAAhBA,EAAkBtK,gCAOjC1mB,GAAK+vB,WAiBHhuB,EAAAA,EAAAA,KAAA4C,EAAAA,SAAA,KAhBArB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,kBACnB,QAEpBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,SAQlCjC,GAAKuF,SAASqF,WAQ3BtH,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,aACxB,QAEfqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,yBAAwBd,SAAA,EACnCF,EAAAA,EAAAA,KAAA,QACIgB,UAAU,iBACVmC,MAAO,CACH4R,WACI,0BAGX9W,cAAI,EAAJA,GAAM6qB,eAKb7qB,GAAK+vB,WA+BHhuB,EAAAA,EAAAA,KAAA4C,EAAAA,SAAA,KA9BArB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,cACvB,QAEhBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,UASnCF,EAAAA,EAAAA,KAAA,KACIgV,OAAO,UACPJ,KACI3W,UACoB,QADhB89C,EAAJ99C,GACMs6C,sBAAc,IAAAwD,OAAA,EADpBA,EAEMwD,SACTr/C,SAGGjC,UACoB,QADhB+9C,EAAJ/9C,GACMs6C,sBAAc,IAAAyD,OAAA,EADpBA,EAEMuD,gBAUxBthD,GAAK+vB,WAoBHhuB,EAAAA,EAAAA,KAAA4C,EAAAA,SAAA,KAnBArB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,aACxB,QAEfF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,SAS/BjC,GAAKs6C,eACA1f,cASnB56B,GAAK+vB,WAoBHhuB,EAAAA,EAAAA,KAAA4C,EAAAA,SAAA,KAnBArB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,aACxB,QAEfF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,SAS/BjC,GAAKs6C,eACAljC,cASnBpX,GAAK+vB,WA8BHhuB,EAAAA,EAAAA,KAAA4C,EAAAA,SAAA,KA7BArB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,mBAClB,QAErBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,UAQnCF,EAAAA,EAAAA,KAAA,KACIgV,OAAO,UACPJ,KACI3W,UACoB,QADhBg+C,EAAJh+C,GACMs6C,sBAAc,IAAA0D,OAAA,EADpBA,EAEMuD,QACTt/C,SAGGjC,UACoB,QADhBi+C,EAAJj+C,GACMs6C,sBAAc,IAAA2D,OAAA,EADpBA,EAEMsD,gBAUzBvhD,cAAI,EAAJA,GAAMqxB,aACH/tB,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAA1C,SAAA,EACIqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,kBACnB,QAEpBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,SAEzB,QAFyBi8C,EAClCl+C,UAAc,QAAVqF,EAAJrF,GAAMuF,gBAAQ,IAAAF,OAAA,EAAdA,EACKuF,YAAI,IAAAszC,EAAAA,EAAI,WAKtB56C,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,aACxB,QAEfF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,SACpB,QADoBk8C,EAClCn+C,cAAI,EAAJA,GAAMsF,gBAAQ,IAAA64C,EAAAA,EACX,WAIZ76C,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,aACxB,QAEfF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,SACpB,QADoBm8C,EAClCp+C,cAAI,EAAJA,GAAM47B,gBAAQ,IAAAwiB,EAAAA,EACX,WAIZ96C,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,aACxB,QAEfF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,SACpB,QADoBo8C,EAClCr+C,cAAI,EAAJA,GAAMg8B,gBAAQ,IAAAqiB,EAAAA,EACX,WAIZ/6C,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mBAAkBd,SAAA,EAC7BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBd,SAAA,CAAC,YACzB,QAEdF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yBAAwBd,SAClCjC,UAAAA,GAAMw9B,SACHz7B,EAAAA,EAAAA,KAAA,KACI4U,KACI3W,cAAI,EAAJA,GAAMw9B,QACTv7B,SACJ,cAIDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,qBASlCqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,GAEd4B,IAAAA,QAAU7D,cAAI,EAAJA,GAAMshC,eACdz9B,IAAAA,QAAU7D,cAAI,EAAJA,GAAMwhD,eACjBl+C,EAAAA,EAAAA,MAACuuB,EAAS,CACN9c,YAAY,EACZzC,MAAM,qBAAoBrQ,SAAA,EAIxB4B,IAAAA,QACE7D,cAAI,EAAJA,GAAMshC,eAENv/B,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,0BAAyBd,UACpCqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,YACVmC,MAAO,CACH4R,WACI,WACN7U,SAAA,EAEFF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,OAAMd,SAAC,yBAIrBF,EAAAA,EAAAA,KAAA,UACAuB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAKd,SAAA,EAEhBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2CAA0Cd,UACrDqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,+BAIC,MACPF,EAAAA,EAAAA,KAAA,SAAO,KACTA,EAAAA,EAAAA,KAAA,KACIgV,OAAO,UACPJ,KACI3W,UACiB,QADbs+C,EAAJt+C,GACMshC,mBAAW,IAAAgd,OAAA,EADjBA,EAEMtnC,SACT/U,SACJ,0BAUTF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2CAA0Cd,UACrDqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,sBAGC,MACPF,EAAAA,EAAAA,KAAA,SAAO,IAEL/B,UACiB,QADbu+C,EAAJv+C,GACMshC,mBAAW,IAAAid,OAAA,EADjBA,EAEMtnC,wBAMlBlV,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2CAA0Cd,UACrDqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,qCAKC,MACPF,EAAAA,EAAAA,KAAA,SAAO,KACTA,EAAAA,EAAAA,KAAA,KACIgV,OAAO,UACPJ,KACI3W,UACiB,QADbw+C,EAAJx+C,GACMshC,mBAAW,IAAAkd,OAAA,EADjBA,EAEMtnC,UACTjV,SACJ,oBAKI,UAKbF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2CAA0Cd,UACrDqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,0CAIC,MACPF,EAAAA,EAAAA,KAAA,SAAO,KACR/B,UACgB,QADZy+C,EAAJz+C,GACKshC,mBAAW,IAAAmd,OAAA,EADhBA,EAEKtnC,SACFnX,UACiB,QADb0+C,EAAJ1+C,GACMshC,mBAAW,IAAAod,OAAA,EADjBA,EAEM+C,iBAKlB1/C,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2CAA0Cd,UACrDqB,EAAAA,EAAAA,MAAA,QAAArB,SAAA,EACIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,aAEC,MACPF,EAAAA,EAAAA,KAAA,SAAO,IAEL/B,UACiB,QADb2+C,EAAJ3+C,GACMshC,mBAAW,IAAAqd,OAAA,EADjBA,EAEMvnC,uBAiClCrV,EAAAA,EAAAA,KAACkwB,EAAS,CACNlc,KAAM/V,cAAI,EAAJA,GAAMwhD,WACZvrC,QAASjW,cAAI,EAAJA,GAAMshC,iBAM1Bz9B,IAAAA,KAAO7D,cAAI,EAAJA,GAAMoQ,WAAa,IACvBrO,EAAAA,EAAAA,KAAC8vB,EAAS,CACNvf,MAC2B,QADtB4e,EACDrtB,IAAAA,KAAO7D,cAAI,EAAJA,GAAMoQ,kBAAU,IAAA8gB,OAAA,EAAvBA,EACMa,eAEV/c,aAAa,oDACbC,aAAc,CACV6B,WACI,oBACJ3R,MAAO,QACTlD,SAED4B,IAAAA,IACGA,IAAAA,QAASe,GACF5E,cAAI,EAAJA,GAAMoQ,aAEb,SAACzK,EAAU0R,GAAK,OACZtV,EAAAA,EAAAA,KAACiwB,EAAY,CAET3a,MAAOA,EAAQ,EACfK,KAAMC,IACFhS,EAASiS,WACXC,OACE,gBAEJ1Y,KAAMwY,IACFhS,EAASiS,WACXC,OAAO,WACT9B,MACIpQ,aAAQ,EAARA,EAAUvD,WACVuD,aAAQ,EAARA,EAAU+7C,cACV/7C,aAAQ,EAARA,EAAU2R,WAEd3R,SAAUA,GAfLA,aAAQ,EAARA,EAAUtD,GAgBjB,OAOlBiB,EAAAA,EAAAA,MAACuuB,EAAS,CACN9c,YAAY,EACZzC,MAAM,oBAAmBrQ,SAAA,EAEzBF,EAAAA,EAAAA,KAACkwB,EAAS,CACNlc,KAAM/V,cAAI,EAAJA,GAAM6tB,cAGfhqB,IAAAA,KAAO7D,cAAI,EAAJA,GAAM2hD,aAAe,GACzBr+C,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBqB,EAAAA,EAAAA,MAAA,MAAIP,UAAU,OAAMd,SAAA,CAAC,oBACC,QAEtBF,EAAAA,EAAAA,KAACg2B,EAAAA,EAAY,CAAA91B,SACR4B,IAAAA,IACG7D,cAAI,EAAJA,GAAM2hD,aACN,SAACC,GAAU,OACPA,SAAAA,EAAYC,mBACR9/C,EAAAA,EAAAA,KAACg2B,EAAAA,EAAaC,QAAO,CAIjBC,SACI2pB,aAAU,EAAVA,EAAYC,kBAEhB3pB,cACI,EAEJC,YACI,EAEJC,YACIwpB,aAAU,EAAVA,EAAYE,iBAEhBzpB,WACIupB,aAAU,EAAVA,EAAYE,iBAEhBxpB,SACIz0B,IAAAA,SACI,CACI,MACA,OACA,MACA,MACA,OACA,OAEJ+9C,aAAU,EAAVA,EAAYG,mBAEV,SACA,SAEVC,UAAU,eACVzpB,IACIqpB,aAAU,EAAVA,EAAYG,mBAlCZH,aAAU,EAAVA,EAAYK,iBAqCpB,IAAI,SAIxB,mBAQ5BlgD,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,2BAA0Bd,UACrCqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,qBAAoBd,SAAA,EAE/BqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,2BACVmC,MAAO,CAAEqiB,UAAW,SAAUtlB,SAAA,EAE9BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,0EAAyEd,SAAA,EACpFF,EAAAA,EAAAA,KAAA,QACImD,MAAO,CACH43C,QAAS,QACT77C,MAAO,OACPL,OAAQ,OACR6jC,aAAc,OACd3tB,WAAYkoC,cAAU,EAAVA,GAAYkD,YACxBlgC,YAAa,MACbmgC,UACI,6BAIXrB,GAAYsB,kBACTvpC,cAAU,EAAVA,GAAYL,YACZxY,GAAKqxB,eAIb/tB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAEd,SAAC,kBAClBF,EAAAA,EAAAA,KAAA,OACIgB,UAAS,mDAAAtD,OAAqDmhD,IAAe3+C,SAE5EjC,cAAI,EAAJA,GAAMyxB,aAAa,sBAK5BnuB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAEd,SAAC,gBAClBF,EAAAA,EAAAA,KAAA,OACIgB,UAAS,mDAAAtD,OAAqDmhD,IAAe3+C,SAE5EjC,cAAI,EAAJA,GAAM0xB,WAAW,sBAoC1BpuB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAEd,SAAC,0BAClBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kDAAiDd,UAC1DjC,GAAKqxB,UACDrxB,cAAI,EAAJA,GAAM2xB,kBACN+tB,IAEA,iBAAmB,aAKpC1/C,KAAQA,cAAI,EAAJA,GAAMqC,MAAMN,EAAAA,EAAAA,KAACizB,GAAa,CAACh1B,KAAMA,MACxCA,GAAKqxB,YACHtvB,EAAAA,EAAAA,KAACsgD,GAAc,CAACzpC,OAAQomC,KAE3Bh/C,KAAQA,cAAI,EAAJA,GAAMqC,MACXN,EAAAA,EAAAA,KAACugD,GAAsB,CAACtiD,KAAMA,KAEjCA,KAAQA,cAAI,EAAJA,GAAMqC,MACXN,EAAAA,EAAAA,KAACwgD,GAAc,CACXviD,KAAMA,GACN4B,UAAWk9C,IAAkBC,MAGrCh9C,EAAAA,EAAAA,KAACygD,GAAW,KACZzgD,EAAAA,EAAAA,KAAC0gD,GAAc,IACdziD,KAAQA,cAAI,EAAJA,GAAMqC,MAAMN,EAAAA,EAAAA,KAAC2gD,GAAc,IACnC1iD,KAAQA,cAAI,EAAJA,GAAMqC,MACXN,EAAAA,EAAAA,KAAC4gD,GAAe,CAAC3iD,KAAMA,cAKvC+B,EAAAA,EAAAA,KAAC6gD,EAAAA,EAAO,KACR7gD,EAAAA,EAAAA,KAAC8gD,GAAc,CAAC7iD,KAAMA,GAAMuY,KAAMM,UAh3B5B,IAo3BtB,EAIA,IAAMgqC,GAAiB,SAAHnpC,GAAuB,IAAjBnB,EAAImB,EAAJnB,KAAMvY,EAAI0Z,EAAJ1Z,KAGjBA,EAAKqxB,UAAYrxB,SAAAA,EAAM2xB,kBAAoB3xB,SAAAA,EAAMs8C,aAW5D,OATyB,IAArB/jC,EAAKC,aAGLD,EAAKG,UAAY1Y,EAAKwZ,WAAWnX,IACT,IAAxBrC,EAAK6vB,YAAYxtB,GAMbrC,EAAKqxB,WACEtvB,EAAAA,EAAAA,KAACkqB,GAAgB,CAACjsB,KAAMA,KAExB+B,EAAAA,EAAAA,KAAC8/B,GAAY,CAAC7hC,KAAMA,IAI5B,IACX,0uDClmCA,IAAMub,EAAS,SAAH7b,GASN,IARFuC,EAAQvC,EAARuC,SACaiB,GADLxD,EACR6D,KAAa7D,EACbyD,UAAAA,OAAQ,IAAAD,GAAMA,EAAAJ,EAAApD,EACdqD,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EAAAggD,EAAApjD,EACd8d,QAAAA,OAAO,IAAAslC,EAAC,UAASA,EAAAC,EAAArjD,EACjBkyB,KAAAA,OAAI,IAAAmxB,EAAC,KAAIA,EACTxtC,EAAO7V,EAAP6V,QACGgT,EAAKnlB,EAAA1D,EAAA2D,GAEF2/C,EAAU,qBAAHvjD,OAAwB+d,EAAO,KAAA/d,OAAI0D,EAAW,oBAAqB,GAAE,cAAA1D,OAAamyB,EAAI,KAAAnyB,OAAIsD,GAOvG,OACIhB,EAAAA,EAAAA,KAAA,SAAAoK,EAAAA,EAAA,CACI5I,KAAK,SACLR,UAAWigD,EACX7/C,SAAUA,EACVoS,QAVc,SAACxP,GACnBwP,GAAWA,EAAQxP,EACvB,GASYwiB,GAAK,IAAAtmB,SAERA,IAGb,EAEAsZ,EAAOqN,UAAY,CACf3mB,SAAU4mB,IAAAA,KAAeC,YAAcD,IAAAA,OAAiBC,YAAcD,IAAAA,MAAgBC,WACtF3lB,SAAU0lB,IAAAA,KACV9lB,UAAW8lB,IAAAA,OACXrL,QAASqL,IAAAA,MAAgB,CAAC,UAAW,YAAa,WAAY,UAAW,WACzE+I,KAAM/I,IAAAA,MAAgB,CAAC,KAAM,KAAM,OACnCtT,QAASsT,IAAAA,KACTlS,KAAMkS,IAAAA,QAGV,g1FCpCA,IAAMo6B,EAAkB9tC,EAAAA,gBAGlB+tC,EAAmB,SAAHxjD,GAAmB,IAAduC,EAAQvC,EAARuC,SAC0BiT,EAAA9T,EAArB+T,EAAAA,UAAe,GAAM,GAA1CtV,EAAMqV,EAAA,GAAEyG,EAASzG,EAAA,GAC0B0H,EAAAxb,EAApB+T,EAAAA,SAAe,MAAK,GAA3CguC,EAAOvmC,EAAA,GAAEwmC,EAAUxmC,EAAA,GAC4BG,EAAA3b,EAApB+T,EAAAA,SAAe,MAAK,GAA/CkuC,EAAStmC,EAAA,GAAEumC,EAAYvmC,EAAA,GAE9B,OACIhb,EAAAA,EAAAA,KAACkhD,EAAgBjC,SAAQ,CAACt+C,MAAO,CAC7BygD,QAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAC,aAAAA,EACAzjD,OAAAA,EACA8b,UAAAA,GACF1Z,SACGA,GAGb,EAGMshD,EAAc,WAChB,IAAMC,EAAUruC,EAAAA,WAAiB8tC,GACjC,IAAIO,EACA,MAAM,IAAIx6C,MAAM,sDAEpB,OAAOw6C,CACX,EAIMC,EAAe,SAAHzyC,GAAiE,IAA5D/O,EAAQ+O,EAAR/O,SAAUc,EAASiO,EAATjO,UAAWwS,EAAOvE,EAAPuE,QAAOmuC,EAAA1yC,EAAE7N,SAAAA,OAAQ,IAAAugD,GAAMA,EAAKn7B,EAAKnlB,EAAA4N,EAAA3N,GAClEsY,EAAa4nC,IAAb5nC,UACP,OACI5Z,EAAAA,EAAAA,KAAA,MAAAoK,EAAAA,EAAA,CACIw3C,UAAW,kBAAMxgD,EAAW,KAAOwY,GAAU,EAAM,EACnDpG,QAAS,SAACxP,GAAC,OAAK5C,EAAW,KAAOoS,EAAUA,EAAQxP,GAAI,IAAI,EAC5DhD,UAAS,sBAAAtD,OAAwB0D,EAAW,+BAAgC,GAAE,KAAA1D,OAAIsD,IAC9EwlB,GAAK,IAAAtmB,SAERA,IAGb,EAEM2hD,EAAiB,SAAHnyC,GAAyC,IAApCxP,EAAQwP,EAARxP,SAAQ4hD,EAAApyC,EAAEY,KAAAA,OAAI,IAAAwxC,GAAKA,EAAE9gD,EAAS0O,EAAT1O,UAC1C+gD,EAA0CP,IAAnC5nC,EAASmoC,EAATnoC,UAAW9b,EAAMikD,EAANjkD,OAAQyjD,EAAYQ,EAAZR,aAE1B,OACIhgD,EAAAA,EAAAA,MAAA,OACIgT,IAAKgtC,EACLvgD,UAAS,wBAAAtD,OAA0BsD,GACnCwS,QALO,WAAH,OAASoG,GAAW9b,EAAO,EAKfoC,SAAA,CAGfA,EACAoQ,IAAQtQ,EAAAA,EAAAA,KAAA,KAAGgB,UAAS,gBAAAtD,OAAkBI,EAAS,KAAO,OAAM,kCAGzE,EAGMkkD,EAAe,SAAHrqC,GAAiF,IAA5EzX,EAAQyX,EAARzX,SAAUc,EAAS2W,EAAT3W,UAASihD,EAAAtqC,EAAEgB,UAAAA,OAAS,IAAAspC,EAAC,eAAcA,EAAAC,EAAAvqC,EAAEkB,OAAAA,OAAM,IAAAqpC,EAAC,CAAC,EAAG,GAAEA,EAAK17B,EAAKnlB,EAAAsW,EAAAwqC,GACzFC,EAAwCZ,IAAhCF,EAASc,EAATd,UAAW1nC,EAASwoC,EAATxoC,UAAW9b,EAAMskD,EAANtkD,OACiC8jB,EAAAviB,EAApB+T,EAAAA,SAAe,MAAK,GAAxDivC,EAAazgC,EAAA,GAAG0gC,EAAgB1gC,EAAA,GACMoB,EAAA3jB,EAAnB+T,EAAAA,SAAe,KAAI,GAAtClU,EAAK8jB,EAAA,GAAEu/B,EAAQv/B,EAAA,GAGhB1iB,EAAK8S,EAAAA,SAAc,kBAAM9V,KAAKklD,SAASj2C,SAAS,IAAIk2C,OAAO,EAAG,EAAE,GAAE,IAGpEC,EAAM1wC,SAAS2wC,eAAeriD,GAClCmY,GAA6BC,EAAAA,EAAAA,GAAU4oC,EAAWe,EAAe,CAC7D1pC,UAAAA,EACAC,UAAW,CACP,CACI/P,KAAM,SACNpI,QAAS,CACLoY,OAAAA,IAGR,CACIhQ,KAAM,OACNpI,QAAS,CACLmiD,mBAAoB,CAAC,SAAU,OAAQ,QAAS,YAZzD3gD,EAAMwW,EAANxW,OAAQ6W,EAAUL,EAAVK,WAmEf,OA/CA1F,EAAAA,WAAgB,WACTkuC,GACCiB,EAASjB,EAAUuB,YAE3B,GAAG,CAACvB,IAKJluC,EAAAA,WAAgB,WACZ,IAAI0vC,EACEC,EAAqB,SAArBA,EAAsBC,GACpBX,IAAkBA,EAAcY,SAASD,EAAMhuC,UAC/C4E,GAAU,GACVie,aAAairB,GACb91C,OAAOk2C,oBAAoB,QAASH,GAE5C,EAUA,OAPGjlD,EACCglD,EAAUnrB,YAAW,WACjB3qB,OAAOm2C,iBAAiB,QAASJ,EACrC,GAAG,KAEH/1C,OAAOk2C,oBAAoB,QAASH,GAEjC,WACH/1C,OAAOk2C,oBAAoB,QAASH,GACpClrB,aAAairB,EACjB,CAEJ,GAAG,CAAChlD,EAAQukD,IAGZjvC,EAAAA,WAAgB,WACZ,IAAMgwC,EAAKpxC,SAASqxC,cAAc,OAKlC,OAJAD,EAAG9iD,GAAKA,EACR0R,SAASP,KAAK6xC,YAAYF,GAE1Bd,EAAiBc,GACV,WACHpxC,SAASP,KAAK8xC,YAAYH,EAC9B,CACJ,GAAG,IAGCV,EAKDtpC,EAAAA,cACKpZ,EAAAA,EAAAA,KAAC0T,EAAAA,EAAe,CAAAxT,SACXpC,IACGkC,EAAAA,EAAAA,KAAC2T,EAAAA,EAAOC,IAAGxJ,EAAAA,EAAAA,EAAA,CACPyJ,QAAS,CAACqF,QAAS,GACnBpF,QAAS,CAACoF,QAAS,GACnBnF,KAAM,CAACmF,QAAS,GAChBlY,UAAS,sBAAAtD,OAAwBI,EAAS,0BAA4B,GAAE,KAAAJ,OAAIsD,GAC5EuT,IAAK+tC,EACLn/C,MAAKiH,EAAAA,EAAA,GAAMnI,EAAO8W,QAAM,IAAEU,SAAUva,KAChC4Z,EAAWC,QACXyN,GAAK,IAAAtmB,SAERA,OAIbwiD,GArBG,IAwBf,EAIMc,EAAW,SAAH3rC,GAAiC,IAA5B3X,EAAQ2X,EAAR3X,SAAQujD,EAAA5rC,EAAE7W,UAAAA,OAAS,IAAAyiD,EAAC,GAAEA,EACrC,OACIzjD,EAAAA,EAAAA,KAAA,OAAKgB,UAAS,gBAAAtD,OAAkBsD,GAAYd,UACxCF,EAAAA,EAAAA,KAACmhD,EAAgB,CAAAjhD,SACZA,KAIjB,EAEAsjD,EAASE,KAAOhC,EAChB8B,EAASG,OAAS9B,EAClB2B,EAASI,KAAO5B,EAOhBb,EAAiBt6B,UAAY,CACzB3mB,SAAU4mB,IAAAA,KAAeC,YAG7B26B,EAAa76B,UAAY,CACrB3mB,SAAU4mB,IAAAA,KAAeC,WACzBvT,QAASsT,IAAAA,KACT1lB,SAAU0lB,IAAAA,KACV9lB,UAAW8lB,IAAAA,QAGf+6B,EAAeh7B,UAAY,CACvB3mB,SAAU4mB,IAAAA,KAAeC,WACzBzW,KAAMwW,IAAAA,KACN9lB,UAAW8lB,IAAAA,QAIfk7B,EAAan7B,UAAY,CACrB3mB,SAAU4mB,IAAAA,KAAeC,YAAcD,IAAAA,QAAkBA,IAAAA,MAAgBC,WACzE/lB,UAAW8lB,IAAAA,OACXnO,UAAWmO,IAAAA,OACXjO,OAAQiO,IAAAA,QAAkBA,IAAAA,SAG9B08B,EAAS38B,UAAY,CACjB7lB,UAAW8lB,IAAAA,OACX5mB,SAAU4mB,IAAAA,KAAeC,YAAcD,IAAAA,QAAkBA,IAAAA,MAAgBC,soCC1N7E,IAAMjS,EAAQ,SAAHnX,GAAwC,IAAlCuC,EAAQvC,EAARuC,SAAUpC,EAAMH,EAANG,OAAQkD,EAASrD,EAATqD,UACwBmS,EAAA9T,EAArB+T,EAAAA,UAAe,GAAM,GAAhDywC,EAAS1wC,EAAA,GAAE2wC,EAAY3wC,EAAA,GAExB7S,EAAK8S,EAAAA,SAAc,kBAAM9V,KAAKklD,SAASj2C,SAAS,IAAIk2C,OAAO,EAAG,EAAE,GAAE,IACpEC,EAAM1wC,SAAS2wC,eAAeriD,GAsBlC,GAnBA8S,EAAAA,WAAgB,WACZ0wC,GAAa,GACb,IAAMV,EAAKpxC,SAASqxC,cAAc,OAGlC,OAFAD,EAAG9iD,GAAKA,EACR0R,SAASP,KAAK6xC,YAAYF,GACnB,WACHpxC,SAASP,KAAK8xC,YAAYH,EAC9B,CACJ,GAAG,IAWCV,EAAJ,CAGA,IAAMqB,EAAejmD,GACjBkC,EAAAA,EAAAA,KAAA,OAAKgB,UAAS,aAAAtD,OAAesD,GAAYd,SACpCA,IAEL,KAEJ,OAAI2jD,EACOzqC,EAAAA,aACH2qC,EACArB,GAGG,IAfI,CAmBnB,EAGA5tC,EAAM+R,UAAY,CACd3mB,SAAU4mB,IAAAA,KAAeC,WACzBjpB,OAAQgpB,IAAAA,KAAeC,WACvB/lB,UAAW8lB,IAAAA,QAIf,+ECjBA,QAvCqB,SAAHnpB,GAA4E,IAAvE6V,EAAO7V,EAAP6V,QAAS3T,EAASlC,EAATkC,UAAWmB,EAASrD,EAATqD,UAAS+/C,EAAApjD,EAAE8d,QAAAA,OAAO,IAAAslC,EAAC,UAASA,EAAE7gD,EAAQvC,EAARuC,SAAUqQ,EAAK5S,EAAL4S,MAC3EkB,EAAOO,SAASC,cAAc,SAelC,OARAmB,EAAAA,WAAgB,WAER3B,EAAKtO,MAAMsQ,OADZ5T,EACqB,WAEA,SAE5B,GAAG,CAACA,KAGAG,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,SACTL,GAKE0B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,0DAAyDd,SAAA,EACpEF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,4BACVsa,KAAK,SACLnY,MAAO,CACHjE,MAAO,OACPL,OAAQ,UAET,oBAZXmB,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAACiC,QAASA,EAASjI,QAhBhB,SAACxP,GACnBA,EAAE+yB,kBACFvjB,EAAQxP,EACZ,EAa8DhD,UAAWA,EAAUd,SAClEA,GAAYqQ,KAiBjC,uYCvCAxM,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAhB,EAAAkB,OAAAC,UAAAC,EAAApB,EAAAqB,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAN,EAAAD,EAAAhB,GAAAiB,EAAAD,GAAAhB,EAAArC,KAAA,EAAA2B,EAAA,mBAAAkC,OAAAA,OAAA,GAAAC,EAAAnC,EAAAoC,UAAA,aAAAC,EAAArC,EAAAsC,eAAA,kBAAAC,EAAAvC,EAAAwC,aAAA,yBAAAC,EAAAd,EAAAD,EAAAhB,GAAA,OAAAkB,OAAAK,eAAAN,EAAAD,EAAA,CAAArD,MAAAqC,EAAAgC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,EAAA,KAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAhB,GAAA,OAAAiB,EAAAD,GAAAhB,CAAA,WAAAmC,EAAAlB,EAAAD,EAAAhB,EAAAoB,GAAA,IAAA9B,EAAA0B,GAAAA,EAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAA/C,EAAA6B,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAE,EAAAG,EAAA,WAAA9D,MAAA4E,EAAAtB,EAAAjB,EAAA2B,KAAAF,CAAA,UAAAe,EAAAvB,EAAAD,EAAAhB,GAAA,WAAAxB,KAAA,SAAAiE,IAAAxB,EAAAyB,KAAA1B,EAAAhB,GAAA,OAAAiB,GAAA,OAAAzC,KAAA,QAAAiE,IAAAxB,EAAA,EAAAD,EAAAmB,KAAAA,EAAA,IAAA1H,EAAA,iBAAAkI,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAApD,GAAAoB,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAM,EAAAtC,GAAA,0BAAAuC,SAAA,SAAAxC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAwC,QAAAzC,EAAAC,EAAA,gBAAAyC,EAAAzC,EAAAD,GAAA,SAAA2C,EAAA3D,EAAAsB,EAAAhC,EAAAmC,GAAA,IAAAE,EAAAa,EAAAvB,EAAAjB,GAAAiB,EAAAK,GAAA,aAAAK,EAAAnD,KAAA,KAAAqD,EAAAF,EAAAc,IAAAhI,EAAAoH,EAAAlE,MAAA,OAAAlD,GAAA,UAAAmJ,EAAAnJ,IAAA2G,EAAAsB,KAAAjI,EAAA,WAAAuG,EAAA6C,QAAApJ,EAAAqJ,SAAAC,MAAA,SAAA9C,GAAA0C,EAAA,OAAA1C,EAAA3B,EAAAmC,EAAA,aAAAR,GAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAT,EAAA6C,QAAApJ,GAAAsJ,MAAA,SAAA9C,GAAAY,EAAAlE,MAAAsD,EAAA3B,EAAAuC,EAAA,aAAAZ,GAAA,OAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAAzC,EAAAsB,EAAA,gBAAA3D,MAAA,SAAAsD,EAAAG,GAAA,SAAA4C,IAAA,WAAAhD,GAAA,SAAAA,EAAAhB,GAAA2D,EAAA1C,EAAAG,EAAAJ,EAAAhB,EAAA,WAAAA,EAAAA,EAAAA,EAAA+D,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAvB,EAAAhB,EAAAoB,GAAA,IAAAE,EAAA7G,EAAA,gBAAA6E,EAAAmC,GAAA,GAAAH,IAAAsB,EAAA,UAAAqB,MAAA,mCAAA3C,IAAAuB,EAAA,cAAAvD,EAAA,MAAAmC,EAAA,OAAA9D,MAAAsD,EAAAiD,MAAA,OAAA9C,EAAA+C,OAAA7E,EAAA8B,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAAgD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAT,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAA7G,EAAA,MAAA6G,EAAAuB,EAAAzB,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAsB,EAAA,IAAAK,EAAAT,EAAAxB,EAAAhB,EAAAoB,GAAA,cAAA6B,EAAAzE,KAAA,IAAA8C,EAAAF,EAAA8C,KAAArB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAnF,MAAAsF,EAAAR,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAjB,EAAAzE,OAAA8C,EAAAuB,EAAAzB,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAQ,EAAAR,IAAA,YAAA4B,EAAArD,EAAAhB,GAAA,IAAAoB,EAAApB,EAAAmE,OAAA7C,EAAAN,EAAAU,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAjB,EAAAoE,SAAA,eAAAhD,GAAAJ,EAAAU,SAAA,SAAA1B,EAAAmE,OAAA,SAAAnE,EAAAyC,IAAAxB,EAAAoD,EAAArD,EAAAhB,GAAA,UAAAA,EAAAmE,SAAA,WAAA/C,IAAApB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA0B,EAAA,IAAAxD,EAAAkD,EAAAlB,EAAAN,EAAAU,SAAA1B,EAAAyC,KAAA,aAAAnD,EAAAd,KAAA,OAAAwB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAAnD,EAAAmD,IAAAzC,EAAAoE,SAAA,KAAAtB,EAAA,IAAArB,EAAAnC,EAAAmD,IAAA,OAAAhB,EAAAA,EAAAyC,MAAAlE,EAAAgB,EAAA2D,YAAAlD,EAAA9D,MAAAqC,EAAA4E,KAAA5D,EAAA6D,QAAA,WAAA7E,EAAAmE,SAAAnE,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,GAAAjB,EAAAoE,SAAA,KAAAtB,GAAArB,GAAAzB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAA1E,EAAAoE,SAAA,KAAAtB,EAAA,UAAAgC,EAAA7D,GAAA,IAAAD,EAAA,CAAA+D,OAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,SAAA/D,EAAA,SAAAA,IAAAD,EAAAiE,WAAAhE,EAAA,GAAAD,EAAAkE,SAAAjE,EAAA,SAAAkE,WAAAC,KAAApE,EAAA,UAAAqE,EAAApE,GAAA,IAAAD,EAAAC,EAAAqE,YAAA,GAAAtE,EAAAxC,KAAA,gBAAAwC,EAAAyB,IAAAxB,EAAAqE,WAAAtE,CAAA,UAAAsB,EAAArB,GAAA,KAAAkE,WAAA,EAAAJ,OAAA,SAAA9D,EAAAuC,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAhB,EAAAgB,EAAAS,GAAA,GAAAzB,EAAA,OAAAA,EAAA0C,KAAA1B,GAAA,sBAAAA,EAAA4D,KAAA,OAAA5D,EAAA,IAAAwE,MAAAxE,EAAAyE,QAAA,KAAAnE,GAAA,EAAAhC,EAAA,SAAAsF,IAAA,OAAAtD,EAAAN,EAAAyE,QAAA,GAAArE,EAAAsB,KAAA1B,EAAAM,GAAA,OAAAsD,EAAAjH,MAAAqD,EAAAM,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,SAAAtF,EAAAsF,KAAAtF,CAAA,YAAAoF,UAAAd,EAAA5C,GAAA,2BAAA+B,EAAA5B,UAAA6B,EAAA1B,EAAAgC,EAAA,eAAA3F,MAAAqF,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAArF,MAAAoF,EAAAd,cAAA,IAAAc,EAAA2C,YAAA3D,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAA2E,oBAAA,SAAA1E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA2E,YAAA,QAAA5E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAA0E,aAAA1E,EAAA6E,MAAA,EAAA7E,EAAA8E,KAAA,SAAA7E,GAAA,OAAAC,OAAA6E,eAAA7E,OAAA6E,eAAA9E,EAAA+B,IAAA/B,EAAA+E,UAAAhD,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAiB,GAAArC,CAAA,EAAAD,EAAAiF,MAAA,SAAAhF,GAAA,OAAA6C,QAAA7C,EAAA,EAAAsC,EAAAG,EAAAvC,WAAAY,EAAA2B,EAAAvC,UAAAQ,GAAA,0BAAAX,EAAA0C,cAAAA,EAAA1C,EAAAkF,MAAA,SAAAjF,EAAAjB,EAAAoB,EAAAE,EAAAhC,QAAA,IAAAA,IAAAA,EAAA6G,SAAA,IAAA1E,EAAA,IAAAiC,EAAAvB,EAAAlB,EAAAjB,EAAAoB,EAAAE,GAAAhC,GAAA,OAAA0B,EAAA2E,oBAAA3F,GAAAyB,EAAAA,EAAAmD,OAAAb,MAAA,SAAA9C,GAAA,OAAAA,EAAAiD,KAAAjD,EAAAtD,MAAA8D,EAAAmD,MAAA,KAAArB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAAtC,EAAAoF,KAAA,SAAAnF,GAAA,IAAAD,EAAAE,OAAAD,GAAAjB,EAAA,WAAAoB,KAAAJ,EAAAhB,EAAAoF,KAAAhE,GAAA,OAAApB,EAAAqG,UAAA,SAAAzB,IAAA,KAAA5E,EAAAyF,QAAA,KAAAxE,EAAAjB,EAAAsG,MAAA,GAAArF,KAAAD,EAAA,OAAA4D,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA5D,EAAAqC,OAAAA,EAAAf,EAAAnB,UAAA,CAAAyE,YAAAtD,EAAAiD,MAAA,SAAAvE,GAAA,QAAAuF,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAAtD,EAAA,KAAAiD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAxB,EAAA,KAAAkE,WAAA3B,QAAA6B,IAAArE,EAAA,QAAAhB,KAAA,WAAAA,EAAAwG,OAAA,IAAApF,EAAAsB,KAAA,KAAA1C,KAAAwF,OAAAxF,EAAAyG,MAAA,WAAAzG,GAAAiB,EAAA,EAAAyF,KAAA,gBAAAxC,MAAA,MAAAjD,EAAA,KAAAkE,WAAA,GAAAG,WAAA,aAAArE,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,YAAAkE,IAAA,EAAAnC,kBAAA,SAAAxD,GAAA,QAAAkD,KAAA,MAAAlD,EAAA,IAAAhB,EAAA,cAAA4G,EAAAxF,EAAAE,GAAA,OAAAG,EAAAjD,KAAA,QAAAiD,EAAAgB,IAAAzB,EAAAhB,EAAA4E,KAAAxD,EAAAE,IAAAtB,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,KAAAK,CAAA,SAAAA,EAAA,KAAA6D,WAAAM,OAAA,EAAAnE,GAAA,IAAAA,EAAA,KAAAhC,EAAA,KAAA6F,WAAA7D,GAAAG,EAAAnC,EAAAgG,WAAA,YAAAhG,EAAAyF,OAAA,OAAA6B,EAAA,UAAAtH,EAAAyF,QAAA,KAAAwB,KAAA,KAAA5E,EAAAP,EAAAsB,KAAApD,EAAA,YAAAuC,EAAAT,EAAAsB,KAAApD,EAAA,iBAAAqC,GAAAE,EAAA,SAAA0E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,WAAAuB,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,SAAAtD,GAAA,QAAA4E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,YAAAnD,EAAA,UAAAoC,MAAA,kDAAAsC,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,KAAAR,OAAA,SAAAxD,EAAAD,GAAA,QAAAhB,EAAA,KAAAmF,WAAAM,OAAA,EAAAzF,GAAA,IAAAA,EAAA,KAAAsB,EAAA,KAAA6D,WAAAnF,GAAA,GAAAsB,EAAAyD,QAAA,KAAAwB,MAAAnF,EAAAsB,KAAApB,EAAA,oBAAAiF,KAAAjF,EAAA2D,WAAA,KAAA3F,EAAAgC,EAAA,OAAAhC,IAAA,UAAA2B,GAAA,aAAAA,IAAA3B,EAAAyF,QAAA/D,GAAAA,GAAA1B,EAAA2F,aAAA3F,EAAA,UAAAmC,EAAAnC,EAAAA,EAAAgG,WAAA,UAAA7D,EAAAjD,KAAAyC,EAAAQ,EAAAgB,IAAAzB,EAAA1B,GAAA,KAAA6E,OAAA,YAAAS,KAAAtF,EAAA2F,WAAAnC,GAAA,KAAA+D,SAAApF,EAAA,EAAAoF,SAAA,SAAA5F,EAAAD,GAAA,aAAAC,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,gBAAAxB,EAAAzC,MAAA,aAAAyC,EAAAzC,KAAA,KAAAoG,KAAA3D,EAAAwB,IAAA,WAAAxB,EAAAzC,MAAA,KAAAmI,KAAA,KAAAlE,IAAAxB,EAAAwB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA3D,EAAAzC,MAAAwC,IAAA,KAAA4D,KAAA5D,GAAA8B,CAAA,EAAAgE,OAAA,SAAA7F,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAAiF,aAAAhE,EAAA,YAAA4F,SAAA7G,EAAAsF,WAAAtF,EAAAkF,UAAAG,EAAArF,GAAA8C,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAA+E,SAAA9D,EAAA,KAAAG,EAAApB,EAAAsF,WAAA,aAAAlE,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAqB,IAAA4C,EAAArF,EAAA,QAAAsB,CAAA,YAAA2C,MAAA,0BAAA8C,cAAA,SAAA/F,EAAAhB,EAAAoB,GAAA,YAAAgD,SAAA,CAAA1C,SAAA2B,EAAArC,GAAA2D,WAAA3E,EAAA6E,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAxB,GAAA6B,CAAA,GAAA9B,CAAA,UAAAgG,EAAAhG,EAAAhB,GAAA,IAAAiB,EAAAC,OAAAkF,KAAApF,GAAA,GAAAE,OAAA+F,sBAAA,KAAA3F,EAAAJ,OAAA+F,sBAAAjG,GAAAhB,IAAAsB,EAAAA,EAAAlE,QAAA,SAAA4C,GAAA,OAAAkB,OAAAgG,yBAAAlG,EAAAhB,GAAAgC,UAAA,KAAAf,EAAAmE,KAAA+B,MAAAlG,EAAAK,EAAA,QAAAL,CAAA,UAAAmG,EAAApG,GAAA,QAAAhB,EAAA,EAAAA,EAAAqH,UAAA5B,OAAAzF,IAAA,KAAAiB,EAAA,MAAAoG,UAAArH,GAAAqH,UAAArH,GAAA,GAAAA,EAAA,EAAAgH,EAAA9F,OAAAD,IAAA,GAAAuC,SAAA,SAAAxD,GAAAsH,EAAAtG,EAAAhB,EAAAiB,EAAAjB,GAAA,IAAAkB,OAAAqG,0BAAArG,OAAAsG,iBAAAxG,EAAAE,OAAAqG,0BAAAtG,IAAA+F,EAAA9F,OAAAD,IAAAuC,SAAA,SAAAxD,GAAAkB,OAAAK,eAAAP,EAAAhB,EAAAkB,OAAAgG,yBAAAjG,EAAAjB,GAAA,WAAAgB,CAAA,UAAAsG,EAAAG,EAAAC,EAAA/J,GAAA,OAAA+J,EAAA,SAAAjF,GAAA,IAAAiF,EAAA,SAAAC,EAAAC,GAAA,cAAAhE,EAAA+D,IAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAAnG,OAAAsG,aAAA,QAAAC,IAAAF,EAAA,KAAAG,EAAAH,EAAAnF,KAAAiF,EAAAC,GAAA,yBAAAhE,EAAAoE,GAAA,OAAAA,EAAA,UAAAtD,UAAA,kEAAAkD,EAAAK,OAAAC,QAAAP,EAAA,CAAAQ,CAAA1F,EAAA,2BAAAmB,EAAA8D,GAAAA,EAAAO,OAAAP,EAAA,CAAAU,CAAAV,MAAAD,EAAAvG,OAAAK,eAAAkG,EAAAC,EAAA,CAAA/J,MAAAA,EAAAqE,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAuF,EAAAC,GAAA/J,EAAA8J,CAAA,UAAAY,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAAf,EAAAjF,GAAA,QAAAiG,EAAAJ,EAAAZ,GAAAjF,GAAA9E,EAAA+K,EAAA/K,KAAA,OAAAgL,GAAA,YAAAJ,EAAAI,EAAA,CAAAD,EAAAxE,KAAAL,EAAAlG,GAAAwI,QAAAtC,QAAAlG,GAAAoG,KAAAyE,EAAAC,EAAA,UAAApM,EAAA4M,EAAA3J,GAAA,gBAAA2J,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAA,CAAA,CAAAE,CAAAF,IAAA,SAAAjJ,EAAA2C,GAAA,IAAA1B,EAAA,MAAAjB,EAAA,yBAAAwB,QAAAxB,EAAAwB,OAAAE,WAAA1B,EAAA,uBAAAiB,EAAA,KAAAD,EAAAI,EAAA9B,EAAAuC,EAAAJ,EAAA,GAAAmB,GAAA,EAAAtB,GAAA,SAAAhC,GAAA2B,EAAAA,EAAAyB,KAAA1C,IAAA4E,KAAA,IAAAjC,EAAA,IAAAzB,OAAAD,KAAAA,EAAA,OAAA2B,GAAA,cAAAA,GAAA5B,EAAA1B,EAAAoD,KAAAzB,IAAAiD,QAAAzC,EAAA2D,KAAApE,EAAArD,OAAA8D,EAAAgE,SAAA9C,GAAAC,GAAA,UAAA5C,GAAAsB,GAAA,EAAAF,EAAApB,CAAA,iBAAA4C,GAAA,MAAA3B,EAAA,SAAAY,EAAAZ,EAAA,SAAAC,OAAAW,KAAAA,GAAA,kBAAAP,EAAA,MAAAF,CAAA,SAAAK,CAAA,EAAA2H,CAAAH,EAAA3J,IAAA,SAAAgC,EAAA+H,GAAA,IAAA/H,EAAA,2BAAAA,EAAA,OAAAgI,EAAAhI,EAAA+H,GAAA,IAAAjI,EAAAF,OAAAC,UAAAoI,SAAA7G,KAAApB,GAAAmF,MAAA,iBAAArF,GAAAE,EAAAsE,cAAAxE,EAAAE,EAAAsE,YAAAC,MAAA,WAAAzE,GAAA,QAAAA,EAAA,OAAAtB,MAAA0J,KAAAlI,GAAA,iBAAAF,GAAA,2CAAAqI,KAAArI,GAAA,OAAAkI,EAAAhI,EAAA+H,EAAA,CAAAK,CAAAT,EAAA3J,IAAA,qBAAAoF,UAAA,6IAAAiF,EAAA,UAAAL,EAAAL,EAAApK,IAAA,MAAAA,GAAAA,EAAAoK,EAAAxD,UAAA5G,EAAAoK,EAAAxD,QAAA,QAAAnG,EAAA,EAAAsK,EAAA,IAAA9J,MAAAjB,GAAAS,EAAAT,EAAAS,IAAAsK,EAAAtK,GAAA2J,EAAA3J,GAAA,OAAAsK,CAAA,CA4GA,QApGyB,SAAHjP,GAAoC,IAA9B0C,EAAO1C,EAAP0C,QAAS2jD,EAAOrmD,EAAPqmD,QAASjmD,EAAKJ,EAALI,MACEoV,EAAA9T,EAAlB+T,EAAAA,SAAe,IAAG,GAArCmO,EAAKpO,EAAA,GAAEqO,EAAQrO,EAAA,GACwB0H,EAAAxb,EAApB+T,EAAAA,SAAe,MAAK,GAAvCzH,EAAKkP,EAAA,GAAE6R,EAAQ7R,EAAA,GACiDopC,EAAA5kD,GAA7BwT,EAAAA,EAAAA,MAA6B,GAAhEV,EAAgB8xC,EAAA,GAAIpkD,EAASokD,EAAA,GAATpkD,UAErBqkD,EAAqB9wC,EAAAA,OAAa,MAExCA,EAAAA,iBAAsB,WACd8wC,GAAsBA,EAAmBz9B,SACzCy9B,EAAmBz9B,QAAQ09B,eAAe,CAAEC,SAAU,UAE9D,GAAG,IAGH,IAAMC,EAAQ,eAtBlBx4C,EAsBkBoD,GAtBlBpD,EAsBkB9H,IAAA+E,MAAG,SAAAyE,EAAOvJ,GAAC,IAAA0N,EAAA,OAAA3N,IAAAoB,MAAA,SAAAsI,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA7F,MAAA,UAGA,IAAlB9F,IAAAA,KAAOyf,GAAY,CAAA9T,EAAA7F,KAAA,QACoD,OAAvE8kB,GAAS,SAAAzmB,GAAC,OAAAmE,EAAAA,EAAA,GAASnE,GAAC,IAAEq+C,UAAW,oCAAkC,IAAI72C,EAAAhG,OAAA,iBAoB1E,OAfMiK,EAAW,IAAI0Q,UACZC,OAAO,aAAc,IAC9B3Q,EAAS2Q,OAAO,UAAWhiB,EAAQwR,SACnCH,EAAS2Q,OAAO,oBAAqBhiB,EAAQC,IAC7CoR,EAAS2Q,OACL,SACArQ,SACKC,cAAc,2BACdC,aAAa,YAGtBpP,MAAM0J,KAAK+U,GAAO/a,SAAQ,SAAC8b,GACvB5Q,EAAS2Q,OAAO,SAAUC,EAC9B,IAEA7U,EAAAlE,KAAA,EAAAkE,EAAA7F,KAAA,GAE2BuK,EAAiB,CAAET,SAAAA,EAAUP,UAAW9Q,EAAQC,KAAK,QAA9DmN,EAAAnG,OAEV0I,EAAAA,GAAMoa,QAAQ,8CACd45B,IACAjmD,KACH0P,EAAA7F,KAAA,iBAAA6F,EAAAlE,KAAA,GAAAkE,EAAAe,GAAAf,EAAA,SAEDgB,QAAQC,IAAGjB,EAAAe,IAAO,yBAAAf,EAAA/D,OAAA,GAAA6D,EAAA,kBAvD9B,eAAAzB,EAAA,KAAAC,EAAA1B,UAAA,WAAAlB,SAAA,SAAAtC,EAAA0E,GAAA,IAAAD,EAAAO,EAAA1B,MAAA2B,EAAAC,GAAA,SAAAP,EAAA7K,GAAA0K,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,OAAA9K,EAAA,UAAA8K,EAAAO,GAAAX,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,QAAAO,EAAA,CAAAR,OAAAT,EAAA,MA0DK,gBApCa4D,GAAA,OAAAM,EAAA9E,MAAA,KAAAE,UAAA,KAsCd,OACI9I,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,QAAOd,SAAA,EAClBF,EAAAA,EAAAA,KAACoT,EAAAA,SAAc,CAAAlT,UACXqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAC+iB,EAAAA,EAAiB,CACdxB,MAAOA,EACPC,SAAUA,EACV+iC,iBAAiB,sBACjBC,iBAAiB,0BAGpB74C,GAASA,EAAM24C,WAAY/iD,EAAAA,EAAAA,MAACkjD,EAAS,CAAAvkD,SAAA,CAAC,IAAEyL,EAAM24C,UAAU,OAAe,SAIhF/iD,EAAAA,EAAAA,MAACmjD,EAAAA,EAAM,CAAAxkD,SAAA,EACHF,EAAAA,EAAAA,KAAC0kD,EAAAA,EAAOC,KAAI,CAACC,UAAW/kD,EAAUK,UAC9BF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,iCAAgCd,UAC3CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHxY,UAAU,OACVnB,UAAWA,EACXglD,YAAY,eAAc3kD,SAC7B,uBAMTF,EAAAA,EAAAA,KAAC0kD,EAAAA,EAAOC,KAAI,CAACC,WAAY/kD,EAAUK,UAC/BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAACxY,UAAU,OAAOwS,QAAS6wC,EAASnkD,SAAC,WAG5CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAACiC,QAAQ,YAAYjI,QAASzV,EAAMmC,SAAC,sBAQ5DF,EAAAA,EAAAA,KAAA,OAAKuU,IAAK2vC,MAGtB,EAKA,QAAMO,EAAYpsC,EAAAA,GAAOzE,IAAG0E,MAAA,0CAAAA,2tCCqB5B,QA9HgB,SAAH3a,GAA8B,IAAAmnD,EAAxBzkD,EAAO1C,EAAP0C,QAASyiC,EAAQnlC,EAARmlC,SAClBtsB,GAAOo7B,EAAAA,EAAAA,KACPvvC,EAAOhC,SAAAA,EAASgC,KAAO,IAAIyK,EAAAA,EAAKzM,EAAQgC,MAAQ,KACmB8Q,EAAA9T,EAArB+T,EAAAA,UAAe,GAAM,GAAlE2xC,EAAkB5xC,EAAA,GAAE6xC,EAAqB7xC,EAAA,GAEhD,GAAI9S,EAAQyZ,aAAeirC,EACvB,OACIxjD,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mCAAkCd,SAAA,CAAC,gCAExB,IAArBsW,EAAKC,aACFzW,EAAAA,EAAAA,KAAA,UAAQwT,QAAS,kBAAMwxC,GAAuBD,EAAmB,EAAC7kD,UAC9DF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAEjB,QAKhB,IAAMikD,EAAe5kD,EAAQyZ,WAAa,6BAA+B,GACzE,OACIvY,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXqB,EAAAA,EAAAA,MAAA,OAAKP,UAAS,oCAAAtD,OAAsCunD,GAAe/kD,SAAA,EAC/DF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,OAAMd,UACjBF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,iBAAgBd,UAC3BF,EAAAA,EAAAA,KAAA,OACIuC,IAAKF,aAAI,EAAJA,EAAMoiB,YACXjiB,IAAKH,aAAI,EAAJA,EAAMqiB,UACXxlB,MAAM,OACNL,OAAO,OACPmC,UAAU,wBAMtBO,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kDAAiDd,SAAA,EAC5DqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,cAAad,SAAA,EACxBqB,EAAAA,EAAAA,MAAA,QAAMP,UAAU,yBAAwBd,SAAA,CACnCmC,aAAI,EAAJA,EAAMqiB,UAAU,KAAGriB,aAAI,EAAJA,EAAMsiB,qBAAqB,QAEnD3kB,EAAAA,EAAAA,KAAA,QACIgB,UAAU,mBACVmC,MAAO,CAAEC,MAAO,QAASlD,UAExB8Z,EAAAA,EAAAA,GAAc3Z,EAAQ6kD,wBAI9B7kD,EAAQyZ,YAAmC,IAArBtD,EAAKC,aACxBzW,EAAAA,EAAAA,KAAA,UAAQgB,UAAU,UAAUwS,QAAS,kBAAMwxC,GAAuBD,EAAmB,EAAC7kD,UAClFF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,sBAEjB,QAcPX,EAAQyZ,YAAczX,EAAKsU,UAAYH,EAAKG,QAAU,MACnDpV,EAAAA,EAAAA,MAACqiD,EAAAA,EAAI,CAACuB,GAAG,MAAMnkD,UAAU,0BAAyBd,SAAA,EAC9CF,EAAAA,EAAAA,KAAC4jD,EAAAA,EAAKpqC,OAAM,CACR2rC,GAAG,SACHnkD,UAAU,8BAA6Bd,UAEvCF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,4BAEjBO,EAAAA,EAAAA,MAACqiD,EAAAA,EAAKwB,MAAK,CACPD,GAAG,MACHxsC,UAAU,aACV3X,UAAU,iCAAgCd,SAAA,EAE1CF,EAAAA,EAAAA,KAAC4jD,EAAAA,EAAKF,KAAI,CACNyB,GAAG,MACHnkD,UAAU,2CAA0Cd,SACvD,UAGDF,EAAAA,EAAAA,KAAC4jD,EAAAA,EAAKF,KAAI,CACNyB,GAAG,MACHnkD,UAAU,yCACVwS,QAAS,SAACxP,GAAC,OAAK8+B,EAAS9+B,EAAG3D,EAAQC,GAAG,EAACJ,SAC3C,oBAOhBG,SAAAA,EAASA,SACNL,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,yDAAwDd,UACnEF,EAAAA,EAAAA,KAAA,OACIgB,UAAU,mCACVmC,MAAO,CAAE0W,SAAU,UACnBnF,wBAAyB,CAAEC,OAAQtU,aAAO,EAAPA,EAASA,aAGpD,MAEJL,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,qBAAoBd,UAC/BF,EAAAA,EAAAA,KAACg2B,EAAAA,EAAY,CAAA91B,SACRG,SAAmB,QAAZykD,EAAPzkD,EAASglD,kBAAU,IAAAP,OAAA,EAAnBA,EAAqB/hD,KAAI,SAACuf,GAAI,OAC3BtiB,EAAAA,EAAAA,KAACg2B,EAAAA,EAAaC,QAAO,CAEjBC,SAAU5T,aAAI,EAAJA,EAAMzZ,KAChBstB,cAAc,EACdC,YAAY,EACZC,YAAa/T,aAAI,EAAJA,EAAM9Q,IACnB8kB,WAAYhU,aAAI,EAAJA,EAAM9Q,IAClB+kB,SAAUjU,aAAI,EAAJA,EAAMhS,KAChB2vC,UAAU,eACVzpB,IAAI,IARClU,aAAI,EAAJA,EAAMzZ,KASb,UAM1B,o5ECyBA,QApJoB,SAAHlL,GAA2C,IAAAmnD,EAArCzkD,EAAO1C,EAAP0C,QAASilD,EAAc3nD,EAAd2nD,eAAgBvnD,EAAKJ,EAALI,MACWoV,EAAA9T,EAA/B+T,EAAAA,SAAe/S,EAAQA,SAAQ,GAAhD2T,EAAIb,EAAA,GAAEoyC,EAAOpyC,EAAA,GACwB0H,EAAAxb,EAAlB+T,EAAAA,SAAe,IAAG,GAArCmO,EAAK1G,EAAA,GAAE2G,EAAQ3G,EAAA,GACtB2qC,EAA0CpyC,EAAAA,SAAcvQ,EACjDf,IAAAA,IAAMzB,EAAQglD,YAAY,SAAC/iC,GAAI,sWAAAlY,CAAA,CAAQ9J,GAAIgiB,EAAKzZ,MAASyZ,EAAI,MAClEtH,EAAA3b,EAAAmmD,EAAA,GAE+DC,GAJ7CzqC,EAAA,GAAkBA,EAAA,GAI2B3b,GAA1BmT,EAAAA,EAAAA,MAA0B,IAA1DlB,EAAam0C,EAAA,GAAI5lD,EAAS4lD,EAAA,GAAT5lD,UACsG6lD,EAAArmD,GAA9CuT,EAAAA,EAAAA,MAA8C,GAAvHhB,EAAiC8zC,EAAA,GAUlCC,GAVqED,EAAA,GAAhC7lD,UAUT,SAACmE,EAAGse,GAClC7T,QAAQC,IAAI,YAAa4T,GACzB,IAAM3iB,EAAO,CACTkS,QAASxR,EAAQwR,QACjBC,WAAYzR,EAAQC,GACpBslD,aAActjC,GAElB1Q,EAAkCjS,GACjC+N,SACA3G,MAAK,SAAAiE,GACFyD,QAAQC,IAAI1D,EAChB,IAAE,OACK,SAAAgB,GAAQyC,QAAQC,IAAI1C,EAAI,GACnC,GA8BA,OACIhM,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,kBAAiBd,UAC5BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,QAAOd,SAAA,EAClBqB,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,mBAAkBd,UAC7BF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CACd/Z,KAAMqU,EACNpT,SAxDH,SAACoD,EAAG0e,GACrB,IAAM/iB,EAAO+iB,EAAOC,UACpB4iC,EAAQ5lD,EACZ,OAyDgB4B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBAUJqB,EAAAA,EAAAA,MAACy0B,EAAAA,EAAY,CAACzU,MAAOA,EAAOC,SAAUA,EAASthB,SAAA,EAC3CF,EAAAA,EAAAA,KAACg2B,EAAAA,EAAapT,MAAK,IAClBviB,SAAmB,QAAZykD,EAAPzkD,EAASglD,kBAAU,IAAAP,OAAA,EAAnBA,EAAqB/hD,KAAI,SAACuf,GAAI,OAC3BtiB,EAAAA,EAAAA,KAACg2B,EAAAA,EAAaC,QAAO,CACjB31B,GAAIgiB,EAEJ4T,SAAU5T,aAAI,EAAJA,EAAMzZ,KAChBstB,cAAc,EACdC,YAAY,EACZ2M,SAAU4iB,EACVtvB,YAAa/T,aAAI,EAAJA,EAAM9Q,IACnB8kB,WAAYhU,aAAI,EAAJA,EAAM9Q,IAClB+kB,SAAUjU,aAAI,EAAJA,EAAMhS,KAChBkmB,IAAI,IARClU,aAAI,EAAJA,EAAMzZ,KASb,KAGN7I,EAAAA,EAAAA,KAACg2B,EAAAA,EAAa2M,cAAa,CAAAziC,SACtB,SAAA+O,GAAA,IAAE4zB,EAAQ5zB,EAAR4zB,SAAUC,EAAQ7zB,EAAR6zB,SAAQ,OAClBhhC,IAAAA,IAAM+gC,GAAU,SAACjC,EAAStrB,GAAK,OAC1BtV,EAAAA,EAAAA,KAACg2B,EAAAA,EAAaC,QAAO,CACjB31B,GAAIgV,EAEJ4gB,SAAU0K,aAAO,EAAPA,EAAS/3B,KACnBstB,cAAc,EACdC,YAAY,EACZ2M,SAAUD,EACVxM,WAAYsK,EAAQA,QACpBrK,SAAUqK,EAAQp/B,KAClBg1B,IAAKoK,EAAQpK,KAPRlhB,EAQP,GACL,cAOrB/T,EAAAA,EAAAA,MAACmjD,EAAAA,EAAM,CAAAxkD,SAAA,EACHF,EAAAA,EAAAA,KAAC0kD,EAAAA,EAAOC,KAAI,CAACC,UAAW/kD,EAAUK,UAC9BF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,iCAAgCd,UAC3CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHxY,UAAU,OACVnB,UAAWA,EACXglD,YAAY,aAAY3kD,SAC3B,uBAMTF,EAAAA,EAAAA,KAAC0kD,EAAAA,EAAOC,KAAI,CAACC,WAAY/kD,EAAUK,UAC/BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAACxY,UAAU,OAAOwS,QAtGhC,SAACxP,GACd,IAAM0N,EAAW,IAAI0Q,SACrB1Q,EAAS2Q,OAAO,UAAWrO,GAC3BtC,EAAS2Q,OAAO,UAAWhiB,EAAQwR,SACnCH,EAAS2Q,OAAO,aAAchiB,EAAQC,IACtCoR,EAAS2Q,OACL,SACArQ,SACKC,cAAc,2BACdC,aAAa,YAEtBpP,MAAM0J,KAAK+U,GAAO/a,SAAQ,SAAC8b,GACvB5Q,EAAS2Q,OAAO,SAAUC,EAC9B,IAGAhR,EAAc,CAAE3R,KAAM+R,EAAUP,UAAW9Q,EAAQC,KAC9CoN,SACA3G,MAAK,SAACiE,GACHgF,EAAAA,GAAMoa,QAAQ,yBACdk7B,EAAet6C,EAAIrL,MAEnB5B,GACJ,IAAE,OACK,SAACiO,GAAG,OAAKyC,QAAQC,IAAI1C,EAAI,GACxC,EA6EmE9L,SAAC,YAG5CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAACiC,QAAQ,YAAWvb,SAAC,sBAOxD,q+CC1JA6D,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAhB,EAAAkB,OAAAC,UAAAC,EAAApB,EAAAqB,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAN,EAAAD,EAAAhB,GAAAiB,EAAAD,GAAAhB,EAAArC,KAAA,EAAA2B,EAAA,mBAAAkC,OAAAA,OAAA,GAAAC,EAAAnC,EAAAoC,UAAA,aAAAC,EAAArC,EAAAsC,eAAA,kBAAAC,EAAAvC,EAAAwC,aAAA,yBAAAC,EAAAd,EAAAD,EAAAhB,GAAA,OAAAkB,OAAAK,eAAAN,EAAAD,EAAA,CAAArD,MAAAqC,EAAAgC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,EAAA,KAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAhB,GAAA,OAAAiB,EAAAD,GAAAhB,CAAA,WAAAmC,EAAAlB,EAAAD,EAAAhB,EAAAoB,GAAA,IAAA9B,EAAA0B,GAAAA,EAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAA/C,EAAA6B,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAE,EAAAG,EAAA,WAAA9D,MAAA4E,EAAAtB,EAAAjB,EAAA2B,KAAAF,CAAA,UAAAe,EAAAvB,EAAAD,EAAAhB,GAAA,WAAAxB,KAAA,SAAAiE,IAAAxB,EAAAyB,KAAA1B,EAAAhB,GAAA,OAAAiB,GAAA,OAAAzC,KAAA,QAAAiE,IAAAxB,EAAA,EAAAD,EAAAmB,KAAAA,EAAA,IAAA1H,EAAA,iBAAAkI,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAApD,GAAAoB,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAM,EAAAtC,GAAA,0BAAAuC,SAAA,SAAAxC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAwC,QAAAzC,EAAAC,EAAA,gBAAAyC,EAAAzC,EAAAD,GAAA,SAAA2C,EAAA3D,EAAAsB,EAAAhC,EAAAmC,GAAA,IAAAE,EAAAa,EAAAvB,EAAAjB,GAAAiB,EAAAK,GAAA,aAAAK,EAAAnD,KAAA,KAAAqD,EAAAF,EAAAc,IAAAhI,EAAAoH,EAAAlE,MAAA,OAAAlD,GAAA,UAAAmJ,EAAAnJ,IAAA2G,EAAAsB,KAAAjI,EAAA,WAAAuG,EAAA6C,QAAApJ,EAAAqJ,SAAAC,MAAA,SAAA9C,GAAA0C,EAAA,OAAA1C,EAAA3B,EAAAmC,EAAA,aAAAR,GAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAT,EAAA6C,QAAApJ,GAAAsJ,MAAA,SAAA9C,GAAAY,EAAAlE,MAAAsD,EAAA3B,EAAAuC,EAAA,aAAAZ,GAAA,OAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAAzC,EAAAsB,EAAA,gBAAA3D,MAAA,SAAAsD,EAAAG,GAAA,SAAA4C,IAAA,WAAAhD,GAAA,SAAAA,EAAAhB,GAAA2D,EAAA1C,EAAAG,EAAAJ,EAAAhB,EAAA,WAAAA,EAAAA,EAAAA,EAAA+D,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAvB,EAAAhB,EAAAoB,GAAA,IAAAE,EAAA7G,EAAA,gBAAA6E,EAAAmC,GAAA,GAAAH,IAAAsB,EAAA,UAAAqB,MAAA,mCAAA3C,IAAAuB,EAAA,cAAAvD,EAAA,MAAAmC,EAAA,OAAA9D,MAAAsD,EAAAiD,MAAA,OAAA9C,EAAA+C,OAAA7E,EAAA8B,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAAgD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAT,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAA7G,EAAA,MAAA6G,EAAAuB,EAAAzB,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAsB,EAAA,IAAAK,EAAAT,EAAAxB,EAAAhB,EAAAoB,GAAA,cAAA6B,EAAAzE,KAAA,IAAA8C,EAAAF,EAAA8C,KAAArB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAnF,MAAAsF,EAAAR,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAjB,EAAAzE,OAAA8C,EAAAuB,EAAAzB,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAQ,EAAAR,IAAA,YAAA4B,EAAArD,EAAAhB,GAAA,IAAAoB,EAAApB,EAAAmE,OAAA7C,EAAAN,EAAAU,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAjB,EAAAoE,SAAA,eAAAhD,GAAAJ,EAAAU,SAAA,SAAA1B,EAAAmE,OAAA,SAAAnE,EAAAyC,IAAAxB,EAAAoD,EAAArD,EAAAhB,GAAA,UAAAA,EAAAmE,SAAA,WAAA/C,IAAApB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA0B,EAAA,IAAAxD,EAAAkD,EAAAlB,EAAAN,EAAAU,SAAA1B,EAAAyC,KAAA,aAAAnD,EAAAd,KAAA,OAAAwB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAAnD,EAAAmD,IAAAzC,EAAAoE,SAAA,KAAAtB,EAAA,IAAArB,EAAAnC,EAAAmD,IAAA,OAAAhB,EAAAA,EAAAyC,MAAAlE,EAAAgB,EAAA2D,YAAAlD,EAAA9D,MAAAqC,EAAA4E,KAAA5D,EAAA6D,QAAA,WAAA7E,EAAAmE,SAAAnE,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,GAAAjB,EAAAoE,SAAA,KAAAtB,GAAArB,GAAAzB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAA1E,EAAAoE,SAAA,KAAAtB,EAAA,UAAAgC,EAAA7D,GAAA,IAAAD,EAAA,CAAA+D,OAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,SAAA/D,EAAA,SAAAA,IAAAD,EAAAiE,WAAAhE,EAAA,GAAAD,EAAAkE,SAAAjE,EAAA,SAAAkE,WAAAC,KAAApE,EAAA,UAAAqE,EAAApE,GAAA,IAAAD,EAAAC,EAAAqE,YAAA,GAAAtE,EAAAxC,KAAA,gBAAAwC,EAAAyB,IAAAxB,EAAAqE,WAAAtE,CAAA,UAAAsB,EAAArB,GAAA,KAAAkE,WAAA,EAAAJ,OAAA,SAAA9D,EAAAuC,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAhB,EAAAgB,EAAAS,GAAA,GAAAzB,EAAA,OAAAA,EAAA0C,KAAA1B,GAAA,sBAAAA,EAAA4D,KAAA,OAAA5D,EAAA,IAAAwE,MAAAxE,EAAAyE,QAAA,KAAAnE,GAAA,EAAAhC,EAAA,SAAAsF,IAAA,OAAAtD,EAAAN,EAAAyE,QAAA,GAAArE,EAAAsB,KAAA1B,EAAAM,GAAA,OAAAsD,EAAAjH,MAAAqD,EAAAM,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,SAAAtF,EAAAsF,KAAAtF,CAAA,YAAAoF,UAAAd,EAAA5C,GAAA,2BAAA+B,EAAA5B,UAAA6B,EAAA1B,EAAAgC,EAAA,eAAA3F,MAAAqF,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAArF,MAAAoF,EAAAd,cAAA,IAAAc,EAAA2C,YAAA3D,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAA2E,oBAAA,SAAA1E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA2E,YAAA,QAAA5E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAA0E,aAAA1E,EAAA6E,MAAA,EAAA7E,EAAA8E,KAAA,SAAA7E,GAAA,OAAAC,OAAA6E,eAAA7E,OAAA6E,eAAA9E,EAAA+B,IAAA/B,EAAA+E,UAAAhD,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAiB,GAAArC,CAAA,EAAAD,EAAAiF,MAAA,SAAAhF,GAAA,OAAA6C,QAAA7C,EAAA,EAAAsC,EAAAG,EAAAvC,WAAAY,EAAA2B,EAAAvC,UAAAQ,GAAA,0BAAAX,EAAA0C,cAAAA,EAAA1C,EAAAkF,MAAA,SAAAjF,EAAAjB,EAAAoB,EAAAE,EAAAhC,QAAA,IAAAA,IAAAA,EAAA6G,SAAA,IAAA1E,EAAA,IAAAiC,EAAAvB,EAAAlB,EAAAjB,EAAAoB,EAAAE,GAAAhC,GAAA,OAAA0B,EAAA2E,oBAAA3F,GAAAyB,EAAAA,EAAAmD,OAAAb,MAAA,SAAA9C,GAAA,OAAAA,EAAAiD,KAAAjD,EAAAtD,MAAA8D,EAAAmD,MAAA,KAAArB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAAtC,EAAAoF,KAAA,SAAAnF,GAAA,IAAAD,EAAAE,OAAAD,GAAAjB,EAAA,WAAAoB,KAAAJ,EAAAhB,EAAAoF,KAAAhE,GAAA,OAAApB,EAAAqG,UAAA,SAAAzB,IAAA,KAAA5E,EAAAyF,QAAA,KAAAxE,EAAAjB,EAAAsG,MAAA,GAAArF,KAAAD,EAAA,OAAA4D,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA5D,EAAAqC,OAAAA,EAAAf,EAAAnB,UAAA,CAAAyE,YAAAtD,EAAAiD,MAAA,SAAAvE,GAAA,QAAAuF,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAAtD,EAAA,KAAAiD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAxB,EAAA,KAAAkE,WAAA3B,QAAA6B,IAAArE,EAAA,QAAAhB,KAAA,WAAAA,EAAAwG,OAAA,IAAApF,EAAAsB,KAAA,KAAA1C,KAAAwF,OAAAxF,EAAAyG,MAAA,WAAAzG,GAAAiB,EAAA,EAAAyF,KAAA,gBAAAxC,MAAA,MAAAjD,EAAA,KAAAkE,WAAA,GAAAG,WAAA,aAAArE,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,YAAAkE,IAAA,EAAAnC,kBAAA,SAAAxD,GAAA,QAAAkD,KAAA,MAAAlD,EAAA,IAAAhB,EAAA,cAAA4G,EAAAxF,EAAAE,GAAA,OAAAG,EAAAjD,KAAA,QAAAiD,EAAAgB,IAAAzB,EAAAhB,EAAA4E,KAAAxD,EAAAE,IAAAtB,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,KAAAK,CAAA,SAAAA,EAAA,KAAA6D,WAAAM,OAAA,EAAAnE,GAAA,IAAAA,EAAA,KAAAhC,EAAA,KAAA6F,WAAA7D,GAAAG,EAAAnC,EAAAgG,WAAA,YAAAhG,EAAAyF,OAAA,OAAA6B,EAAA,UAAAtH,EAAAyF,QAAA,KAAAwB,KAAA,KAAA5E,EAAAP,EAAAsB,KAAApD,EAAA,YAAAuC,EAAAT,EAAAsB,KAAApD,EAAA,iBAAAqC,GAAAE,EAAA,SAAA0E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,WAAAuB,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,SAAAtD,GAAA,QAAA4E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,YAAAnD,EAAA,UAAAoC,MAAA,kDAAAsC,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,KAAAR,OAAA,SAAAxD,EAAAD,GAAA,QAAAhB,EAAA,KAAAmF,WAAAM,OAAA,EAAAzF,GAAA,IAAAA,EAAA,KAAAsB,EAAA,KAAA6D,WAAAnF,GAAA,GAAAsB,EAAAyD,QAAA,KAAAwB,MAAAnF,EAAAsB,KAAApB,EAAA,oBAAAiF,KAAAjF,EAAA2D,WAAA,KAAA3F,EAAAgC,EAAA,OAAAhC,IAAA,UAAA2B,GAAA,aAAAA,IAAA3B,EAAAyF,QAAA/D,GAAAA,GAAA1B,EAAA2F,aAAA3F,EAAA,UAAAmC,EAAAnC,EAAAA,EAAAgG,WAAA,UAAA7D,EAAAjD,KAAAyC,EAAAQ,EAAAgB,IAAAzB,EAAA1B,GAAA,KAAA6E,OAAA,YAAAS,KAAAtF,EAAA2F,WAAAnC,GAAA,KAAA+D,SAAApF,EAAA,EAAAoF,SAAA,SAAA5F,EAAAD,GAAA,aAAAC,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,gBAAAxB,EAAAzC,MAAA,aAAAyC,EAAAzC,KAAA,KAAAoG,KAAA3D,EAAAwB,IAAA,WAAAxB,EAAAzC,MAAA,KAAAmI,KAAA,KAAAlE,IAAAxB,EAAAwB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA3D,EAAAzC,MAAAwC,IAAA,KAAA4D,KAAA5D,GAAA8B,CAAA,EAAAgE,OAAA,SAAA7F,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAAiF,aAAAhE,EAAA,YAAA4F,SAAA7G,EAAAsF,WAAAtF,EAAAkF,UAAAG,EAAArF,GAAA8C,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAA+E,SAAA9D,EAAA,KAAAG,EAAApB,EAAAsF,WAAA,aAAAlE,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAqB,IAAA4C,EAAArF,EAAA,QAAAsB,CAAA,YAAA2C,MAAA,0BAAA8C,cAAA,SAAA/F,EAAAhB,EAAAoB,GAAA,YAAAgD,SAAA,CAAA1C,SAAA2B,EAAArC,GAAA2D,WAAA3E,EAAA6E,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAxB,GAAA6B,CAAA,GAAA9B,CAAA,UAAAqH,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAAf,EAAAjF,GAAA,QAAAiG,EAAAJ,EAAAZ,GAAAjF,GAAA9E,EAAA+K,EAAA/K,KAAA,OAAAgL,GAAA,YAAAJ,EAAAI,EAAA,CAAAD,EAAAxE,KAAAL,EAAAlG,GAAAwI,QAAAtC,QAAAlG,GAAAoG,KAAAyE,EAAAC,EAAA,UAAApM,EAAA4M,EAAA3J,GAAA,gBAAA2J,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAA,CAAA,CAAAE,CAAAF,IAAA,SAAAjJ,EAAA2C,GAAA,IAAA1B,EAAA,MAAAjB,EAAA,yBAAAwB,QAAAxB,EAAAwB,OAAAE,WAAA1B,EAAA,uBAAAiB,EAAA,KAAAD,EAAAI,EAAA9B,EAAAuC,EAAAJ,EAAA,GAAAmB,GAAA,EAAAtB,GAAA,SAAAhC,GAAA2B,EAAAA,EAAAyB,KAAA1C,IAAA4E,KAAA,IAAAjC,EAAA,IAAAzB,OAAAD,KAAAA,EAAA,OAAA2B,GAAA,cAAAA,GAAA5B,EAAA1B,EAAAoD,KAAAzB,IAAAiD,QAAAzC,EAAA2D,KAAApE,EAAArD,OAAA8D,EAAAgE,SAAA9C,GAAAC,GAAA,UAAA5C,GAAAsB,GAAA,EAAAF,EAAApB,CAAA,iBAAA4C,GAAA,MAAA3B,EAAA,SAAAY,EAAAZ,EAAA,SAAAC,OAAAW,KAAAA,GAAA,kBAAAP,EAAA,MAAAF,CAAA,SAAAK,CAAA,EAAA2H,CAAAH,EAAA3J,IAAA,SAAAgC,EAAA+H,GAAA,IAAA/H,EAAA,2BAAAA,EAAA,OAAAgI,EAAAhI,EAAA+H,GAAA,IAAAjI,EAAAF,OAAAC,UAAAoI,SAAA7G,KAAApB,GAAAmF,MAAA,iBAAArF,GAAAE,EAAAsE,cAAAxE,EAAAE,EAAAsE,YAAAC,MAAA,WAAAzE,GAAA,QAAAA,EAAA,OAAAtB,MAAA0J,KAAAlI,GAAA,iBAAAF,GAAA,2CAAAqI,KAAArI,GAAA,OAAAkI,EAAAhI,EAAA+H,EAAA,CAAAK,CAAAT,EAAA3J,IAAA,qBAAAoF,UAAA,6IAAAiF,EAAA,UAAAL,EAAAL,EAAApK,IAAA,MAAAA,GAAAA,EAAAoK,EAAAxD,UAAA5G,EAAAoK,EAAAxD,QAAA,QAAAnG,EAAA,EAAAsK,EAAA,IAAA9J,MAAAjB,GAAAS,EAAAT,EAAAS,IAAAsK,EAAAtK,GAAA2J,EAAA3J,GAAA,OAAAsK,CAAA,CAwOA,QApNqB,SAAHjP,GAAoC,IAA9B0C,EAAO1C,EAAP0C,QAASilD,EAAc3nD,EAAd2nD,eAC8BnyC,EAAA9T,EAArB+T,EAAAA,UAAe,GAAM,GAApDyyC,EAAW1yC,EAAA,GAAE2yC,EAAc3yC,EAAA,GACqB0H,EAAAxb,EAArB+T,EAAAA,UAAe,GAAM,GAAhD2yC,EAASlrC,EAAA,GAAEmrC,EAAYnrC,EAAA,GACoCG,EAAA3b,EAArB+T,EAAAA,UAAe,GAAM,GAA3D6yC,EAAcjrC,EAAA,GAAEkrC,EAAkBlrC,EAAA,GAC4B4G,EAAAviB,EAArB+T,EAAAA,UAAe,GAAM,GAA9D+yC,EAAgBvkC,EAAA,GAAEwkC,EAAmBxkC,EAAA,GACgBoB,EAAA3jB,EAAlB+T,EAAAA,SAAe,IAAG,GACtD/Q,GADc2gB,EAAA,GAAkBA,EAAA,GACzB3iB,SAAAA,EAASgC,KAAO,IAAIyK,EAAAA,EAAKzM,EAAQgC,MAAQ,MAChDmU,GAAOo7B,EAAAA,EAAAA,KAEwD7f,EAAA1yB,EAArB+T,EAAAA,UAAe,GAAM,GAA9DizC,EAAgBt0B,EAAA,GAAEu0B,EAAmBv0B,EAAA,GAKdw0B,EAAAlnD,GAA1ByT,EAAAA,EAAAA,MAA0B,GADvBT,EAAak0C,EAAA,GAGdC,GAHuCD,EAAA,GAArB1mD,UAGO,SAACmE,GAC5BA,EAAE6Q,iBACFmxC,GAAa,GACbE,GAAmB,GACnBE,GAAoB,EACxB,GAmBMK,EAAsB,SAACziD,EAAGmN,GAC5BnN,EAAE6Q,iBAEF/E,KAAKO,KAAK,CACNC,KAAM,UACNC,MAAO,gDACP2lC,KAAM,sGACNwQ,gBAAgB,EAChBC,eAAgB,SAGhBz2C,mBAAmB,EACnBkmC,kBAAmB,kBACnBwQ,mBAAoB,UACpBtQ,YAAa,CACTC,cAAe,wBACfsQ,WAAY,sBAEhBC,gBAAgB,IACjB//C,MAAK,SAACiE,GACDA,EAAI8tB,aACJiuB,GAER,IAGA,IAAMA,EAAiB,eAtF/Bl7C,EAsF+BoD,GAtF/BpD,EAsF+B9H,IAAA+E,MAAG,SAAAyE,IAAA,OAAAxJ,IAAAoB,MAAA,SAAAsI,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA7F,MAAA,cAAA6F,EAAA7F,KAAA,EACCyK,EAAclB,GAAWzD,SAAQ,OAA1CD,EAAAnG,MAEV0I,EAAAA,GAAMoa,QAAQ,gCACjB,wBAAA3c,EAAA/D,OAAA,GAAA6D,EAAA,IA1Fb,eAAAzB,EAAA,KAAAC,EAAA1B,UAAA,WAAAlB,SAAA,SAAAtC,EAAA0E,GAAA,IAAAD,EAAAO,EAAA1B,MAAA2B,EAAAC,GAAA,SAAAP,EAAA7K,GAAA0K,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,OAAA9K,EAAA,UAAA8K,EAAAO,GAAAX,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,QAAAO,EAAA,CAAAR,OAAAT,EAAA,MA2FS,kBALsB,OAAAkE,EAAA9E,MAAA,KAAAE,UAAA,IAM3B,EAQyBmM,EAAKG,QAAYtU,EAAKsU,QAI/C,OACI3W,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,oEAAmEd,UAC9EqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,2CACVmC,MAAO,CAAEoW,SAAU,QAASrZ,SAAA,EAG5BF,EAAAA,EAAAA,KAACgnD,EAAAA,EAAO,CAAC3mD,QAASA,EAASyiC,SAAU2jB,KAErCzmD,EAAAA,EAAAA,KAAC0kD,EAAAA,EAAM,CAAAxkD,UACHF,EAAAA,EAAAA,KAAC0kD,EAAAA,EAAOC,KAAI,CACRC,WACKvkD,EAAQyZ,YAAmC,IAArBtD,EAAKC,YAC/BvW,UAEDqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,2BAA0Bd,SAAA,EAWrCqB,EAAAA,EAAAA,MAACmjD,EAAAA,EAAOC,KAAI,CAACC,WAAYvkD,EAAQyZ,WAAW5Z,SAAA,EACxCF,EAAAA,EAAAA,KAAA,KAAG4U,KAAK,IAAIpB,QAASgzC,EAAuBtmD,SAAC,WAG7CF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,OACNF,EAAAA,EAAAA,KAAA,KAAG4U,KAAK,IAAIpB,QApFT,SAACxP,GAC5BA,EAAE6Q,iBACFmxC,GAAa,GACbE,GAAmB,GACnBE,GAAoB,EACxB,EA+EwElmD,UACxCF,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,gCAiBrBhB,EAAAA,EAAAA,KAAC0kD,EAAAA,EAAM,CAAAxkD,UACHF,EAAAA,EAAAA,KAAC0kD,EAAAA,EAAOC,KAAI,CACRC,WAAWvkD,aAAO,EAAPA,EAAS4mD,eAAgB,EAAE/mD,UAEtCqB,EAAAA,EAAAA,MAAA,OACIP,UAAU,gBACVwS,QAAS,kBACLsyC,GAAgBD,EAAY,EAC/B3lD,SAAA,EAEDF,EAAAA,EAAAA,KAACknD,EAAAA,EAAW,CACRxlD,MAAOI,IAAAA,IACHzB,aAAO,EAAPA,EAAS8mD,eACT,SAAC9kD,GAAI,OAAA+H,EAAAA,EAAA,GACE/H,GAAI,IACPE,IAAKF,EAAKsmB,WAAS,OAI/BpnB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,YAAWd,SAAA,CACrBG,EAAQ4mD,cAAc,cAE1BZ,GACGrmD,EAAAA,EAAAA,KAAC4nB,EAAAA,EAAM,CAACrX,MAAM,KACd,mBAW3Bs1C,GACG7lD,EAAAA,EAAAA,KAAA4C,EAAAA,SAAA,CAAA1C,UACIF,EAAAA,EAAAA,KAAConD,EAAAA,EAAmB,CAChB/mD,QAASA,EACT2jD,QAASwC,EACTa,iBAAkBtB,EAClBjjB,SAAU2jB,EACV9zB,GAAI,SAACpyB,GAAO,OAAK+lD,EAAoB/lD,EAAQ,MAGrD,MAEJgB,EAAAA,EAAAA,MAACmjD,EAAAA,EAAM,CAAAxkD,SAAA,EACHF,EAAAA,EAAAA,KAAC0kD,EAAAA,EAAOC,KAAI,CAACC,UAAWqB,EAAe/lD,UACnCF,EAAAA,EAAAA,KAACsnD,EAAAA,EAAW,CACRjnD,QAASA,EACTilD,eAAgBA,EAChBvnD,MAAO,kBAAMmoD,GAAmB,EAAM,OAI9ClmD,EAAAA,EAAAA,KAAC0kD,EAAAA,EAAOC,KAAI,CAACC,UAAWmB,EAAU7lD,UAC9BF,EAAAA,EAAAA,KAACunD,EAAAA,EAAY,CACTlnD,QAASA,EACT2jD,QAAS,WACL8B,GAAe,EACnB,EACA/nD,MAAO,kBAAMioD,GAAa,EAAM,OAIxChmD,EAAAA,EAAAA,KAAC0kD,EAAAA,EAAOC,KAAI,CAACC,UAAWuB,EAAiBjmD,UACrCF,EAAAA,EAAAA,KAACwnD,EAAAA,EAAgB,CACbnnD,QAASA,EACT2jD,QAAS,kBAAM8B,GAAe,EAAK,EACnC/nD,MAAO,kBAAMqoD,GAAoB,EAAM,aAOnE,8XCtOAriD,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAhB,EAAAkB,OAAAC,UAAAC,EAAApB,EAAAqB,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAN,EAAAD,EAAAhB,GAAAiB,EAAAD,GAAAhB,EAAArC,KAAA,EAAA2B,EAAA,mBAAAkC,OAAAA,OAAA,GAAAC,EAAAnC,EAAAoC,UAAA,aAAAC,EAAArC,EAAAsC,eAAA,kBAAAC,EAAAvC,EAAAwC,aAAA,yBAAAC,EAAAd,EAAAD,EAAAhB,GAAA,OAAAkB,OAAAK,eAAAN,EAAAD,EAAA,CAAArD,MAAAqC,EAAAgC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,EAAA,KAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAhB,GAAA,OAAAiB,EAAAD,GAAAhB,CAAA,WAAAmC,EAAAlB,EAAAD,EAAAhB,EAAAoB,GAAA,IAAA9B,EAAA0B,GAAAA,EAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAA/C,EAAA6B,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAE,EAAAG,EAAA,WAAA9D,MAAA4E,EAAAtB,EAAAjB,EAAA2B,KAAAF,CAAA,UAAAe,EAAAvB,EAAAD,EAAAhB,GAAA,WAAAxB,KAAA,SAAAiE,IAAAxB,EAAAyB,KAAA1B,EAAAhB,GAAA,OAAAiB,GAAA,OAAAzC,KAAA,QAAAiE,IAAAxB,EAAA,EAAAD,EAAAmB,KAAAA,EAAA,IAAA1H,EAAA,iBAAAkI,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAApD,GAAAoB,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAM,EAAAtC,GAAA,0BAAAuC,SAAA,SAAAxC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAwC,QAAAzC,EAAAC,EAAA,gBAAAyC,EAAAzC,EAAAD,GAAA,SAAA2C,EAAA3D,EAAAsB,EAAAhC,EAAAmC,GAAA,IAAAE,EAAAa,EAAAvB,EAAAjB,GAAAiB,EAAAK,GAAA,aAAAK,EAAAnD,KAAA,KAAAqD,EAAAF,EAAAc,IAAAhI,EAAAoH,EAAAlE,MAAA,OAAAlD,GAAA,UAAAmJ,EAAAnJ,IAAA2G,EAAAsB,KAAAjI,EAAA,WAAAuG,EAAA6C,QAAApJ,EAAAqJ,SAAAC,MAAA,SAAA9C,GAAA0C,EAAA,OAAA1C,EAAA3B,EAAAmC,EAAA,aAAAR,GAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAT,EAAA6C,QAAApJ,GAAAsJ,MAAA,SAAA9C,GAAAY,EAAAlE,MAAAsD,EAAA3B,EAAAuC,EAAA,aAAAZ,GAAA,OAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAAzC,EAAAsB,EAAA,gBAAA3D,MAAA,SAAAsD,EAAAG,GAAA,SAAA4C,IAAA,WAAAhD,GAAA,SAAAA,EAAAhB,GAAA2D,EAAA1C,EAAAG,EAAAJ,EAAAhB,EAAA,WAAAA,EAAAA,EAAAA,EAAA+D,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAvB,EAAAhB,EAAAoB,GAAA,IAAAE,EAAA7G,EAAA,gBAAA6E,EAAAmC,GAAA,GAAAH,IAAAsB,EAAA,UAAAqB,MAAA,mCAAA3C,IAAAuB,EAAA,cAAAvD,EAAA,MAAAmC,EAAA,OAAA9D,MAAAsD,EAAAiD,MAAA,OAAA9C,EAAA+C,OAAA7E,EAAA8B,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAAgD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAT,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAA7G,EAAA,MAAA6G,EAAAuB,EAAAzB,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAsB,EAAA,IAAAK,EAAAT,EAAAxB,EAAAhB,EAAAoB,GAAA,cAAA6B,EAAAzE,KAAA,IAAA8C,EAAAF,EAAA8C,KAAArB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAnF,MAAAsF,EAAAR,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAjB,EAAAzE,OAAA8C,EAAAuB,EAAAzB,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAQ,EAAAR,IAAA,YAAA4B,EAAArD,EAAAhB,GAAA,IAAAoB,EAAApB,EAAAmE,OAAA7C,EAAAN,EAAAU,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAjB,EAAAoE,SAAA,eAAAhD,GAAAJ,EAAAU,SAAA,SAAA1B,EAAAmE,OAAA,SAAAnE,EAAAyC,IAAAxB,EAAAoD,EAAArD,EAAAhB,GAAA,UAAAA,EAAAmE,SAAA,WAAA/C,IAAApB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA0B,EAAA,IAAAxD,EAAAkD,EAAAlB,EAAAN,EAAAU,SAAA1B,EAAAyC,KAAA,aAAAnD,EAAAd,KAAA,OAAAwB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAAnD,EAAAmD,IAAAzC,EAAAoE,SAAA,KAAAtB,EAAA,IAAArB,EAAAnC,EAAAmD,IAAA,OAAAhB,EAAAA,EAAAyC,MAAAlE,EAAAgB,EAAA2D,YAAAlD,EAAA9D,MAAAqC,EAAA4E,KAAA5D,EAAA6D,QAAA,WAAA7E,EAAAmE,SAAAnE,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,GAAAjB,EAAAoE,SAAA,KAAAtB,GAAArB,GAAAzB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAA1E,EAAAoE,SAAA,KAAAtB,EAAA,UAAAgC,EAAA7D,GAAA,IAAAD,EAAA,CAAA+D,OAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,SAAA/D,EAAA,SAAAA,IAAAD,EAAAiE,WAAAhE,EAAA,GAAAD,EAAAkE,SAAAjE,EAAA,SAAAkE,WAAAC,KAAApE,EAAA,UAAAqE,EAAApE,GAAA,IAAAD,EAAAC,EAAAqE,YAAA,GAAAtE,EAAAxC,KAAA,gBAAAwC,EAAAyB,IAAAxB,EAAAqE,WAAAtE,CAAA,UAAAsB,EAAArB,GAAA,KAAAkE,WAAA,EAAAJ,OAAA,SAAA9D,EAAAuC,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAhB,EAAAgB,EAAAS,GAAA,GAAAzB,EAAA,OAAAA,EAAA0C,KAAA1B,GAAA,sBAAAA,EAAA4D,KAAA,OAAA5D,EAAA,IAAAwE,MAAAxE,EAAAyE,QAAA,KAAAnE,GAAA,EAAAhC,EAAA,SAAAsF,IAAA,OAAAtD,EAAAN,EAAAyE,QAAA,GAAArE,EAAAsB,KAAA1B,EAAAM,GAAA,OAAAsD,EAAAjH,MAAAqD,EAAAM,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,SAAAtF,EAAAsF,KAAAtF,CAAA,YAAAoF,UAAAd,EAAA5C,GAAA,2BAAA+B,EAAA5B,UAAA6B,EAAA1B,EAAAgC,EAAA,eAAA3F,MAAAqF,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAArF,MAAAoF,EAAAd,cAAA,IAAAc,EAAA2C,YAAA3D,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAA2E,oBAAA,SAAA1E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA2E,YAAA,QAAA5E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAA0E,aAAA1E,EAAA6E,MAAA,EAAA7E,EAAA8E,KAAA,SAAA7E,GAAA,OAAAC,OAAA6E,eAAA7E,OAAA6E,eAAA9E,EAAA+B,IAAA/B,EAAA+E,UAAAhD,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAiB,GAAArC,CAAA,EAAAD,EAAAiF,MAAA,SAAAhF,GAAA,OAAA6C,QAAA7C,EAAA,EAAAsC,EAAAG,EAAAvC,WAAAY,EAAA2B,EAAAvC,UAAAQ,GAAA,0BAAAX,EAAA0C,cAAAA,EAAA1C,EAAAkF,MAAA,SAAAjF,EAAAjB,EAAAoB,EAAAE,EAAAhC,QAAA,IAAAA,IAAAA,EAAA6G,SAAA,IAAA1E,EAAA,IAAAiC,EAAAvB,EAAAlB,EAAAjB,EAAAoB,EAAAE,GAAAhC,GAAA,OAAA0B,EAAA2E,oBAAA3F,GAAAyB,EAAAA,EAAAmD,OAAAb,MAAA,SAAA9C,GAAA,OAAAA,EAAAiD,KAAAjD,EAAAtD,MAAA8D,EAAAmD,MAAA,KAAArB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAAtC,EAAAoF,KAAA,SAAAnF,GAAA,IAAAD,EAAAE,OAAAD,GAAAjB,EAAA,WAAAoB,KAAAJ,EAAAhB,EAAAoF,KAAAhE,GAAA,OAAApB,EAAAqG,UAAA,SAAAzB,IAAA,KAAA5E,EAAAyF,QAAA,KAAAxE,EAAAjB,EAAAsG,MAAA,GAAArF,KAAAD,EAAA,OAAA4D,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA5D,EAAAqC,OAAAA,EAAAf,EAAAnB,UAAA,CAAAyE,YAAAtD,EAAAiD,MAAA,SAAAvE,GAAA,QAAAuF,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAAtD,EAAA,KAAAiD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAxB,EAAA,KAAAkE,WAAA3B,QAAA6B,IAAArE,EAAA,QAAAhB,KAAA,WAAAA,EAAAwG,OAAA,IAAApF,EAAAsB,KAAA,KAAA1C,KAAAwF,OAAAxF,EAAAyG,MAAA,WAAAzG,GAAAiB,EAAA,EAAAyF,KAAA,gBAAAxC,MAAA,MAAAjD,EAAA,KAAAkE,WAAA,GAAAG,WAAA,aAAArE,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,YAAAkE,IAAA,EAAAnC,kBAAA,SAAAxD,GAAA,QAAAkD,KAAA,MAAAlD,EAAA,IAAAhB,EAAA,cAAA4G,EAAAxF,EAAAE,GAAA,OAAAG,EAAAjD,KAAA,QAAAiD,EAAAgB,IAAAzB,EAAAhB,EAAA4E,KAAAxD,EAAAE,IAAAtB,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,KAAAK,CAAA,SAAAA,EAAA,KAAA6D,WAAAM,OAAA,EAAAnE,GAAA,IAAAA,EAAA,KAAAhC,EAAA,KAAA6F,WAAA7D,GAAAG,EAAAnC,EAAAgG,WAAA,YAAAhG,EAAAyF,OAAA,OAAA6B,EAAA,UAAAtH,EAAAyF,QAAA,KAAAwB,KAAA,KAAA5E,EAAAP,EAAAsB,KAAApD,EAAA,YAAAuC,EAAAT,EAAAsB,KAAApD,EAAA,iBAAAqC,GAAAE,EAAA,SAAA0E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,WAAAuB,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,SAAAtD,GAAA,QAAA4E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,YAAAnD,EAAA,UAAAoC,MAAA,kDAAAsC,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,KAAAR,OAAA,SAAAxD,EAAAD,GAAA,QAAAhB,EAAA,KAAAmF,WAAAM,OAAA,EAAAzF,GAAA,IAAAA,EAAA,KAAAsB,EAAA,KAAA6D,WAAAnF,GAAA,GAAAsB,EAAAyD,QAAA,KAAAwB,MAAAnF,EAAAsB,KAAApB,EAAA,oBAAAiF,KAAAjF,EAAA2D,WAAA,KAAA3F,EAAAgC,EAAA,OAAAhC,IAAA,UAAA2B,GAAA,aAAAA,IAAA3B,EAAAyF,QAAA/D,GAAAA,GAAA1B,EAAA2F,aAAA3F,EAAA,UAAAmC,EAAAnC,EAAAA,EAAAgG,WAAA,UAAA7D,EAAAjD,KAAAyC,EAAAQ,EAAAgB,IAAAzB,EAAA1B,GAAA,KAAA6E,OAAA,YAAAS,KAAAtF,EAAA2F,WAAAnC,GAAA,KAAA+D,SAAApF,EAAA,EAAAoF,SAAA,SAAA5F,EAAAD,GAAA,aAAAC,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,gBAAAxB,EAAAzC,MAAA,aAAAyC,EAAAzC,KAAA,KAAAoG,KAAA3D,EAAAwB,IAAA,WAAAxB,EAAAzC,MAAA,KAAAmI,KAAA,KAAAlE,IAAAxB,EAAAwB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA3D,EAAAzC,MAAAwC,IAAA,KAAA4D,KAAA5D,GAAA8B,CAAA,EAAAgE,OAAA,SAAA7F,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAAiF,aAAAhE,EAAA,YAAA4F,SAAA7G,EAAAsF,WAAAtF,EAAAkF,UAAAG,EAAArF,GAAA8C,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAA+E,SAAA9D,EAAA,KAAAG,EAAApB,EAAAsF,WAAA,aAAAlE,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAqB,IAAA4C,EAAArF,EAAA,QAAAsB,CAAA,YAAA2C,MAAA,0BAAA8C,cAAA,SAAA/F,EAAAhB,EAAAoB,GAAA,YAAAgD,SAAA,CAAA1C,SAAA2B,EAAArC,GAAA2D,WAAA3E,EAAA6E,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAxB,GAAA6B,CAAA,GAAA9B,CAAA,UAAAgG,EAAAhG,EAAAhB,GAAA,IAAAiB,EAAAC,OAAAkF,KAAApF,GAAA,GAAAE,OAAA+F,sBAAA,KAAA3F,EAAAJ,OAAA+F,sBAAAjG,GAAAhB,IAAAsB,EAAAA,EAAAlE,QAAA,SAAA4C,GAAA,OAAAkB,OAAAgG,yBAAAlG,EAAAhB,GAAAgC,UAAA,KAAAf,EAAAmE,KAAA+B,MAAAlG,EAAAK,EAAA,QAAAL,CAAA,UAAAmG,EAAApG,GAAA,QAAAhB,EAAA,EAAAA,EAAAqH,UAAA5B,OAAAzF,IAAA,KAAAiB,EAAA,MAAAoG,UAAArH,GAAAqH,UAAArH,GAAA,GAAAA,EAAA,EAAAgH,EAAA9F,OAAAD,IAAA,GAAAuC,SAAA,SAAAxD,GAAAsH,EAAAtG,EAAAhB,EAAAiB,EAAAjB,GAAA,IAAAkB,OAAAqG,0BAAArG,OAAAsG,iBAAAxG,EAAAE,OAAAqG,0BAAAtG,IAAA+F,EAAA9F,OAAAD,IAAAuC,SAAA,SAAAxD,GAAAkB,OAAAK,eAAAP,EAAAhB,EAAAkB,OAAAgG,yBAAAjG,EAAAjB,GAAA,WAAAgB,CAAA,UAAAsG,EAAAG,EAAAC,EAAA/J,GAAA,OAAA+J,EAAA,SAAAjF,GAAA,IAAAiF,EAAA,SAAAC,EAAAC,GAAA,cAAAhE,EAAA+D,IAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAAnG,OAAAsG,aAAA,QAAAC,IAAAF,EAAA,KAAAG,EAAAH,EAAAnF,KAAAiF,EAAAC,GAAA,yBAAAhE,EAAAoE,GAAA,OAAAA,EAAA,UAAAtD,UAAA,kEAAAkD,EAAAK,OAAAC,QAAAP,EAAA,CAAAQ,CAAA1F,EAAA,2BAAAmB,EAAA8D,GAAAA,EAAAO,OAAAP,EAAA,CAAAU,CAAAV,MAAAD,EAAAvG,OAAAK,eAAAkG,EAAAC,EAAA,CAAA/J,MAAAA,EAAAqE,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAuF,EAAAC,GAAA/J,EAAA8J,CAAA,UAAAY,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAAf,EAAAjF,GAAA,QAAAiG,EAAAJ,EAAAZ,GAAAjF,GAAA9E,EAAA+K,EAAA/K,KAAA,OAAAgL,GAAA,YAAAJ,EAAAI,EAAA,CAAAD,EAAAxE,KAAAL,EAAAlG,GAAAwI,QAAAtC,QAAAlG,GAAAoG,KAAAyE,EAAAC,EAAA,UAAApM,EAAA4M,EAAA3J,GAAA,gBAAA2J,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAA,CAAA,CAAAE,CAAAF,IAAA,SAAAjJ,EAAA2C,GAAA,IAAA1B,EAAA,MAAAjB,EAAA,yBAAAwB,QAAAxB,EAAAwB,OAAAE,WAAA1B,EAAA,uBAAAiB,EAAA,KAAAD,EAAAI,EAAA9B,EAAAuC,EAAAJ,EAAA,GAAAmB,GAAA,EAAAtB,GAAA,SAAAhC,GAAA2B,EAAAA,EAAAyB,KAAA1C,IAAA4E,KAAA,IAAAjC,EAAA,IAAAzB,OAAAD,KAAAA,EAAA,OAAA2B,GAAA,cAAAA,GAAA5B,EAAA1B,EAAAoD,KAAAzB,IAAAiD,QAAAzC,EAAA2D,KAAApE,EAAArD,OAAA8D,EAAAgE,SAAA9C,GAAAC,GAAA,UAAA5C,GAAAsB,GAAA,EAAAF,EAAApB,CAAA,iBAAA4C,GAAA,MAAA3B,EAAA,SAAAY,EAAAZ,EAAA,SAAAC,OAAAW,KAAAA,GAAA,kBAAAP,EAAA,MAAAF,CAAA,SAAAK,CAAA,EAAA2H,CAAAH,EAAA3J,IAAA,SAAAgC,EAAA+H,GAAA,IAAA/H,EAAA,2BAAAA,EAAA,OAAAgI,EAAAhI,EAAA+H,GAAA,IAAAjI,EAAAF,OAAAC,UAAAoI,SAAA7G,KAAApB,GAAAmF,MAAA,iBAAArF,GAAAE,EAAAsE,cAAAxE,EAAAE,EAAAsE,YAAAC,MAAA,WAAAzE,GAAA,QAAAA,EAAA,OAAAtB,MAAA0J,KAAAlI,GAAA,iBAAAF,GAAA,2CAAAqI,KAAArI,GAAA,OAAAkI,EAAAhI,EAAA+H,EAAA,CAAAK,CAAAT,EAAA3J,IAAA,qBAAAoF,UAAA,6IAAAiF,EAAA,UAAAL,EAAAL,EAAApK,IAAA,MAAAA,GAAAA,EAAAoK,EAAAxD,UAAA5G,EAAAoK,EAAAxD,QAAA,QAAAnG,EAAA,EAAAsK,EAAA,IAAA9J,MAAAjB,GAAAS,EAAAT,EAAAS,IAAAsK,EAAAtK,GAAA2J,EAAA3J,GAAA,OAAAsK,CAAA,CA+HA,QAvHqB,SAAHjP,GAAoC,IAA9B0C,EAAO1C,EAAP0C,QAAStC,EAAKJ,EAALI,MAAOimD,EAAOrmD,EAAPqmD,QACM7wC,EAAA9T,EAAlB+T,EAAAA,SAAe,IAAG,GAAnCY,EAAIb,EAAA,GAAEoyC,EAAOpyC,EAAA,GACwB0H,EAAAxb,EAAlB+T,EAAAA,SAAe,IAAG,GAArCmO,EAAK1G,EAAA,GAAE2G,EAAQ3G,EAAA,GACwBG,EAAA3b,EAApB+T,EAAAA,SAAe,MAAK,GAAvCzH,EAAKqP,EAAA,GAAE0R,EAAQ1R,EAAA,GAGiDipC,EAAA5kD,GAA7BwT,EAAAA,EAAAA,MAA6B,GAAhEV,EAAgB8xC,EAAA,GAAIpkD,EAASokD,EAAA,GAATpkD,UAErBqkD,EAAqB9wC,EAAAA,OAAa,MAExCA,EAAAA,iBAAsB,WACd8wC,GAAsBA,EAAmBz9B,SAEzCy9B,EAAmBz9B,QAAQ09B,eAAe,CAAEC,SAAU,UAE9D,GAAG,IAGH,IAMMqD,EAAS,eAhCnB57C,EAgCmBoD,GAhCnBpD,EAgCmB9H,IAAA+E,MAAG,SAAAyE,EAAOvJ,GAAC,IAAA0N,EAAA,OAAA3N,IAAAoB,MAAA,SAAAsI,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA7F,MAAA,OAGtB,GAFA5D,EAAE6Q,iBAGEb,EAAI,CAAAvG,EAAA7F,KAAA,QAC4E,OAAhF8kB,GAAS,SAAA7mB,GAAC,OAAAuE,EAAAA,EAAA,GAASvE,GAAC,IAAExF,QAAS,+CAA6C,IAAIoN,EAAAhG,OAAA,iBAyBpF,OApBMiK,EAAW,IAAI0Q,UACZC,OAAO,aAAcrO,GAC9BtC,EAAS2Q,OAAO,UAAWhiB,EAAQwR,SACnCH,EAAS2Q,OAAO,oBAAqBhiB,EAAQC,IAC7CoR,EAAS2Q,OACL,SACArQ,SACKC,cAAc,2BACdC,aAAa,YAEtBpP,MAAM0J,KAAK+U,GAAO/a,SAAQ,SAAC8b,GACvB5Q,EAAS2Q,OAAO,SAAUC,EAC9B,IAQA7U,EAAA7F,KAAA,GACMuK,EAAiB,CAAET,SAAAA,EAAUP,UAAW9Q,EAAQC,KAAMyG,MACxD,SAACiE,GACGgF,EAAAA,GAAMoa,QAAQ,+CACd45B,IACAjmD,GACJ,IACH,yBAAA0P,EAAA/D,OAAA,GAAA6D,EAAA,IArET,eAAAzB,EAAA,KAAAC,EAAA1B,UAAA,WAAAlB,SAAA,SAAAtC,EAAA0E,GAAA,IAAAD,EAAAO,EAAA1B,MAAA2B,EAAAC,GAAA,SAAAP,EAAA7K,GAAA0K,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,OAAA9K,EAAA,UAAA8K,EAAAO,GAAAX,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,QAAAO,EAAA,CAAAR,OAAAT,EAAA,MAsEK,gBAtCc4D,GAAA,OAAAM,EAAA9E,MAAA,KAAAE,UAAA,KAwCf,OACI9I,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBd,SAAA,EAC5BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,QAAOd,SAAA,EAClBqB,EAAAA,EAAAA,MAAC6R,EAAAA,SAAc,CAAAlT,SAAA,EACXqB,EAAAA,EAAAA,MAAA,MAAArB,SAAA,CAAI,WAAOqB,EAAAA,EAAAA,MAAA,OAAArB,SAAA,CAAM,KAACF,EAAAA,EAAAA,KAAA,QAAMgB,UAAU,cAAad,SAAC,cAAgB,WAChEF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,mBAAkBd,UAC7BF,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAiB,CACd/Z,KAAMqU,EACNpT,SAtDH,SAACoD,EAAG0e,GACrB,IAAM/iB,EAAO+iB,EAAOC,UACpB4iC,EAAQ5lD,EACZ,MAsDiBgM,SAAAA,EAAOtL,SAAUL,EAAAA,EAAAA,KAACykD,EAAS,CAAAvkD,SAAEyL,aAAK,EAALA,EAAOtL,UAAuB,MAE5DkB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMd,SAAA,EACjBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAC+iB,EAAAA,EAAiB,CACdxB,MAAOA,EACPC,SAAUA,EACV+iC,iBAAiB,sBACjBC,iBAAiB,iCAK7BjjD,EAAAA,EAAAA,MAACmjD,EAAAA,EAAM,CAAAxkD,SAAA,EACHF,EAAAA,EAAAA,KAAC0kD,EAAAA,EAAOC,KAAI,CAACC,UAAW/kD,EAAUK,UAC9BF,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,iCAAgCd,UAC3CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CACHxY,UAAU,OACVnB,UAAWA,EACXglD,YAAY,eAAc3kD,SAC7B,uBAMTF,EAAAA,EAAAA,KAAC0kD,EAAAA,EAAOC,KAAI,CAACC,WAAY/kD,EAAUK,UAC/BqB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCd,SAAA,EAC3CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAACxY,UAAU,OAAOwS,QAASi0C,EAAUvnD,SAAC,WAG7CF,EAAAA,EAAAA,KAACwZ,EAAAA,EAAM,CAAChG,QAASzV,EAAO0d,QAAQ,YAAWvb,SAAC,sBAQ5DF,EAAAA,EAAAA,KAAA,OAAKuU,IAAK2vC,MAGtB,EAKA,QAAMO,EAAYpsC,EAAAA,GAAOzE,IAAG0E,MAAA,gEAAAA,kLCvF5B,QAtC4B,SAAH3a,GAMnB,IALF0C,EAAO1C,EAAP0C,QACAsyB,EAAEh1B,EAAFg1B,GACAqxB,EAAOrmD,EAAPqmD,QACAqD,EAAe1pD,EAAf0pD,gBACAvkB,EAAQnlC,EAARmlC,SAEA4kB,GAA4Bn1C,EAAAA,EAAAA,IAA8BlS,EAAQC,GAAI,CAClEqjB,2BAA2B,IADvBhkB,EAAI+nD,EAAJ/nD,KAAME,EAAS6nD,EAAT7nD,UAQd,OAJAuT,EAAAA,WAAgB,WACZuf,EAAG9yB,EACP,GAAG,CAACA,KAGA0B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,2CAA0Cd,SAAA,CACpD4B,IAAAA,IAAMnC,GAAM,SAACqD,EAAGV,GAAC,OACdtC,EAAAA,EAAAA,KAAA,OAEIgB,UAAU,gDAA+Cd,UAEzDF,EAAAA,EAAAA,KAACgnD,EAAAA,EAAO,CAAC3mD,QAAS2C,EAAG8/B,SAAUA,KAH1BxgC,EAIH,IAGRjC,EAAQyZ,YAAeja,IAAawnD,EAOlC,MANArnD,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,6CAA4Cd,UACvDF,EAAAA,EAAAA,KAAA,UAAQwT,QAASwwC,EAAQ9jD,UAErBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAM9B,yTCzCA6D,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAhB,EAAAkB,OAAAC,UAAAC,EAAApB,EAAAqB,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAN,EAAAD,EAAAhB,GAAAiB,EAAAD,GAAAhB,EAAArC,KAAA,EAAA2B,EAAA,mBAAAkC,OAAAA,OAAA,GAAAC,EAAAnC,EAAAoC,UAAA,aAAAC,EAAArC,EAAAsC,eAAA,kBAAAC,EAAAvC,EAAAwC,aAAA,yBAAAC,EAAAd,EAAAD,EAAAhB,GAAA,OAAAkB,OAAAK,eAAAN,EAAAD,EAAA,CAAArD,MAAAqC,EAAAgC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,EAAA,KAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAhB,GAAA,OAAAiB,EAAAD,GAAAhB,CAAA,WAAAmC,EAAAlB,EAAAD,EAAAhB,EAAAoB,GAAA,IAAA9B,EAAA0B,GAAAA,EAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAA/C,EAAA6B,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAE,EAAAG,EAAA,WAAA9D,MAAA4E,EAAAtB,EAAAjB,EAAA2B,KAAAF,CAAA,UAAAe,EAAAvB,EAAAD,EAAAhB,GAAA,WAAAxB,KAAA,SAAAiE,IAAAxB,EAAAyB,KAAA1B,EAAAhB,GAAA,OAAAiB,GAAA,OAAAzC,KAAA,QAAAiE,IAAAxB,EAAA,EAAAD,EAAAmB,KAAAA,EAAA,IAAA1H,EAAA,iBAAAkI,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAApD,GAAAoB,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAM,EAAAtC,GAAA,0BAAAuC,SAAA,SAAAxC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAwC,QAAAzC,EAAAC,EAAA,gBAAAyC,EAAAzC,EAAAD,GAAA,SAAA2C,EAAA3D,EAAAsB,EAAAhC,EAAAmC,GAAA,IAAAE,EAAAa,EAAAvB,EAAAjB,GAAAiB,EAAAK,GAAA,aAAAK,EAAAnD,KAAA,KAAAqD,EAAAF,EAAAc,IAAAhI,EAAAoH,EAAAlE,MAAA,OAAAlD,GAAA,UAAAmJ,EAAAnJ,IAAA2G,EAAAsB,KAAAjI,EAAA,WAAAuG,EAAA6C,QAAApJ,EAAAqJ,SAAAC,MAAA,SAAA9C,GAAA0C,EAAA,OAAA1C,EAAA3B,EAAAmC,EAAA,aAAAR,GAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAT,EAAA6C,QAAApJ,GAAAsJ,MAAA,SAAA9C,GAAAY,EAAAlE,MAAAsD,EAAA3B,EAAAuC,EAAA,aAAAZ,GAAA,OAAA0C,EAAA,QAAA1C,EAAA3B,EAAAmC,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAAzC,EAAAsB,EAAA,gBAAA3D,MAAA,SAAAsD,EAAAG,GAAA,SAAA4C,IAAA,WAAAhD,GAAA,SAAAA,EAAAhB,GAAA2D,EAAA1C,EAAAG,EAAAJ,EAAAhB,EAAA,WAAAA,EAAAA,EAAAA,EAAA+D,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAvB,EAAAhB,EAAAoB,GAAA,IAAAE,EAAA7G,EAAA,gBAAA6E,EAAAmC,GAAA,GAAAH,IAAAsB,EAAA,UAAAqB,MAAA,mCAAA3C,IAAAuB,EAAA,cAAAvD,EAAA,MAAAmC,EAAA,OAAA9D,MAAAsD,EAAAiD,MAAA,OAAA9C,EAAA+C,OAAA7E,EAAA8B,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAAgD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAT,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAA7G,EAAA,MAAA6G,EAAAuB,EAAAzB,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAsB,EAAA,IAAAK,EAAAT,EAAAxB,EAAAhB,EAAAoB,GAAA,cAAA6B,EAAAzE,KAAA,IAAA8C,EAAAF,EAAA8C,KAAArB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAnF,MAAAsF,EAAAR,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAjB,EAAAzE,OAAA8C,EAAAuB,EAAAzB,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAQ,EAAAR,IAAA,YAAA4B,EAAArD,EAAAhB,GAAA,IAAAoB,EAAApB,EAAAmE,OAAA7C,EAAAN,EAAAU,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAjB,EAAAoE,SAAA,eAAAhD,GAAAJ,EAAAU,SAAA,SAAA1B,EAAAmE,OAAA,SAAAnE,EAAAyC,IAAAxB,EAAAoD,EAAArD,EAAAhB,GAAA,UAAAA,EAAAmE,SAAA,WAAA/C,IAAApB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA0B,EAAA,IAAAxD,EAAAkD,EAAAlB,EAAAN,EAAAU,SAAA1B,EAAAyC,KAAA,aAAAnD,EAAAd,KAAA,OAAAwB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAAnD,EAAAmD,IAAAzC,EAAAoE,SAAA,KAAAtB,EAAA,IAAArB,EAAAnC,EAAAmD,IAAA,OAAAhB,EAAAA,EAAAyC,MAAAlE,EAAAgB,EAAA2D,YAAAlD,EAAA9D,MAAAqC,EAAA4E,KAAA5D,EAAA6D,QAAA,WAAA7E,EAAAmE,SAAAnE,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,GAAAjB,EAAAoE,SAAA,KAAAtB,GAAArB,GAAAzB,EAAAmE,OAAA,QAAAnE,EAAAyC,IAAA,IAAAiC,UAAA,oCAAA1E,EAAAoE,SAAA,KAAAtB,EAAA,UAAAgC,EAAA7D,GAAA,IAAAD,EAAA,CAAA+D,OAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,SAAA/D,EAAA,SAAAA,IAAAD,EAAAiE,WAAAhE,EAAA,GAAAD,EAAAkE,SAAAjE,EAAA,SAAAkE,WAAAC,KAAApE,EAAA,UAAAqE,EAAApE,GAAA,IAAAD,EAAAC,EAAAqE,YAAA,GAAAtE,EAAAxC,KAAA,gBAAAwC,EAAAyB,IAAAxB,EAAAqE,WAAAtE,CAAA,UAAAsB,EAAArB,GAAA,KAAAkE,WAAA,EAAAJ,OAAA,SAAA9D,EAAAuC,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAhB,EAAAgB,EAAAS,GAAA,GAAAzB,EAAA,OAAAA,EAAA0C,KAAA1B,GAAA,sBAAAA,EAAA4D,KAAA,OAAA5D,EAAA,IAAAwE,MAAAxE,EAAAyE,QAAA,KAAAnE,GAAA,EAAAhC,EAAA,SAAAsF,IAAA,OAAAtD,EAAAN,EAAAyE,QAAA,GAAArE,EAAAsB,KAAA1B,EAAAM,GAAA,OAAAsD,EAAAjH,MAAAqD,EAAAM,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,SAAAtF,EAAAsF,KAAAtF,CAAA,YAAAoF,UAAAd,EAAA5C,GAAA,2BAAA+B,EAAA5B,UAAA6B,EAAA1B,EAAAgC,EAAA,eAAA3F,MAAAqF,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAArF,MAAAoF,EAAAd,cAAA,IAAAc,EAAA2C,YAAA3D,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAA2E,oBAAA,SAAA1E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA2E,YAAA,QAAA5E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAA0E,aAAA1E,EAAA6E,MAAA,EAAA7E,EAAA8E,KAAA,SAAA7E,GAAA,OAAAC,OAAA6E,eAAA7E,OAAA6E,eAAA9E,EAAA+B,IAAA/B,EAAA+E,UAAAhD,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAiB,GAAArC,CAAA,EAAAD,EAAAiF,MAAA,SAAAhF,GAAA,OAAA6C,QAAA7C,EAAA,EAAAsC,EAAAG,EAAAvC,WAAAY,EAAA2B,EAAAvC,UAAAQ,GAAA,0BAAAX,EAAA0C,cAAAA,EAAA1C,EAAAkF,MAAA,SAAAjF,EAAAjB,EAAAoB,EAAAE,EAAAhC,QAAA,IAAAA,IAAAA,EAAA6G,SAAA,IAAA1E,EAAA,IAAAiC,EAAAvB,EAAAlB,EAAAjB,EAAAoB,EAAAE,GAAAhC,GAAA,OAAA0B,EAAA2E,oBAAA3F,GAAAyB,EAAAA,EAAAmD,OAAAb,MAAA,SAAA9C,GAAA,OAAAA,EAAAiD,KAAAjD,EAAAtD,MAAA8D,EAAAmD,MAAA,KAAArB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAAtC,EAAAoF,KAAA,SAAAnF,GAAA,IAAAD,EAAAE,OAAAD,GAAAjB,EAAA,WAAAoB,KAAAJ,EAAAhB,EAAAoF,KAAAhE,GAAA,OAAApB,EAAAqG,UAAA,SAAAzB,IAAA,KAAA5E,EAAAyF,QAAA,KAAAxE,EAAAjB,EAAAsG,MAAA,GAAArF,KAAAD,EAAA,OAAA4D,EAAAjH,MAAAsD,EAAA2D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA5D,EAAAqC,OAAAA,EAAAf,EAAAnB,UAAA,CAAAyE,YAAAtD,EAAAiD,MAAA,SAAAvE,GAAA,QAAAuF,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAAtD,EAAA,KAAAiD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAxB,EAAA,KAAAkE,WAAA3B,QAAA6B,IAAArE,EAAA,QAAAhB,KAAA,WAAAA,EAAAwG,OAAA,IAAApF,EAAAsB,KAAA,KAAA1C,KAAAwF,OAAAxF,EAAAyG,MAAA,WAAAzG,GAAAiB,EAAA,EAAAyF,KAAA,gBAAAxC,MAAA,MAAAjD,EAAA,KAAAkE,WAAA,GAAAG,WAAA,aAAArE,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,YAAAkE,IAAA,EAAAnC,kBAAA,SAAAxD,GAAA,QAAAkD,KAAA,MAAAlD,EAAA,IAAAhB,EAAA,cAAA4G,EAAAxF,EAAAE,GAAA,OAAAG,EAAAjD,KAAA,QAAAiD,EAAAgB,IAAAzB,EAAAhB,EAAA4E,KAAAxD,EAAAE,IAAAtB,EAAAmE,OAAA,OAAAnE,EAAAyC,IAAAxB,KAAAK,CAAA,SAAAA,EAAA,KAAA6D,WAAAM,OAAA,EAAAnE,GAAA,IAAAA,EAAA,KAAAhC,EAAA,KAAA6F,WAAA7D,GAAAG,EAAAnC,EAAAgG,WAAA,YAAAhG,EAAAyF,OAAA,OAAA6B,EAAA,UAAAtH,EAAAyF,QAAA,KAAAwB,KAAA,KAAA5E,EAAAP,EAAAsB,KAAApD,EAAA,YAAAuC,EAAAT,EAAAsB,KAAApD,EAAA,iBAAAqC,GAAAE,EAAA,SAAA0E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,WAAAuB,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,SAAAtD,GAAA,QAAA4E,KAAAjH,EAAA0F,SAAA,OAAA4B,EAAAtH,EAAA0F,UAAA,YAAAnD,EAAA,UAAAoC,MAAA,kDAAAsC,KAAAjH,EAAA2F,WAAA,OAAA2B,EAAAtH,EAAA2F,WAAA,KAAAR,OAAA,SAAAxD,EAAAD,GAAA,QAAAhB,EAAA,KAAAmF,WAAAM,OAAA,EAAAzF,GAAA,IAAAA,EAAA,KAAAsB,EAAA,KAAA6D,WAAAnF,GAAA,GAAAsB,EAAAyD,QAAA,KAAAwB,MAAAnF,EAAAsB,KAAApB,EAAA,oBAAAiF,KAAAjF,EAAA2D,WAAA,KAAA3F,EAAAgC,EAAA,OAAAhC,IAAA,UAAA2B,GAAA,aAAAA,IAAA3B,EAAAyF,QAAA/D,GAAAA,GAAA1B,EAAA2F,aAAA3F,EAAA,UAAAmC,EAAAnC,EAAAA,EAAAgG,WAAA,UAAA7D,EAAAjD,KAAAyC,EAAAQ,EAAAgB,IAAAzB,EAAA1B,GAAA,KAAA6E,OAAA,YAAAS,KAAAtF,EAAA2F,WAAAnC,GAAA,KAAA+D,SAAApF,EAAA,EAAAoF,SAAA,SAAA5F,EAAAD,GAAA,aAAAC,EAAAzC,KAAA,MAAAyC,EAAAwB,IAAA,gBAAAxB,EAAAzC,MAAA,aAAAyC,EAAAzC,KAAA,KAAAoG,KAAA3D,EAAAwB,IAAA,WAAAxB,EAAAzC,MAAA,KAAAmI,KAAA,KAAAlE,IAAAxB,EAAAwB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA3D,EAAAzC,MAAAwC,IAAA,KAAA4D,KAAA5D,GAAA8B,CAAA,EAAAgE,OAAA,SAAA7F,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAAiF,aAAAhE,EAAA,YAAA4F,SAAA7G,EAAAsF,WAAAtF,EAAAkF,UAAAG,EAAArF,GAAA8C,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAhB,EAAA,KAAAmF,WAAAnE,GAAA,GAAAhB,EAAA+E,SAAA9D,EAAA,KAAAG,EAAApB,EAAAsF,WAAA,aAAAlE,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAqB,IAAA4C,EAAArF,EAAA,QAAAsB,CAAA,YAAA2C,MAAA,0BAAA8C,cAAA,SAAA/F,EAAAhB,EAAAoB,GAAA,YAAAgD,SAAA,CAAA1C,SAAA2B,EAAArC,GAAA2D,WAAA3E,EAAA6E,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAxB,GAAA6B,CAAA,GAAA9B,CAAA,UAAAqH,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAAf,EAAAjF,GAAA,QAAAiG,EAAAJ,EAAAZ,GAAAjF,GAAA9E,EAAA+K,EAAA/K,KAAA,OAAAgL,GAAA,YAAAJ,EAAAI,EAAA,CAAAD,EAAAxE,KAAAL,EAAAlG,GAAAwI,QAAAtC,QAAAlG,GAAAoG,KAAAyE,EAAAC,EAAA,UAAApM,EAAA4M,EAAA3J,GAAA,gBAAA2J,GAAA,GAAAnJ,MAAAoJ,QAAAD,GAAA,OAAAA,CAAA,CAAAE,CAAAF,IAAA,SAAAjJ,EAAA2C,GAAA,IAAA1B,EAAA,MAAAjB,EAAA,yBAAAwB,QAAAxB,EAAAwB,OAAAE,WAAA1B,EAAA,uBAAAiB,EAAA,KAAAD,EAAAI,EAAA9B,EAAAuC,EAAAJ,EAAA,GAAAmB,GAAA,EAAAtB,GAAA,SAAAhC,GAAA2B,EAAAA,EAAAyB,KAAA1C,IAAA4E,KAAA,IAAAjC,EAAA,IAAAzB,OAAAD,KAAAA,EAAA,OAAA2B,GAAA,cAAAA,GAAA5B,EAAA1B,EAAAoD,KAAAzB,IAAAiD,QAAAzC,EAAA2D,KAAApE,EAAArD,OAAA8D,EAAAgE,SAAA9C,GAAAC,GAAA,UAAA5C,GAAAsB,GAAA,EAAAF,EAAApB,CAAA,iBAAA4C,GAAA,MAAA3B,EAAA,SAAAY,EAAAZ,EAAA,SAAAC,OAAAW,KAAAA,GAAA,kBAAAP,EAAA,MAAAF,CAAA,SAAAK,CAAA,EAAA2H,CAAAH,EAAA3J,IAAA,SAAAgC,EAAA+H,GAAA,IAAA/H,EAAA,2BAAAA,EAAA,OAAAgI,EAAAhI,EAAA+H,GAAA,IAAAjI,EAAAF,OAAAC,UAAAoI,SAAA7G,KAAApB,GAAAmF,MAAA,iBAAArF,GAAAE,EAAAsE,cAAAxE,EAAAE,EAAAsE,YAAAC,MAAA,WAAAzE,GAAA,QAAAA,EAAA,OAAAtB,MAAA0J,KAAAlI,GAAA,iBAAAF,GAAA,2CAAAqI,KAAArI,GAAA,OAAAkI,EAAAhI,EAAA+H,EAAA,CAAAK,CAAAT,EAAA3J,IAAA,qBAAAoF,UAAA,6IAAAiF,EAAA,UAAAL,EAAAL,EAAApK,IAAA,MAAAA,GAAAA,EAAAoK,EAAAxD,UAAA5G,EAAAoK,EAAAxD,QAAA,QAAAnG,EAAA,EAAAsK,EAAA,IAAA9J,MAAAjB,GAAAS,EAAAT,EAAAS,IAAAsK,EAAAtK,GAAA2J,EAAA3J,GAAA,OAAAsK,CAAA,CAGA,IAAM1G,EAAI,aAAI+iB,GACDgxB,EAAqB,WAC9B,IAAqD9mC,EAAA9T,EAArB+T,EAAAA,UAAe,GAAM,GAA9C4mC,EAAQ7mC,EAAA,GAAEw0C,EAAWx0C,EAAA,GAwC5B,OAtCAC,EAAAA,WAAgB,WAPpB,IAAAvH,KAQQ9H,IAAA+E,MAAC,SAAAyE,IAAA,IAAAq6C,EAAAjyC,EAAAkyC,EAAAC,EAAAC,EAAAzT,EAAA,OAAAvwC,IAAAoB,MAAA,SAAAsI,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA7F,MAAA,cAAA6F,EAAAlE,KAAA,EAAAkE,EAAA7F,KAAA,EAG4B0X,IAAAA,IAAU,uBAAsB,OAAjDsoC,EAAQn6C,EAAAnG,KACNqO,EAAOiyC,EAASjoD,KAAKA,KAGrBkoD,EAAkB3hD,EAAE0P,MAAMD,GAAMG,OAAO,OAGvCgyC,EAAqB5hD,EAAE0P,MAAMD,GAAMqhC,IAAI,OAAQ,IAAIA,IAAI,SAAU,IACjE+Q,EAAsB7hD,EAAE0P,MAAMD,GAAMqhC,IAAI,OAAQ,IAAIA,IAAI,SAAU,IAGlE1C,EAAcpuC,EAAE0P,MAAMD,GAGJ,QAApBkyC,EAEIvT,EAAY0T,cAAcF,GAC3BH,GAAY,GAEXA,GAAY,GAIZrT,EAAY0T,cAAcD,GAC1BJ,GAAY,GACVA,GAAY,GACrBl6C,EAAA7F,KAAA,iBAAA6F,EAAAlE,KAAA,GAAAkE,EAAAe,GAAAf,EAAA,SAGDgB,QAAQC,IAAGjB,EAAAe,IAAQ,yBAAAf,EAAA/D,OAAA,GAAA6D,EAAA,kBAxCnC,eAAAzB,EAAA,KAAAC,EAAA1B,UAAA,WAAAlB,SAAA,SAAAtC,EAAA0E,GAAA,IAAAD,EAAAO,EAAA1B,MAAA2B,EAAAC,GAAA,SAAAP,EAAA7K,GAAA0K,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,OAAA9K,EAAA,UAAA8K,EAAAO,GAAAX,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA,QAAAO,EAAA,CAAAR,OAAAT,EAAA,OA2CI,GAAG,IAEI,CAACivC,SAAAA,EACZ,0DC7CahgC,EAAgB,SAACrE,GAC1B,IAAMsyC,EAAeryC,IAAMD,GAErB8E,EADc7E,MACK6E,KAAKwtC,EAAc,UAC5C,GAAIxtC,EAAO,EACP,MAAO,WACJ,GAAIA,EAAO,GACd,MAAO,GAAP/c,OAAU+c,EAAI,WAAA/c,OAAU+c,EAAO,EAAI,IAAM,GAAE,QACxC,GAAIA,EAAO,KAAM,CACpB,IAAMpd,EAAQC,KAAKC,MAAMkd,EAAO,IAChC,MAAO,GAAP/c,OAAUL,EAAK,SAAAK,OAAQL,EAAQ,EAAI,IAAM,GAAE,OAC/C,CAAO,GAAIod,EAAO,MAAO,CACrB,IAAMytC,EAAO5qD,KAAKC,MAAMkd,EAAO,MAC/B,MAAO,GAAP/c,OAAUwqD,EAAI,QAAAxqD,OAAOwqD,EAAO,EAAI,IAAM,GAAE,OAC5C,CACI,OAAOD,EAAanyC,OAAO,2BAEnC,uEChBIqyC,QAA0B,GAA4B,KAE1DA,EAAwB//C,KAAK,CAACggD,EAAO9nD,GAAI,2CAA4C,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,uDAAuD,MAAQ,GAAG,SAAW,kBAAkB,eAAiB,CAAC,2DAA2D,WAAa,MAEzS,8ECJI6nD,QAA0B,GAA4B,KAE1DA,EAAwB//C,KAAK,CAACggD,EAAO9nD,GAAI,isBAAksB,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,gEAAgE,MAAQ,GAAG,SAAW,0UAA0U,eAAiB,CAAC,+2BAA+2B,WAAa,MAEpjE6nD,EAAwBznD,OAAS,CAChC,aAAgB,2BAChB,OAAU,2BACV,aAAgB,2BAChB,aAAgB,4BAEjB,+ECVIynD,QAA0B,GAA4B,KAE1DA,EAAwB//C,KAAK,CAACggD,EAAO9nD,GAAI,0iDAA6iD,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,qHAAqH,MAAQ,GAAG,SAAW,4qBAA4qB,eAAiB,CAAC,w1DAA01D,WAAa,MAEjyI6nD,EAAwBznD,OAAS,CAChC,UAAa,4BACb,QAAW,4BACX,UAAa,2BACb,QAAW,2BACX,KAAQ,2BACR,QAAW,2BACX,MAAS,2BACT,MAAS,2BACT,aAAgB,4BAEjB,+ECfIynD,QAA0B,GAA4B,KAE1DA,EAAwB//C,KAAK,CAACggD,EAAO9nD,GAAI,65BAA85B,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,wGAAwG,MAAQ,GAAG,SAAW,+WAA+W,eAAiB,CAAC,qiDAAqiD,WAAa,MAEnhG,+ECJI6nD,QAA0B,GAA4B,KAE1DA,EAAwB//C,KAAK,CAACggD,EAAO9nD,GAAI,gZAAiZ,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,qGAAqG,MAAQ,GAAG,SAAW,gLAAgL,eAAiB,CAAC,wgBAAwgB,WAAa,MAEvyC6nD,EAAwBznD,OAAS,CAChC,UAAa,2BACb,eAAkB,4BAClB,YAAe,4BAEhB","sources":["webpack:///./resources/js/react-latest/utils/converTime.js","webpack:///./resources/js/react/UI/comments/CommentsContainer.jsx","webpack:///./resources/js/react/UI/form/checkbox.css?a080","webpack:///./resources/js/react/UI/form/Cheeckbox.jsx","webpack:///./resources/js/react/global/AvatarGroup.module.css?7b6f","webpack:///./resources/js/react/global/AvatarGroup.jsx","webpack:///./resources/js/react/global/Rating.jsx","webpack:///./resources/js/react/hooks/useRevision.jsx","webpack:///./resources/js/react/hooks/useSingleTask.jsx","webpack:///./resources/js/react/services/api/TaskCommentApiSlice.js","webpack:///./resources/js/react/single-independent-task/components/Accordion.jsx","webpack:///./resources/js/react/single-independent-task/components/Guideline.jsx","webpack:///./resources/js/react/single-independent-task/components/RevisionText.jsx","webpack:///./resources/js/react/single-independent-task/components/loader/GenarelLoader.jsx","webpack:///./resources/js/react/single-independent-task/permissions.js","webpack:///./resources/js/react/single-independent-task/section/comments/CommentSendBox.jsx","webpack:///./resources/js/react/single-independent-task/components/CustomModal.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentWritingModal.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/Widget.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentsSection.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailySubmissionItem.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailysubmissionDrawerTable.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/drawer-table-support/Single_user_submission_table_column.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/SingleUserSubmissionTableDrawer.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailySubmissionSection.jsx","webpack:///./resources/js/react/single-independent-task/section/history/InnerHistoryItemLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/history/Histories.jsx","webpack:///./resources/js/react/single-independent-task/section/history/HistorySection.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/Note.jsx","webpack:///./resources/js/react/single-independent-task/components/form/Input.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/CreateNote.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/EditNote.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/NoteView.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/NoteSection.jsx","webpack:///./resources/js/react/single-independent-task/section/revisions/ViewComment.jsx","webpack:///./resources/js/react/single-independent-task/section/revisions/RevisionSection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css?78f7","webpack:///./resources/js/react/single-independent-task/section/comments/DatePicker.jsx","webpack:///./resources/js/react/single-independent-task/components/form/Searchbox.jsx","webpack:///./resources/js/react/single-independent-task/components/Loader.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/TaskCategorySelectionBox.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/AssignedToSelection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/PrioritySelection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskEditModal.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/Genarel.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/SubmittedWork.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/TimeLog.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/TaskReview.jsx","webpack:///./resources/js/react/single-independent-task/components/HistoryLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/History.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/PreviewSubtask.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/approve-task/ApproveTask.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTask.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/LeadConfirmationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/WorkingEnvironmentForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskEditForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskSection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/TaskEditForm.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmitionView.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/WorkItem.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/InnerWorkItem.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmittedModalView.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmittedWork.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/TodaysUpdateModalTableRow.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css?c214","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css?09ae","webpack:///./resources/js/react/single-independent-task/section/daily-submission/TodaysUpdateModalTable.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/DailySubmissionControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/MarkAsComplete.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionCreationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionAcceptAndContinue.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionView.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/AssigneeRevisionToDev.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/DenyAndContinue.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/DeveloperRevisionView.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionViewModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionViewControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/subtask_creation_guide/GuideLineText.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/SubtaskCreationControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/StartTimerConfirmationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/stop-timer/LessTrackTimerModal.jsx","webpack:///./resources/js/react/single-independent-task/components/StartTimerWorkingReportPopup.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/ExpiredTimeModalForNewEmployee.jsx","webpack:///./resources/js/react/employee-evaluation/components/Table/PendingTasksTable.jsx","webpack:///./resources/js/react/employee-evaluation/components/Table/PendingTasksTableColumn.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/PendingTasksForTrainee.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/ExpiredNotifyModalForNewEmployee.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/TimerControl.jsx","webpack:///./resources/js/react/single-independent-task/section/helper/timer-start-working-report-error-toaster.js","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/SubmitForClientApproval.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/ClientAcceptedTask.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/AssigneeToLeadFromClientRevision.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/ClientRevision.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/ClientApproval.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/report/Report.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/TaskAction.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/InnerTableRow.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogTable.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogItemLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogSection.jsx","webpack:///./resources/js/react/single-independent-task/SingleIndependentTask.jsx","webpack:///./resources/js/react/single-independent-task/components/Button.jsx","webpack:///./resources/js/react/single-independent-task/components/Dropdown.jsx","webpack:///./resources/js/react/single-independent-task/components/Modal.jsx","webpack:///./resources/js/react/single-independent-task/components/SubmitButton.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/AttachmentUpload.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/Comment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/EditComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/InnerComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/ReplyComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/ReplyCommentPreview.jsx","webpack:///./resources/js/react/single-task/hooks/useDailySubmission.jsx","webpack:///./resources/js/react/utils/timeCalculate.js","webpack:///./resources/js/react/UI/form/checkbox.css","webpack:///./resources/js/react/global/AvatarGroup.module.css","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css","webpack:///./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css"],"sourcesContent":["export const convertTime = (time) => {\r\n    if (time) {\r\n        const hours = Math.floor(time / 60) || 0;\r\n        const min = Math.floor(time % 60) || 0;\r\n\r\n        const h = hours ? `${hours<10 ? `0${hours}`: hours} hours` : \"\";\r\n        return `${h} ${min < 10 ? `0${min}`: min } min`;\r\n    }\r\n\r\n    return `0 min`;\r\n};\r\n","import React from \"react\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport CustomModal from \"./components/CustomModal\";\r\nimport Modal from \"./components/Modal\";\r\nimport CommentsBody from \"./CommentsBody\";\r\nimport { useState, useEffect } from \"react\";\r\nimport commentDemoData from \"./_Data/commentDemoData\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGetCommentsQuery } from \"../../services/api/commentsApiSlice\";\r\nimport CommentContainerDecider from \"./CommentContainerDecider\";\r\nimport _ from \"lodash\";\r\nimport { useCommentStore } from \"./zustand/store\";\r\n\r\nconst CommentsContainer = ({\r\n    toggleRef = null,\r\n    isOpen,\r\n    close,\r\n    task,\r\n    comments = null,\r\n    onCommentPost,\r\n    taskId,\r\n    singleCommentId,\r\n    showCommentEditor = true,\r\n    showSearchBtn = true,\r\n    showFullScreenBtn = true,\r\n    height = \"89vh\",\r\n}) => {\r\n    const { commentState } = useCommentStore();\r\n    // ---------------------------------------------------------\r\n    const param = useParams();\r\n\r\n    // ---------------------------------------------------------\r\n\r\n    const { width } = useWindowSize();\r\n    const [fullScreenView, setFullScreenView] = useState(false);\r\n    const { data, isFetching, isLoading, refetch } = useGetCommentsQuery(\r\n        param?.taskId\r\n    );\r\n\r\n    // useEffect hook to call refetch when commentState changes\r\n    useEffect(() => {\r\n        refetch();\r\n    }, [commentState]);\r\n\r\n    return (\r\n        <CommentContainerDecider\r\n            fullScreenView={fullScreenView}\r\n            isOpen={isOpen}\r\n            toggleRef={toggleRef}\r\n            width={width}\r\n        >\r\n            {/* {isOpen && ( */}\r\n            <CommentsBody\r\n                fullScreenView={fullScreenView}\r\n                setFullScreenView={setFullScreenView}\r\n                isOpen={isOpen}\r\n                close={close}\r\n                // comments={param?.taskId ? data : comments}\r\n                comments={\r\n                    param?.taskId\r\n                        ? singleCommentId\r\n                            ? data?.filter(\r\n                                  (comment) => comment.id === singleCommentId\r\n                              )\r\n                            : data\r\n                        : comments\r\n                }\r\n                // comments={demoComments}\r\n                loading={isLoading}\r\n                fetching={isFetching}\r\n                refetch={refetch}\r\n                taskId={taskId ? taskId : param?.taskId}\r\n                showFullScreenBtn={width <= 991 ? false : showFullScreenBtn}\r\n                height={height}\r\n                showCommentEditor={showCommentEditor}\r\n                showSearchBtn={showSearchBtn}\r\n            />\r\n            {/* )} */}\r\n        </CommentContainerDecider>\r\n    );\r\n};\r\n\r\nexport default CommentsContainer;\r\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./checkbox.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import \"./checkbox.css\";\r\n\r\nconst Checkbox = ({\r\n    value,\r\n    onChange,\r\n    label,\r\n    checked,\r\n    className = \"\",\r\n    labelClassName = \"\",\r\n    disabled = false,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <label\r\n            className={`d-flex align-items-center sp1_checkbox--label ${labelClassName}${\r\n                disabled ? \" disable\" : \"\"\r\n            }`}\r\n        >\r\n            <input\r\n                type=\"checkbox\"\r\n                value={value}\r\n                checked={checked}\r\n                disabled={disabled}\r\n                onChange={onChange}\r\n                className={`sp1_checkbox mr-2 ${className}`}\r\n            />\r\n            {label}\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Checkbox;\r\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./AvatarGroup.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from \"react\";\r\nimport styles from \"./AvatarGroup.module.css\";\r\nimport _ from \"lodash\";\r\n\r\nconst AvatarGroup = ({ users = [], className = \"\", show=2 }) => {\r\n\r\n    const len = _.size(users);\r\n\r\n    const avatars = len > show ? users.splice(0, show) : users;\r\n\r\n    return (\r\n        <div className={styles.avatar_group}>\r\n\r\n\r\n            {len > show && (\r\n                <div  className={`${styles.avatar} ${className} ${styles.empty_avatar}`} >\r\n                    <span> +{len}</span>\r\n                </div>\r\n            )}\r\n            {_.map(avatars, (user, i) => (\r\n                <div key={i} className={`${styles.avatar} ${className}`}>\r\n                    <img\r\n                        src={user.src}\r\n                        alt=\"\"\r\n                        className={styles.avatar_image}\r\n                    />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvatarGroup;\r\n","const Rating = ({\r\n    rating,\r\n    className = '',\r\n    iconClassName = '',\r\n}) => {\r\n    return (\r\n        <>\r\n            {[...Array(5)].map((r, idx) =>\r\n                idx <= parseInt(rating) - 1 ? (\r\n                    <i key={idx} className=\"fa-solid fa-star\" style={{color:'#FFA500'}} />\r\n                ) : rating - parseInt(rating) > 0 &&\r\n                  idx === parseInt(rating) ? (\r\n                    <i key={idx} className=\"fa-solid fa-star-half-stroke\" style={{color:'#FFA500'}} />\r\n                ) : (\r\n                    <i key={idx} className=\"fa-regular fa-star\" style={{color: '#b9b9b9'}} />\r\n                ),\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Rating;","import _ from \"lodash\";\r\n\r\nexport const useRevision = (task) => {\r\n    const taskType = _.includes([5, 7], task?.category?.id)\r\n        ? \"design\"\r\n        : \"development\";\r\n\r\n    const isIndependent = task?.isIndependentTask;\r\n\r\n    // project menager acknowladgement options\r\n    const getProjectManagerAcknowladgementOptions = () => {\r\n        const isAlreadyAccepted = false;\r\n\r\n        if (isAlreadyAccepted) {\r\n            return [];\r\n        }\r\n\r\n        if (isIndependent) {\r\n            return [\r\n                {\r\n                    id: \"PLRx01\",\r\n                    revision:\r\n                        \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right\",\r\n                    isDeniable: false,\r\n                },\r\n                {\r\n                    id: \"PLRx02\",\r\n                    revision:\r\n                        \"The work done is aligned with my instruction, but after seeing it, I want to give some minor changes\",\r\n                    isDeniable: false,\r\n                },\r\n                {\r\n                    id: \"PLRx3\",\r\n                    revision: `The Lead ${\r\n                        taskType === \"design\" ? \"designer\" : \"developer\"\r\n                    }/project coordinator’s delivered work doesn’t match my shared requirement`,\r\n                    isDeniable: true,\r\n                },\r\n                {\r\n                    id: \"PLRx04\",\r\n                    revision: `The instruction was followed, but the lead ${\r\n                        taskType === \"design\" ? \"designer\" : \"developer\"\r\n                    } missed out some default/basic things or best practices which are not essential to write in instruction`,\r\n                    isDeniable: true,\r\n                },\r\n            ];\r\n        }\r\n\r\n        return [\r\n            {\r\n                id: \"PLRx01\",\r\n                revision:\r\n                    \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right\",\r\n                isDeniable: false,\r\n            },\r\n            {\r\n                id: \"PLRx02\",\r\n                revision:\r\n                    \"The work done is aligned with my instruction, but after seeing it, I want to give some minor changes\",\r\n                isDeniable: false,\r\n            },\r\n            {\r\n                id: \"PLRx3\",\r\n                revision: `The Lead ${\r\n                    taskType === \"design\" ? \"designer\" : \"developer\"\r\n                }/project coordinator’s delivered work doesn’t match my shared requirement`,\r\n                isDeniable: true,\r\n            },\r\n            {\r\n                id: \"PLRx04\",\r\n                revision: `The instruction was followed, but the lead ${\r\n                    taskType === \"design\" ? \"designer\" : \"developer\"\r\n                } missed out some default/basic things or best practices which are not essential to write in instruction`,\r\n                isDeniable: true,\r\n            },\r\n            {\r\n                id: \"PLRx05\",\r\n                revision: \"I have some general revisions\",\r\n                isDeniable: false,\r\n                type: \"GENERAL_REVISION\",\r\n            },\r\n        ];\r\n    };\r\n\r\n    // lead developer acknowladgement Options\r\n    const getLeadDeveloperAcknowladgementOptions = () => {\r\n        const isAlreadyAccepted = false;\r\n        // if already accepted\r\n        if (isAlreadyAccepted) {\r\n            return [];\r\n        } else {\r\n            return [\r\n                {\r\n                    id: \"LDRx1\",\r\n                    revision: `The concerned ${\r\n                        taskType === \"design\" ? \"designer’s\" : \"developer’s\"\r\n                    }  delivered work doesn’t match my shared requirement`,\r\n                    isDeniable: true,\r\n                },\r\n                {\r\n                    id: \"LDRx2\",\r\n                    revision:\r\n                        \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right.\",\r\n                    isDeniable: false,\r\n                },\r\n                {\r\n                    id: \"LDRx3\",\r\n                    revision:\r\n                        \"The work done is aligned with my instruction but after seeing it, I want to give some minor changes.\",\r\n                    isDeniable: false,\r\n                },\r\n\r\n                {\r\n                    id: \"LDRx4\",\r\n                    revision: `The instruction was followed but the ${\r\n                        taskType === \"design\" ? \"designer\" : \"developer\"\r\n                    } missed out on some default/basic things or best practices which are not essential to mention in instruction.`,\r\n                    isDeniable: true,\r\n                },\r\n            ];\r\n        }\r\n    };\r\n\r\n    return {\r\n        getLeadDeveloperAcknowladgementOptions,\r\n        getProjectManagerAcknowladgementOptions,\r\n    };\r\n};\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {\r\n    useApproveSubmittedTaskMutation,\r\n    useLazyGetSubmittedTaskQuery,\r\n    useLazyGetTaskDetailsQuery\r\n} from '../services/api/SingleTaskPageApi';\r\nimport { User } from '../utils/user-details';\r\n\r\nexport const useSingleTask = () => {\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    /* ********************************** */\r\n    /* ********* Get Task by task ID ********* */\r\n    const [\r\n        getTaskDetails,\r\n        { isFetching: taskDetailsIsFetching }\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    const getTaskById = async (taskId) => {\r\n        try {\r\n            const res = await getTaskDetails(`/${taskId}/json?mode=basic`).unwrap();\r\n            if (res) {\r\n                const task = {\r\n                    ...res.task,\r\n                    taskFiles: res?.taskFiles,\r\n                    parent_task_action: res.parent_task_action,\r\n                    parent_task_title: res.parent_task_heading?.heading || null,\r\n                    working_environment: res.working_environment,\r\n                    working_environment_data: res.working_environment_data,\r\n                    pm_task_guideline: res.task_guideline,\r\n                    task_revisions: res.revisions,\r\n                    taskSubTask: res.Sub_Tasks,\r\n                }\r\n                return task;\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    /* *************************************************** */\r\n    /* ********* Get Task submittion Information ********* */\r\n\r\n    const [getSubmittedTask, { isFetching: submittionInfoIsFetching }] = useLazyGetSubmittedTaskQuery();\r\n\r\n    // method\r\n    const getSubmittionInfo = async (taskId) => {\r\n        try {\r\n            const res = await getSubmittedTask(taskId).unwrap();\r\n            if (res) {\r\n                let data = _.orderBy(res, ['task_id', 'submission_no'], ['desc', 'desc']);\r\n                return data;\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    /* ********************************** */\r\n    /* ********* Approved Task ********* */\r\n    const [\r\n        approveSubmittedTask,\r\n        { isLoading: approveTaskLoadingStatus }\r\n    ] = useApproveSubmittedTaskMutation();\r\n\r\n    // method\r\n    const approveTask = async (data, callback) => {\r\n        if (!data || _.isEmpty(data)) return;\r\n        try {\r\n            const res = await approveSubmittedTask(data).unwrap();\r\n\r\n            if (res) {\r\n                callback && callback();\r\n                const Toast = Swal.mixin({\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n                })\r\n\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'Task Approved Successfully'\r\n                })\r\n            }\r\n        } catch (err) { console.log(err) }\r\n    }\r\n\r\n\r\n    return {\r\n        getTaskById,\r\n        approveTask,\r\n        getSubmittionInfo,\r\n        taskDetailsIsFetching,\r\n        approveTaskLoadingStatus,\r\n        submittionInfoIsFetching\r\n    }\r\n}\r\n","import { apiSlice } from \"./apiSlice\";\r\n\r\nconst taskCommentApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: (build) => ({\r\n        // get task comments\r\n        getTaskComments: build.query({\r\n            query: (taskId) => `/account/tasks/${taskId}/comments`,\r\n            providesTags: (result = [], error, arg) => [\r\n                \"TASK_COMMENTS\",\r\n                \"TASK_COMMENT\",\r\n                ...result.map(({ id }) => ({ type: \"TASK_COMMENT\", id })),\r\n            ],\r\n        }),\r\n\r\n        // get task comments\r\n        getTaskCommentReplies: build.query({\r\n            query: (commentId) =>\r\n                `/account/tasks/comments/${commentId}/replies`,\r\n            providesTags: [\"TASK_COMMENT_REPLIES\"],\r\n        }),\r\n\r\n        // widget data\r\n        getTaskCommentWidgetData: build.query({\r\n            query: (taskId) => `/account/tasks/comments-widget-data/${taskId}`,\r\n            providesTags: [\"TASK_COMMENTS_WIDGET\"],\r\n        }),\r\n\r\n        // preview a comment\r\n        getPreviewCommentData: build.query({\r\n            query: (commentId) =>\r\n                `/account/tasks/comments/${commentId}/preview`,\r\n            providesTags: [\"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // update comment\r\n        updateComment: build.mutation({\r\n            query: ({ data }) => ({\r\n                url: `/account/tasks/comment-edit`,\r\n                method: \"POST\",\r\n                body: data,\r\n                formData: true,\r\n            }),\r\n            invalidatesTags: [\"TASK_COMMENTS_WIDGET\", \"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // remove file\r\n        removeCommentPreviousUploadedFile: build.mutation({\r\n            query: (data) => ({\r\n                url: `/account/tasks/${data.task_id}/comments/${data.comment_id}/delete-attach-file`,\r\n                method: \"DELETE\",\r\n                body: {\r\n                    ...data,\r\n                    _token: document\r\n                        .querySelector(\"meta[name='csrf-token']\")\r\n                        .getAttribute(\"content\"),\r\n                },\r\n            }),\r\n            invalidatesTags: [\"TASK_COMMENTS_WIDGET\", \"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // reply comment\r\n        replyTaskComment: build.mutation({\r\n            query: (data) => ({\r\n                url: `/account/tasks/comment-reply`,\r\n                method: \"POST\",\r\n                body: data.formData,\r\n                formData: true,\r\n            }),\r\n            invalidatesTags: (result, error, arg) => [\r\n                { type: \"TASK_COMMENT\", id: arg.commentId },\r\n                \"TASK_COMMENT_REPLIES\",\r\n                \"TASK_COMMENTS_WIDGET\",\r\n                \"TASK_COMMENT_PREVIEW\",\r\n            ],\r\n        }),\r\n\r\n        deleteComment: build.mutation({\r\n            query: (commentId) => ({\r\n                url: `/account/tasks/comments/${commentId}/delete`,\r\n                method: \"DELETE\",\r\n                body: {\r\n                    _token: document\r\n                        .querySelector(\"meta[name='csrf-token']\")\r\n                        .getAttribute(\"content\"),\r\n                },\r\n            }),\r\n\r\n            invalidatesTags: (_result = [], _error, arg) => [\r\n                { type: \"TASK_COMMENT\", id: arg },\r\n                \"TASK_COMMENT_REPLIES\",\r\n                \"TASK_COMMENTS_WIDGET\",\r\n                \"TASK_COMMENT_PREVIEW\",\r\n            ],\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n    useGetTaskCommentsQuery,\r\n    useGetTaskCommentRepliesQuery,\r\n    useGetTaskCommentWidgetDataQuery,\r\n    useLazyGetTaskCommentWidgetDataQuery,\r\n    useGetPreviewCommentDataQuery,\r\n    useUpdateCommentMutation,\r\n    useRemoveCommentPreviousUploadedFileMutation,\r\n    useReplyTaskCommentMutation,\r\n    useDeleteCommentMutation,\r\n} = taskCommentApiSlice;\r\n","import * as React from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\n\r\nconst Accordion = ({expendable=true, children, title, headingClass, headingStyle}) => {\r\n    const [expend,setExpend] = React.useState(false);\r\n\r\n    const toggle = () => {\r\n        setExpend(!expend);\r\n    }\r\n\r\n    const init = expendable ? 0 : 300;\r\n\r\n  return (\r\n    <div className='sp1_task_card mb-4'>\r\n        <div \r\n            className={`sp1_task_card--head ${headingClass}` }\r\n            onClick={ () => expendable ? toggle() : null}\r\n            style={{...headingStyle, cursor: expendable ? 'pointer': 'default'}}\r\n        > {title} \r\n\r\n            {expendable ? expend ? \r\n                <span className=\"__icon\">\r\n                    <i className=\"fa-solid fa-chevron-up\"></i>\r\n                </span>\r\n            : <span className=\"__icon\">\r\n                    <i className=\"fa-solid fa-chevron-down\"></i>\r\n                </span>: null\r\n            }\r\n        </div>\r\n\r\n\r\n        <AnimatePresence>\r\n            {expendable ? expend && (\r\n                <motion.div\r\n                    initial={{ height: init }}\r\n                    animate={{height: 800}}\r\n                    exit={{height: 0}}\r\n                    className='sp1_task_card--body'\r\n                >\r\n                    {children}\r\n                </motion.div> \r\n            ): <div className='sp1_task_card--body'>\r\n               {children}  \r\n            </div>\r\n        }\r\n        </AnimatePresence>\r\n\r\n\r\n       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Accordion","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport { useClickAway } from \"react-use\";\r\nimport _ from \"lodash\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Guideline = ({ text, editorContainerClass, workEnv }) => {\r\n    const { task } = useSelector((s) => s.subTask);\r\n    const [expend, setExpend] = useState(false);\r\n    let isLong = text?.length > 400;\r\n    const showText = isLong ? text.slice(0, 400) + \"...\" : text;\r\n    const ref = useRef();\r\n\r\n    const handleExpend = (e) => {\r\n        e.preventDefault();\r\n        setExpend(!expend);\r\n    };\r\n\r\n    useClickAway(ref, () => {\r\n        setExpend(false);\r\n    });\r\n\r\n    return (\r\n        <div className=\"sp1_task_card--sub-card\">\r\n            <div\r\n                className={`sp1_ck_content sp1_guideline_text ${editorContainerClass}`}\r\n                dangerouslySetInnerHTML={{ __html: showText }}\r\n            ></div>\r\n            {isLong ? (\r\n                <a href=\"#\" onClick={handleExpend} className=\"\">\r\n                    {\" \"}\r\n                    Read full description{\" \"}\r\n                </a>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n\r\n            <Modal className=\"sp1_task_card--sub-card-modal\" isOpen={expend}>\r\n                <div\r\n                    ref={ref}\r\n                    className=\"sp1_task_card--sub-card-modal-content\"\r\n                >\r\n                    <div className=\"d-flex align-items-center justify-content-between __header\">\r\n                        <button onClick={() => setExpend(false)}>\r\n                            <i className=\"fa-solid fa-xmark\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n                    {!_.isEmpty(workEnv) ? (\r\n                        <div className=\"sp1_task_card--sub-card m-4\">\r\n                            <div\r\n                                className=\"px-4 py-3\"\r\n                                style={{ background: \"#F3F5F9\" }}\r\n                            >\r\n                                <h6 className=\"mb-2\">Working Environment</h6>\r\n                                <hr />\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's URL\r\n                                            </strong>\r\n                                            : <br />{\" \"}\r\n                                            <a\r\n                                                target=\"__blank\"\r\n                                                href={workEnv?.site_url}\r\n                                            >\r\n                                                View on new tab\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>Frontend Password</strong>:{\" \"}\r\n                                            <br /> {workEnv?.frontend_password}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's Login URL\r\n                                            </strong>\r\n                                            : <br />{\" \"}\r\n                                            <a\r\n                                                target=\"__blank\"\r\n                                                href={workEnv?.login_url}\r\n                                            >\r\n                                                View on new tab\r\n                                            </a>{\" \"}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's\r\n                                                Username/Email\r\n                                            </strong>\r\n                                            : <br /> {workEnv?.email}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>Password</strong>: <br />{\" \"}\r\n                                            {workEnv?.password}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <div className=\"__content\">\r\n                        <div\r\n                            className={`sp1_ck_content word-break ${editorContainerClass}`}\r\n                            dangerouslySetInnerHTML={{ __html: text }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\" __footer\">\r\n                        <button\r\n                            className=\"btn btn-sm py-1 btn-primary ml-auto\"\r\n                            onClick={() => setExpend(false)}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Guideline;\r\n","import * as React from \"react\";\r\nimport Modal from \"../../Insights/ui/Modal\";\r\nimport { useClickAway } from \"react-use\";\r\nimport Button from \"./Button\";\r\nimport dayjs from \"dayjs\";\r\nimport { useUsers } from \"../../hooks/useUsers\";\r\nimport { User } from \"../../utils/user-details\";\r\nimport { convertTime } from \"../../../react-latest/utils/converTime\";\r\n\r\n// const RevisionText = ({text, index, date, time, revision}) => {\r\n//     const [expend, setExpend] = React.useState(false);\r\n//     const ref = React.useRef();\r\n\r\n//     let isLong = text?.length > 800;\r\n//     const showText = isLong ? text?.slice(0, 800) + '...' : text;\r\n\r\n//     const toggleModal = (e) => {\r\n//         e.preventDefault();\r\n//         setExpend(!expend)\r\n//     }\r\n\r\n//     useClickAway(ref, () => {\r\n//         setExpend(false)\r\n//     })\r\n\r\n//   return (\r\n//     <div className=\"sp1_task_card--sub-card\" style={{minHeight: '110px'}}>\r\n//         <div className=\"sp1_tc_sc-inx\">\r\n//             <h2>{index}</h2>\r\n//             <span className=\"d-block\"><strong>Date</strong> {date} </span>\r\n//             <span className=\"d-block\"><strong>Time</strong>: {time}</span>\r\n//         </div>\r\n//         <div className=\"\">\r\n//             {revision?.revisionAcknowledgement ?\r\n//                 <span className='d-block mb-2'>\r\n//                     <span className='font-weight-bold text-danger'> <strong>Reason: </strong>  </span>\r\n//                     {revision?.revisionAcknowledgement} {\" \"}\r\n//                     {revision?.isDeny ? <span className='badge badge-danger'>Rejected By Developer</span> : null}\r\n//                     {revision?.isAccept ? <span className='badge badge-success'>Accepted By Developer</span> : null}\r\n//                 </span>\r\n//             : null}\r\n//             <div>\r\n//                 <span className='font-weight-bold text-success'>Statement:</span>\r\n//                 <div className='sp1_ck_content' style={{textIndent: '2rem'}} dangerouslySetInnerHTML={{__html: showText}} />\r\n//             </div>\r\n\r\n//             {isLong ? <a href=\"#\" className='ml-2' onClick={toggleModal}>Read full guideline</a> : ''}\r\n\r\n//             <Modal className=\"sp1_task_card--sub-card-modal\" isOpen={expend}>\r\n//                 <div ref={ref} className='sp1_task_card--sub-card-modal-content'>\r\n//                     <div className='d-flex align-items-center justify-content-between __header'>\r\n//                         <button onClick={() => setExpend(false)}>\r\n//                         <i className=\"fa-solid fa-xmark\"></i>\r\n//                         </button>\r\n//                     </div>\r\n//                     <div className='__content'>\r\n//                         <div className=\"sp1_tc_sc-inx\">\r\n//                             <h2>{index}</h2>\r\n//                             <span className=\"d-block\"><strong>Date</strong> {date} </span>\r\n//                             <span className=\"d-block\"><strong>Time</strong>: {time}</span>\r\n//                         </div>\r\n//                         <div>\r\n//                         <span className='d-block mb-2'> <span className='font-weight-bold text-danger'><strong>Reason: </strong></span> {revision?.revisionAcknowledgement}</span>\r\n//                             <span className='font-weight-bold text-success'>Commitment:</span>\r\n//                             <div className='sp1_ck_content' style={{textIndent: '2rem'}} dangerouslySetInnerHTML={{__html: text}} />\r\n//                         </div>\r\n//                     </div>\r\n\r\n//                     <div className=' __footer'>\r\n//                         <button className='btn btn-sm py-1 btn-primary ml-auto' onClick={() => setExpend(false)}>\r\n//                             Close\r\n//                         </button>\r\n//                     </div>\r\n//                 </div>\r\n//             </Modal>\r\n//         </div>\r\n\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nconst RevisionText = ({ index, revision }) => {\r\n    const [expend, setExpend] = React.useState(false);\r\n    const ref = React.useRef();\r\n    console.log(\"revision\", revision);\r\n    const toggleModal = (e) => {\r\n        e.preventDefault();\r\n        setExpend(!expend);\r\n    };\r\n\r\n    useClickAway(ref, () => {\r\n        setExpend(false);\r\n    });\r\n\r\n    const getComment = (key) => {\r\n        switch (key) {\r\n            case \"PLR\":\r\n                return revision?.pmComment;\r\n            case \"SPR\":\r\n                return revision?.pmComment;\r\n            case \"CPR\":\r\n                return revision?.pmComment;\r\n            case \"LDR\":\r\n                return revision?.leadComment;\r\n            default:\r\n                return revision?.pmComment || revision?.leadComment;\r\n        }\r\n    };\r\n    const text = getComment(revision?.disputeBetween);\r\n    let isLong = text?.length > 800;\r\n    const showText = isLong ? text?.slice(0, 800) + \"...\" : text;\r\n\r\n    const date = dayjs(revision?.createdAt).format(\"MMM DD, YYYY\");\r\n    const time = dayjs(revision?.createdAt).format(\"hh:mm A\");\r\n    console.log(\"revision in subtask\", revision);\r\n    return (\r\n        <div className=\"sp1_task_card--sub-card\" style={{ minHeight: \"110px\" }}>\r\n            <div className=\"sp1_tc_sc-inx\">\r\n                <h2>{index < 10 ? `0${index}` : index}</h2>\r\n                <span className=\"d-block\">\r\n                    <strong>Date: </strong>\r\n                    {date}\r\n                </span>\r\n                <span className=\"d-block\">\r\n                    <strong>Time</strong>: {time}\r\n                </span>\r\n                {revision?.totalMin && (\r\n                    <span className=\"d-block\">\r\n                        <strong>Rev.Time</strong>:{\" \"}\r\n                        {`${convertTime(revision?.totalMin)}`}\r\n                    </span>\r\n                )}\r\n            </div>\r\n            <div className=\"px-3\">\r\n                {revision?.revisionAcknowledgement ? (\r\n                    <span className=\"d-block mb-2\">\r\n                        <span className=\"font-weight-bold text-danger\">\r\n                            {\" \"}\r\n                            <strong>Reason: </strong>{\" \"}\r\n                        </span>\r\n                        {revision?.revisionAcknowledgement}\r\n                        {revision?.isDeny ? (\r\n                            <span className=\"badge badge-danger\">\r\n                                Rejected By Developer\r\n                            </span>\r\n                        ) : null}\r\n                        {revision?.isAccept ? (\r\n                            <span className=\"badge badge-success\">\r\n                                Accepted By Developer\r\n                            </span>\r\n                        ) : null}\r\n                    </span>\r\n                ) : null}\r\n                <div>\r\n                    <span className=\"font-weight-bold text-success\">\r\n                        Statement:\r\n                    </span>\r\n                    <div\r\n                        className=\"sp1_ck_content\"\r\n                        dangerouslySetInnerHTML={{ __html: showText }}\r\n                    />\r\n                </div>\r\n\r\n                {isLong ? (\r\n                    <a href=\"#\" className=\"ml-2\" onClick={toggleModal}>\r\n                        View more\r\n                    </a>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n\r\n                <Modal\r\n                    className=\"sp1_task_card--sub-card-modal\"\r\n                    isOpen={expend}\r\n                >\r\n                    <div\r\n                        ref={ref}\r\n                        className=\"sp1_task_card--sub-card-modal-content\"\r\n                    >\r\n                        <div className=\"d-flex align-items-center justify-content-between __header\">\r\n                            <button onClick={() => setExpend(false)}>\r\n                                <i className=\"fa-solid fa-xmark\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"__content\">\r\n                            <div className=\"sp1_tc_sc-inx\">\r\n                                <h2>{index}</h2>\r\n                                <span className=\"d-block\">\r\n                                    <strong>Date: </strong> {date}\r\n                                </span>\r\n                                <span className=\"d-block\">\r\n                                    <strong>Time</strong>: {time}\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                {/* <span className=\"d-block mb-2\">\r\n                                    {\" \"}\r\n                                    <span className=\"font-weight-bold text-danger\">\r\n                                        <strong>Reason: </strong>\r\n                                    </span>{\" \"}\r\n                                    {revision?.revisionAcknowledgement}\r\n                                </span>\r\n                                <span className=\"font-weight-bold text-success\">\r\n                                    Commitment:\r\n                                </span> */}\r\n                                <div\r\n                                    className=\"sp1_ck_content\"\r\n                                    style={{ textIndent: \"2rem\" }}\r\n                                    dangerouslySetInnerHTML={{ __html: text }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\" __footer\">\r\n                            <button\r\n                                className=\"btn btn-sm py-1 btn-primary ml-auto\"\r\n                                onClick={() => setExpend(false)}\r\n                            >\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RevisionText;\r\n","import React from \"react\"; \r\nimport {Placeholder} from '../../../global/Placeholder';\r\n\r\nconst GenarelLoader = () => { \r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-6 pb-3 pb-xl-0\">\r\n                <div className=\"d-flex flex-column\" style={{ gap: \"10px\" }}>\r\n                    <h6 className=\"\">\r\n                       <Placeholder width=\"220px\" />\r\n                    </h6> \r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" /> \r\n                        </div>\r\n                    </div> \r\n\r\n                    {/* <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* asignee to */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                <Placeholder\r\n                                    width=\"32px\"\r\n                                    height=\"32px\"\r\n                                    type=\"circle\"\r\n                                    className=\"rounded-circle\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"ml-2\">\r\n                                <Placeholder width=\"130px\" /> \r\n                                <Placeholder width=\"70px\" height=\"10px\" className=\"mt-2\" /> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* assignee by */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                <Placeholder\r\n                                    width=\"32px\"\r\n                                    height=\"32px\"\r\n                                    type=\"circle\"\r\n                                    className=\"rounded-circle\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"ml-2\">\r\n                                <Placeholder width=\"130px\" /> \r\n                                <Placeholder width=\"70px\" height=\"10px\" className=\"mt-2\" /> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* PRIORITY */}\r\n\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* category */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"100px\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenarelLoader;\r\n","import _ from \"lodash\";\r\nimport { User } from \"../utils/user-details\";\r\n\r\n// * task page permission\r\n\r\nexport function singleTaskPagePermission(task, auth) {\r\n    let hasPermission = false;\r\n    // check is auth\r\n    const isAuth = auth.getRoleId() === 1;\r\n    const pmPermission = task.projectManagerId === auth.getId();\r\n    hasPermission = true;\r\n\r\n    return hasPermission;\r\n}\r\n\r\n// permission for timer control\r\nexport function timeControlPermision({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = loggedUser;\r\n\r\n    // if status id 2 or 3 show timer start button\r\n    if ([2, 3].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    }\r\n    return (\r\n        statusPermission && assigneePermission && _.size(task?.subtask) === 0\r\n    );\r\n}\r\n\r\n// mark as completed button permission controller\r\nexport function markAsCompletedButtonPermission({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n        if (_loggedUser?.getRoleId() === 6) {\r\n            if ([8].includes(Number(statusId))) {\r\n                statusPermission = true;\r\n            }\r\n        } else {\r\n            if ([2, 3].includes(Number(statusId))) {\r\n                statusPermission = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// approve button permission\r\nexport function approveButtonPermission({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if status id 6 show timer start button\r\n    if ([6].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    } else if (_loggedUser?.getRoleId() === 1) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// approve button permission\r\nexport function needRevisionPermision({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if status id 6 show timer start button\r\n    if ([6].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    } else if (_loggedUser?.getRoleId() === 1) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// revision button\r\nexport function revisionButtonPermission({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = loggedUser;\r\n    //    console.log(statusId)\r\n    // if status id 6 show timer start button\r\n    if ([1].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// submit for client approval button permission\r\n\r\nexport function submitForClientApproval({ task, status, auth }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([8].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (\r\n        (assignedUser?.getId() === auth?.getId() && auth?.getRoleId() === 4) ||\r\n        auth?.getRoleId() === 1\r\n    ) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\nexport function clientApproveConfirmationButtonPermission({\r\n    task,\r\n    status,\r\n    auth,\r\n}) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([9].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (\r\n        (assignedUser?.getId() === auth?.getId() && auth?.getRoleId() === 4) ||\r\n        auth?.getRoleId() === 1\r\n    ) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\nexport function taskEditPermision({ task, status, auth }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([1, 2, 3].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser?.getId() === auth?.getId() || auth?.getRoleId() === 1) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// sub task creation permission\r\n\r\nexport function subTaskCreationPermision({ task, status, auth }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let assignedBy = task?.assignedBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([1, 2, 3].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (\r\n        assignedUser?.getId() === auth?.getId() ||\r\n        (assignedBy?.getId() === auth?.getId() &&\r\n            _.includes([5, 6, 9, 10], auth?.getRoleId()))\r\n        // ||\r\n        // auth?.getRoleId() === 1\r\n    ) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n","import dayjs from 'dayjs';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport CKEditorComponent from '../../../ckeditor';\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine';\r\nimport { useStoreCommentMutation } from '../../../services/api/SingleTaskPageApi';\r\nimport { User } from '../../../utils/user-details';\r\nimport Button from '../../components/Button';\r\n\r\nconst CommentSendBox = ({onCommentPost, task}) => {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const [comment, setComment] = React.useState('');\r\n  const [files, setFiles] = React.useState([]);\r\n  const [error, setError] = React.useState(null);\r\n\r\n  const auth = new User(window?.Laravel?.user);\r\n\r\n  const [storeComment, {isLoading}] = useStoreCommentMutation();\r\n\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setComment(data);\r\n  }\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // if text not provide show error message\r\n    if(!comment){\r\n        setError(s => ({...s, comment: \"Please provide a comment before submitting.\"}));\r\n        return;\r\n    }\r\n\r\n    // make form data\r\n    const fd = new FormData();\r\n    fd.append('comment', comment);\r\n    fd.append('task_id', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    await storeComment({data: fd, task_id: task?.id})\r\n    .unwrap()\r\n    .then(res=>{\r\n      setEditMode(false);\r\n      setComment(\"\");\r\n      setFiles('');\r\n      let comment = {...res}\r\n      comment.last_updated_at = dayjs(res?.last_updated_at).unix();\r\n      onCommentPost(comment);\r\n    }).catch(err => console.log(err))\r\n\r\n  }\r\n\r\n  const commentMode = () => {\r\n    if(editMode){\r\n      return (\r\n        <div className='w-100'>\r\n            <div className='ck-editor-holder'>\r\n              <CKEditorComponent data={comment} onChange={handleEditorChange} />\r\n            </div>\r\n            {error?.comment ? <ErrorText>{error?.comment}</ErrorText> : null }\r\n\r\n            <div className='mt-2'>\r\n              <h6>Attach Files</h6>\r\n              <UploadFilesInLine\r\n                files={files}\r\n                setFiles={setFiles}\r\n                uploadInputClass='comment-file-upload'\r\n                fileWrapperClass='comment-uploaded-file'\r\n              />\r\n            </div>\r\n          <div className='mt-3 d-flex align-items-center'>\r\n            {isLoading ?\r\n                  <Button className='cursor-processing mr-2'>\r\n                      <div\r\n                          className=\"spinner-border text-white\"\r\n                          role=\"status\"\r\n                          style={{width: '18px', height: '18px' }}\r\n                      >\r\n                      </div>\r\n                      Processing...\r\n                  </Button> :\r\n                <Button className='mr-2' onClick={handleSubmit}>Send</Button>}\r\n\r\n            <Button\r\n              variant='secondary'\r\n              onClick={() => setEditMode(false)}\r\n            >Close</Button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return <div\r\n      onClick={() => setEditMode(true)}\r\n      className='__box'\r\n    ><span>Write a comment ...</span></div>\r\n  }\r\n\r\n  return (\r\n    <div className='sp1_task_comment_send_box'>\r\n        <>\r\n            <div className='__avatar rounded-circle mr-2' style={{width: '36px', height: '36px'}}>\r\n                <img\r\n                  src={auth?.getAvatar()}\r\n                  alt='sender_name'\r\n                  width=\"36px\"\r\n                  height=\"36px\"\r\n                  className='rounded-circle'\r\n                />\r\n            </div>\r\n        </>\r\n          <div className='__send-box'>\r\n            {commentMode()}\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentSendBox\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n    padding: 10px 0;\r\n`;\r\n","import * as React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { usePopper } from 'react-popper';\r\nimport { motion, AnimatePresence } from 'framer-motion'; \r\n  \r\n\r\nconst CustomModal = ({toggleRef = null,  isOpen, close, children}) => {\r\n    const [modalRef, setModalRef] = React.useState(null); \r\n    const { styles, attributes } = usePopper(toggleRef, modalRef,{\r\n        placement: 'left-start',\r\n        modifiers: [ \r\n            {name: 'offset', options: {offset: [0, 0]}},\r\n        ]\r\n    })\r\n\r\n  return ( \r\n        <div \r\n            ref={setModalRef}\r\n            style={{\r\n                ...styles.popper,\r\n                pointerEvents: isOpen ? 'all' : 'none', \r\n                zIndex: 99,\r\n            }} \r\n            {...attributes.popper}\r\n        >   \r\n\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        exit={{opacity: 0}}\r\n                        className=''\r\n                    >\r\n                        {children} \r\n\r\n                        <Shadow/>\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </div> \r\n  )\r\n}\r\n\r\nexport default CustomModal \r\n\r\nconst Shadow = () => {\r\n    return ReactDOM.createPortal(\r\n        <div\r\n            style={{\r\n                width: '100vw',\r\n                height: '100vh',\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                zIndex: 90,\r\n                background: 'rgba(0,0,0,.1)'\r\n            }} \r\n        />,\r\n        document.querySelector('#sp1SingleTaskPageModal')\r\n    )\r\n}","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\nimport CKEditorComponent from '../../../ckeditor'\r\n\r\nconst CommentWritingModal = ({isOpen, close}) => {\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"sp1_st_cnt_modal\">\r\n        <div className='sp1_st_comment_preview'>\r\n            <div className='sp1_st_comment_panel' style={{maxWidth: '60vw', minHeight: '50vh'}}> \r\n                <div className='border-bottom pb-2 d-flex'>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div> \r\n\r\n\r\n                {/* comment */}\r\n                <div className='mt-3 w-100'>\r\n                   <div className=\"sp1_st_write_comment-sendbox\">\r\n                       <div style={{minWidth: '48px'}}>\r\n                            <img \r\n                                src=\"/user-uploads/avatar/40164f31bc7d575c7dbe99b24b408d75.png\" \r\n                                alt=\"\"\r\n                                width={48}\r\n                                height={48}\r\n                                className='rounded-circle'\r\n                            />\r\n                       </div> \r\n                         \r\n                        <div> \r\n                            <div className='sp1_st_write_comment_editor'>\r\n                                <CKEditorComponent/>\r\n                            </div> \r\n                            <div className='py-3'>\r\n                                <div>Attach Files here (if need) <i className='fa-solid fa-paperclip ml-1 text-primary' /></div>\r\n                                <div className='sp1_st_write_comment_editor_attach'>\r\n                                    <i className=\"fa-solid fa-cloud-arrow-up\"></i>\r\n                                    <span>Attach Files</span>\r\n                                </div> \r\n                            </div>\r\n                        </div> \r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CommentWritingModal","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useGetTaskCommentWidgetDataQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport dayjs from \"dayjs\";\r\nimport { timeCalculate } from \"../../../utils/timeCalculate\";\r\nimport Modal from \"../../components/Modal\";\r\nimport CommentPreview from \"./CommentPreview\";\r\nimport CommentsContainer from \"../../../UI/comments/CommentsContainer\";\r\nimport { useGetCommentsQuery } from \"../../../services/api/commentsApiSlice\";\r\n\r\n// widget item\r\n\r\nconst WidgetItem = ({ comment }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    if (!comment) return null;\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"d-flex justify-content-between sp1_tark_right_item align-items-start pt-1 pb-2\">\r\n                <div\r\n                    className=\"w-100 sp1_st_comment-view\"\r\n                    style={{ overflow: \"hidden\" }}\r\n                >\r\n                    <p className=\"mb-0 pb-0\">\r\n                        <a\r\n                            href={`/account/employees/${comment.user.id}`}\r\n                            className=\"hover-underline text-primary\"\r\n                        >\r\n                            {comment.user.name}\r\n                        </a>{\" \"}\r\n                        {comment.is_deleted\r\n                            ? \"deleted \"\r\n                            : comment.mention\r\n                            ? \"replied to \"\r\n                            : \"added \"}{\" \"}\r\n                        a comment\r\n                    </p>\r\n                    <p\r\n                        className=\"text-ellipsis d-flex align-items-center mb-0 pb-0\"\r\n                        style={{ color: \"#AEAFB9\" }}\r\n                    >\r\n                        {comment.is_deleted\r\n                            ? timeCalculate(comment.deleted_at)\r\n                            : timeCalculate(comment.created_date)}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"d-flex align-items-center\">\r\n                    <a\r\n                        href=\"#\"\r\n                        className={`mr-2 py-2 sp1_task_righ_action_btn ${\r\n                            isOpen ? \"text-primary\" : \"\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setIsOpen(true);\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-regular fa-eye\"></i>\r\n                    </a>\r\n                    {/* <a href=\"#\" className=\"mr-2 py-2 sp1_task_righ_action_btn\"><i className=\"fa-regular fa-pen-to-square\"></i></a> */}\r\n                </div>\r\n            </div>\r\n\r\n            {/* <Modal isOpen={isOpen}>\r\n                <CommentPreview\r\n                    isOpen={isOpen}\r\n                    close={() => setIsOpen(false)}\r\n                    commentId={comment.id}\r\n                />\r\n            </Modal> */}\r\n            <CommentsContainer\r\n                singleCommentId={comment.id}\r\n                close={() => setIsOpen(false)}\r\n                isOpen={isOpen}\r\n                showCommentEditor={false}\r\n                showFullScreenBtn={false}\r\n                showSearchBtn={false}\r\n                height=\"50vh\"\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst Widget = ({ task }) => {\r\n    // console.log(task);\r\n    // const { data, isLoading } = useGetTaskCommentWidgetDataQuery(task.id, {\r\n    //     skip: !task.id,\r\n    // });\r\n    const { data: comments, isLoading } = useGetCommentsQuery(task.id, {\r\n        skip: !task.id,\r\n    });\r\n\r\n    const handleOrdering = (comments = []) => {\r\n        const sortedComments = [...comments];\r\n\r\n        sortedComments.sort((a, b) => {\r\n            if (a.is_deleted && b.is_deleted) {\r\n                const a_day = dayjs(a.deleted_at);\r\n                const b_day = dayjs(b.deleted_at);\r\n                return b_day.diff(a_day);\r\n            } else if (a.is_deleted) {\r\n                const a_day = dayjs(a.deleted_at);\r\n                const b_day = dayjs(b.created_date);\r\n                return b_day.diff(a_day);\r\n            } else if (b.is_deleted) {\r\n                const a_day = dayjs(a.created_date);\r\n                const b_day = dayjs(b.deleted_at);\r\n                return b_day.diff(a_day);\r\n            } else {\r\n                const a_day = dayjs(a.created_date);\r\n                const b_day = dayjs(b.created_date);\r\n                return b_day.diff(a_day);\r\n            }\r\n        });\r\n\r\n        return sortedComments;\r\n    };\r\n\r\n    // console.log({ widget: data });\r\n    return (\r\n        <React.Fragment>\r\n            {_.map(handleOrdering(comments), (comment) => (\r\n                <WidgetItem key={comment.id} comment={comment} />\r\n            ))}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Widget;\r\n","import * as React from \"react\";\r\nimport Comment from \"./Comment\";\r\nimport CommentModal from \"./CommentModal\";\r\nimport Button from \"../../components/Button\";\r\nimport CommentWritingModal from \"./CommentWritingModal\";\r\nimport { useLazyGetTaskDetailsQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport _ from \"lodash\";\r\nimport Widget from \"./Widget\";\r\nimport { useGetTaskCommentsQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport CommentsContainer from \"../../../UI/comments/CommentsContainer\";\r\n\r\nconst CommentSection = ({ task, isLoading }) => {\r\n    // const [comments, setComments] = React.useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = React.useState(false);\r\n    const [openAddCommentModal, setOpenAddCommentModal] = React.useState(false);\r\n    const [modalToggleRef, setModalToggleRef] = React.useState(null);\r\n\r\n    const toggleModalButton = () => setModalIsOpen(!modalIsOpen);\r\n    const toggleAddCommentModal = () =>\r\n        setOpenAddCommentModal(!openAddCommentModal);\r\n    const closeAddCommentModal = () => setOpenAddCommentModal(false);\r\n\r\n    // const [getTaskDetails, { isFetching }] = useLazyGetTaskDetailsQuery();\r\n    const { data, isLoading: isFetching } = useGetTaskCommentsQuery(task.id, {\r\n        skip: !task.id,\r\n    });\r\n\r\n    const comments = _.orderBy(data, \"id\", \"desc\");\r\n\r\n    // console.log({comments})\r\n    // // if task notes fetch completed store data into redux store\r\n    // React.useEffect(() => {\r\n    //     if (task && task.id) {\r\n    //         getTaskDetails(`/${task?.id}/json?mode=task_comment`)\r\n    //             .unwrap()\r\n    //             .then((res) => {\r\n    //                 let r = _.orderBy([...res], \"id\", \"desc\");\r\n    //                 setComments(r);\r\n    //             })\r\n    //             .catch((err) => {\r\n    //                 console.log(err);\r\n    //             });\r\n    //     }\r\n    // }, []);\r\n\r\n    // on comment post\r\n    const onCommentPost = (comment) => {\r\n        const _comments = [...comments];\r\n        _comments.unshift(comment);\r\n        // setComments(_comments);\r\n    };\r\n\r\n    const updateComments = (comment) => {\r\n        let _comments = comments;\r\n        _comments = _.map(_comments, (c) =>\r\n            c.id === comment.id ? comment : c\r\n        );\r\n        // setComments(_comments);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"sp1_task_right_card mb-3\"\r\n                ref={setModalToggleRef}\r\n                style={{ zIndex: modalIsOpen ? \"99\" : \"\" }}\r\n            >\r\n                {/* <CommentModal\r\n                    isOpen={modalIsOpen}\r\n                    toggleRef={modalToggleRef}\r\n                    comments={comments}\r\n                    task={task}\r\n                    isLoading={isFetching}\r\n                    close={() => setModalIsOpen(false)}\r\n                    onCommentPost={onCommentPost}\r\n                    updateComments={updateComments}\r\n                /> */}\r\n\r\n                <CommentsContainer\r\n                    isOpen={modalIsOpen}\r\n                    toggleRef={modalToggleRef}\r\n                    comments={comments}\r\n                    task={task}\r\n                    close={() => setModalIsOpen(false)}\r\n                    onCommentPost={onCommentPost}\r\n                />\r\n\r\n                <button\r\n                    aria-label=\"openCommentModalButton\"\r\n                    className=\"sp1_task_right_dl_toggle\"\r\n                    onClick={toggleModalButton}\r\n                    style={{ zIndex: modalIsOpen ? \"110\" : \"\" }}\r\n                >\r\n                    <i\r\n                        className={`fa-solid fa-circle-chevron-${\r\n                            modalIsOpen ? \"right\" : \"left\"\r\n                        }`}\r\n                        style={{ color: \"#276fec\" }}\r\n                    />\r\n                </button>\r\n\r\n                <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n                    <h6 className=\"f-16 mb-0\">Comment</h6>\r\n                    {(isLoading || isFetching) && (\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2 mr-auto\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        />\r\n                    )}\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        className=\"sp1_tark_add_item\"\r\n                        aria-label=\"addButton\"\r\n                        onClick={toggleModalButton}\r\n                    >\r\n                        <i\r\n                            className=\"fa-solid fa-plus\"\r\n                            style={{ fontSize: \"12px\" }}\r\n                        />\r\n                        Comment\r\n                    </Button>\r\n\r\n                    <CommentWritingModal\r\n                        isOpen={openAddCommentModal}\r\n                        close={closeAddCommentModal}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"sp1_task_right_card--body\">\r\n                    <Widget task={task} />\r\n\r\n                    {/*\r\n                    {!isFetching && !isLoading ? (\r\n                        comments?.length > 0 ? (\r\n                            comments?.map((comment) => (\r\n                                <Comment key={comment.id} comment={comment} />\r\n                            ))\r\n                        ) : (\r\n                            <div\r\n                                className=\"d-flex align-items-center justify-content-center\"\r\n                                style={{\r\n                                    color: \"#B4BCC4\",\r\n                                    fontSize: \"15px\",\r\n                                    textAlign: \"center\",\r\n                                    height: \"100%\",\r\n                                    width: \"100%\",\r\n                                }}\r\n                            >\r\n                                No Comment is Available\r\n                            </div>\r\n                        )\r\n                    ) : (\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{\r\n                                color: \"#5A6169\",\r\n                                fontSize: \"15px\",\r\n                                textAlign: \"center\",\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                            }}\r\n                        >\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                    marginRight: \"10px\",\r\n                                }}\r\n                            />\r\n                            Loading...\r\n                        </div>\r\n                    )} */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CommentSection;\r\n","import dayjs from \"dayjs\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst DailySubmissionItem = ({ item, setModalData, modalData }) => {\r\n    // const [show,setShow] = useState(false);\r\n    const { task } = useSelector((s) => s.subTask);\r\n\r\n    if (!item) return null;\r\n\r\n    return (\r\n        <tr\r\n            onClick={() => {\r\n                setModalData((prev) => {\r\n                    if (prev?.id === item.id) {\r\n                        return null;\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n            }}\r\n            className=\"sp1_tlr_tr\"\r\n            style={{\r\n                verticalAlign: \"middle\",\r\n                margin: \"0 auto\",\r\n                cursor: \"pointer\",\r\n            }}\r\n        >\r\n            <td\r\n                className=\"sp1_tlr_td\"\r\n                style={{ minWidth: \"100px\", textAlign: \"left\" }}\r\n            >\r\n                <span className=\"singleline-ellipsis\">\r\n                    <span className=\"text-primary\">Task#{task.id}</span>\r\n                    {\" submitted by \"}\r\n                    <span className=\"text-primary\">{item.developer_name}</span>\r\n                </span>\r\n            </td>\r\n            <td className=\"sp1_tlr_td\" style={{ minWidth: \"100px\" }}>\r\n                {dayjs(item.submission_creation_date).format(\"MMM DD, YYYY\")}\r\n            </td>\r\n            <td className=\"sp1_tlr_td\" style={{ minWidth: \"50px\" }}>\r\n                {modalData?.id === item.id ? (\r\n                    <AiFillEyeInvisible\r\n                        style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <AiFillEye\r\n                        style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    />\r\n                )}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default DailySubmissionItem;\r\n","import { useRef } from \"react\";\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport Button from \"../../components/Button\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { get_data_dailySubmission } from \"./fake-data/data_dailySubmission\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\n\r\nconst DailysubmissionDrawerTable = ({ isOpen, close, toggle, data, modalData, setModalData }) => {\r\n    const ref = useRef(null);\r\n    const { width: deviceWidth } = useWindowSize();\r\n    // useClickAway(ref, close);\r\n\r\n    // console.log(get_data_dailySubmission());\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\">\r\n                <div className='sp1-subtask-form --modal-panel-header'>\r\n                    <h6>Daily Submission</h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <table className=\"mt-3 sp1_tlr_table sp1_tlr_tbody\">\r\n                        {/* {deviceWidth > 800 ? <Table data={data} />: <CardView data={data} />} */}\r\n                        {\r\n                            data?.map((singleData) => (\r\n                                <DailySubmissionItem key={singleData.id} item={singleData} setModalData={setModalData} modalData={modalData} />\r\n                            ))\r\n                        }\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if (deviceWidth > 1200) {\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        );\r\n    } else {\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                {content()}\r\n            </Modal>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DailysubmissionDrawerTable;","import { convertTime } from \"../../../../utils/converTime\";\r\n\r\nconst timeFormatter = (time = '') => {\r\n    // console.log(time);\r\n    const [year, month, date] = time.split(\" \")[0].split(\"-\");\r\n    let month_name = '';\r\n    switch (month) {\r\n        case '01':\r\n            month_name = \"Jan\";\r\n            break;\r\n\r\n        case '02':\r\n            month_name = \"Feb\";\r\n            break;\r\n\r\n        case '03':\r\n            month_name = \"Mar\";\r\n            break;\r\n\r\n        case '04':\r\n            month_name = \"Apr\";\r\n            break;\r\n\r\n        case '05':\r\n            month_name = \"May\";\r\n            break;\r\n\r\n        case '06':\r\n            month_name = \"Jun\";\r\n            break;\r\n\r\n        case '07':\r\n            month_name = \"Jul\";\r\n            break;\r\n\r\n        case '08':\r\n            month_name = \"Aug\";\r\n            break;\r\n\r\n        case '09':\r\n            month_name = \"Sep\";\r\n            break;\r\n\r\n        case '10':\r\n            month_name = \"Oct\";\r\n            break;\r\n\r\n        case '11':\r\n            month_name = \"Nov\";\r\n            break;\r\n\r\n        case '12':\r\n            month_name = \"Dec\";\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return `${month_name} ${date}, ${year}`\r\n}\r\n\r\n\r\nexport const columnSchema = [\r\n    {\r\n        id: 'report_date',\r\n        header: 'Report Date',\r\n        draggable: true,\r\n        // accessor: 'report_date',\r\n        accessorKey: 'submission_creation_date',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {timeFormatter(cell.getValue())}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'page_link',\r\n        header: 'Page Link',\r\n        draggable: true,\r\n        // accessor: 'page_link',\r\n        accessorKey: 'link_name',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\">\r\n                View Link\r\n                </a>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'sections',\r\n        header: 'Sections',\r\n        draggable: true,\r\n        // accessor: 'sections',\r\n        accessorKey: 'section_name',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {cell.getValue()}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'comment',\r\n        header: 'Comment',\r\n        draggable: true,\r\n        // accessor: 'comment',\r\n        accessorKey: 'comment',\r\n        cell: (cell) => (\r\n            <div style={{ minWidth: '20rem', maxWidth: '20rem', width: '100%' }} dangerouslySetInnerHTML={{__html:cell.getValue()}}/>\r\n        )\r\n    },\r\n    {\r\n        id: 'total_time_spent',\r\n        header: 'Total Time Spent',\r\n        draggable: true,\r\n        // accessor: 'total_time_spent',\r\n        accessorKey: 'hours_spent',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {convertTime(cell.getValue())}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'attachment_url',\r\n        header: 'Screenshots/Screen records of the sections',\r\n        draggable: true,\r\n        // accessor: 'attachment_url',\r\n        accessorKey: 'attachments',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\"></a>\r\n                View Link\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'site_url',\r\n        header: `Working/Staging Site's URL`,\r\n        draggable: true,\r\n        // accessor: 'site_url',\r\n        accessorKey: 'site_url',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\">\r\n                    View Link\r\n                </a>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'frontend_password',\r\n        header: 'Frontend Password',\r\n        draggable: true,\r\n        // accessor: 'frontend_password',\r\n        accessorKey: 'frontend_password',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {cell.getValue()?cell.getValue():'No Password'}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'submission_date',\r\n        header: 'Report Submission Date',\r\n        draggable: true,\r\n        // accessor: 'submission_date',\r\n        accessorKey: 'submission_creation_date',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {timeFormatter(cell.getValue())}\r\n            </div>\r\n        )\r\n    }\r\n]","import { useRef } from \"react\";\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport Button from \"../../components/Button\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { get_data_dailySubmission } from \"./fake-data/data_dailySubmission\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\nimport DataTable from \"../../../global/table/DataTable\";\r\nimport { columnSchema } from \"./drawer-table-support/Single_user_submission_table_column\";\r\n\r\nconst SingleUserSubmissionTableDrawer = ({ isOpen, close, toggle, data, setModalData }) => {\r\n    const ref = useRef(null);\r\n    const { width: deviceWidth } = useWindowSize();\r\n    // useClickAway(ref, close);\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\">\r\n                <div className='sp1-subtask-form --modal-panel-header'>\r\n                    <h6>Daily Submission</h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={() => {\r\n                            setModalData(null);\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <DataTable\r\n                        tableData={data?[data]:[]}\r\n                        tableColumns={columnSchema}\r\n                        tableName=\"single-user-submission-table\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if (deviceWidth > 1200) {\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        );\r\n    } else {\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                {content()}\r\n            </Modal>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SingleUserSubmissionTableDrawer;","import { useEffect, useState } from \"react\";\r\nimport DailysubmissionDrawerTable from \"./DailysubmissionDrawerTable\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\nimport SingleUserSubmissionTableDrawer from \"./SingleUserSubmissionTableDrawer\";\r\nimport { useGetDailyTasksSubmissionQuery } from \"../../../services/api/dailySubmissionApiSlice\";\r\n\r\n\r\nconst DailySubmissionSection = ({ task }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [modalTableIsOpen, setModalTableIsOpen] = useState(false);\r\n  const [modalRefButton, setModalRefButton] = useState(null);\r\n  const [singleUserSubmissionTableDrawerRef, setSingleUserSubmissionTableDrawerRef] = useState(null);\r\n  const [modalData, setModalData] = useState(null);\r\n\r\n\r\n  const { data, isLoading } = useGetDailyTasksSubmissionQuery(task?.id);\r\n    // control modal\r\n  const toggle = () => setIsOpen(prev => !prev);\r\n  const close = () => setIsOpen(false);\r\n\r\n  // const modalTableToggle = () => setModalTableIsOpen(prev=> !prev);\r\n  const modalTableOpen = () => setModalTableIsOpen(true);\r\n  const modalTableClose = () => setModalTableIsOpen(false);\r\n\r\n  useEffect(() => {\r\n    if (modalData) {\r\n      modalTableOpen();\r\n    } else {\r\n      modalTableClose();\r\n    }\r\n  }, [modalData])\r\n\r\n  const handleModalRef = (ref) => {\r\n    setModalRefButton(ref);\r\n    setSingleUserSubmissionTableDrawerRef(ref);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='sp1_task_right_card mb-3'\r\n      ref={handleModalRef}\r\n      style={{ zIndex: isOpen ? '99' : '' }}>\r\n\r\n      <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Daily Submission</span>\r\n        {isLoading &&\r\n          <div\r\n            className=\"spinner-border text-dark ml-2 mr-auto\"\r\n            role=\"status\"\r\n            style={{\r\n              width: '16px',\r\n              height: '16px',\r\n              border: '0.14em solid rgba(0, 0, 0, .25)',\r\n              borderRightColor: 'transparent'\r\n            }}\r\n          />\r\n        }\r\n      </div>\r\n\r\n\r\n      {/* side drop toggle button */}\r\n      {/* {_.size(timeLogs) > 0 && } */}\r\n      <button\r\n        aria-label='openCommentModalButton'\r\n        className='sp1_task_right_dl_toggle'\r\n        onClick={toggle}\r\n        style={{ zIndex: isOpen ? 110 : '' }}\r\n      >\r\n        <i\r\n          className={`fa-solid fa-circle-chevron-${isOpen ? 'right' : 'left'}`}\r\n          style={{ color: \"#276fec\" }}\r\n        />\r\n      </button>\r\n      {/* side drop toggle button end */}\r\n\r\n\r\n      <DailysubmissionDrawerTable\r\n        isOpen={isOpen}\r\n        close={close}\r\n        toggle={modalRefButton}\r\n        data={data?.daily_submissions}\r\n        modalData={modalData}\r\n        setModalData={setModalData} />\r\n\r\n      <SingleUserSubmissionTableDrawer\r\n        isOpen={modalTableIsOpen}\r\n        close={modalTableClose}\r\n        toggle={singleUserSubmissionTableDrawerRef}\r\n        data={modalData}\r\n        setModalData={setModalData} />\r\n\r\n\r\n      <div className=\"sp1_task_right_card--body\">\r\n        {data?.daily_submissions.length > 0 ?\r\n          <table className=\"sp1_tlr_table\">\r\n            <tbody className=\"sp1_tlr_tbody\">\r\n              {!isLoading &&\r\n                data?.daily_submissions?.map((singleData) => (\r\n                  <DailySubmissionItem key={singleData.id} item={singleData} setModalData={setModalData} modalData={modalData} />\r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n          :\r\n          <div\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{\r\n              color: \"#B4BCC4\",\r\n              fontSize: \"15px\",\r\n              textAlign: \"center\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            No Submission is Available\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailySubmissionSection;","import React from 'react'\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst InnerHistoryItemLoader = () => {\r\n  return (\r\n    <div className=\"d-flex align-items-center sp1_tark_right_item py-2\">\r\n        <div className=''>\r\n            <Placeholder\r\n              width={48}\r\n              height={48}\r\n            />\r\n        </div>\r\n        <div className='px-3 w-100'>\r\n            <Placeholder className='mb-2'/>  \r\n            <Placeholder/>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default InnerHistoryItemLoader ","import React, {lazy} from 'react'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport Button from '../../components/Button';\r\nconst InnerHistoryItem = lazy(() => import('./InnerHistoryItem'));\r\nimport InnerHistoryItemLoader from './InnerHistoryItemLoader';\r\nimport Modal from '../../components/Modal';\r\nimport { useWindowSize } from \"react-use\";\r\n\r\n\r\nconst Histories = ({isOpen, close, toggle, data = []}) => {\r\n  const {width: deviceWidth} = useWindowSize();\r\n  \r\n  const content = () => {\r\n    return (\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6> History </h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='mt-3'>\r\n                    {data ? data.map(d => (\r\n                        <React.Fragment key={d.id}>\r\n                            <React.Suspense fallback={<InnerHistoryItemLoader />}>\r\n                                <InnerHistoryItem history={d} />\r\n                            </React.Suspense>\r\n                        </React.Fragment>\r\n                    )):null}\r\n                </div>      \r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n \r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n            <React.Fragment>{content()}</React.Fragment>       \r\n        </CustomModal>\r\n    );\r\n    }else{\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Histories\r\n","import React, {lazy, Suspense} from 'react'\r\nconst HistoryItem = lazy(() => import('./HistoryItem'));\r\nimport { Placeholder } from '../../../global/Placeholder';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { storeHistories } from '../../../services/features/subTaskSlice';\r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport Histories from './Histories';\r\nimport useSWR from 'swr';\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst HistorySection = () => {\r\n  const {task, histories} = useSelector(s => s.subTask);\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, error, isLoading:isFetching } = useSWR(`/account/task/${task.id}/json?mode=task_history`, fetcher, {\r\n    refreshInterval: 5000\r\n  });\r\n\r\n  //fetch all task \r\n  // const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n  //   skip: histories?.length\r\n  // })\r\n\r\n   //if task notes fetch completed store data into redux store\r\n  //  React.useEffect(()=> {\r\n  //   if(task && task.id){\r\n  //     getTaskDetails(`/${task?.id}/json?mode=task_history`)\r\n  //     .unwrap()\r\n  //     .then(res => {\r\n  //       if(res){\r\n  //         dispatch(storeHistories(res));\r\n  //       }\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(err)\r\n  //     })\r\n  //   } \r\n  // }, [task]); \r\n\r\n  React.useEffect(()=> {\r\n    if(!isFetching && data){\r\n      dispatch(storeHistories(data));\r\n    }  \r\n  }, [data, isFetching]); \r\n  \r\n\r\n  // control modal\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const close = () => setIsOpen(false);\r\n\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3' ref={setModalRefButton} style={{zIndex: isOpen ? 99 : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">History</span> \r\n        {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n          <button \r\n            aria-label='openCommentModalButton'  \r\n            className='sp1_task_right_dl_toggle'\r\n            onClick={toggle}\r\n            style={{zIndex: isOpen ? '110' : ''}}\r\n          >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>\r\n        {/* side drop toggle button end */}\r\n \r\n          {/* histories details */}\r\n          <Histories\r\n            isOpen={isOpen}\r\n            close={close}\r\n            data={histories} \r\n            toggle={modalRefButton}\r\n          />\r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          {!isFetching ? histories ? histories.map( history => (\r\n            <React.Fragment key={history.id}>\r\n              <Suspense fallback={<div className='sp1_tark_right_item py-2 '> <Placeholder /> </div>}>\r\n                <HistoryItem history={history} />\r\n              </Suspense>\r\n            </React.Fragment>\r\n          )):<div\r\n            className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#B4BCC4',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          >\r\n              Empty History\r\n          </div> : \r\n          <div className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#5A6169',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          > \r\n              <div \r\n                    className=\"spinner-border text-dark ml-2\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent',\r\n                        marginRight: '10px'\r\n                    }}\r\n                />\r\n              Loading...\r\n          </div> }\r\n        </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default HistorySection","import { Link } from \"react-router-dom\"\r\n\r\nconst Note = ({note}) => {\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\">\r\n        <div className='w-100 text-ellipsis'>\r\n          {note?.title || 'Untitled'} \r\n        </div>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?note=${note.id}&type=view`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n            <Link to={`?note=${note.id}&type=edit`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-pen-to-square\"></i>\r\n            </Link>\r\n        </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Input = ({\r\n    label,\r\n    id,\r\n    readOnly=false,\r\n    placeholder='',\r\n    inputClass='',\r\n    labelClass='',\r\n    type='text',\r\n    className='',\r\n    value,\r\n    defaultValue,\r\n    onChange,\r\n    error,\r\n    ...rest\r\n}) => {\r\n  return (\r\n    <div className={`form-group my-3 w-100 ${className}`}>\r\n        <label\r\n            htmlFor={id}\r\n            className={`f-14 text-dark-gray mb-1 ${labelClass}`}\r\n            data-label=\"true\"\r\n        >\r\n            {label}\r\n            {rest.required && <sup className='f-14 mr-1'>*</sup> }\r\n        </label>\r\n        <input\r\n            type={type}\r\n            className={`form-control singleline-ellipsis height-35 w-100 f-14 ${inputClass}`}\r\n            placeholder={placeholder}\r\n            id={id}\r\n            value={value}\r\n            defaultValue={defaultValue}\r\n            onChange={onChange}\r\n            readOnly={readOnly}\r\n            onWheel={e => e.currentTarget.blur()}\r\n            {...rest}\r\n        />\r\n\r\n        {error? <div className='' style={{color: 'red'}}> {error} </div> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import * as React from 'react' \r\nimport Button from '../../components/Button' \r\nimport _ from 'lodash'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useCrateNoteMutation } from '../../../services/api/SingleTaskPageApi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeNotes } from '../../../services/features/subTaskSlice'\r\nimport Input from '../../components/form/Input'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from '../../components/Modal'\r\n\r\n\r\n\r\n\r\n\r\nconst CreateNote = ({isOpen, close,toggleRef}) => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [files, setFiles] = React.useState([]);\r\n  const [title, setTitle] = React.useState('');\r\n  const [errTitle, setErrTitle] = React.useState(null);\r\n  const [note,setNote] = React.useState('');\r\n  const dispatch = useDispatch();  \r\n  const { width: deviceWidth} = useWindowSize();\r\n\r\n\r\n const [crateNote, {isLoading}] = useCrateNoteMutation();\r\n\r\n  // handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n  const handleSubmit = e => { \r\n    e.preventDefault();\r\n    if(!title){\r\n        setErrTitle('Title name required');\r\n        return null;\r\n    }\r\n    const fd = new FormData(); \r\n    fd.append('title', title);\r\n    fd.append('note', note);\r\n    fd.append('taskId', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    \r\n    crateNote(fd).unwrap().then(res => {\r\n            if(res?.status === 'success'){\r\n                let _notes = [...notes];\r\n                _notes.push(res?.note);\r\n                dispatch(storeNotes(_notes));\r\n\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: \"Data has been stored Successfully\",\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                }) \r\n\r\n                close();\r\n            }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setNote(data);\r\n  }  \r\n\r\n  const content = () => {\r\n    return (  \r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6>Write Notes</h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <div className='py-3'>\r\n                        <Input \r\n                            id='title'\r\n                            label=\"Title\"\r\n                            type=\"text\" \r\n                            placeholder='Enter a task title'\r\n                            name='title'\r\n                            required={true}\r\n                            value={title}\r\n                            error= {errTitle}\r\n                            onChange={e => handleChange(e, setTitle)}\r\n                        />\r\n\r\n                        <div className='sp1_st_write_comment_editor' style={{minHeight: '100px'}}>\r\n                            <h6 className='mb-3 f-14' style={{color:'#777'}}>Write Note</h6>\r\n                            <CKEditorComponent onChange={handleEditorChange}/>\r\n                        </div>\r\n\r\n                        <div className='mt-3'>\r\n                            <h6 className='mb-3 f-14' style={{color:'#777'}}>Upload Files</h6>\r\n                            <UploadFilesInLine  \r\n                                files={files} \r\n                                setFiles={setFiles} \r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"mt-5\"> \r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <Button\r\n                                        variant='secondary'\r\n                                        className='mr-2'\r\n                                        onClick={close}\r\n                                    > \r\n                                        Cancel\r\n                                    </Button> \r\n        \r\n                                    {!isLoading ? (\r\n                                        <Button onClick={handleSubmit}>\r\n                                            <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                            Keep as Notes\r\n                                        </Button>\r\n                                    ) : (\r\n                                    <Button className='cursor-processing'>\r\n                                        <div \r\n                                            className=\"spinner-border text-white\" \r\n                                            role=\"status\"\r\n                                            style={{\r\n                                                width: '18px',\r\n                                                height: '18px', \r\n                                            }}\r\n                                        >\r\n                                        </div>\r\n                                        Processing...\r\n                                    </Button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n    )\r\n  }\r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n           <React.Fragment>\r\n            {content()}\r\n           </React.Fragment>\r\n        </CustomModal>\r\n      )\r\n }else{\r\n    return (\r\n        <Modal isOpen={isOpen}> \r\n            <React.Fragment>\r\n                {content()}\r\n            </React.Fragment>\r\n        </Modal>\r\n      )\r\n }\r\n\r\n}\r\n\r\nexport default CreateNote ","import * as React from 'react' \r\nimport Button from '../../components/Button' \r\nimport _ from 'lodash'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useCrateNoteMutation, useDeleteNoteUploadedFileMutation, useGetTaskDetailsQuery, useUpdateNoteMutation } from '../../../services/api/SingleTaskPageApi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeNotes } from '../../../services/features/subTaskSlice'\r\nimport Input from '../../components/form/Input'\r\nimport { useEffect } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport { useWindowSize } from 'react-use' \r\nimport Modal from '../../components/Modal'\r\n\r\nconst EditNote = ({isOpen, close, toggleRef}) => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [files, setFiles] = React.useState([]);\r\n  const [title, setTitle] = React.useState('');\r\n  const [errTitle, setErrTitle] = React.useState(null);\r\n  const [note,setNote] = React.useState('');\r\n  const [attachedFiles, setAttachedFiles] = React.useState([]);\r\n  const dispatch = useDispatch();\r\n  const { width: deviceWidth} = useWindowSize();\r\n  const [searchParams] = useSearchParams();\r\n  const noteId = searchParams.get('note');\r\n  const type = searchParams.get('type');\r\n\r\n\r\n\r\n   const [updateNote, {isLoading}] = useUpdateNoteMutation();\r\n\r\n  // fetch all task \r\n  const {data, isFetching} = useGetTaskDetailsQuery(`/${noteId}/json?mode=task_note_edit`, {\r\n    skip: type ? (type !== 'edit' || !noteId) : true,\r\n    refetchOnMountOrArgChange: true\r\n  }) \r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    clearField();\r\n    if(!isFetching && data){ \r\n        setTitle(data?.title);\r\n        setNote(data?.note);\r\n        setAttachedFiles(data?.files || []);\r\n    }\r\n  }, [data, noteId, isFetching]);\r\n\r\n  const clearField = () => {\r\n    setTitle('');\r\n    setNote('');\r\n    setAttachedFiles([]);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    clearField();\r\n    close();\r\n  }\r\n\r\n\r\n // handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n\r\n// handle submittion\r\n  const handleSubmit = e => { \r\n    e.preventDefault();\r\n    if(!title){\r\n        setErrTitle('Title name required');\r\n        return null;\r\n    }\r\n    const fd = new FormData(); \r\n    fd.append('title', title);\r\n    fd.append('note', note);\r\n    fd.append('taskId', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    fd.append('_method', 'PUT');\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    \r\n    updateNote({data: fd, id: noteId}).unwrap().then(res => { \r\n            if(res?.status === 'success'){  \r\n                let _notes = [...notes];\r\n                _notes = _notes?.map(note => {\r\n                    if(Number(note?.id) === Number(res?.note?.id)){\r\n                        return res?.note;\r\n                    }else return note\r\n                })\r\n  \r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: res?.message,\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                }) \r\n\r\n                dispatch(storeNotes(_notes)); \r\n\r\n                handleClose();\r\n            }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  // handle editor\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setNote(data);\r\n  }  \r\n\r\n  // handle loading state\r\nReact.useEffect(() => { \r\n    if (isLoading || isFetching) {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'progress';\r\n      } else {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'default';\r\n      }\r\n}, [isLoading, isFetching])\r\n\r\n\r\n\r\n\r\n  // handle uplaoded file delete request\r\nconst [deleteNoteUploadedFile] = useDeleteNoteUploadedFileMutation();\r\n\r\nconst handleFileDelete = (e, file) => { \r\n    // delete\r\n    deleteNoteUploadedFile(file?.id).unwrap();\r\n   \r\n    // delete form ui\r\n    let previousFile = [...attachedFiles];\r\n    let index = previousFile?.indexOf(file);\r\n    previousFile.splice(index,1);\r\n    setAttachedFiles(previousFile);\r\n}\r\n\r\n\r\n    const content = () => {\r\n        return (\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6>Update Notes\r\n                        {isFetching && <div \r\n                            className=\"spinner-border text-dark ml-2\" \r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent' \r\n                            }}\r\n                        />}\r\n                  </h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={handleClose}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                {isFetching && \r\n                    <div className='w-100' style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        zIndex: 1\r\n                    }}/>\r\n                }\r\n                <div className='py-3'>\r\n                    <Input \r\n                        id='title'\r\n                        label=\"Title\"\r\n                        type=\"text\" \r\n                        placeholder='Enter a task title'\r\n                        name='title'\r\n                        required={true}\r\n                        value={title}\r\n                        error= {errTitle}\r\n                        onChange={e => handleChange(e, setTitle)}\r\n                    />\r\n\r\n                    <div className='sp1_st_write_comment_editor pr-0' style={{minHeight: '100px'}}>\r\n                        <h6 className='mb-3 f-14' style={{color:'#777'}}>Write Note</h6>\r\n                        <CKEditorComponent data={note} onChange={handleEditorChange}/>\r\n                    </div>\r\n\r\n                    <div className='mt-3'>\r\n                        <h6 className='mb-3 f-14' style={{color:'#777'}}>Upload Files</h6>\r\n                        <UploadFilesInLine  \r\n                            files={files} \r\n                            setFiles={setFiles} \r\n                            previous={attachedFiles}\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"mt-5\"> \r\n                            <div className=\"d-flex align-items-center\">\r\n                                <Button\r\n                                    variant='secondary'\r\n                                    className='mr-2'\r\n                                    onClick={handleClose}\r\n                                > \r\n                                    Cancel\r\n                                </Button> \r\n    \r\n                                {!isLoading ? (\r\n                                    <Button onClick={handleSubmit}>\r\n                                        <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                        Update\r\n                                    </Button>\r\n                                ) : (\r\n                                <Button className='cursor-processing'>\r\n                                    <div \r\n                                        className=\"spinner-border text-white\" \r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: '18px',\r\n                                            height: '18px', \r\n                                        }}\r\n                                    >\r\n                                    </div>\r\n                                    Processing...\r\n                                </Button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </CustomModal>\r\n      )\r\n }else{\r\n    return (\r\n        <Modal isOpen={isOpen}> \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </Modal>\r\n      )\r\n }\r\n}\r\n\r\nexport default EditNote;","import * as React from 'react'\r\nimport Button from '../../components/Button'\r\nimport CustomModal from '../../components/CustomModal' \r\nimport { useGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport { User } from '../../../utils/user-details'\r\nimport ContentLoader from \"react-content-loader\"\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from '../../components/Modal'\r\n\r\n\r\nconst NoteView = ({close, isOpen, toggleRef}) => {\r\n    const [searchParams] = useSearchParams();\r\n    const noteId = searchParams.get('note');\r\n    const type = searchParams.get('type');\r\n    const { width: deviceWidth} = useWindowSize();\r\n\r\n    // fetch all task \r\n    const {data, isFetching} = useGetTaskDetailsQuery(`/${noteId}/json?mode=task_note_edit`, {\r\n        skip: type ? (type !== 'view' || !noteId) : true,\r\n        refetchOnMountOrArgChange: true\r\n    }) \r\n    \r\n  const user = data ?  new User(data.user) : null;\r\n\r\n  const content = () =>{\r\n    return(\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                <h6>Notes</h6> \r\n                {isFetching && <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent'\r\n                    }}\r\n                />} \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='py-3'>\r\n                    <div>\r\n                        {isFetching ? <>Loading...</> : \r\n                        <>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div className=''>\r\n                                    <img src={user?.getAvatar()} alt=\"\" width={40} height={40} />\r\n                                </div>\r\n                                <div className='px-3'>\r\n                                    <h6 className='mb-0'>{user?.getName()}</h6>\r\n                                    <span className='' style={{color: '#A5ACB5'}}>{user?.getDesignationName()}</span>\r\n                                </div>\r\n                            </div> \r\n                            <div className='mt-4'>\r\n                                <h6 className='font-weight-bold'>{data?.title}</h6>\r\n                                <div className='sp1_ck_content mb-5' dangerouslySetInnerHTML={{__html: data?.note}} />\r\n                                {data?.files && <UploadFilesInLine previous={data?.files} mode='preview'/>}\r\n                            </div>\r\n                        </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </CustomModal>\r\n    )\r\n  }else{\r\n    return <Modal isOpen={isOpen} > \r\n        <React.Fragment>\r\n            {content()}\r\n        </React.Fragment>\r\n     </Modal>\r\n  }\r\n}\r\n\r\nexport default NoteView","import React from 'react'\r\nimport Note from './Note'\r\nimport CreateNote from './CreateNote';\r\nimport Button from '../../components/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { storeNotes } from '../../../services/features/subTaskSlice';\r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport EditNote from './EditNote';\r\nimport NoteView from './NoteView';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\n\r\nconst NoteSection = () => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [mode, setMode] = React.useState('');\r\n\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n\r\n  const dispatch = useDispatch();   \r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const paramType = searchParams.get('type');\r\n\r\n\r\n  // fetch all task \r\n  const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n    skip: notes?.length\r\n  })\r\n\r\n  // control mode \r\n  React.useEffect(() => {\r\n    let _mode = paramType ? paramType : '';\r\n    setMode(_mode);\r\n  }, [paramType])\r\n\r\n\r\n  // if task notes fetch completed store data into redux store\r\n  React.useEffect(()=> {\r\n    if(task && task.id){\r\n      getTaskDetails(`/${task?.id}/json?mode=task_note`)\r\n      .unwrap()\r\n      .then(res => {\r\n        if(res){\r\n          dispatch(storeNotes(res));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    } \r\n  }, [task]);\r\n \r\n \r\n  // close modal\r\n  const close = (e) => { \r\n    navigate(`/account/tasks/${task.id}`); \r\n  }\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3' ref={setModalRefButton} style={{zIndex: mode ? '99' : ''}}>\r\n       <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n          <span className=\"f-16\">Notes</span>\r\n          {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n          <Button\r\n              variant='tertiary'\r\n              className=\"sp1_tark_add_item\" \r\n              aria-label=\"addButton\"\r\n              onClick={() => navigate(`?type=create`)}\r\n          > \r\n              {mode === 'create' ? (\r\n                <> <i className=\"fa-solid fa-xmark\" style= {{fontSize: '12px'}}/> Close </> \r\n                ) :\r\n                (\r\n                  <> <i className=\"fa-solid fa-plus\"  style= {{fontSize: '12px'}} /> Note  </>\r\n                )\r\n              }\r\n          </Button>\r\n        </div>\r\n\r\n        {/* left dropdown */}\r\n        {mode && <button \r\n          aria-label='openCommentModalButton'  \r\n          \r\n          className='sp1_task_right_dl_toggle'\r\n          onClick={close}\r\n          style={{zIndex: mode ? '110' : ''}}\r\n        >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ mode ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>}\r\n      {/* left dropdown */}\r\n\r\n        {/* create new */} \r\n        <CreateNote \r\n            close={close}  \r\n            isOpen={mode === 'create'} \r\n            toggleRef={modalRefButton}\r\n        /> \r\n\r\n        {/* edit note */} \r\n        <EditNote \r\n          close={close} \r\n          isOpen={ mode === 'edit'}   \r\n          toggleRef={modalRefButton}\r\n        />  \r\n\r\n\r\n        {/* note view */}\r\n        <NoteView \r\n          close={close}\r\n          isOpen={mode === 'view'} \r\n          toggleRef={modalRefButton}\r\n        /> \r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          { !isFetching ? notes?.length > 0 ? notes.map(note => (\r\n            <Note \r\n              key={note.id} \r\n              note={note}  \r\n            /> \r\n          )): <div\r\n            className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#B4BCC4',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          >\r\n              Empty Notes\r\n            </div> : \r\n            <div className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#5A6169',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          > \r\n              <div \r\n                    className=\"spinner-border text-dark ml-2\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent',\r\n                        marginRight: '10px'\r\n                    }}\r\n                />\r\n              Loading...\r\n            </div> }\r\n        </div>\r\n\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default NoteSection","import * as React from 'react'\r\nimport Button from '../../components/Button'\r\nimport CustomModal from '../../components/CustomModal' \r\n\r\n\r\nconst  ViewComment = ({close, isOpen, toggleRef, comment}) => { \r\n  return (\r\n    <CustomModal isOpen={isOpen} toggleRef={toggleRef}>\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal ml-auto'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='py-3'>\r\n                    <div>\r\n                        {/* comment here... */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </CustomModal>\r\n    \r\n  )\r\n}\r\n\r\nexport default ViewComment \r\n\r\n","import React from \"react\";\r\nimport Rating from \"../../../global/Rating\";\r\nimport useSWR from \"swr\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ViewComment from \"./ViewComment\";\r\n\r\nconst fetcher = (url) => axios.get(url).then((res) => res.data);\r\n\r\nconst RevisionSection = ({ task }) => {\r\n    const [toggleRef, setToggleRef] = React.useState(null);\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n    const toggle = (e) => {\r\n        e.preventDefault();\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    const close = (e) => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const { data, error, isLoading } = useSWR(\r\n        `/account/task/${task.id}/json?mode=task_approve`,\r\n        fetcher\r\n    );\r\n\r\n    const cmt = data?.comment;\r\n    const commentLength = cmt?.length > 250;\r\n    let comment = commentLength ? cmt?.slice(0, 250) : cmt;\r\n    comment =\r\n        comment ||\r\n        `<span className='' style=\"color: #A7A9B2\">No Comment is Available</span>`;\r\n\r\n    return (\r\n        <div\r\n            className=\"sp1_task_right_card mb-3\"\r\n            ref={setToggleRef}\r\n            style={{ maxHeight: \"450px\" }}\r\n        >\r\n            {/* side drop toggle button */}\r\n            {isOpen && (\r\n                <button\r\n                    aria-label=\"openCommentModalButton\"\r\n                    className=\"sp1_task_right_dl_toggle\"\r\n                    onClick={toggle}\r\n                    style={{ zIndex: isOpen ? \"110\" : \"\" }}\r\n                >\r\n                    <i\r\n                        className={`fa-solid fa-circle-chevron-${\r\n                            isOpen ? \"right\" : \"left\"\r\n                        }`}\r\n                        style={{ color: \"#276fec\" }}\r\n                    />\r\n                </button>\r\n            )}\r\n            {/* side drop toggle button end */}\r\n\r\n            <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n                <span className=\"f-16\">Task Review</span>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{ width: \"150px\" }}>\r\n                    Deadline Meet :{\" \"}\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Rating rating={Number(data?.deadline_meet)} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{ width: \"150px\" }}>\r\n                    Submission Quality:{\" \"}\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Rating rating={Number(data?.submission_quality)} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{ width: \"150px\" }}>\r\n                    Req. Fullfillment:{\" \"}\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Rating rating={Number(data?.req_fullfillment)} />\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Overall Task Ratings: </div>\r\n            <div className=\"d-flex align-items-center\"> \r\n                <Rating rating={Number(data?.overall_tasks)} /> \r\n            </div>\r\n        </div>  */}\r\n\r\n            <div className=\"mb-2\">\r\n                <span className=\"font-weight-bold d-block mb-1\">Comments:</span>\r\n                <div style={{ color: \"#777\", fontSize: \"13px\" }}>\r\n                    <div\r\n                        className=\"sp1_ck_content\"\r\n                        dangerouslySetInnerHTML={{ __html: comment }}\r\n                    ></div>\r\n                    {commentLength && (\r\n                        <a href=\"#\" onClick={toggle}>\r\n                            Read More\r\n                        </a>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <ViewComment\r\n                isOpen={isOpen}\r\n                toggleRef={toggleRef}\r\n                close={close}\r\n                comment={data?.comment}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RevisionSection;\r\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./task-edit-form.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import * as React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nconst DatePickerComponent = ({date, selected, setDate, minDate, maxDate, placeholderText,...rest}) => {\r\n\r\n  return (\r\n        <DatePicker\r\n            selected={date}\r\n            dateFormat='dd-MM-yyyy'\r\n            onChange={(d) => setDate(d)}\r\n            className='w-100 border-0 py-2'\r\n            minDate={minDate}\r\n            maxDate={maxDate}\r\n            placeholderText={placeholderText}\r\n            {...rest}\r\n        />\r\n  )\r\n}\r\n\r\nexport default DatePickerComponent;\r\n","/* eslint-disable react/display-name */\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nconst SearchBox = ({value, onChange, placeholder=\"Search\", autoFocus=false, className=\"\", ...props}) => {\r\n        const ref = React.useRef(null);\r\n        React.useEffect(() => {\r\n            if (autoFocus) {\r\n                ref.current.focus();\r\n            }\r\n        }, [autoFocus, ref])\r\n        return (\r\n            <div className='cnx__ins__ui_search'>\r\n                <input \r\n                    type='text' \r\n                    placeholder= {placeholder}\r\n                    value={value}\r\n                    className={`cnx__ins__ui_search_input ${className}`}\r\n                    onChange={e => onChange(e.currentTarget.value)}  \r\n                    ref={ref}   \r\n                    {...props}\r\n                />\r\n\r\n                {/* search icons */}\r\n                    <div className='cnx__ins__ui_search_icon'>\r\n                        <svg \r\n                            xmlns=\"http://www.w3.org/2000/svg\" \r\n                            className='cnx__ins__ui_search_icon_svg mb-1'\r\n                            viewBox=\"0 0 24 24\" width=\"15\" height=\"15\">\r\n                            <path d=\"M23.707,22.293l-5.969-5.969a10.016,10.016,0,1,0-1.414,1.414l5.969,5.969a1,1,0,0,0,1.414-1.414ZM10,18a8,8,0,1,1,8-8A8.009,8.009,0,0,1,10,18Z\"/>\r\n                        </svg>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nSearchBox.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    placeholder: PropTypes.string,\r\n    className: PropTypes.string,\r\n    autoFocus: PropTypes.bool,\r\n}\r\n\r\n\r\nexport default SearchBox;","const Loader = ({title =\"Loading...\"}) => {\r\n  return (\r\n        <div className='d-flex align-items-center'>\r\n            <div\r\n                className=\"spinner-border text-dark mr-2\"\r\n                role=\"status\"\r\n                style={{\r\n                    width: \"16px\",\r\n                    height: \"16px\",\r\n                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                    borderRightColor: \"transparent\",\r\n                }}\r\n            /> \r\n            <span>{title}</span>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import { Combobox } from '@headlessui/react'\r\nimport * as React from 'react'\r\nimport SearchBox from '../../components/form/Searchbox';\r\nimport _  from 'lodash';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from '../../components/Loader';\r\nimport { useGetTaskDetailsQuery } from '../../../../react-latest/services/api/SingleTaskPageApi';\r\n\r\n\r\n\r\nconst TaskCategorySelectionBox = ({selected, onSelect, taskId}) => {\r\n    const [query, setQuery] = React.useState('');\r\n\r\n    const params = useParams();\r\n    const {\r\n        data:categories,\r\n        isFetching\r\n    } = useGetTaskDetailsQuery(`/${params?.taskId || taskId}/json?mode=category`);\r\n\r\n\r\n    const filteredData =\r\n    query === ''\r\n      ? categories\r\n      : categories?.filter((cat) => {\r\n          return cat?.category_name.toLowerCase().includes(query.toLowerCase())\r\n        })\r\n\r\n  return (\r\n    <Combobox value={selected} onChange={onSelect}>\r\n        <div className=\"form-group position-relative my-3\">\r\n            <label htmlFor=\"\">Task category<sup>*</sup></label>\r\n            <Combobox.Button className=\"d-flex align-items-center w-100 sp1-selection-display-button\">\r\n                <Combobox.Input\r\n                    onChange={e => setQuery(e.target.value)}\r\n                    placeholder='--'\r\n                    displayValue={(value) => value?.category_name || ''}\r\n                    className=\"form-control height-35 f-14 sp1-selection-display w-100\"\r\n                />\r\n                <div className='__icon'>\r\n                    <i className=\"fa-solid fa-sort\"></i>\r\n                </div>\r\n            </Combobox.Button>\r\n\r\n            <Combobox.Options className=\"sp1-select-options\">\r\n\r\n                {isFetching && (\r\n                    <div className='sp1-select-option-nodata'>\r\n                        <Loader />\r\n                    </div>\r\n                )}\r\n\r\n                {filteredData?.length===0 ?\r\n                    <div className='sp1-select-option-nodata'>\r\n                         Nothing found.\r\n                    </div>\r\n                :filteredData?.map((cat, catIdx) => (\r\n                <Combobox.Option\r\n                    key={catIdx}\r\n                    className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                    value={cat}\r\n                >\r\n                    {({ selected }) => (\r\n                        <>\r\n                            <span\r\n                                className={`block truncate ${\r\n                                selected ? 'font-medium' : 'font-normal'\r\n                                }`}\r\n                            >\r\n                                {cat?.category_name}\r\n                            </span>\r\n                            {selected ? (\r\n                                <span className=\"ml-auto\"> <i className='fa-solid fa-check'/> </span>\r\n                            ) : null}\r\n                        </>\r\n                    )}\r\n                </Combobox.Option>\r\n            ))}\r\n            </Combobox.Options>\r\n        </div>\r\n    </Combobox >\r\n  )\r\n}\r\n\r\nexport default TaskCategorySelectionBox\r\n","import { Combobox } from \"@headlessui/react\";\r\nimport * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n    useDeveloperInProgressTaskQuery,\r\n    useGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { Placeholder } from \"../../../global/Placeholder\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\n\r\nconst AssginedToSelection = ({ selected, onSelect, taskCategory }) => {\r\n    const [query, setQuery] = React.useState(\"\");\r\n    const [employeeId, setEmployeeId] = React.useState();\r\n    const params = useParams();\r\n    const { data, isFetching } = useGetTaskDetailsQuery(\r\n        `/${params?.taskId}/json?mode=employees`\r\n    );\r\n\r\n    const { DevProgressStatus, isLoading } = useDeveloperInProgressTaskQuery(\r\n        employeeId,\r\n        {\r\n            skip: !employeeId,\r\n        }\r\n    );\r\n\r\n    let employees = [];\r\n    if (taskCategory && taskCategory.id === 5) {\r\n        employees = _.filter(\r\n            data,\r\n            (d) =>\r\n                Number(d.role_id) === 9 &&\r\n                Number(d.id) !== Number(window.Laravel.user.id)\r\n        );\r\n    } else if (taskCategory && taskCategory.id === 7) {\r\n        employees = _.filter(data, (d) => Number(d.role_id) === 10);\r\n    } else {\r\n        employees = _.filter(\r\n            data,\r\n            (d) => Number(d.role_id) === 5 || Number(d.role_id) === 14\r\n        );\r\n    }\r\n    // console.log(\"employees\", employees);\r\n    const filteredData =\r\n        query === \"\"\r\n            ? employees\r\n            : employees?.filter((employee) => {\r\n                  return employee?.name\r\n                      .toLowerCase()\r\n                      .includes(query.toLowerCase());\r\n              });\r\n\r\n    return (\r\n        <Combobox value={selected} onChange={onSelect}>\r\n            <div className=\"form-group position-relative my-3\">\r\n                <label htmlFor=\"\">Assigned To</label>\r\n                <Combobox.Button className=\"d-flex align-items-center w-100 sp1-selection-display-button\">\r\n                    <Combobox.Input\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        placeholder=\"--\"\r\n                        displayValue={(value) => value?.name || \"\"}\r\n                        className=\"form-control height-35 f-14 sp1-selection-display w-100\"\r\n                    />\r\n                    <div className=\"__icon\">\r\n                        <i className=\"fa-solid fa-sort\"></i>\r\n                    </div>\r\n                </Combobox.Button>\r\n\r\n                <Combobox.Options className=\"sp1-select-options\">\r\n                    {isFetching && (\r\n                        <div className=\"sp1-select-option-nodata\">\r\n                            <Loader />\r\n                        </div>\r\n                    )}\r\n\r\n                    {filteredData?.length === 0 ? (\r\n                        <div className=\"sp1-select-option-nodata\">\r\n                            Nothing found.\r\n                        </div>\r\n                    ) : (\r\n                        filteredData?.map((employee) => (\r\n                            <Option\r\n                                key={employee.id}\r\n                                employee={employee}\r\n                                DevProgressStatus={DevProgressStatus}\r\n                                isLoading={isLoading}\r\n                                setEmployeeId={setEmployeeId}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </Combobox.Options>\r\n            </div>\r\n        </Combobox>\r\n    );\r\n};\r\n\r\nexport default AssginedToSelection;\r\n\r\nconst Option = ({ employee, DevProgressStatus, isLoading, setEmployeeId }) => {\r\n    setEmployeeId(employee?.id);\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"sp1-select-option mb-2\">\r\n                <div className=\"d-flex align-items-center px-3\">\r\n                    <Placeholder />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Combobox.Option\r\n            key={employee?.id}\r\n            className={({ active }) =>\r\n                `sp1-select-option ${active ? \"active\" : \"\"}`\r\n            }\r\n            value={{\r\n                ...employee,\r\n                isOverloaded: DevProgressStatus?.status === 400,\r\n            }}\r\n        >\r\n            {({ selected }) => (\r\n                <div\r\n                    className=\"d-flex align-items-center\"\r\n                    style={{ gap: \"10px\" }}\r\n                >\r\n                    <div\r\n                        className=\"rounded-circle\"\r\n                        style={{\r\n                            width: \"28px\",\r\n                            height: \"28px\",\r\n                            overflow: \"hidden\",\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src={employee?.image_url}\r\n                            alt={employee?.name}\r\n                            width={100}\r\n                            height={100}\r\n                            className=\"rounded-circle\"\r\n                            style={{\r\n                                width: \"100%\",\r\n                                height: \"100%\",\r\n                                objectFit: \"fill\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <span\r\n                        className={`block truncate ${\r\n                            selected ? \"font-medium\" : \"font-normal\"\r\n                        }`}\r\n                    >\r\n                        <span className=\"mr-2\">{employee?.name}</span>\r\n                        {DevProgressStatus?.status === 400 ? (\r\n                            <span className=\"badge badge-danger\">\r\n                                Overloaded\r\n                            </span>\r\n                        ) : employee?.developer_status === 1 ? (\r\n                            <span className=\"badge badge-warning\">\r\n                                Working...\r\n                            </span>\r\n                        ) : (\r\n                            <span className=\"badge badge-primary\">\r\n                                Open to Work\r\n                            </span>\r\n                        )}\r\n                    </span>\r\n                    {selected ? (\r\n                        <span className=\"ml-auto\">\r\n                            <i className=\"fa-solid fa-check\"></i>\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n            )}\r\n        </Combobox.Option>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport { Listbox } from '@headlessui/react'\r\n\r\n\r\n\r\nconst priority = [\"Emergency\", \"Urgent\", \"Regular\"]\r\n\r\n\r\nconst PrioritySelection = ({selected, setSelected}) => { \r\n    return(\r\n        <Listbox value={selected} onChange={setSelected}>\r\n            <div className=\"form-group position-relative my-3\">\r\n                <label htmlFor=\"\"> Priority <sup>*</sup> </label>\r\n                    <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">{selected}\r\n                    \r\n                    <div className='__icon'>\r\n                        <i className=\"fa-solid fa-sort\"></i>\r\n                    </div>\r\n                </Listbox.Button>\r\n                <Listbox.Options  className=\"sp1-select-options\">\r\n                    {priority?.map((s, i) => (\r\n                        <Listbox.Option \r\n                            key={i}\r\n                            className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                            value={s}\r\n                        > {s} </Listbox.Option>\r\n                    ))}\r\n                </Listbox.Options>\r\n            </div>\r\n        </Listbox>\r\n    )\r\n}\r\n\r\nexport default PrioritySelection;","import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport Card from \"../../../global/Card\";\r\nimport styles from \"./task-edit-form.module.css\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport Button from '../../../global/Button';\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\nimport AssignedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\n\r\nimport {\r\n    useDeleteUplaodedFileMutation,\r\n    useGetTaskDetailsQuery,\r\n    useEditSubtaskMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useGetMilestoneDetailsQuery } from \"../../../services/api/projectApiSlice\";\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n// Edit form Provider\r\nconst EditFormProvider = ({ task }) => {\r\n    const [searchParams] = useSearchParams(); // get search params\r\n    const isVisible = searchParams.get(\"modal\") === \"edit\"; // check has modal\r\n    const taskId = searchParams.get(\"task\"); // get task id\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const close = () => navigate(location.pathname, {replace: true});\r\n\r\n\r\n    const [   editSubtask, { isLoading, error } ] = useEditSubtaskMutation();\r\n    // handle submission\r\n    const handleSubmission = (formData) => {\r\n        editSubtask({data: formData, id: task?.id}).unwrap().then(res => {\r\n            toast.success(\"Task Updated successfully!\");\r\n            close();\r\n        }).catch((err) => {\r\n            if(err?.status === 422){\r\n                toast.warn(\"Please fill out all required fields\")\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={isVisible}>\r\n            <Card className={styles.form_card}>\r\n                <Card.Head\r\n                  onClose={close}\r\n                  className={styles.form_card_head}\r\n                >\r\n                    <h6> Edit Task # {taskId} </h6>\r\n                </Card.Head>\r\n\r\n                <Card.Body className={styles.form_card_body}>\r\n                    <div className=\"\">\r\n                        {task && (\r\n                            <SubTaskEditModal\r\n                                task={task}\r\n                                onSubmit={handleSubmission}\r\n                                isLoading={isLoading}\r\n                                onClose={close}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditFormProvider;\r\n\r\nconst SubTaskEditModal = ({ task, onSubmit, isLoading, onClose}) => {\r\n    const editDataIsFetching = !task;\r\n    //form data\r\n    const [title, setTitle] = useState(task.title);\r\n    const [milestone, setMilestone] = useState({id: task.milestoneID, milestone_title: task.milestoneTitle});\r\n    const [parentTask, setParentTask] = useState(task.parentTaskTitle);\r\n    const [startDate, setStateDate] = useState(new Date(task.startDate));\r\n    const [dueDate, setDueDate] = useState(new Date(task.dueDate));\r\n    const [project, setProject] = useState(task.projectName);\r\n    const [taskCategory, setTaskCategory] = useState({\r\n        id: task.category.id,\r\n        category_name: task.category.name,\r\n    });\r\n    const [assignedTo, setAssignedTo] = useState({\r\n        id: task.assigneeTo.id,\r\n        name: task.assigneeTo.name,\r\n    });\r\n    const [description, setDescription] = useState(task.description);\r\n    const [priority, setPriority] = useState(task.priority);\r\n    const [estimateTimeHour, setEstimateTimeHour] = useState(\r\n        task.estimateHours\r\n    );\r\n    const [estimateTimeMin, setEstimateTimeMin] = useState(\r\n        task.estimateMinutes\r\n    );\r\n    const [attachedFiles, setAttachedFiles] = useState([]);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { data: estimation, isFetching } = useGetTaskDetailsQuery(\r\n        `/${task.id}/json?mode=estimation_time`\r\n    );\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n      let count = 0;\r\n      const err = new Object();\r\n\r\n      const errorMessages = {\r\n        requiredField: 'This field is required.',\r\n        startDate: 'Please select a start date.',\r\n        dueDate: 'Please select a due date.',\r\n        taskCategory: 'Please select a task category.',\r\n        assignedTo: 'Please select a user.',\r\n        overloadedUser: (name, gender) =>\r\n          `You cannot assign this task to ${name} because ${\r\n            gender === 'male' ? 'he ' : 'she '\r\n          } has more than 10 submittable tasks.`,\r\n        description: 'This field is required.',\r\n      };\r\n\r\n      const showError = (field) => {\r\n        err[field] = errorMessages[field];\r\n        count++;\r\n      }\r\n\r\n\r\n      if(!title) showError('title');\r\n      if(!startDate) showError('startDate');\r\n      if(!dueDate) showError('dueDate');\r\n      if(!taskCategory) showError('taskCategory');\r\n      if(!assignedTo) showError('assignedTo');\r\n\r\n      if (assignedTo && assignedTo?.isOverloaded) {\r\n        err.assignedTo = overloadedUser(assignedTo.name, genderPronoun);\r\n        count++;\r\n      }\r\n\r\n      if(!description) showError('description');\r\n\r\n      setError(error);\r\n      return count === 0;\r\n\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n         //form data\r\n         const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n         const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n         const fd = new FormData();\r\n         fd.append(\"milestone_id\", task?.milestoneID);\r\n         fd.append(\"task_id\", task?.parentTaskId);\r\n         fd.append(\"title\", title);\r\n         fd.append(\"start_date\", _startDate);\r\n         fd.append(\"due_date\", _dueDate);\r\n         fd.append(\"project_id\", task?.projectId);\r\n         fd.append(\"task_category_id\", taskCategory?.id);\r\n         fd.append(\"user_id\", assignedTo?.id);\r\n         fd.append(\"description\", description);\r\n         fd.append(\"board_column_id\", task?.boardColumn.id);\r\n         fd.append(\"priority\", _.lowerCase(priority));\r\n         fd.append(\"estimate_hours\", estimateTimeHour);\r\n         fd.append(\"estimate_minutes\", estimateTimeMin);\r\n         fd.append(\"deliverable_id\", milestone?.deliverable_type ?? '');\r\n         fd.append(\"image_url\", null);\r\n         fd.append(\"addedFiles\", null);\r\n         fd.append('subTaskID', task?.subtaskId);\r\n         fd.append(\"_method\", \"PUT\");\r\n         fd.append(\r\n             \"_token\",\r\n             document\r\n                 .querySelector(\"meta[name='csrf-token']\")\r\n                 .getAttribute(\"content\")\r\n         );\r\n         Array.from(files).forEach((file) => {\r\n             fd.append(\"file[]\", file);\r\n         });\r\n\r\n        if(isValid()){\r\n         onSubmit(fd);\r\n        }else{\r\n         toast.warn('Please fill out all required fields!');\r\n        }\r\n\r\n    };\r\n\r\n\r\n      const {data: projects, isFetching: isFetchingMilestone} = useGetMilestoneDetailsQuery(task?.projectId)\r\n\r\n\r\n\r\n    // handle uploaded file delete request\r\n    const [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\n    const handleFileDelete = (e, file) => {\r\n        // delete\r\n        deleteUplaodedFile(file?.id).unwrap();\r\n\r\n        // delete form ui\r\n        let previousFile = [...attachedFiles];\r\n        let index = previousFile?.indexOf(file);\r\n        previousFile.splice(index, 1);\r\n        setAttachedFiles(previousFile);\r\n    };\r\n\r\n    // handle loading state\r\n    React.useEffect(() => {\r\n        if (isLoading || editDataIsFetching) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading, editDataIsFetching]);\r\n\r\n    //   editor\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        let errText = \"\";\r\n        let hoursErr = err?.estimate_hours?.[0];\r\n        let minErr = err?.estimate_minutes?.[0];\r\n        if (hoursErr) errText += hoursErr;\r\n        if (minErr) errText += minErr;\r\n        return errText;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching && (\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            zIndex: 1,\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className=\"sp1-subtask-form --form row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Input\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter a task title\"\r\n                            name=\"title\"\r\n                            required={true}\r\n                            value={title}\r\n                            error={required_error?.title?.[0]}\r\n                            onChange={(e) => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* project */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* Project Milestone Selection Menu */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Milestone\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={milestone?.milestone_title}\r\n                            />\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* parent task */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Parent Task\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={task?.parentTaskTitle}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Start Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={dayjs\r\n                                        .dayjs(task?.start_date)\r\n                                        .toDate()}\r\n                                    maxDate={\r\n                                        dueDate ||\r\n                                        dayjs.dayjs(task?.due_date).toDate()\r\n                                    }\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.start_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.start_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Due Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={\r\n                                        startDate ||\r\n                                        dayjs.dayjs(task?.start_date).toDate()\r\n                                    }\r\n                                    maxDate={dayjs\r\n                                        .dayjs(task?.due_date)\r\n                                        .toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.due_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.due_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <TaskCategorySelectionBox\r\n                            selected={taskCategory}\r\n                            onSelect={setTaskCategory}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <AssignedToSelection\r\n                            selected={assignedTo}\r\n                            onSelect={setAssignedTo}\r\n                        />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <PrioritySelection\r\n                            selected={priority}\r\n                            setSelected={setPriority}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Set Estimate Time */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className=\"f-14 text-dark-gray\">\r\n                                Set Estimate Time{\" \"}\r\n                                <sup className=\"f-14\"> * </sup>\r\n                            </label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeHour)\r\n                                    }\r\n                                />{\" \"}\r\n                                hrs\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeMin)\r\n                                    }\r\n                                />{\" \"}\r\n                                min\r\n                            </div>\r\n\r\n                            <div style={{ color: \"red\" }}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{ color: \"red\" }}>\r\n                                Estimation time can't exceed{\" \"}\r\n                                {estimation?.hours_left} hours{\" \"}\r\n                                {estimation?.minutes_left} minutes\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div\r\n                                className=\"sp1_st_write_comment_editor\"\r\n                                style={{ minHeight: \"100px\" }}\r\n                            >\r\n                                <CKEditorComponent\r\n                                    data={description}\r\n                                    onChange={handleEditorChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3 mb-5\">\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                className=\"mr-2\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n\r\n                            <Button\r\n                              onClick={handleSubmit}\r\n                              isLoading={isLoading}\r\n                            >\r\n                                <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { User } from \"../../../../utils/user-details\";\r\nimport Accordion from \"../../../components/Accordion\";\r\nimport Guideline from \"../../../components/Guideline\";\r\nimport RevisionText from \"../../../components/RevisionText\";\r\nimport GenarelLoader from \"../../../components/loader/GenarelLoader\";\r\nimport ArticleLoader from \"../../../components/loader/ArticleLoader\";\r\nimport dayjs from \"dayjs\";\r\nimport { Placeholder } from \"../../../../global/Placeholder\";\r\n\r\nconst Genarel = ({ task, isFetching }) => {\r\n    const loggedUser = new User(window?.Laravel?.user);\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {isFetching ? (\r\n                <GenarelLoader />\r\n            ) : (\r\n                <React.Fragment>\r\n                    <div className=\"col-12 col-xl-6 pb-3 pb-xl-0\">\r\n                        <div\r\n                            className=\"d-flex flex-column\"\r\n                            style={{ gap: \"10px\" }}\r\n                        >\r\n                            <h6 className=\"\">\r\n                                Task:{\" \"}\r\n                                <a\r\n                                    target=\"__blank\"\r\n                                    href={`/account/tasks/${task?.id}`}\r\n                                    className=\"text-primary font-weight-normal\"\r\n                                >\r\n                                    {task?.getSubtaskTitle()}\r\n                                </a>\r\n                            </h6>\r\n                            {task?.isSubtask && (\r\n                                <div className=\"sp1_st-list-item\">\r\n                                    <div className=\"sp1_st-list-item-head\">\r\n                                        Parent Task :\r\n                                    </div>\r\n                                    <div className=\"sp1_st-list-item-value\">\r\n                                        <a\r\n                                            href={`/account/tasks/${task?.parentTaskId}`}\r\n                                            className=\"text-dark text-hover-underline\"\r\n                                        >\r\n                                            {task?.parentTaskTitle}\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* project name */}\r\n                            {/* <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">Project : </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span className=\"dot-color bg-danger mr-2\" />\r\n                                    <a href={`/account/projects/${task?.projectId}`} className=\"text-dark text-hover-underline\"> \r\n                                        {task?.projectName} \r\n                                    </a>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            {/* milestone */}\r\n                            {/* <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Milestone :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span className=\"dot-color bg-primary mr-2\" />\r\n                                    {task?.milestoneTitle}\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            {/* asignee to */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Assigned To :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <div\r\n                                        style={{\r\n                                            width: \"32px\",\r\n                                            height: \"32px\",\r\n                                        }}\r\n                                    >\r\n                                        <img\r\n                                            src={task?.assigneeTo?.getAvatar()}\r\n                                            alt={task?.assigneeTo?.getName()}\r\n                                            width=\"32px\"\r\n                                            height=\"32px\"\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"ml-2\">\r\n                                        <span\r\n                                            className={`d-block f-14 font-weight-bold`}\r\n                                        >\r\n                                            <a\r\n                                                href={task?.assigneeTo?.getUserLink()}\r\n                                                className=\"text-dark hover-underline\"\r\n                                            >\r\n                                                {task?.assigneeTo?.getName()}\r\n                                            </a>\r\n                                            {Number(\r\n                                                task?.assigneeTo?.getId()\r\n                                            ) ===\r\n                                                Number(loggedUser?.getId()) && (\r\n                                                <sup\r\n                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                    style={{ fontSize: \"10px\" }}\r\n                                                >\r\n                                                    {\" \"}\r\n                                                    It's You{\" \"}\r\n                                                </sup>\r\n                                            )}\r\n                                        </span>\r\n\r\n                                        <span style={{ fontSize: \"12px\" }}>\r\n                                            {task?.assigneeTo?.getDesignationName()}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* assignee by */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Assigned by:{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <div\r\n                                        style={{\r\n                                            width: \"32px\",\r\n                                            height: \"32px\",\r\n                                        }}\r\n                                    >\r\n                                        <img\r\n                                            src={task?.assigneeBy?.getAvatar()}\r\n                                            alt={task?.assigneeBy?.getName()}\r\n                                            width=\"32px\"\r\n                                            height=\"32px\"\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"ml-2\">\r\n                                        <span\r\n                                            className={`d-block f-14 font-weight-bold`}\r\n                                        >\r\n                                            <a\r\n                                                href={task?.assigneeBy?.getUserLink()}\r\n                                                className=\"text-dark hover-underline\"\r\n                                            >\r\n                                                {task?.assigneeBy?.getName()}\r\n                                            </a>\r\n                                            {Number(\r\n                                                task?.assigneeBy?.getId()\r\n                                            ) ===\r\n                                                Number(loggedUser?.getId()) && (\r\n                                                <sup\r\n                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                    style={{ fontSize: \"10px\" }}\r\n                                                >\r\n                                                    It's You\r\n                                                </sup>\r\n                                            )}\r\n                                        </span>\r\n\r\n                                        <span style={{ fontSize: \"12px\" }}>\r\n                                            {task?.assigneeBy?.getDesignationName()}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* PRIORITY */}\r\n\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Priority :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span\r\n                                        className=\"dot-color mr-2\"\r\n                                        style={{\r\n                                            background: \"rgba(252, 189, 1, 1)\",\r\n                                        }}\r\n                                    />\r\n                                    {task?.priority}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* category */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Task Category :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    {task?.category?.name}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            )}\r\n\r\n            <div\r\n                className=\"col-12 col-xl-6 d-flex flex-column py-3 px-3\"\r\n                style={{ gap: \"10px\", background: \"#F0F2F6\" }}\r\n            >\r\n                <div className=\"font-weight-bold d-block\"> Status: </div>\r\n\r\n                {isFetching ? (\r\n                    <Placeholder width=\"80px\" />\r\n                ) : (\r\n                    <div\r\n                        className=\"d-flex align-items-center\"\r\n                        style={{ gap: \"6px\" }}\r\n                    >\r\n                        <span\r\n                            className=\"dot-color mr-2\"\r\n                            style={{\r\n                                background: task?.boardColumn?.labelColor,\r\n                            }}\r\n                        />\r\n                        <span className=\"font-weight-bold\">\r\n                            {task?.boardColumn.columnName}\r\n                        </span>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Start Date{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        :{\" \"}\r\n                        {isFetching ? (\r\n                            <Placeholder width=\"80px\" />\r\n                        ) : (\r\n                            task?.getStartDate(\"MMM DD, YYYY\")\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Due Date{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        :{\" \"}\r\n                        {isFetching ? (\r\n                            <Placeholder width=\"80px\" />\r\n                        ) : (\r\n                            task?.getDueDate(\"MMM DD, YYYY\")\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Time Estimate */}\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Time Estimate{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.getEstimateTime()}\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Total Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        :{\" \"}\r\n                        {isFetching ? (\r\n                            <Placeholder width=\"80px\" />\r\n                        ) : (\r\n                            task?.parentTaskTimeLog || \"--\"\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Parent Task Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.parentTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Subtask Hours Logged:{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.subTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Total Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.totalTimeLog || \"--\"}\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"col-12 border-top py-4 mt-4\">\r\n                {/* <Accordion expendable={false} title=\"General Guidelines\">\r\n                    {\r\n                        isFetching ? \r\n                        <ArticleLoader /> :\r\n                        <Guideline text={task?.guidelines} editorContainerClass=\"modal-guideline-editor-text\" />\r\n                    }\r\n                </Accordion> */}\r\n\r\n                {_.size(task?.revisions) > 0 && (\r\n                    <Accordion\r\n                        title={_.last(task?.revisions)?.revisionStatus}\r\n                        headingClass=\"d-flex align-items-center justify-content-between\"\r\n                        headingStyle={{\r\n                            background: \"rgba(227,62,79,1)\",\r\n                            color: \"#fff\",\r\n                        }}\r\n                    >\r\n                        {console.log(\r\n                            \"task revision is genral\",\r\n                            task?.revisions\r\n                        )}\r\n\r\n                        {_.map(task?.revisions, (revision, index) => (\r\n                            <RevisionText\r\n                                key={revision.id}\r\n                                index={index + 1}\r\n                                date={dayjs(revision.createdAt).format(\r\n                                    \"MMM DD, YYYY\"\r\n                                )}\r\n                                time={dayjs(revision.createdAt).format(\r\n                                    \"hh:mm a\"\r\n                                )}\r\n                                text={revision?.comment}\r\n                                revision={revision}\r\n                            />\r\n                        ))}\r\n                    </Accordion>\r\n                )}\r\n\r\n                <Accordion expendable={false} title=\"Task Descriptions\">\r\n                    <Guideline text={task?.description} />\r\n                </Accordion>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Genarel;\r\n","import React, { Suspense, lazy } from 'react'\r\nimport Loader from '../../../components/Loader'\r\nconst SubmittedWorkItem = lazy(() => import('./SubmittedWorkItem'))\r\n\r\nconst SubmittedWork = ({task, submittedWork, loading}) => { \r\n  return (\r\n    <React.Fragment>\r\n        <h6 className='font-weight-bold'>Submitted Work</h6>\r\n        <div className='d-flex flex-column h-100' style={{gap:'10px'}}>\r\n\r\n            {loading && <div className='mt-3'><Loader /></div>}  \r\n            {submittedWork.length > 0 ? submittedWork.map((s) => (\r\n                <React.Fragment key={s?.task_id}>\r\n                    <Suspense fallback={<div className='mt-3'><Loader /></div>}>\r\n                        <SubmittedWorkItem data={s} task={task} />\r\n                    </Suspense>\r\n                </React.Fragment> \r\n            )): null}\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SubmittedWork","import React from \"react\";\r\nimport { TimeLog } from \"../../../../utils/single-task\"; \r\nimport Loader from \"../../../components/Loader\"; \r\n\r\nconst TimeLogContainer = ({ task, timeLog, isLoading }) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"sp1_modal_timelog_view\">\r\n            <div><h6> Session Logs </h6> </div>\r\n            <div>\r\n                <table className=\"sp1_subtask_log-tbl\">\r\n                        <thead className=\"__thead\">\r\n                            <tr>\r\n                                <th>Employee</th>\r\n                                <th>Start Time</th>\r\n                                <th>End Time</th>\r\n                                <th>Memo</th>\r\n                                <th>Hours Logged</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                </table>\r\n                <div className=\"sp1_modal_timelog_view-tbl-contanier\">  \r\n                    <table className=\"sp1_subtask_log-tbl\"> \r\n                        <tbody className=\"__tbody\"> \r\n                            {timeLog\r\n                                ? timeLog.map((log) => (\r\n                                    <TableRow key={log.id} log={log} />\r\n                                ))\r\n                                : null}\r\n\r\n                            {isLoading && <tr><td className=\"py-2 text-center\" colSpan={5}><Loader /></td></tr>}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeLogContainer;\r\n\r\nconst TableRow = ({ log }) => {\r\n    const timeLog = new TimeLog(log);\r\n    const user = timeLog?.user;\r\n\r\n\r\n    return (\r\n        <tr className=\"__tbody_tr\">\r\n            <td className=\"__tbody_td _tbody_td_employee\">\r\n                <img src={user?.getAvatar()} alt={user?.getName()} />\r\n                <span className=\"px-2\">{user?.getName()}</span>\r\n            </td> \r\n            <td className='__tbody_td _tbody_td_start_time'>\r\n                {timeLog?.getStartTime()} <br/>\r\n                {timeLog?.getStartTime('hh:mm a')}\r\n            </td>\r\n            \r\n            <td className='__tbody_td _tbody_td_start_time _tbody_td_start_end'>\r\n                {!timeLog?.endTime ? <span className=\"text-success font-weight-bold\">Active</span> :\r\n                    <>\r\n                        {timeLog?.getEndTime()} <br/>\r\n                        {timeLog?.getEndTime('hh:mm a')}\r\n                    </>\r\n                }\r\n\r\n            </td> \r\n            <td className=\"__tbody_td _tbody_td_memo\">{timeLog?.memo}</td> \r\n            <td className=\"__tbody_td _tbody_td_hour_logged\">{timeLog?.hoursLogged}</td>\r\n        </tr>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport Rating from '../../../../global/Rating';\r\nimport Loader from '../../../components/Loader';\r\n\r\nconst TaskReview = ({review, isLoading}) => {\r\n    const data = review; \r\n    let comment = data?.comment || `<span className='' style=\"color: #A7A9B2\">No Comment is Available</span>`;\r\n   \r\n    return (\r\n        <div className=\"sp1_task_right_card mb-3\" style={{maxHeight:'450px'}}>  \r\n          {/* side drop toggle button end */}\r\n          <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n              <span className=\"f-16\">Task Review</span> \r\n          </div> \r\n\r\n          {isLoading ? <Loader/> : <React.Fragment>\r\n            \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Deadline Meet : </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Rating rating={Number(data?.deadline_meet)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Submission Quality: </div>\r\n                <div className=\"d-flex align-items-center\">  \r\n                    <Rating rating={Number(data?.submission_quality)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Req. Fullfillment: </div>\r\n                <div className=\"d-flex align-items-center\"> \r\n                <Rating rating={Number(data?.req_fullfillment)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Overall Task Ratings: </div>\r\n                <div className=\"d-flex align-items-center\"> \r\n                    <Rating rating={Number(data?.overall_tasks)} /> \r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"mb-2\">\r\n                <span className=\"font-weight-bold d-block mb-1\">Comments:</span>\r\n                <div style={{color:'#777', fontSize: '13px'}}>\r\n                    <div className='sp1_ck_content' dangerouslySetInnerHTML={{__html: comment}}></div>\r\n                </div>\r\n            </div> \r\n            </React.Fragment>} \r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskReview","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nconst HistoryLoader = (props) => (\r\n    <ContentLoader\r\n        speed={2}\r\n        width={450}\r\n        height={45}\r\n        viewBox=\"0 0 450 45\"\r\n        backgroundColor=\"#f3f3f3\"\r\n        foregroundColor=\"#ecebeb\"\r\n        {...props}\r\n    >\r\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"46\" height=\"48\" />\r\n        <rect x=\"62\" y=\"29\" rx=\"0\" ry=\"0\" width=\"227\" height=\"12\" />\r\n        <rect x=\"60\" y=\"5\" rx=\"0\" ry=\"0\" width=\"344\" height=\"12\" />\r\n    </ContentLoader>\r\n);\r\n\r\nexport default HistoryLoader;\r\n","import React, {lazy, Suspense} from 'react'\r\nimport Loader from '../../../components/Loader' \r\nimport HistoryLoader from '../../../components/HistoryLoader';\r\nconst InnerHistoryItem = lazy(()=> import('../../history/InnerHistoryItem'));\r\n\r\nconst History = ({histories, isLoading}) => { \r\n  return (\r\n    <React.Fragment>\r\n        <h6 className='font-weight-bold'> Histories </h6> \r\n        <div className='mt-3 px-2'>  \r\n          {histories.length > 0 ? histories.map(d => (\r\n             <React.Fragment key={d.id}>\r\n               <Suspense fallback={<HistoryLoader />}>\r\n                  <InnerHistoryItem history={d} />\r\n              </Suspense>\r\n             </React.Fragment> \r\n          )):null} \r\n          {isLoading && <Loader />}\r\n        </div> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default History\r\n\r\n\r\n\r\n// history loader","import * as React from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Genarel from \"./preview/Genarel\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport {\r\n    useGetTaskDetailsQuery,\r\n    useLazyGetSubmittedTaskQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport SubmittedWork from \"./preview/SubmittedWork\";\r\nimport TimeLog from \"./preview/TimeLog\";\r\nimport TaskReview from \"./preview/TaskReview\";\r\nimport History from \"./preview/History\";\r\nimport Comments from \"./preview/Comments\";\r\nimport _ from \"lodash\";\r\nimport { useSingleTask } from \"../../../hooks/useSingleTask\";\r\nimport CommentsBody from \"../../../UI/comments/CommentsBody\";\r\nimport { useGetCommentsQuery } from \"../../../services/api/commentsApiSlice\";\r\n\r\nconst PreviewSubtask = ({ parentTask, subTask }) => {\r\n    const [task, setTask] = React.useState(null);\r\n    const taskID = subTask?.id;\r\n    const [submittedWork, setSubmittedWork] = React.useState([]);\r\n    const [timeLog, setTimeLog] = React.useState([]);\r\n    const [review, setReview] = React.useState(null);\r\n    const [histories, setHistories] = React.useState([]);\r\n    const [comments, setComments] = React.useState([]);\r\n    const [isCommentShow, setIsCommentShow] = React.useState(false);\r\n\r\n    const {\r\n        getTaskById,\r\n        getSubmittionInfo,\r\n        taskDetailsIsFetching,\r\n        submittionInfoIsFetching,\r\n    } = useSingleTask();\r\n\r\n    const [getTaskDetails, { isFetching: detailFetchingStateLoading }] =\r\n        useLazyGetTaskDetailsQuery();\r\n\r\n    const {\r\n        data: subTaskComments,\r\n        isFetching: commentsFetching,\r\n        isLoading: commentsLoading,\r\n        refetch: commentsRefetch,\r\n    } = useGetCommentsQuery(subTask?.id);\r\n\r\n    // fetch task details\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            let task = await getTaskById(taskID);\r\n            task = new SingleTask(task);\r\n            setTask(task);\r\n        })();\r\n    }, []);\r\n\r\n    //   fetch submitted rtk api\r\n    const fetchData = (url, cb) => {\r\n        getTaskDetails(`/${task?.id}/json?mode=${url}`)\r\n            .unwrap()\r\n            .then((res) => {\r\n                let d = _.orderBy(res, \"id\", \"desc\");\r\n                cb(d);\r\n            })\r\n            .catch((err) => console.error(err));\r\n    };\r\n\r\n    // fetch submitted works when submitted tab clieked\r\n    const fetchSubmittedWork = async (e) => {\r\n        e.preventDefault();\r\n        if (submittedWork.length === 0) {\r\n            const data = await getSubmittionInfo(taskID);\r\n            console.log({ data });\r\n            setSubmittedWork([...data]);\r\n        }\r\n    };\r\n\r\n    // fetch timelog data on tab click\r\n    const fetchTimeLogData = (e) => {\r\n        e.preventDefault();\r\n        if (timeLog.length === 0) {\r\n            fetchData(\"task_time_log\", setTimeLog);\r\n        }\r\n    };\r\n\r\n    // fetch review\r\n    const fetchReviewData = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_approve\", setReview);\r\n    };\r\n\r\n    // fetch histories\r\n    const fetchHistories = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_history\", setHistories);\r\n    };\r\n\r\n    // fetch comments\r\n    const fetchComments = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_comment\", setComments);\r\n    };\r\n\r\n    // on comment post\r\n    const onCommentPost = (comment) => {\r\n        const _comments = [...comments];\r\n        _comments.unshift(comment);\r\n        setComments(_comments);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* tab */}\r\n            <div\r\n                className=\"nav flex-column nav-pills sp1-subtask-modal-sidebar\"\r\n                id=\"v-pills-tab\"\r\n                role=\"tablist\"\r\n                aria-orientation=\"vertical\"\r\n            >\r\n                <a\r\n                    className=\"nav-link active\"\r\n                    id=\"v-pills-general-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-home\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-home\"\r\n                    aria-selected=\"true\"\r\n                    onClick={() => setIsCommentShow(false)}\r\n                >\r\n                    General\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-submitted-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-submitted-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-submitted-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchSubmittedWork(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Submitted Works\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-comments-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-comments\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-comments\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        commentsRefetch(e);\r\n                        setIsCommentShow(true);\r\n                    }}\r\n                >\r\n                    Comment\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-time-log-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-time-log-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-time-log-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchTimeLogData(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Time Logs\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-history-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-history\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-history\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchHistories(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    History\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-task-review-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-task-review-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-task-review-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchReviewData(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Task Review\r\n                </a>\r\n            </div>\r\n\r\n            <div\r\n                className={`tab-content ${\r\n                    isCommentShow ? \"p-0\" : \"p-3\"\r\n                } sp1-subtask-modal-tab-content`}\r\n                id=\"v-pills-tabContent\"\r\n            >\r\n                <div\r\n                    className=\"tab-pane fade show active sp1_st_tab_panel\"\r\n                    id=\"v-pills-home\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-general-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <Genarel\r\n                            isFetching={taskDetailsIsFetching}\r\n                            taskID={taskID}\r\n                            task={task}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-submitted-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-submitted-work-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <SubmittedWork\r\n                            task={task}\r\n                            submittedWork={submittedWork}\r\n                            loading={submittionInfoIsFetching}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-comments\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-comments-tab\"\r\n                >\r\n                    {/* <Comments\r\n                        task={task}\r\n                        comments={comments}\r\n                        onCommentPost={onCommentPost}\r\n                        isLoading={detailFetchingStateLoading}\r\n                    /> */}\r\n                    <CommentsBody\r\n                        close={() => {}}\r\n                        comments={subTaskComments}\r\n                        loading={commentsLoading}\r\n                        onSubmit={() => {}}\r\n                        isOpen={true}\r\n                        fullScreenView={false}\r\n                        setFullScreenView={() => {}}\r\n                        height={\"741px\"}\r\n                        fetching={commentsFetching}\r\n                        refetch={commentsRefetch}\r\n                        showFullScreenBtn={false}\r\n                        taskId={subTask?.id}\r\n                        showCloseBtn={false}\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-time-log-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-time-log-work-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <TimeLog\r\n                            task={task}\r\n                            timeLog={timeLog}\r\n                            isLoading={detailFetchingStateLoading}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-history\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-history-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <History\r\n                            histories={histories}\r\n                            isLoading={detailFetchingStateLoading}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-task-review-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-task-review-work-tab\"\r\n                >\r\n                    <TaskReview\r\n                        review={review}\r\n                        isLoading={detailFetchingStateLoading}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* end tab */}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PreviewSubtask;\r\n","import { Rating } from '@smastrom/react-rating';\r\nimport '@smastrom/react-rating/style.css';\r\nimport dayjs from 'dayjs';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { HiOutlineSelector } from 'react-icons/hi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport CKEditorComponent from '../../../../ckeditor/index';\r\nimport FileUploader from '../../../../file-upload/FileUploader';\r\nimport { Placeholder } from '../../../../global/Placeholder';\r\nimport { useSingleTask } from '../../../../hooks/useSingleTask';\r\nimport { useApproveSubmittedTaskMutation, useGetSubmittedTaskQuery } from '../../../../services/api/SingleTaskPageApi';\r\nimport Button from '../../../components/Button';\r\nimport Modal from '../../../components/Modal';\r\nimport SubmitButton from '../../../components/SubmitButton';\r\n\r\nconst ApproveTask = ({task, status, auth}) => {\r\n  const dispatch = useDispatch();\r\n  const [showApproveForm, setShowApproveForm] = useState(false);\r\n  const [completedWithInDeadline, setCompletedWithInDeadline] = useState(1);\r\n  const [submittedStar, setSubmittedStar] = useState(1);\r\n  const [fullfilledStar, setFullfilledStar] = useState(1);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const [oldSubmittion, setOldSubmittion] = useState([]);\r\n  const [latestSubmittion, setLatestSubmittion] = useState({});\r\n\r\n  const [approveSubmittedTask, {isLoading}] = useApproveSubmittedTaskMutation();\r\n  const { data: getSubmittedTask, isFetching  } = useGetSubmittedTaskQuery(task?.id);\r\n\r\n  const { approveTask,  approveTaskLoadingStatus } = useSingleTask();\r\n\r\n  const [err, setErr] = useState(null);\r\n\r\n \r\n useEffect(() => {\r\n    if(getSubmittedTask){\r\n        const data = _.sortBy(getSubmittedTask, ['submission_no']);\r\n        const latest = _.last(data);\r\n        const old = _.initial(data);\r\n        setOldSubmittion([...old]);\r\n        setLatestSubmittion(latest);\r\n    }\r\n }, [isFetching]);\r\n\r\n  const close = (e) => {\r\n    e.preventDefault();\r\n    setShowApproveForm(false)\r\n  }\r\n\r\n  // editor data \r\n  const onWriteOnEditor = (e, editor) => {\r\n    const data = editor.getData();\r\n    setComment(data);\r\n  }\r\n\r\n\r\n  const isValid = () =>{\r\n    let count = 0;\r\n    const error = new Object();\r\n\r\n    if(!comment){\r\n        error.comment = \"Please add a comment!\"\r\n        count ++;\r\n    }\r\n\r\n    setErr(error);\r\n    return !count;\r\n  }\r\n\r\n  // submit \r\n  const handleOnSubmit = async (e) =>{\r\n    e.preventDefault();\r\n    const data = {\r\n        rating: completedWithInDeadline,\r\n        rating2: submittedStar,\r\n        rating3: fullfilledStar,\r\n        comment,\r\n        task_id: task?.id,\r\n        user_id: auth?.getId()\r\n    }   \r\n\r\n    if(isValid()){ \r\n        const cb = () => setShowApproveForm(false);\r\n        await approveTask(data, cb ); \r\n    }else{\r\n        toast.warn(\"Please add a comment!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='success'\r\n            onClick={() => setShowApproveForm(true)}\r\n            className='d-flex align-items-center border-success'\r\n        >\r\n            <i className=\"fa-solid fa-handshake-angle\"></i>\r\n            <span className=\"d-inline ml-1\">Approve</span>\r\n        </Button>\r\n\r\n        <Modal isOpen={showApproveForm} className=\"sp1_single_task--modal w-100\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper w-100\">\r\n                <div\r\n                    className=\"sp1_single_task--modal-panel w-100\"\r\n                    style={{ maxWidth: '600px', minWidth: '320px' }}\r\n                >\r\n                    <div className=\"border-bottom pb-2 pl-3 pr-2 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <div className=\"font-weight-bold f-16\"> Approve Task </div>\r\n                        <Button onClick={close} className=\"\">\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"px-3\">\r\n                         { _.size(oldSubmittion) > 0 &&\r\n                            <div className='mb-3'>\r\n                                <div className=\"sp1_st--approve-card\"> \r\n                                    <div className=\"sp1_st--approve-card-header\" data-toggle=\"collapse\" href=\"#oldSubmittedSuccess\" role=\"button\"   aria-expanded=\"false\" aria-controls=\"oldSubmittedSuccess\">\r\n                                        Old Submitted Works ({_.size(oldSubmittion)})\r\n                                        <button>\r\n                                            <HiOutlineSelector />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"collapse multi-collapse shadow-none\" id=\"oldSubmittedSuccess\">\r\n                                    <div className=\"card card-body\">\r\n                                        {\r\n                                            _.size(oldSubmittion) > 0 ?\r\n                                            _.map(oldSubmittion, (task)=>(\r\n                                                <SubmittedWorkCard key={`${task.id}_${task?.submission_no}`} data={task} isLoading={isFetching}/>\r\n                                            )):\r\n                                            <span>\r\n                                                No Old Submittion!\r\n                                            </span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                         }\r\n                        {/* content */}\r\n                        {\r\n                            // getSubmittedTask?.submission_no === getSubmittedTask.\r\n                        }\r\n                        <SubmittedWorkCard data={latestSubmittion} latest={true} isLoading={isFetching} />\r\n                    </div>\r\n                    {\r\n                        !isFetching && \r\n                        <div className=\"mt-4 px-3\">\r\n                            <form action=\"\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>Is This Task Completed Within Deadline?<sup className='f-16'>*</sup></label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={completedWithInDeadline}\r\n                                            onChange={setCompletedWithInDeadline}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>How Beautifully The Task Is Submitted?<sup className='f-16'>*</sup></label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={submittedStar}\r\n                                            onChange={setSubmittedStar}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>\r\n                                        How Perfectly The Task Requirements Are Fullfilled?<sup className='f-16'>*</sup>\r\n                                    </label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={fullfilledStar}\r\n                                            onChange={setFullfilledStar}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>\r\n                                        Any Recommendations For Developer?<sup className='f-16'>*</sup>\r\n                                    </label>\r\n                                    <div className='ck-editor-holder'>\r\n                                        <CKEditorComponent onChange={onWriteOnEditor} />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"mt-3 d-flex align-items-center\">\r\n                                    <Button onClick={close} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                       Close \r\n                                    </Button>\r\n    \r\n                                    {/* {!isLoading ? (\r\n                                        <React.Fragment>\r\n                                            <Button onClick={handleOnSubmit}>Approve</Button>\r\n                                        </React.Fragment>\r\n                                    ) : (\r\n                                        <React.Fragment>\r\n                                            <Button className=\"cursor-processing\">\r\n                                                <div\r\n                                                    className=\"spinner-border text-white\"\r\n                                                    role=\"status\"\r\n                                                    style={{\r\n                                                        width: \"18px\",\r\n                                                        height: \"18px\",\r\n                                                    }}\r\n                                                />{\" \"}\r\n                                                Processing...\r\n                                            </Button>\r\n                                        </React.Fragment>\r\n                                    )} */}\r\n                                    <SubmitButton onClick={handleOnSubmit} title=\"Approve\" isLoading={approveTaskLoadingStatus} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ApproveTask\r\n\r\n\r\n// Submitted work\r\n\r\nconst SubmittedWorkCard = ({data, latest=false, className=\"\", style, isLoading = false}) => {\r\n\r\n    const links = _.compact(_.split(data?.links, ','));\r\n    const attaches =  _.compact(_.split(data?.attaches, ','));\r\n   \r\n\r\n    if(isLoading){\r\n        return <div className={`sp1_st--approve-card mb-3 ${className}`} style={style}> \r\n            <div className=\"sp1_st--approve-card-header\">\r\n                <Placeholder height=\"14px\" width='80px' className='mb-2' />\r\n                <Placeholder height=\"14px\" width='50px' className='mb-2' />\r\n            </div>\r\n\r\n            <div className='sp1_st--approve-card-body'>\r\n                <div className='mb-2'>\r\n                    <Placeholder height=\"14px\" width='80px' className='mb-2'/>\r\n\r\n                    <div className='ml-2'>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                    </div> \r\n                </div>\r\n\r\n                <div className='mb-2'>\r\n                    <Placeholder height=\"14px\" width='80px' className='mb-2'/>\r\n\r\n                    <div className='ml-2'>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='50%' className='mb-2'/>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    \r\n    return(\r\n        <div className={`sp1_st--approve-card mb-3 ${className}`} style={style}> \r\n            <div className=\"sp1_st--approve-card-header\">\r\n                <span>{latest ? 'Latest': \"Old\"} Submittion {!latest && `(${data?.submission_no})`}</span>\r\n                <span>\r\n                    {dayjs(data?.submission_date).format('MMM DD, YYYY hh:mm a')}\r\n                </span>\r\n            </div>\r\n\r\n            <div className='sp1_st--approve-card-body'>\r\n                <div className='mb-2'>\r\n                    <div className='font-weight-bold f-12' style={{color: '#81868E'}}> Links</div>\r\n                    <ol style={{listStyle: 'unset'}}>\r\n                        {_.map(links, (link, index) =>(\r\n                            <li key={`${link}_${index}`} style={{listStyle: 'numaric'}}>\r\n                                <a href={link}>{link}</a>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n\r\n                <div className='mb-2'>\r\n                    <div className=\"font-weight-bold f-12\" style={{color: '#81868E'}}>Description</div>\r\n                    <div className='sp1_ck_content p-2' dangerouslySetInnerHTML={{__html: data?.text ?? `<span style=\"color:rgb(180,188,196);\">Comment Not Available</span>`}}/>\r\n                </div>\r\n\r\n\r\n                <div className=\"mt-3\">\r\n                <span\r\n                    className=\"d-block f-12 font-weight-bold mb-2\"\r\n                    style={{ color: \"#767581\" }}\r\n                >\r\n                    Attached Files\r\n                </span>\r\n                {_.size(attaches) > 0 ? (\r\n                    <FileUploader>\r\n                        {_.map(attaches, (file, index) => (\r\n                            <FileUploader.Preview\r\n                                key={`${file}_${index}`}\r\n                                fileName={file}\r\n                                downloadAble={true}\r\n                                deleteAble={false}\r\n                                downloadUrl={`${file}`}\r\n                                previewUrl={`${file}`}\r\n                                fileType={_.includes([\"png\",\"jpg\", \"jpeg\", \"gif\", \"svg\"], _.last(_.split(file, '.'))) ? 'images' : 'others'}\r\n                                ext=\"\"\r\n                            />\r\n                        ))}\r\n                    </FileUploader>\r\n                    ) : (\r\n                        <span\r\n                            className=\"px-2\"\r\n                            style={{ color: \"rgb(180, 188, 196)\" }}\r\n                        >\r\n                            No Attachment is available\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useCheckEditableSubTaskQuery, useLazyCheckSubTaskTimerQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport Button from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport PreviewSubtask from \"./PreviewSubtask\";\r\nimport ApproveTask from \"../task-actions/approve-task/ApproveTask\";\r\n\r\nconst SubTask = ({ subTask, task, status, toggleEditForm }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    const [checkSubTaskTimer, {isFetching}] = useLazyCheckSubTaskTimerQuery()\r\n      // check task edit\r\n\r\n        const { data } = useCheckEditableSubTaskQuery(subTask?.id);\r\n        const isEditable = data?.task === 0;\r\n\r\n    const toggle = (e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setIsOpen(true);\r\n    }\r\n\r\n\r\n    const hasEditPermission = () => {\r\n        return Number(subTask?.added_by) === auth?.getId() && _.includes([1,2,3], status?.id);\r\n    }\r\n\r\n    const onEdit = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(subTask?.id)\r\n        .unwrap()\r\n        .then(res=>{\r\n            if(res?.status === 200){\r\n                toggleEditForm(e, subTask?.id)\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'You cannot edit the task because timer is already running',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const onModalEditButtonClick = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(subTask?.id)\r\n        .unwrap()\r\n        .then(res=>{\r\n            if(res?.status === 200){\r\n                window.location = `/account/tasks/${subTask?.id}/edit`\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'You cannot edit the task because timer is already running',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\"\r\n            style={{ gap: \"16px\" }}\r\n        >\r\n            <div className=\"w-100 text-ellipsis\">\r\n                <div onClick={toggle} className=\"hover-underline\" style={{cursor: 'pointer'}}>\r\n                    {subTask?.title}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <div\r\n                    onClick={toggle}\r\n                    className=\"mr-2 py-2 sp1_task_righ_action_btn\"\r\n                    style={{cursor: 'pointer'}}\r\n                >\r\n                    <i className=\"fa-regular fa-eye\"></i>\r\n                </div>\r\n                {\r\n                    isEditable && hasEditPermission() && <div\r\n                        onClick={onEdit}\r\n                        className=\"mr-2 py-2 sp1_task_righ_action_btn\"\r\n                        style={{cursor: 'pointer'}}\r\n                    >\r\n                        {isFetching ?  <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        /> :<i className=\"fa-regular fa-pen-to-square\"></i>}\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n            {/* task Preview Modal */}\r\n            <React.Fragment>\r\n                <Modal\r\n                    className={`sp1_subtask_offsetcanvas--modal`}\r\n                    isOpen={isOpen}\r\n                >\r\n                    <div\r\n                        className={`sp1_subtask_offsetcanvas ${\r\n                            isOpen ? \"open\" : \"\"\r\n                        }`}\r\n                    >\r\n                        <div className=\"d-flex align-items-center justify-content-between p-2 sp1_subtask_offsetcanvas--bar\">\r\n                            <div className=\"pl-3\">\r\n                                <span className=\"font-weight-bold f-16\">\r\n                                    Sub Task # {subTask?.id} :{\" \"}\r\n                                    <span className=\"font-weight-normal\">\r\n                                        {subTask?.title}\r\n                                    </span>{\" \"}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"d-flex align-items-center ml-auto\">\r\n                                {/* <ApproveTask\r\n                                    task={subTask}\r\n                                    auth={auth}\r\n                                />\r\n\r\n                                <Button variant=\"success\" onClick={() => setIsOpen(false)} className=\"mr-2 bg-danger\">\r\n                                    Revision\r\n                                </Button> */}\r\n\r\n                                {isEditable && hasEditPermission() && <a href=\"#\" onClick={onModalEditButtonClick} className=\"border text-dark mr-2 py-1 px-2\">\r\n                                    {isFetching ?  <div\r\n                                        className=\"spinner-border text-dark ml-2\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                            borderRightColor: \"transparent\",\r\n                                        }}\r\n                                    /> :<i className=\"fa-regular fa-pen-to-square\"></i>}\r\n                                </a>}\r\n                                <a\r\n                                    href={`/account/tasks/${subTask?.id}`}\r\n                                    target=\"_blank\"\r\n                                    className=\"border text-dark mr-2 py-1 px-2\"\r\n                                >\r\n                                    {/* <i className=\"fa-solid fa-up-right-and-down-left-from-center\" /> */}\r\n                                    <i className=\"fa-solid fa-arrow-up-right-from-square\"></i>\r\n                                </a>\r\n                                <Button onClick={() => setIsOpen(false)} className=\"\">\r\n                                    <i className=\"fa-solid fa-xmark\" />\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"sp1_subtask_offsetcanvas--body\">\r\n                            <PreviewSubtask\r\n                                parentTask={task}\r\n                                subTask={subTask}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubTask;\r\n","import React from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport { User } from \"../../../utils/user-details\";\r\n\r\nconst LeadConfirmationModal = ({ isOpen, onConfirm }) => {\r\n    const [buttonVisible, setButtonVisible] = React.useState(false);\r\n    // const [countDown, setCountDown] = React.useState(5);\r\n    const [countDown, setCountDown] = React.useState(3);\r\n    const auth = new User(window.Laravel.user);\r\n\r\n    React.useEffect(() => {\r\n        if (\r\n            auth.getRoleId() &&\r\n            (auth.getRoleId() === 6 ||\r\n                auth.getRoleId() === 15 ||\r\n                auth.getRoleId() === 16)\r\n        ) {\r\n            let count = countDown ?? 0;\r\n\r\n            let timeIntervelId = setInterval(() => {\r\n                setCountDown(count--);\r\n            }, 1000);\r\n\r\n            let timeOutId = setTimeout(() => {\r\n                setButtonVisible(true);\r\n                clearInterval(timeIntervelId);\r\n                // }, 5000);\r\n            }, 3000);\r\n\r\n            return () => {\r\n                clearTimeout(timeOutId);\r\n                clearInterval(timeIntervelId);\r\n            };\r\n        }\r\n\r\n        return () => onConfirm();\r\n    }, []);\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} className=\"subtask-timer-confirmation--modal\">\r\n            <div className=\"subtask-timer-confirmation--panel\">\r\n                <div className=\"subtask-timer-confirmation--content\">\r\n                    <h4 className=\"mb-3\">\r\n                        {\" \"}\r\n                        Do You Understand The Following Things?{\" \"}\r\n                    </h4>\r\n\r\n                    <ol type=\"A\" style={{ marginLeft: \"30px\" }}>\r\n                        <li>\r\n                            {\" \"}\r\n                            Your teams job is not to decide what the look and\r\n                            feel of a website will be based on a few reference\r\n                            websites{\" \"}\r\n                        </li>\r\n                        <li>\r\n                            Your teams job is not to research a theme based on\r\n                            an instruction shared by the PM.{\" \"}\r\n                        </li>\r\n                        <li>\r\n                            Your teams job is not to research a plugin based on\r\n                            a problem shared by PM.\r\n                        </li>\r\n                        <li>\r\n                            Your teams job is not to choose the color scheme of\r\n                            a website.\r\n                        </li>\r\n                        <li>\r\n                            Your teams job is not to talk to the support for\r\n                            example the shopify support team, theme support,\r\n                            plugin support and any other support for any\r\n                            solution.\r\n                        </li>\r\n                        <li>\r\n                            Your teams job is not to create the training videos\r\n                            for the client after the completion of a project.{\" \"}\r\n                        </li>\r\n                        <li>\r\n                            You understand that all your teams hours have to be\r\n                            logged/tracked and you team mates will questioned if\r\n                            each of them doesn’t log at least 7 hours for any\r\n                            reason.\r\n                        </li>\r\n                    </ol>\r\n\r\n                    <p>\r\n                        In general, anything that has to do with requirements\r\n                        define (of any sort) has to be done by the project\r\n                        manager. Your teams job is to execute the work based on\r\n                        the defined requirements.{\" \"}\r\n                    </p>\r\n\r\n                    <p>\r\n                        If for any reason, project manager needs your help for\r\n                        any of those things, he will have to create a separate\r\n                        task for each of them and those tasks have to be\r\n                        authorized by the top management mandatorily.\r\n                    </p>\r\n\r\n                    <p>\r\n                        {\" \"}\r\n                        Report immediately if you are asked to do any of these\r\n                        and if it was’t authorized by top management. You should\r\n                        see a text like “Authorized by top management” at the\r\n                        right side of the task title if it was authorized.In\r\n                        case, you don’t report, the extra time taken for these\r\n                        will be considered as your lackings (as they will remain\r\n                        unaccountable) and you will receive negative performance\r\n                        score.”\r\n                    </p>\r\n\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <Button\r\n                            onClick={onConfirm}\r\n                            className=\"ml-auto\"\r\n                            disabled={!buttonVisible}\r\n                        >\r\n                            Yes, I Fully Understand This{\" \"}\r\n                            {!buttonVisible && `(${countDown})`}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default LeadConfirmationModal;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../../components/form/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport { useWorkingEnvironmentMutation } from \"../../../services/api/SingleTaskPageApi\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport { toast } from \"react-toastify\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst WorkingEnvironmentForm = ({ task, onSubmit, close }) => {\r\n    const [siteUrl, setSiteUrl] = useState(\"\");\r\n    const [frontendPassword, setFrontendPassword] = useState(\"\");\r\n    const [loginUrl, setLoginUrl] = useState(\"\");\r\n    const [\r\n        siteLoginCredentialUserNameOrEmail,\r\n        setSiteLoginCredentialUserNameOrEmail,\r\n    ] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [err, setErr] = useState(null);\r\n\r\n    const [workingEnvironment, { isLoading }] = useWorkingEnvironmentMutation();\r\n\r\n    // handle input change\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        setState(e.target.value);\r\n    };\r\n\r\n    const isValid = () => {\r\n        let count = 0;\r\n        const error = new Object();\r\n\r\n        if (!siteUrl) {\r\n            count++;\r\n            error.siteUrl = \"You have to provide Working/Staging Site's URL\";\r\n        } else if (!checkIsURL(siteUrl)) {\r\n            count++;\r\n            error.siteUrl = \"Please enter a valid URL\";\r\n            toast.warn(\"Please enter a valid Working/Staging Site's URL\", {\r\n                position: \"top-right\",\r\n            });\r\n        }\r\n\r\n        if (!loginUrl) {\r\n            count++;\r\n            error.loginUrl =\r\n                \"You have to provide Working/Staging Site's Admin Panel URL\";\r\n        } else if (!checkIsURL(loginUrl)) {\r\n            count++;\r\n            error.loginUrl = \"Please enter a valid URL\";\r\n            toast.warn(\r\n                \"Please enter a valid Working/Staging Site's Admin Panel URL\",\r\n                { position: \"top-right\" }\r\n            );\r\n        }\r\n\r\n        if (!siteLoginCredentialUserNameOrEmail) {\r\n            count++;\r\n            error.username =\r\n                \"You have to provide Working/Staging Site's Admin Username/Email\";\r\n        }\r\n\r\n        if (!password) {\r\n            count++;\r\n            error.password =\r\n                \"You have to provide Working/Staging Site's Admin Password\";\r\n        }\r\n\r\n        if (!frontendPassword) {\r\n            count++;\r\n            error.frontendPassword =\r\n                \"You have to provide Working/Staging Site's Frontend Password\";\r\n        }\r\n\r\n        setErr(error);\r\n        return !count;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        const data = {\r\n            project_id: task?.projectId,\r\n            site_url: siteUrl,\r\n            login_url: loginUrl,\r\n            email: siteLoginCredentialUserNameOrEmail,\r\n            password: password,\r\n            task_id: task?.id,\r\n            frontend_password: frontendPassword,\r\n        };\r\n\r\n        if (isValid()) {\r\n            try {\r\n                await workingEnvironment(data)\r\n                    .unwrap()\r\n                    .then((res) => {\r\n                        close();\r\n                        Swal.fire(\r\n                            \"Working environment store successfully\",\r\n                            \"You can create subtask now\",\r\n                            \"success\"\r\n                        ).then(({ isConfirmed }) => {\r\n                            onSubmit();\r\n                        });\r\n                    });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            toast.error(\"Please provide all required fields\", {\r\n                position: \"top-right\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"sp1-subtask-form w-100 --form -row\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 lg:col-6\">\r\n                    <Input\r\n                        id=\"siteURL\"\r\n                        label=\"Working/Staging Site's URL\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's URL\"\r\n                        name=\"stie_url\"\r\n                        required={true}\r\n                        value={siteUrl}\r\n                        error={err?.siteUrl}\r\n                        onChange={(e) => handleChange(e, setSiteUrl)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 lg:col-6\">\r\n                    <Input\r\n                        id=\"frontendPassword\"\r\n                        label=\"Frontend Password\"\r\n                        type=\"text\"\r\n                        placeholder=\"Frontent Password\"\r\n                        name=\"frontend-end-password\"\r\n                        required={true}\r\n                        value={frontendPassword}\r\n                        error={err?.frontendPassword}\r\n                        onChange={(e) => handleChange(e, setFrontendPassword)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-4\">\r\n                    <Input\r\n                        id=\"loginUrl\"\r\n                        label=\"Working/Staging Site's Admin Panel URL\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's Admin Panel URL\"\r\n                        name=\"login_url\"\r\n                        required={true}\r\n                        value={loginUrl}\r\n                        error={err?.loginUrl}\r\n                        onChange={(e) => handleChange(e, setLoginUrl)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-5 h-100\">\r\n                    <Input\r\n                        id=\"siteLoginCredential\"\r\n                        label=\"Working/Staging Site's Admin Panel Username/Email\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's Admin Panel Username/Email\"\r\n                        name=\"site-login-credential\"\r\n                        required={true}\r\n                        value={siteLoginCredentialUserNameOrEmail}\r\n                        error={err?.username}\r\n                        onChange={(e) =>\r\n                            handleChange(\r\n                                e,\r\n                                setSiteLoginCredentialUserNameOrEmail\r\n                            )\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"h-100 d-md-flex align-items-end\">\r\n                        <Input\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"text\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            className=\"mt-md-auto\"\r\n                            required={true}\r\n                            value={password}\r\n                            error={err?.password}\r\n                            onChange={(e) => handleChange(e, setPassword)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 mt-3\">\r\n                <div className=\"d-flex align-items-center justify-content-end\">\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        className=\"mr-2\"\r\n                        onClick={close}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n\r\n                    <SubmitButton onClick={handleSubmit} isLoading={isLoading}>\r\n                        <i className=\"fa-regular fa-paper-plane\" />\r\n                        Create\r\n                    </SubmitButton>\r\n\r\n                    {/* {isLoading ? (\r\n                        <Button onClick={handleSubmit}>\r\n                            \r\n                        </Button>\r\n                    ) : (\r\n                        <Button className=\"cursor-processing\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"18px\",\r\n                                    height: \"18px\",\r\n                                }}\r\n                            ></div>\r\n                            Processing...\r\n                        </Button>\r\n                    )} */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkingEnvironmentForm;\r\n","import React, { useState } from \"react\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport AssginedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\n\r\nimport _ from \"lodash\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n    useCheckRestrictedWordsMutation,\r\n    useCreateSubtaskMutation,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\n\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n    setWorkingEnvironmentStatus,\r\n    storeSubTasks,\r\n} from \"../../../services/features/subTaskSlice\";\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport LeadConfirmationModal from \"./LeadConfirmationModal\";\r\nimport WorkingEnvironmentForm from \"./WorkingEnvironmentForm\";\r\nimport { useRefetchTaskDetails } from \"../../SingleIndependentTask\";\r\n\r\nconst SubTaskForm = ({ close, isFirstSubtask = false }) => {\r\n    const refetchTask = useRefetchTaskDetails();\r\n    const {\r\n        task: taskDetails,\r\n        subTask,\r\n        isWorkingEnvironmentSubmit,\r\n    } = useSelector((s) => s.subTask);\r\n    const dispatch = useDispatch();\r\n    const dayjs = new CompareDate();\r\n\r\n    //   form data\r\n    const [title, setTitle] = useState(\"\");\r\n    const [parentTask, setParentTask] = useState(\"\");\r\n    const [startDate, setStateDate] = useState(null);\r\n    const [dueDate, setDueDate] = useState(null);\r\n    const [taskCategory, setTaskCategory] = useState(\"\");\r\n    const [assignedTo, setAssignedTo] = useState(null);\r\n    // const [taskObserver, setTaskObserver] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    // const [status, setStatus] = useState(\"To Do\");\r\n    const [priority, setPriority] = useState(\"Regular\");\r\n\r\n    // const [estimateTimeHour, setEstimateTimeHour] = useState(0);\r\n    // const [estimateTimeMin, setEstimateTimeMin] = useState(0);\r\n\r\n    const [files, setFiles] = React.useState([]);\r\n\r\n    const [pageType, setPageType] = React.useState(\"\");\r\n    const [pageTypeOthers, setPageTypeOthers] = React.useState(\"\");\r\n    const [pageName, setPageName] = React.useState(\"\");\r\n    const [pageURL, setPageURL] = React.useState(\"\");\r\n    const [numberOfPage, setNumberOfPage] = React.useState(0);\r\n    const [existingDesignLink, setExistingDesignLink] = React.useState(\"\");\r\n    const [pageTypePriority, setPageTypePriority] = React.useState(\"\");\r\n    const [pageTypeName, setPageTypeName] = React.useState(\"\");\r\n\r\n    const [err, setErr] = useState(null);\r\n\r\n    const task = new SingleTask(taskDetails);\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n    // const params = useParams();\r\n    const [createSubtask, { isLoading, error }] = useCreateSubtaskMutation();\r\n    // const {  } = useGetTaskDetailsQuery(`/${task?.id}/json?mode=estimation_time`);\r\n    const [getTaskDetails, { data: estimation, isFetching }] =\r\n        useLazyGetTaskDetailsQuery();\r\n\r\n    const [showForm, setShowForm] = React.useState(false);\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n    const [containViolation, setContainViolation] = React.useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // const [\r\n    //     checkRestrictedWords,\r\n    //     {isLoading: checking}\r\n    // ] = useCheckRestrictedWordsMutation();\r\n    const checking = false;\r\n\r\n    // handle change\r\n    React.useEffect(() => {\r\n        setParentTask(task?.title);\r\n    }, [task]);\r\n\r\n    React.useEffect(() => {\r\n        getTaskDetails(`/${task?.id}/json?mode=estimation_time`).unwrap();\r\n    }, []);\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n    const isValid = () => {\r\n        let count = 0;\r\n        const error = new Object();\r\n\r\n        if (!title) {\r\n            error.title = \"The title field is required\";\r\n            count++;\r\n        }\r\n\r\n        if (!startDate) {\r\n            error.startDate = \"You have to select a start date\";\r\n            count++;\r\n        }\r\n\r\n        if (!dueDate) {\r\n            error.dueDate = \"You have to select a due date\";\r\n            count++;\r\n        }\r\n\r\n        if (!taskCategory) {\r\n            error.taskCategory = \"You have to select task category\";\r\n            count++;\r\n        }\r\n\r\n        if (!assignedTo) {\r\n            error.assignedTo = \"You have to select an user\";\r\n            count++;\r\n        }\r\n\r\n        if (assignedTo && assignedTo?.isOverloaded) {\r\n            toast.warn(\r\n                `You cannot assign this task to ${assignedTo?.name}  because ${\r\n                    assignedTo?.gender === \"male\" ? \"He \" : \"She \"\r\n                } has more than 04 Submittable tasks.`\r\n            );\r\n            count++;\r\n        }\r\n\r\n        if (!pageType) {\r\n            error.taskType = \"You have to Select task type\";\r\n            count++;\r\n        } else {\r\n            if (_.toLower(pageType) === _.toLower(\"New Page Design\")) {\r\n                if (!pageTypePriority) {\r\n                    error.pageTypePriority = \"You have to Select page type\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageName) {\r\n                    error.pageName = \"You have to Select page name\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageURL) {\r\n                    error.pageUrl = \"You have to provide page URL\";\r\n                    count++;\r\n                } else if (!checkIsURL(pageURL)) {\r\n                    error.pageUrl = \"You have to provide a valid page URL\";\r\n                    toast.warn(\"You have to provide a valid page URL\");\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if (_.toLower(pageType) === _.toLower(\"Others\")) {\r\n                if (!pageTypeOthers) {\r\n                    error.pageTypeOthers = \"You have to select an option\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageName) {\r\n                    error.pageName = \"You have to Select page name\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageURL) {\r\n                    error.pageUrl = \"You have to provide page URL\";\r\n                    count++;\r\n                } else if (!checkIsURL(pageURL)) {\r\n                    error.pageUrl = \"You have to provide a valid page URL\";\r\n                    toast.warn(\"You have to provide a valid page URL\");\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if (_.toLower(pageType) === _.toLower(\"Cloning Existing Design\")) {\r\n                if (!pageTypeName) {\r\n                    error.pageTypeName = \"You have to select an option\";\r\n                    count++;\r\n                }\r\n\r\n                if (!numberOfPage) {\r\n                    error.numberOfPage = \"The minimum required number is 1\";\r\n                    count++;\r\n                }\r\n\r\n                if (!existingDesignLink) {\r\n                    error.existingDesignLink =\r\n                        \"You have to provide Exiting Design Link\";\r\n                    count++;\r\n                } else if (!checkIsURL(existingDesignLink)) {\r\n                    error.existingDesignLink =\r\n                        \"You have to provide a valid Exiting Design Link\";\r\n                    toast.warn(\r\n                        \"You have to provide a valid Exiting Design Link\"\r\n                    );\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if (!description) {\r\n                error.description = \"The description field is required\";\r\n                count++;\r\n            }\r\n        }\r\n\r\n        setErr(error);\r\n        return !count;\r\n    };\r\n\r\n    // handle submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n        const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n        const fd = new FormData();\r\n        // fd.append(\"milestone_id\", task?.milestoneID);\r\n        fd.append(\"task_id\", task?.id);\r\n        fd.append(\"title\", title);\r\n        fd.append(\"start_date\", _startDate);\r\n        fd.append(\"due_date\", _dueDate);\r\n        // fd.append(\"project_id\", task?.projectId);\r\n        fd.append(\"task_category_id\", taskCategory?.id);\r\n        fd.append(\"user_id\", assignedTo?.id);\r\n        fd.append(\"description\", description);\r\n        fd.append(\"board_column_id\", task?.boardColumn?.id);\r\n        fd.append(\"priority\", _.lowerCase(priority));\r\n        // fd.append(\"estimate_hours\", estimateTimeHour);\r\n        // fd.append(\"estimate_minutes\", estimateTimeMin);\r\n        fd.append(\"image_url\", null);\r\n        fd.append(\"subTaskID\", null);\r\n        fd.append(\"addedFiles\", null);\r\n        fd.append(\"task_type\", pageType ?? null);\r\n        fd.append(\"page_type\", pageTypePriority);\r\n        fd.append(\"page_name\", pageName);\r\n        fd.append(\"page_url\", pageURL);\r\n        fd.append(\"task_type_other\", pageTypeOthers);\r\n        fd.append(\"page_type_name\", pageTypeName);\r\n        fd.append(\"number_of_pages\", numberOfPage);\r\n        fd.append(\"existing_design_link\", existingDesignLink);\r\n        fd.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            fd.append(\"file[]\", file);\r\n        });\r\n\r\n        // const submit = async () => {\r\n\r\n        if (isValid()) {\r\n            await createSubtask(fd)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    if (res?.status === \"success\") {\r\n                        let _subtask = [\r\n                            ...subTask,\r\n                            {\r\n                                id: res?.sub_task?.id,\r\n                                title: res?.sub_task?.title,\r\n                            },\r\n                        ];\r\n                        dispatch(storeSubTasks(_subtask));\r\n                        close();\r\n\r\n                        Swal.fire({\r\n                            position: \"center\",\r\n                            icon: \"success\",\r\n                            title: res.message,\r\n                            showConfirmButton: false,\r\n                            timer: 2500,\r\n                        });\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    if (err?.status === 422) {\r\n                        Swal.fire({\r\n                            position: \"center\",\r\n                            icon: \"error\",\r\n                            title: \"Task title should be unique on this project\",\r\n                            showConfirmButton: true,\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (isLoading) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading]);\r\n\r\n    // editor data handle\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        const text = _.head(err?.errors?.hours);\r\n        return text;\r\n    };\r\n\r\n    useEffect(() => {\r\n        // const showEnv = _.size(task?.subtask) === 0 ? true : false;\r\n        if (\r\n            _.includes([6, 15, 16], auth.getRoleId()) ||\r\n            auth.isHasRolePermission(13)\r\n        ) {\r\n            dispatch(setWorkingEnvironmentStatus(!isFirstSubtask));\r\n        }\r\n    }, [isFirstSubtask]);\r\n\r\n    // useEffect(()=>{\r\n    //   console.log({isFirstSubtask,isWorkingEnvironmentSubmit});\r\n    // },[isFirstSubtask,isWorkingEnvironmentSubmit]);\r\n\r\n    // useEffect(()=>{\r\n    //   console.log({isWorkingEnvironmentSubmit,isFirstSubtask,task});\r\n    // },[isWorkingEnvironmentSubmit,isFirstSubtask,task])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sp1-subtask-form --modal-panel\">\r\n                <div className=\"sp1-subtask-form --modal-panel-header\">\r\n                    <h6>\r\n                        {!isWorkingEnvironmentSubmit\r\n                            ? \"Working Environment\"\r\n                            : \"Create Sub Task\"}\r\n                    </h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className=\"_close-modal\"\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body sp1_subtask_form\">\r\n                    {/* working environment form */}\r\n                    {!isWorkingEnvironmentSubmit && (\r\n                        <WorkingEnvironmentForm\r\n                            task={task}\r\n                            onSubmit={() => {\r\n                                refetchTask();\r\n                            }}\r\n                            close={close}\r\n                        />\r\n                    )}\r\n                    {/* end working environment form */}\r\n\r\n                    {isWorkingEnvironmentSubmit && (\r\n                        <LeadConfirmationModal\r\n                            isOpen={!showForm}\r\n                            onConfirm={() => setShowForm(true)}\r\n                        />\r\n                    )}\r\n                    {showForm && (\r\n                        <div className=\"sp1-subtask-form --form row\">\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <Input\r\n                                    id=\"title\"\r\n                                    label=\"Title\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter a task title\"\r\n                                    name=\"title\"\r\n                                    required={true}\r\n                                    value={title}\r\n                                    error={\r\n                                        err?.title || required_error?.title?.[0]\r\n                                    }\r\n                                    onChange={(e) => handleChange(e, setTitle)}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Milestone */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Milestone\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={milestone}\r\n                                    />\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Parent Task\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={parentTask}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Project */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Project\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={project}\r\n                                    />\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\">\r\n                                        Start Date <sup className=\"f-14\">*</sup>\r\n                                    </label>\r\n                                    <div className=\"form-control height-35 f-14\">\r\n                                        <DatePicker\r\n                                            placeholderText={`Ex: ${dayjs\r\n                                                .dayjs()\r\n                                                .format(\"DD-MM-YYYY\")}`}\r\n                                            minDate={dayjs\r\n                                                .dayjs(task?.startDate)\r\n                                                .toDate()}\r\n                                            maxDate={\r\n                                                dueDate ||\r\n                                                dayjs\r\n                                                    .dayjs(task?.dueDate)\r\n                                                    .toDate()\r\n                                            }\r\n                                            date={startDate}\r\n                                            setDate={setStateDate}\r\n                                        />\r\n                                    </div>\r\n                                    {required_error?.start_date?.[0] && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {required_error?.start_date?.[0]}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {err?.startDate && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.startDate}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\">\r\n                                        Due Date <sup className=\"f-14\">*</sup>\r\n                                    </label>\r\n                                    <div className=\"form-control height-35 f-14\">\r\n                                        <DatePicker\r\n                                            placeholderText={`Ex: ${dayjs\r\n                                                .dayjs()\r\n                                                .format(\"DD-MM-YYYY\")}`}\r\n                                            minDate={\r\n                                                startDate ||\r\n                                                dayjs\r\n                                                    .dayjs(task?.startDate)\r\n                                                    .toDate()\r\n                                            }\r\n                                            maxDate={dayjs\r\n                                                .dayjs(task?.dueDate)\r\n                                                .toDate()}\r\n                                            date={dueDate}\r\n                                            setDate={setDueDate}\r\n                                        />\r\n                                    </div>\r\n                                    {required_error?.due_date?.[0] && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {required_error?.due_date?.[0]}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {err?.dueDate && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.dueDate}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <TaskCategorySelectionBox\r\n                                    selected={taskCategory}\r\n                                    onSelect={setTaskCategory}\r\n                                />\r\n\r\n                                {err?.taskCategory && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.taskCategory}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <AssginedToSelection\r\n                                    selected={assignedTo}\r\n                                    onSelect={setAssignedTo}\r\n                                    taskCategory={taskCategory}\r\n                                />\r\n\r\n                                {err?.assignedTo && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.assignedTo}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {assignedTo?.isOverloaded && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {`You cannot assign this task to ${\r\n                                            assignedTo?.name\r\n                                        }  because ${\r\n                                            assignedTo?.gender === \"male\"\r\n                                                ? \"He \"\r\n                                                : \"She \"\r\n                                        } has more than 4 Submittable tasks.`}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            {/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <StatusSelection />\r\n                            </div> */}\r\n\r\n                            {/* Page Type  */}\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <Listbox\r\n                                    value={pageType}\r\n                                    onChange={setPageType}\r\n                                >\r\n                                    <div className=\"form-group position-relative my-3\">\r\n                                        <label htmlFor=\"\">\r\n                                            {\" \"}\r\n                                            Task Type <sup>*</sup>{\" \"}\r\n                                        </label>\r\n                                        <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                            <span className=\"singleline-ellipsis pr-3\">\r\n                                                {pageType ?? \"--\"}\r\n                                            </span>\r\n\r\n                                            <div className=\"__icon\">\r\n                                                <i className=\"fa-solid fa-sort\"></i>\r\n                                            </div>\r\n                                        </Listbox.Button>\r\n                                        <Listbox.Options className=\"sp1-select-options\">\r\n                                            {[\r\n                                                \"New Page Design\",\r\n                                                \"Cloning Existing Design\",\r\n                                                \"Others\",\r\n                                            ]?.map((s, i) => (\r\n                                                <Listbox.Option\r\n                                                    key={i}\r\n                                                    className={({ active }) =>\r\n                                                        `sp1-select-option ${\r\n                                                            active\r\n                                                                ? \"active\"\r\n                                                                : \"\"\r\n                                                        }`\r\n                                                    }\r\n                                                    value={s}\r\n                                                >\r\n                                                    {({ selected }) => (\r\n                                                        <>\r\n                                                            {s}\r\n\r\n                                                            {selected ? (\r\n                                                                <i className=\"fa-solid fa-check ml-2\" />\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </>\r\n                                                    )}\r\n                                                </Listbox.Option>\r\n                                            ))}\r\n                                        </Listbox.Options>\r\n                                    </div>\r\n                                </Listbox>\r\n\r\n                                {required_error?.pageType?.[0] && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {required_error?.pageType?.[0]}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {err?.taskType && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.taskType}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {pageType === \"New Page Design\" ? (\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <Listbox\r\n                                        value={pageTypePriority}\r\n                                        onChange={setPageTypePriority}\r\n                                    >\r\n                                        <div className=\"form-group position-relative my-3\">\r\n                                            <label htmlFor=\"\">\r\n                                                {\" \"}\r\n                                                Page Type <sup>*</sup>{\" \"}\r\n                                            </label>\r\n                                            <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                <span className=\"singleline-ellipsis pr-3\">\r\n                                                    {pageTypePriority ?? \"--\"}\r\n                                                </span>\r\n\r\n                                                <div className=\"__icon\">\r\n                                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                                </div>\r\n                                            </Listbox.Button>\r\n                                            <Listbox.Options className=\"sp1-select-options\">\r\n                                                {[\r\n                                                    \"Primary Page Development\",\r\n                                                    \"Secondary Page Development\",\r\n                                                ]?.map((s, i) => (\r\n                                                    <Listbox.Option\r\n                                                        key={i}\r\n                                                        className={({\r\n                                                            active,\r\n                                                        }) =>\r\n                                                            `sp1-select-option ${\r\n                                                                active\r\n                                                                    ? \"active\"\r\n                                                                    : \"\"\r\n                                                            }`\r\n                                                        }\r\n                                                        value={s}\r\n                                                    >\r\n                                                        {({ selected }) => (\r\n                                                            <>\r\n                                                                {s}\r\n\r\n                                                                {selected ? (\r\n                                                                    <i className=\"fa-solid fa-check ml-2\" />\r\n                                                                ) : (\r\n                                                                    \"\"\r\n                                                                )}\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Listbox.Option>\r\n                                                ))}\r\n                                            </Listbox.Options>\r\n                                        </div>\r\n                                    </Listbox>\r\n\r\n                                    {err?.pageTypePriority && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.pageTypePriority}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ) : null}\r\n\r\n                            {/* Others */}\r\n                            {pageType === \"Others\" ? (\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <Listbox\r\n                                        value={pageTypeOthers}\r\n                                        onChange={setPageTypeOthers}\r\n                                    >\r\n                                        <div className=\"form-group position-relative my-3\">\r\n                                            <label htmlFor=\"\">\r\n                                                {\" \"}\r\n                                                Others <sup>*</sup>{\" \"}\r\n                                            </label>\r\n                                            <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                <span className=\"singleline-ellipsis pr-3\">\r\n                                                    {pageTypeOthers ?? \"--\"}\r\n                                                </span>\r\n\r\n                                                <div className=\"__icon\">\r\n                                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                                </div>\r\n                                            </Listbox.Button>\r\n                                            <Listbox.Options className=\"sp1-select-options\">\r\n                                                {[\r\n                                                    \"Page Design Change\",\r\n                                                    \"Speed Optimization\",\r\n                                                    \"Fixing Issues/Bugs\",\r\n                                                    \"Responsiveness Issue Fixing/Making Something Responsive\",\r\n                                                ]?.map((s, i) => (\r\n                                                    <Listbox.Option\r\n                                                        key={i}\r\n                                                        className={({\r\n                                                            active,\r\n                                                        }) =>\r\n                                                            `sp1-select-option ${\r\n                                                                active\r\n                                                                    ? \"active\"\r\n                                                                    : \"\"\r\n                                                            }`\r\n                                                        }\r\n                                                        value={s}\r\n                                                    >\r\n                                                        {({ selected }) => (\r\n                                                            <>\r\n                                                                {s}\r\n\r\n                                                                {selected ? (\r\n                                                                    <i className=\"fa-solid fa-check ml-2\" />\r\n                                                                ) : (\r\n                                                                    \"\"\r\n                                                                )}\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Listbox.Option>\r\n                                                ))}\r\n                                            </Listbox.Options>\r\n                                        </div>\r\n                                    </Listbox>\r\n\r\n                                    {err?.pageTypeOthers && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.pageTypeOthers}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ) : null}\r\n\r\n                            {pageType ? (\r\n                                <React.Fragment>\r\n                                    {pageType === \"Cloning Existing Design\" ? (\r\n                                        <>\r\n                                            {/* <div className=\"col-12 col-md-6\">\r\n                                                    <Input\r\n                                                        id=\"page_type_name\"\r\n                                                        label=\"Page type name\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter page type name...\"\r\n                                                        name=\"pageTypeName\"\r\n                                                        required={true}\r\n                                                        value={pageTypeName}\r\n\r\n                                                        onChange={(e) => handleChange(e, setPageTypeName)}\r\n                                                    />\r\n                                                </div> */}\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Listbox\r\n                                                    value={pageTypeName}\r\n                                                    onChange={setPageTypeName}\r\n                                                >\r\n                                                    <div className=\"form-group position-relative my-3\">\r\n                                                        <label htmlFor=\"\">\r\n                                                            {\" \"}\r\n                                                            Page Type Name{\" \"}\r\n                                                            <sup>*</sup>{\" \"}\r\n                                                        </label>\r\n                                                        <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                            <span className=\"singleline-ellipsis pr-3\">\r\n                                                                {pageTypeName ??\r\n                                                                    \"--\"}\r\n                                                            </span>\r\n\r\n                                                            <div className=\"__icon\">\r\n                                                                <i className=\"fa-solid fa-sort\"></i>\r\n                                                            </div>\r\n                                                        </Listbox.Button>\r\n                                                        <Listbox.Options className=\"sp1-select-options\">\r\n                                                            {[\r\n                                                                \"Primary Page Development\",\r\n                                                                \"Secondary Page Development\",\r\n                                                            ]?.map((s, i) => (\r\n                                                                <Listbox.Option\r\n                                                                    key={i}\r\n                                                                    className={({\r\n                                                                        active,\r\n                                                                    }) =>\r\n                                                                        `sp1-select-option ${\r\n                                                                            active\r\n                                                                                ? \"active\"\r\n                                                                                : \"\"\r\n                                                                        }`\r\n                                                                    }\r\n                                                                    value={s}\r\n                                                                >\r\n                                                                    {({\r\n                                                                        selected,\r\n                                                                    }) => (\r\n                                                                        <>\r\n                                                                            {s}\r\n\r\n                                                                            {selected ? (\r\n                                                                                <i className=\"fa-solid fa-check ml-2\" />\r\n                                                                            ) : (\r\n                                                                                \"\"\r\n                                                                            )}\r\n                                                                        </>\r\n                                                                    )}\r\n                                                                </Listbox.Option>\r\n                                                            ))}\r\n                                                        </Listbox.Options>\r\n                                                    </div>\r\n                                                </Listbox>\r\n                                                {err?.pageTypeName ||\r\n                                                    required_error\r\n                                                        ?.page_type?.[0]}\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"page_name\"\r\n                                                    label=\"Page Name\"\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter page name\"\r\n                                                    name=\"page name\"\r\n                                                    required={true}\r\n                                                    value={pageName}\r\n                                                    error={err?.pageName}\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setPageName\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"page_url\"\r\n                                                    label=\"Page URL\"\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter page url\"\r\n                                                    name=\"page url\"\r\n                                                    required={true}\r\n                                                    value={pageURL}\r\n                                                    error={\r\n                                                        err?.pageUrl ||\r\n                                                        required_error\r\n                                                            ?.page_url?.[0]\r\n                                                    }\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setPageURL\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n\r\n                                    {pageType === \"Cloning Existing Design\" ? (\r\n                                        <>\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"number_of_pages\"\r\n                                                    label=\"Number of Pages\"\r\n                                                    type=\"number\"\r\n                                                    placeholder=\"--\"\r\n                                                    name=\"number_of_pages\"\r\n                                                    required={true}\r\n                                                    value={numberOfPage}\r\n                                                    error={err?.numberOfPage}\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setNumberOfPage\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"exiting_project_url\"\r\n                                                    label=\"Existing Design Link\"\r\n                                                    type=\"Link\"\r\n                                                    placeholder=\"--\"\r\n                                                    name=\"exiting_project_url\"\r\n                                                    required={true}\r\n                                                    value={existingDesignLink}\r\n                                                    error={\r\n                                                        err?.existingDesignLink\r\n                                                    }\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setExistingDesignLink\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                        </>\r\n                                    ) : null}\r\n                                </React.Fragment>\r\n                            ) : null}\r\n                            {/*  */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <PrioritySelection\r\n                                    selected={priority}\r\n                                    setSelected={setPriority}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Set Estimate Time */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        htmlFor=\"\"\r\n                                        className=\"f-14 text-dark-gray\"\r\n                                    >\r\n                                        Set Estimate Time{\" \"}\r\n                                        <sup className=\"f-14\"> * </sup>\r\n                                    </label>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control height-35 f-14 mr-2\"\r\n                                            value={estimateTimeHour}\r\n                                            onWheel={e => e.currentTarget.blur()}\r\n                                            onChange={(e) =>handleChange( e,setEstimateTimeHour)}\r\n                                        />{\" \"}\r\n                                        hrs\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                            value={estimateTimeMin}\r\n                                            onWheel={e => e.currentTarget.blur()}\r\n                                            onChange={(e) =>\r\n                                                handleChange(\r\n                                                    e,\r\n                                                    setEstimateTimeMin\r\n                                                )\r\n                                            }\r\n                                        />{\" \"}\r\n                                        min\r\n                                    </div>\r\n\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {estimateError(required_error)}\r\n                                    </div>\r\n\r\n                                    <div style={{ color: \"#F73B12\" }}>\r\n                                    Estimation time can't exceed {estimation?.hours_left} hours {estimation?.minutes_left} minutes\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\"> Description </label>\r\n                                    <div\r\n                                        className=\"sp1_st_write_comment_editor\"\r\n                                        style={{ minHeight: \"100px\" }}\r\n                                    >\r\n                                        <CKEditorComponent\r\n                                            onChange={handleEditorChange}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {required_error?.description?.[0] && (\r\n                                        <span className=\"text-danger\">\r\n                                            <small>\r\n                                                {\" \"}\r\n                                                {\r\n                                                    required_error\r\n                                                        ?.description?.[0]\r\n                                                }{\" \"}\r\n                                            </small>\r\n                                        </span>\r\n                                    )}\r\n                                    {err?.description && (\r\n                                        <span className=\"text-danger\">\r\n                                            <small> {err?.description} </small>\r\n                                        </span>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <UploadFilesInLine\r\n                                    files={files}\r\n                                    setFiles={setFiles}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* {err?.violationWord ? <div className=\"alert alert-danger mt-2 w-100 text-center\" dangerouslySetInnerHTML={{__html: err?.violationWord}} />: null} */}\r\n\r\n                            <div className=\"col-12 mt-3 pb-3\">\r\n                                <div className=\"d-flex align-items-center justify-content-end\">\r\n                                    <Button\r\n                                        variant=\"secondary\"\r\n                                        className=\"mr-2\"\r\n                                        onClick={close}\r\n                                    >\r\n                                        Cancel\r\n                                    </Button>\r\n\r\n                                    {!isLoading && !checking ? (\r\n                                        <Button onClick={handleSubmit}>\r\n                                            <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                            Create\r\n                                        </Button>\r\n                                    ) : (\r\n                                        <Button className=\"cursor-processing\">\r\n                                            <div\r\n                                                className=\"spinner-border text-white\"\r\n                                                role=\"status\"\r\n                                                style={{\r\n                                                    width: \"18px\",\r\n                                                    height: \"18px\",\r\n                                                }}\r\n                                            ></div>\r\n                                            Processing...\r\n                                        </Button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SubTaskForm;\r\n","import React, { useState } from 'react'\r\nimport Button from '../../components/Button'\r\nimport Input from '../../components/form/Input'\r\nimport TaskCategorySelectionBox from './TaskCategorySelectionBox'\r\nimport AssginedToSelection from './AssignedToSelection'\r\nimport PrioritySelection from './PrioritySelection'\r\nimport DatePicker from '../comments/DatePicker'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport _ from 'lodash'\r\nimport { useDeleteUplaodedFileMutation, useEditSubtaskMutation, useGetTaskDetailsQuery, useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeSubTasks } from '../../../services/features/subTaskSlice'\r\nimport { CompareDate } from '../../../utils/dateController'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n\r\nconst  SubtTaskEditForm= ({close, editId}) => {\r\n    const { task, subTask } = useSelector(s => s.subTask);\r\n    const dispatch = useDispatch();\r\n\r\n//   form data\r\n  const [title, setTitle] = useState('');\r\n  const [milestone, setMilestone] = useState('');\r\n  const [parentTask, setParentTask] = useState('');\r\n  const [startDate, setStateDate] = useState(new Date());\r\n  const [dueDate, setDueDate] = useState(new Date());\r\n  const [project, setProject] = useState(\"\");\r\n  const [taskCategory, setTaskCategory] = useState('')\r\n  const [assignedTo, setAssignedTo] = useState('');\r\n  const [taskObserver, setTaskObserver] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('To Do');\r\n  const [priority, setPriority] = useState('Medium');\r\n  const [estimateTimeHour, setEstimateTimeHour ] = useState('');\r\n  const [estimateTimeMin, setEstimateTimeMin ] = useState('');\r\n  const [attachedFiles, setAttachedFiles] = useState([]);\r\n  const [files, setFiles] = React.useState([]);\r\n\r\n    const params = useParams();\r\n\r\nconst [\r\n    editSubtask,\r\n    { isLoading, error }\r\n] = useEditSubtaskMutation();\r\n\r\nconst [\r\n    getTaskDetails,\r\n    { data: edit, isFetching: editDataIsFetching}\r\n] = useLazyGetTaskDetailsQuery();\r\n\r\n\r\n// find edited subtask\r\nconst editSubTask = subTask.find(d => d.id === editId);\r\n\r\nconst { data: estimation, isFetching } = useGetTaskDetailsQuery(`/${params?.taskId}/json?mode=estimation_time`);\r\n\r\n\r\nconst required_error = error?.status === 422 ? error?.data: null;\r\n\r\n\r\n// handle change\r\nReact.useEffect(() => {\r\n    const formatedDate = (d) => {\r\n        let day = dayjs.dayjs(d).toDate();\r\n        return day;\r\n    }\r\n    getTaskDetails(`/${editId}/json?mode=sub_task_edit`).unwrap().then(res => {\r\n        if(res){\r\n            const assigneeTo = res?.users?.[0];\r\n\r\n            setTitle(res.heading);\r\n            setMilestone(res.milestone_title);\r\n            setParentTask(task?.heading);\r\n            setStateDate(formatedDate(res.start_date));\r\n            setDueDate(formatedDate(res.due_date));\r\n            setProject(res.project_name);\r\n            setTaskCategory(res.task_category);\r\n            setAssignedTo(assigneeTo ? {id: assigneeTo?.id, name: assigneeTo?.name}: '');\r\n            setDescription(res.description);\r\n            setPriority(_.startCase(res.priority));\r\n            setEstimateTimeHour(res.estimate_hours);\r\n            setEstimateTimeMin(res.estimate_minutes);\r\n            setAttachedFiles(res.files);\r\n\r\n\r\n\r\n        }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    } )\r\n}, [task, editId])\r\n\r\n\r\n\r\n// handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n// handle submission\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  const _startDate = dayjs.dayjs(startDate).format('DD-MM-YYYY');\r\n  const _dueDate = dayjs.dayjs(dueDate).format('DD-MM-YYYY');\r\n\r\n  const fd = new FormData();\r\n    fd.append('milestone_id', task?.milestone_id);\r\n    fd.append('task_id', task?.id);\r\n    fd.append('title', title);\r\n    fd.append('start_date', _startDate);\r\n    fd.append('due_date', _dueDate);\r\n    fd.append('project_id', task?.project_id);\r\n    fd.append('task_category_id', taskCategory?.id);\r\n    fd.append('user_id', assignedTo?.id);\r\n    fd.append('description', description);\r\n    fd.append('board_column_id', task?.board_column_id);\r\n    fd.append('priority', _.lowerCase(priority));\r\n    fd.append('estimate_hours', estimateTimeHour);\r\n    fd.append('estimate_minutes', estimateTimeMin);\r\n    fd.append('image_url', null);\r\n    fd.append('subTaskID', editSubTask?.subtask_id);\r\n    fd.append('addedFiles', null);\r\n    fd.append('_method', 'PUT');\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    editSubtask({data: fd, id: editId}).unwrap().then(res => {\r\n            if(res?.status === 'success'){\r\n\r\n                 let _subtask = [...subTask];\r\n                 _subtask = _subtask?.map(s => {\r\n                    if(Number(s?.id) === Number(res?.sub_task?.id)){\r\n                        return res?.sub_task\r\n                    }else return s;\r\n                 })\r\n\r\n                dispatch(storeSubTasks(_subtask));\r\n\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: res?.message,\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                })\r\n\r\n                close();\r\n            }\r\n    }).catch((err) => {\r\n        if(err?.status === 422){\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'error',\r\n                title: \"Please fill out all required fields\",\r\n                showConfirmButton: true,\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n// handle uplaoded file delete request\r\nconst [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\nconst handleFileDelete = (e, file) => {\r\n    // delete\r\n    deleteUplaodedFile(file?.id).unwrap();\r\n\r\n    // delete form ui\r\n    let previousFile = [...attachedFiles];\r\n    let index = previousFile?.indexOf(file);\r\n    previousFile.splice(index,1);\r\n    setAttachedFiles(previousFile);\r\n}\r\n\r\n\r\n// handle loading state\r\nReact.useEffect(() => {\r\n    if (isLoading || editDataIsFetching) {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'progress';\r\n      } else {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'default';\r\n      }\r\n}, [isLoading, editDataIsFetching])\r\n\r\n\r\n\r\nconst handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setDescription(data);\r\n}\r\n\r\nconst estimateError= (err) =>{\r\n    let errText = '';\r\n    let hoursErr = err?.estimate_hours?.[0];\r\n    let minErr = err?.estimate_minutes?.[0];\r\n    if(hoursErr) errText += hoursErr;\r\n    if(minErr) errText += minErr;\r\n    return errText;\r\n}\r\n\r\n  return (\r\n    <>\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'>\r\n                 <h6>\r\n                        Edit Sub Task\r\n                        {editDataIsFetching && <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent'\r\n                            }}\r\n                        />}\r\n                </h6>\r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching &&\r\n                    <div className='w-100' style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        zIndex: 1\r\n                    }}/>\r\n                }\r\n                <div className='sp1-subtask-form --form row'>\r\n                    <div className=\"col-6\">\r\n                        <Input\r\n                            id='title'\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder='Enter a task title'\r\n                            name='title'\r\n                            required={true}\r\n                            value={title}\r\n                            error= {required_error?.title?.[0]}\r\n                            onChange={e => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Milestone\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={milestone}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Parent Task\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={parentTask}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">Start Date <sup className='f-14'>*</sup></label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs.dayjs().format('DD-MM-YYYY')}`}\r\n                                    minDate={dayjs.dayjs(task?.start_date).toDate()}\r\n                                    maxDate={dueDate || dayjs.dayjs(task?.due_date).toDate()}\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                required_error?.start_date?.[0] &&\r\n                               <div style={{color: 'red'}}>{required_error?.start_date?.[0]}</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-6'>\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">Due Date <sup className='f-14'>*</sup></label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs.dayjs().format('DD-MM-YYYY')}`}\r\n                                    minDate={startDate || dayjs.dayjs(task?.start_date).toDate()}\r\n                                    maxDate={dayjs.dayjs(task?.due_date).toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                required_error?.due_date?.[0] &&\r\n                               <div style={{color: 'red'}}>{required_error?.due_date?.[0]}</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <TaskCategorySelectionBox selected={taskCategory} onSelect={setTaskCategory}  />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <AssginedToSelection selected={assignedTo} onSelect={setAssignedTo} />\r\n                    </div>\r\n{/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-6\">\r\n                        <PrioritySelection selected={priority} setSelected={setPriority} />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className='f-14 text-dark-gray'>Set Estimate Time <sup className='f-14'> * </sup></label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type='number'\r\n                                    onWheel={e => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) => handleChange(e, setEstimateTimeHour)}\r\n                                /> hrs\r\n                                <input\r\n                                    type='number'\r\n                                    onWheel={e => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={e => handleChange(e, setEstimateTimeMin)}\r\n                                /> min\r\n                            </div>\r\n\r\n                            <div style={{color: 'red'}}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{color: 'red'}}>\r\n                            Estimation time can't exceed {estimation?.hours_left} hours {estimation?.minutes_left} minutes\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div className='sp1_st_write_comment_editor' style={{minHeight: '100px'}}>\r\n                                <CKEditorComponent data={description} onChange={handleEditorChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12'>\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3\">\r\n\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant='secondary'\r\n                                className='mr-2'\r\n                                onClick={close}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            {!isLoading ? (\r\n                                <Button onClick={handleSubmit}>\r\n                                    <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                    Update\r\n                                </Button>\r\n                            ) : (\r\n                            <Button className='cursor-processing'>\r\n                                <div\r\n                                    className=\"spinner-border text-white\"\r\n                                    role=\"status\"\r\n                                    style={{\r\n                                        width: '18px',\r\n                                        height: '18px',\r\n                                    }}\r\n                                >\r\n                                </div>\r\n                                Processing...\r\n                            </Button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SubtTaskEditForm\r\n","import React from \"react\";\r\nimport SubTask from \"./SubTask\";\r\nimport SubTaskForm from \"./SubTaskForm\";\r\nimport Button from \"../../components/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    useGetTaskDetailsQuery,\r\n    useLazyGetInProgressTaskStatusQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { storeSubTasks } from \"../../../services/features/subTaskSlice\";\r\nimport SubtTaskEditForm from \"./SubTaskEditForm\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport Modal from \"../../components/Modal\";\r\nimport _ from \"lodash\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { subTaskCreationPermision } from \"../../permissions\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst SubTaskSection = ({ status }) => {\r\n    const { task, subTask } = useSelector((s) => s.subTask);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [edit, setEdit] = React.useState(null);\r\n    const [formMode, setFormMode] = React.useState(\"add\");\r\n    const [isTaskModalOpen, setIsTaskModalOpen] = React.useState(false);\r\n    const [subtaskModalToggleRef, setSubtaskModalToggleRef] =\r\n        React.useState(null);\r\n    const { width } = useWindowSize();\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n    // check in progress task history\r\n    const [getInProgressTaskStatus, { isFetching: inProgressTaskStatus }] =\r\n        useLazyGetInProgressTaskStatusQuery();\r\n\r\n    const toggleAddButton = async () => {\r\n        // try{\r\n        //     const res = await getInProgressTaskStatus(`/${auth?.getId()}`).unwrap();\r\n        //     if(res.status === 400){\r\n        //         toast.error(res?.message, {theme: 'colored'})\r\n        //     }else{\r\n        //         setIsTaskModalOpen(!isTaskModalOpen);\r\n        //     }\r\n\r\n        // }catch(err){\r\n        //     console.log(err)\r\n        // }\r\n\r\n        setIsTaskModalOpen(!isTaskModalOpen);\r\n    };\r\n\r\n    const closeAddModal = () => {\r\n        setIsTaskModalOpen(false);\r\n        setFormMode(\"add\");\r\n        navigate(`/account/tasks/${task?.id}`);\r\n    };\r\n    const toggleEditButton = (e) => {\r\n        setFormMode(\"edit\");\r\n        setIsTaskModalOpen(!isTaskModalOpen);\r\n    };\r\n\r\n    // edit modal form control\r\n    const toggleEditForm = (e, id) => {\r\n        e.preventDefault();\r\n        setEdit(id);\r\n        setIsTaskModalOpen(true);\r\n    };\r\n\r\n    const closeEditForm = () => {\r\n        setEdit(null);\r\n        setIsTaskModalOpen(false);\r\n    };\r\n\r\n    // handle create new subtask\r\n    // const handleCreateSubTask = () => {\r\n    //     // if parent task has not already any subtask\r\n    //     // show the Working Environment form\r\n    //     // else create from\r\n    // };\r\n\r\n    // edit modal form control end\r\n    // const {\r\n    //   data,\r\n    //   isFetching\r\n    // } = useGetTaskDetailsQuery(`/${task?.id}/json?mode=sub_task`, {\r\n    //   skip: subTask?.length\r\n    // });\r\n\r\n    // fetch all task\r\n    const [getTaskDetails, { isFetching }] = useLazyGetTaskDetailsQuery(\"\", {\r\n        skip: subTask?.length,\r\n    });\r\n\r\n    // useEffect(()=>{\r\n    //     console.log({task,subTask,isFetching});\r\n    //   },[task,subTask,isFetching])\r\n\r\n    // if task notes fetch completed store data into redux store\r\n    React.useEffect(() => {\r\n        if (task && task.id) {\r\n            getTaskDetails(`/${task?.id}/json?mode=sub_task`)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    if (res) {\r\n                        dispatch(storeSubTasks(res));\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [task]);\r\n\r\n    // React.useEffect(() => {\r\n    //   if(!isFetching && data){\r\n    //     dispatch(storeSubTasks(data));\r\n    //   }\r\n    // },[data])\r\n\r\n    const Task = new SingleTask(task);\r\n\r\n    return (\r\n        <div\r\n            className=\"sp1_task_right_card mb-3\"\r\n            ref={setSubtaskModalToggleRef}\r\n            style={{ zIndex: isTaskModalOpen ? \"99\" : \"\" }}\r\n        >\r\n            {width > 1200 ? (\r\n                <React.Fragment>\r\n                    {/* modal */}\r\n                    <CustomModal\r\n                        toggleRef={subtaskModalToggleRef}\r\n                        isOpen={isTaskModalOpen}\r\n                        close={closeAddModal}\r\n                        formMode={formMode}\r\n                    >\r\n                        {!edit ? (\r\n                            <SubTaskForm\r\n                                close={closeAddModal}\r\n                                isFirstSubtask={!Task.workEnvData}\r\n                            />\r\n                        ) : (\r\n                            <SubtTaskEditForm\r\n                                close={closeEditForm}\r\n                                editId={edit}\r\n                            />\r\n                        )}\r\n                    </CustomModal>\r\n                </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                    {/* modal */}\r\n                    <Modal isOpen={isTaskModalOpen}>\r\n                        {!edit ? (\r\n                            <SubTaskForm\r\n                                close={closeAddModal}\r\n                                isFirstSubtask={!Task.workEnvData}\r\n                            />\r\n                        ) : (\r\n                            <SubtTaskEditForm\r\n                                close={closeEditForm}\r\n                                editId={edit}\r\n                            />\r\n                        )}\r\n                    </Modal>\r\n                </React.Fragment>\r\n            )}\r\n\r\n            {/* left dropdown */}\r\n\r\n            {isTaskModalOpen && (\r\n                <button\r\n                    aria-label=\"openCommentModalButton\"\r\n                    className=\"sp1_task_right_dl_toggle\"\r\n                    onClick={toggleAddButton}\r\n                    style={{ zIndex: isTaskModalOpen ? \"110\" : \"\" }}\r\n                >\r\n                    <i\r\n                        className={`fa-solid fa-circle-chevron-${\r\n                            isTaskModalOpen ? \"right\" : \"left\"\r\n                        }`}\r\n                        style={{ color: \"#276fec\" }}\r\n                    />\r\n                </button>\r\n            )}\r\n            {/* left dropdown */}\r\n\r\n            <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n                <div className=\"f-16\">\r\n                    <span>Sub Task</span>\r\n                    {isFetching && (\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        />\r\n                    )}\r\n                </div>\r\n\r\n                {subTaskCreationPermision({ task: Task, auth, status }) && (\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        className=\"sp1_tark_add_item\"\r\n                        aria-label=\"addButton\"\r\n                        onClick={toggleAddButton}\r\n                    >\r\n                        {isTaskModalOpen ? (\r\n                            <React.Fragment>\r\n                                <i\r\n                                    className=\"fa-solid fa-xmark\"\r\n                                    style={{ fontSize: \"12px\" }}\r\n                                />{\" \"}\r\n                                Close\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                {inProgressTaskStatus ? (\r\n                                    <Loader title=\"Loading...\" />\r\n                                ) : (\r\n                                    <>\r\n                                        <i\r\n                                            className=\"fa-solid fa-plus\"\r\n                                            style={{ fontSize: \"12px\" }}\r\n                                        />{\" \"}\r\n                                        Sub Task\r\n                                    </>\r\n                                )}\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Button>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"sp1_task_right_card--body\">\r\n                {!isFetching ? (\r\n                    _.size(subTask) !== 0 ? (\r\n                        subTask?.map((sub) => (\r\n                            <SubTask\r\n                                key={sub.id}\r\n                                subTask={sub}\r\n                                task={task}\r\n                                status={status}\r\n                                toggleEditForm={toggleEditForm}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{\r\n                                color: \"#B4BCC4\",\r\n                                fontSize: \"15px\",\r\n                                textAlign: \"center\",\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                            }}\r\n                        >\r\n                            Sub Task is Not Available\r\n                        </div>\r\n                    )\r\n                ) : (\r\n                    <div\r\n                        className=\"d-flex align-items-center justify-content-center\"\r\n                        style={{\r\n                            color: \"#5A6169\",\r\n                            fontSize: \"15px\",\r\n                            textAlign: \"center\",\r\n                            height: \"100%\",\r\n                            width: \"100%\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                                marginRight: \"10px\",\r\n                            }}\r\n                        />\r\n                        Loading...\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubTaskSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport Card from \"../../../global/Card\";\r\nimport styles from \"./task-edit-form.module.css\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport Button from '../../../global/Button'\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\nimport AssignedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\n\r\nimport {\r\n    useDeleteUplaodedFileMutation,\r\n    useGetTaskDetailsQuery,\r\n    useEditSubtaskMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { storeSubTasks } from \"../../../services/features/subTaskSlice\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useUpdateTaskMutation } from \"../../../services/api/tasksApiSlice\";\r\nimport { useGetMilestoneDetailsQuery, useLazyGetMilestoneDetailsQuery } from \"../../../services/api/projectApiSlice\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport Loader from \"../../../global/Loader\";\r\nimport { convertTime } from \"../../../utils/converTime\";\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n// Edit form Provider\r\nconst EditFormProvider = ({ task }) => {\r\n    const [searchParams] = useSearchParams(); // get search params\r\n    const isVisible = searchParams.get(\"modal\") === \"edit\"; // check has modal\r\n    const taskId = searchParams.get(\"task\"); // get task id\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const close = () => navigate(location.pathname, { replace: true });\r\n\r\n\r\n    const [updateTask, { isLoading, error }] = useUpdateTaskMutation();\r\n    // handle submission\r\n    const handleSubmission = (formData) => {\r\n        updateTask(formData).unwrap().then(res => {\r\n            if (res?.status === 200) {\r\n                toast.success(\"Task Updated successfully!\");\r\n                close();\r\n            }\r\n        }).catch((err) => {\r\n            if (err?.status === 422) {\r\n                toast.warn(\"Please fill out all required fields\")\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={isVisible}>\r\n            <Card className={styles.form_card}>\r\n                <Card.Head\r\n                    onClose={close}\r\n                    className={styles.form_card_head}\r\n                >\r\n                    <h6> Edit Task # {taskId} </h6>\r\n                </Card.Head>\r\n\r\n                <Card.Body className={styles.form_card_body}>\r\n                    <div className=\"\">\r\n                        {task && (\r\n                            <TaskEditForm\r\n                                task={task}\r\n                                onSubmit={handleSubmission}\r\n                                isLoading={isLoading}\r\n                                onClose={close}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditFormProvider;\r\n\r\nconst TaskEditForm = ({ task, onSubmit, isLoading, onClose }) => {\r\n    const editDataIsFetching = !task;\r\n    //form data\r\n    const [title, setTitle] = useState(task.title);\r\n    const [milestone, setMilestone] = useState({ id: task.milestoneID, milestone_title: task.milestoneTitle });\r\n    const [parentTask, setParentTask] = useState(task.parentTaskTitle);\r\n    const [startDate, setStateDate] = useState(new Date(task.startDate));\r\n    const [dueDate, setDueDate] = useState(new Date(task.dueDate));\r\n    const [project, setProject] = useState(task.projectName);\r\n    const [taskCategory, setTaskCategory] = useState({\r\n        id: task.category.id,\r\n        category_name: task.category.name,\r\n    });\r\n    const [assignedTo, setAssignedTo] = useState({\r\n        id: task.assigneeTo.id,\r\n        name: task.assigneeTo.name,\r\n    });\r\n    const [description, setDescription] = useState(task.description);\r\n    const [priority, setPriority] = useState(task.priority);\r\n    const [estimateTimeHour, setEstimateTimeHour] = useState(\r\n        task.estimateHours\r\n    );\r\n    const [estimateTimeMin, setEstimateTimeMin] = useState(\r\n        task.estimateMinutes\r\n    );\r\n    const [attachedFiles, setAttachedFiles] = useState([]);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { data: estimation, isFetching } = useGetTaskDetailsQuery(\r\n        `/${task?.id}/json?mode=estimation_time`, { skip: !task?.id }\r\n    );\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n        let count = 0;\r\n        const err = new Object();\r\n\r\n        const errorMessages = {\r\n            requiredField: 'This field is required.',\r\n            startDate: 'Please select a start date.',\r\n            dueDate: 'Please select a due date.',\r\n            taskCategory: 'Please select a task category.',\r\n            assignedTo: 'Please select a user.',\r\n            overloadedUser: (name, gender) =>\r\n                `You cannot assign this task to ${name} because ${gender === 'male' ? 'he ' : 'she '\r\n                } has more than 10 submittable tasks.`,\r\n            description: 'This field is required.',\r\n        };\r\n\r\n        const showError = (field) => {\r\n            err[field] = errorMessages[field];\r\n            count++;\r\n        }\r\n\r\n\r\n        if (!title) showError('title');\r\n        if (!startDate) showError('startDate');\r\n        if (!dueDate) showError('dueDate');\r\n        if (!taskCategory) showError('taskCategory');\r\n        if (!assignedTo) showError('assignedTo');\r\n\r\n        if (assignedTo && assignedTo?.isOverloaded) {\r\n            err.assignedTo = overloadedUser(assignedTo.name, genderPronoun);\r\n            count++;\r\n        }\r\n\r\n        if (!description) showError('description');\r\n\r\n        setError(error);\r\n        return count === 0;\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = () => {\r\n        //form data\r\n        const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n        const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n        const fd = new FormData();\r\n        fd.append(\"milestone_id\", task?.milestoneID);\r\n        fd.append(\"task_id\", task?.id);\r\n        fd.append(\"heading\", title);\r\n        fd.append(\"start_date\", _startDate);\r\n        fd.append(\"due_date\", _dueDate);\r\n        fd.append(\"project_id\", task?.projectId);\r\n        fd.append(\"category_id\", taskCategory?.id);\r\n        fd.append(\"user_id\", assignedTo?.id);\r\n        fd.append(\"description\", description);\r\n        fd.append(\"board_column_id\", task?.boardColumn.id);\r\n        fd.append(\"priority\", _.lowerCase(priority));\r\n        fd.append(\"estimate_hours\", estimateTimeHour);\r\n        fd.append(\"estimate_minutes\", estimateTimeMin);\r\n        fd.append(\"deliverable_id\", milestone?.deliverable_type ?? '');\r\n        fd.append(\"image_url\", null);\r\n        fd.append(\"addedFiles\", null);\r\n        fd.append(\"_method\", \"POST\");\r\n        fd.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            fd.append(\"file[]\", file);\r\n        });\r\n\r\n        if (isValid()) {\r\n            onSubmit(fd);\r\n        } else {\r\n            toast.warn('Please fill out all required fields!');\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const { data: projects, isFetching: isFetchingMilestone } = useGetMilestoneDetailsQuery(task?.projectId)\r\n\r\n\r\n\r\n    // handle uploaded file delete request\r\n    const [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\n    const handleFileDelete = (e, file) => {\r\n        // delete\r\n        deleteUplaodedFile(file?.id).unwrap();\r\n\r\n        // delete form ui\r\n        let previousFile = [...attachedFiles];\r\n        let index = previousFile?.indexOf(file);\r\n        previousFile.splice(index, 1);\r\n        setAttachedFiles(previousFile);\r\n    };\r\n\r\n    // handle loading state\r\n    React.useEffect(() => {\r\n        if (isLoading || editDataIsFetching) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading, editDataIsFetching]);\r\n\r\n    //   editor\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        let errText = \"\";\r\n        let hoursErr = err?.estimate_hours?.[0];\r\n        let minErr = err?.estimate_minutes?.[0];\r\n        if (hoursErr) errText += hoursErr;\r\n        if (minErr) errText += minErr;\r\n        return errText;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching && (\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            zIndex: 1,\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className=\"sp1-subtask-form --form row\">\r\n                    <div className=\"col-6\">\r\n                        <Input\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter a task title\"\r\n                            name=\"title\"\r\n                            required={true}\r\n                            value={title}\r\n                            error={required_error?.title?.[0]}\r\n                            onChange={(e) => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* Project Milestone Selection Menu */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Listbox value={milestone} onChange={setMilestone}>\r\n                            <div className=\"form-group position-relative my-3\">\r\n                                <label\r\n                                    className={`f-14 text-dark-gray mb-1`}\r\n                                    data-label=\"true\"\r\n                                >\r\n                                    Milestone\r\n                                </label>\r\n                                <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                    <span className=\"singleline-ellipsis\" >{milestone?.milestone_title ?? '--'}</span>\r\n                                    <div className='__icon'>\r\n                                        <i className=\"fa-solid fa-sort\"></i>\r\n                                    </div>\r\n                                </Listbox.Button>\r\n                                <Listbox.Options className=\"sp1-select-options\">\r\n                                    {isFetchingMilestone && <span className=\"w-full d-block py-2 px-3\">Loading...</span>}\r\n\r\n                                    {_.map(projects?.milestones, (milestone) => (\r\n                                        <Listbox.Option\r\n                                            key={milestone.id}\r\n                                            className={({ active }) => `sp1-select-option ${styles.list_border}${active ? 'active' : ''}`}\r\n                                            value={milestone}\r\n                                        >\r\n                                            {milestone?.milestone_title}\r\n                                        </Listbox.Option>\r\n                                    ))}\r\n                                </Listbox.Options>\r\n\r\n                                {error?.milestone && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {error?.milestone}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Listbox>\r\n                    </div>\r\n\r\n                    {/* Project Deliverable */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project Deliverable\r\n                            </label>\r\n                            <div className=\"sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                <span className=\"singleline-ellipsis\">{isFetchingMilestone ? 'Loading...' : _.find(projects?.milestones, d => d.id === milestone.id)?.deliverable_type}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/*task.isSubtask && (\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group my-3\">\r\n                                <label\r\n                                    className={`f-14 text-dark-gray mb-1`}\r\n                                    data-label=\"true\"\r\n                                >\r\n                                    Parent Task\r\n                                </label>\r\n                                <input\r\n                                    className={`form-control height-35 f-14`}\r\n                                    readOnly\r\n                                    defaultValue={parentTask}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )} */}\r\n\r\n\r\n\r\n                    <div className=\"col-6\">\r\n\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Start Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={dayjs\r\n                                        .dayjs(task?.start_date)\r\n                                        .toDate()}\r\n                                    maxDate={\r\n                                        dueDate ||\r\n                                        dayjs.dayjs(task?.due_date).toDate()\r\n                                    }\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.start_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.start_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Due Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={\r\n                                        startDate ||\r\n                                        dayjs.dayjs(task?.start_date).toDate()\r\n                                    }\r\n                                    maxDate={dayjs\r\n                                        .dayjs(task?.due_date)\r\n                                        .toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.due_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.due_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <TaskCategorySelectionBox\r\n                            selected={taskCategory}\r\n                            onSelect={setTaskCategory}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <AssignedToSelection\r\n                            selected={assignedTo}\r\n                            onSelect={setAssignedTo}\r\n                        />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-6\">\r\n                        <PrioritySelection\r\n                            selected={priority}\r\n                            setSelected={setPriority}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className=\"f-14 text-dark-gray\">\r\n                                Set Estimate Time{\" \"}\r\n                                <sup className=\"f-14\"> * </sup>\r\n                            </label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeHour)\r\n                                    }\r\n                                />{\" \"}\r\n                                hrs\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeMin)\r\n                                    }\r\n                                />{\" \"}\r\n                                min\r\n                            </div>\r\n\r\n                            <div style={{ color: \"red\" }}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{ color: \"red\" }}>\r\n                                {/* {console.log({a: projects?.minutes_left})} */}\r\n                                Estimation time can't exceed{\" \"}\r\n                                {convertTime(Number(projects?.minutes_left) > 0 ? Number(projects?.minutes_left) : 0)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div\r\n                                className=\"sp1_st_write_comment_editor\"\r\n                                style={{ minHeight: \"100px\" }}\r\n                            >\r\n                                <CKEditorComponent\r\n                                    data={description}\r\n                                    onChange={handleEditorChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3 mb-5\">\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                className=\"mr-2\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n\r\n                            <Button\r\n                                onClick={handleSubmit}\r\n                                isLoading={isLoading}\r\n                            >\r\n                                <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Button from \"../../components/Button\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport Modal from \"../../components/Modal\";\r\n\r\nconst SubmitionView = ({ isOpen, close, toggle, data, isLoading }) => {\r\n    const links = _.compact(_.split(data?.links, \",\"));\r\n    const attaches = _.compact(_.split(data?.attaches, \",\"));\r\n    const { width: deviceWidth } = useWindowSize();\r\n\r\n    const content = () => {\r\n        return (\r\n            <div className=\"sp1-subtask-form --modal-panel --modal-submitted\">\r\n                <div className=\"sp1-subtask-form --modal-panel-header\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <h6>Submitted Task </h6>\r\n                        {isLoading && (\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className=\"_close-modal\"\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body --modal-submitted-body\">\r\n                    <div\r\n                        className=\"mt-3 d-flex flex-column\"\r\n                        style={{ gap: \"10px\" }}\r\n                    >\r\n                        <div>\r\n                            <span\r\n                                className=\"fs-14 font-weight-bold d-block mb-3\"\r\n                                style={{ color: \"#767581\" }}\r\n                            >\r\n                                Submitted By\r\n                            </span>\r\n\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div>\r\n                                    {data?.image ? (\r\n                                        <img\r\n                                            src={`/user-uploads/avatar/${data?.image}`}\r\n                                            alt={data?.name}\r\n                                            width={32}\r\n                                            height={32}\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                    ) : (\r\n                                        <div\r\n                                            className=\"sp1-item-center rounded-circle border\"\r\n                                            style={{\r\n                                                width: \"32px\",\r\n                                                height: \"32px\",\r\n                                            }}\r\n                                        >\r\n                                            <span\r\n                                                className=\"font-weight-bold\"\r\n                                                style={{ fontSize: \"1.2rem\" }}\r\n                                            >\r\n                                                {data?.name?.slice(0, 1)}\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"d-flex flex-column px-2\">\r\n                                    <a\r\n                                        className=\"text-underline text-primary\"\r\n                                        href={`/account/employees/${data?.user_id}`}\r\n                                        style={{ color: \"#767581\" }}\r\n                                    >\r\n                                        {\" \"}\r\n                                        {data?.name}{\" \"}\r\n                                    </a>\r\n                                    <span\r\n                                        className=\"d-block\"\r\n                                        style={{ color: \"#767581\" }}\r\n                                    >\r\n                                        {dayjs(data?.submission_date).format(\r\n                                            \"MMM DD, YYYY\"\r\n                                        )}{\" \"}\r\n                                        at{\" \"}\r\n                                        {dayjs(data?.submission_date).format(\r\n                                            \"hh:mm a\"\r\n                                        )}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div\r\n                            className=\"d-flex flex-column mt-3\"\r\n                            style={{ gap: \"10px\" }}\r\n                        >\r\n                            <span\r\n                                className=\"d-block fs-14 font-weight-bold\"\r\n                                style={{ color: \"#767581\" }}\r\n                            >\r\n                                {\" \"}\r\n                                Links{\" \"}\r\n                            </span>\r\n                            <ul\r\n                                style={{\r\n                                    listStyle: \"unset\",\r\n                                    marginLeft: \"30px\",\r\n                                }}\r\n                            >\r\n                                {links?.map((link, i) => (\r\n                                    <li\r\n                                        style={{ listStyle: \"unset\" }}\r\n                                        key={link + i}\r\n                                    >\r\n                                        <a\r\n                                            className=\"hover-underline text-primary\"\r\n                                            target=\"_blank\"\r\n                                            href={link}\r\n                                        >\r\n                                            {\" \"}\r\n                                            {link}{\" \"}\r\n                                        </a>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                        {data?.screen_record_link && (\r\n                            <div\r\n                                className=\"d-flex flex-column mt-3\"\r\n                                style={{ gap: \"10px\" }}\r\n                            >\r\n                                <span\r\n                                    className=\"d-block fs-14 font-weight-bold\"\r\n                                    style={{ color: \"#767581\" }}\r\n                                >\r\n                                    {\" \"}\r\n                                    Screen Record Link{\" \"}\r\n                                </span>\r\n                                <ul\r\n                                    style={{\r\n                                        listStyle: \"unset\",\r\n                                        marginLeft: \"30px\",\r\n                                    }}\r\n                                >\r\n                                    <li style={{ listStyle: \"unset\" }}>\r\n                                        <a\r\n                                            className=\"hover-underline text-primary\"\r\n                                            target=\"_blank\"\r\n                                            href={data?.screen_record_link}\r\n                                        >\r\n                                            {\" \"}\r\n                                            {data?.screen_record_link}{\" \"}\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"mt-2 mt-3\">\r\n                            <span\r\n                                className=\"d-block fs-12 font-weight-bold mb-2\"\r\n                                style={{ color: \"#767581\" }}\r\n                            >\r\n                                Description\r\n                            </span>\r\n                            {data?.text ? (\r\n                                <div\r\n                                    className=\"sp1_ck_content\"\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: data?.text,\r\n                                    }}\r\n                                />\r\n                            ) : (\r\n                                <span style={{ color: \"rgb(180, 188, 196)\" }}>\r\n                                    No description is available\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-3\">\r\n                            <span\r\n                                className=\"d-block fs-12 font-weight-bold mb-2\"\r\n                                style={{ color: \"#767581\" }}\r\n                            >\r\n                                Attached Files\r\n                            </span>\r\n\r\n                            {_.size(attaches) > 0 ? (\r\n                                <FileUploader>\r\n                                    {_.map(attaches, (file, index) => (\r\n                                        <FileUploader.Preview\r\n                                            key={`${file}_${index}`}\r\n                                            fileName={file}\r\n                                            downloadAble={true}\r\n                                            deleteAble={false}\r\n                                            downloadUrl={`${file}`}\r\n                                            previewUrl={`${file}`}\r\n                                            fileType={\r\n                                                _.includes(\r\n                                                    [\r\n                                                        \"png\",\r\n                                                        \"jpg\",\r\n                                                        \"jpeg\",\r\n                                                        \"gif\",\r\n                                                        \"svg\",\r\n                                                    ],\r\n                                                    _.last(_.split(file, \".\"))\r\n                                                )\r\n                                                    ? \"images\"\r\n                                                    : \"others\"\r\n                                            }\r\n                                            ext=\"\"\r\n                                        />\r\n                                    ))}\r\n                                </FileUploader>\r\n                            ) : (\r\n                                <span\r\n                                    className=\"\"\r\n                                    style={{ color: \"rgb(180, 188, 196)\" }}\r\n                                >\r\n                                    No Attachment is available\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    if (deviceWidth > 1200) {\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        );\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <Modal isOpen={isOpen}> {content()} </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SubmitionView;\r\n","import React from 'react'\r\nimport SubmitionView from './SubmitionView';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nconst WorkItem = ({data, toggle, modalRef, close, isLoading}) => { \r\n  const [searchParams] = useSearchParams();\r\n  const previewId = searchParams.get('submitted-work') || 0;\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\">\r\n        <div> \r\n            <a className='hover-underline text-primary' href={`/account/tasks/${data?.task_id}`}> Task#{data?.task_id} </a>\r\n            ({data?.submission_no}) submitted by <a className='hover-underline text-primary' href={`/account/employees/${data?.user_id}`}>{data?.name}</a> </div>\r\n\r\n        <div>{dayjs(data?.submission_date).format('MMM DD, YYYY')}</div>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?submitted-work=${data?.task_id}${data?.submission_no}`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n        </div> \r\n\r\n       {\r\n        Number(previewId) === Number(`${data?.task_id}${data?.submission_no}`) && \r\n        <SubmitionView\r\n            isOpen={Number(previewId) === Number(`${data?.task_id}${data?.submission_no}`)}\r\n            toggle={modalRef}\r\n            data={data}\r\n            close={close}\r\n            isLoading={isLoading}\r\n        />\r\n       } \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default WorkItem","import React from 'react'\r\nimport { User } from '../../../utils/user-details'\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nconst InnerWorkItem = ({data}) => { \r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item px-0 py-2\" styte={{gap: \"16px\"}}>\r\n        <div> \r\n            <a \r\n              className='hover-underline text-primary' \r\n              href={`/account/tasks/${data?.task_id}`}\r\n            > \r\n              Task#{data?.task_id} \r\n            </a>\r\n            ({data?.submission_no}) submitted by <a className='hover-underline text-primary' href={`/account/employees/${data?.user_id}`}>{data?.name}</a> </div>\r\n\r\n        <div>{dayjs(data?.submission_date).format('MMM DD, YYYY')}</div>  \r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?submitted-work=${data?.task_id}${data?.submission_no}`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n        </div> \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default InnerWorkItem","import React from 'react'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport Button from '../../components/Button'\r\nimport InnerWorkItem from './InnerWorkItem'\r\nimport Modal from '../../components/Modal'\r\nimport { useWindowSize } from 'react-use'\r\n\r\nconst SubmittedModalView = ({\r\n    isOpen, \r\n    toggle,\r\n    data,\r\n    close,\r\n    isLoading\r\n}) => {\r\n  const { width: deviceWidth } = useWindowSize();\r\n \r\n  const content = () => {\r\n        return(\r\n            <div className='sp1-subtask-form --modal-panel --modal-submitted'>\r\n                <div className='sp1-subtask-form --modal-panel-header'> \r\n                    <div className='d-flex align-items-center'>\r\n                        <h6>Submitted Task </h6>\r\n                        {isLoading && <div \r\n                            className=\"spinner-border text-dark ml-2\" \r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent' \r\n                            }}\r\n                        />}\r\n                    </div> \r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button> \r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body px-0\">\r\n                    {data?.map(d => (\r\n                        <InnerWorkItem key={`${d.task_id}_${d.submission_no}`} data={d} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n  }\r\n\r\n\r\n  return (\r\n        deviceWidth > 1200 ? \r\n        <React.Fragment>\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle} > {content()} </CustomModal>\r\n        </React.Fragment> : \r\n        <React.Fragment>\r\n            <Modal isOpen={isOpen}> { content() } </Modal> \r\n        </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SubmittedModalView","import * as React from 'react' \r\nimport WorkItem from './WorkItem';\r\nimport useSWR from 'swr';\r\nimport SubmitionView from './SubmitionView';\r\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport SubmittedModalView from './SubmittedModalView';\r\nimport _ from 'lodash';\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst SubmittedWork = ({task}) => { \r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const navigate = useNavigate(); \r\n  const location = useLocation();\r\n  const { data, error, isLoading } = useSWR(`/account/tasks/get-task-submissions/${task?.id}`, fetcher, {refreshInterval: 1000 * 3600});\r\n  const [searchParams] = useSearchParams();\r\n  const preview = searchParams.get('submitted-work');\r\n  const modal = searchParams.get('view-modal')\r\n    // control modal\r\n  const toggle = (e) => {\r\n    e.preventDefault();\r\n    if(preview || modal){\r\n      if(location.state && location.state.from){\r\n        navigate(location.state.from);\r\n      }else{navigate(`/account/tasks/${task?.id}`);} \r\n    }else{\r\n      navigate(`/account/tasks/${task?.id}?view-modal=submitted-work`) \r\n    }\r\n  };\r\n  const close = () => { \r\n    if(location.state && location.state.from){\r\n      navigate(location.state.from);\r\n    }else{navigate(`/account/tasks/${task?.id}`);} \r\n  }\r\n \r\n  return (\r\n    <div className='sp1_task_right_card mb-3'  \r\n    ref={setModalRefButton} \r\n    style={{zIndex:  (preview || modal === 'submitted-work') ? 99 : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Submitted Works</span> \r\n          {isLoading && \r\n            <div \r\n                className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                role=\"status\"\r\n                style={{\r\n                    width: '16px',\r\n                    height: '16px',\r\n                    border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                    borderRightColor: 'transparent' \r\n                }}\r\n            />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n       {\r\n        _.size(data) > 0 &&\r\n        <button \r\n            aria-label='openCommentModalButton'\r\n            className='sp1_task_right_dl_toggle'\r\n            onClick={toggle}\r\n            style={{zIndex:  (preview || modal === 'submitted-work') ? '110' : ''}}\r\n          >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ (preview || modal === 'submitted-work') ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>\r\n       } \r\n\r\n        <SubmittedModalView\r\n            isOpen={modal === 'submitted-work'}\r\n            toggle={modalRefButton}\r\n            data={_.orderBy(data, ['task_id', 'submission_no'], ['desc', 'desc'])}\r\n            close={close}\r\n            isLoading={isLoading}\r\n        />\r\n\r\n        {/* side drop toggle button end */} \r\n        <div className=\"sp1_task_right_card--body\"> \r\n        {\r\n          _.size(data) > 0 ? \r\n            _.map(_.orderBy(data, ['task_id', 'submission_no'], ['desc', 'desc']), item => (\r\n              <WorkItem \r\n                key={item?.submission_date + item?.submission_no} \r\n                data={item} \r\n                toggle={toggle} \r\n                close={close}\r\n                isLoading={isLoading}\r\n                modalRef={modalRefButton} \r\n              />\r\n            )):\r\n            <div\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{\r\n                    color: \"#B4BCC4\",\r\n                    fontSize: \"15px\",\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                No Submitted Work is Available\r\n            </div>\r\n        }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubmittedWork ","/* eslint-disable react/prop-types */\r\nimport { useState } from \"react\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport { convertTime } from \"../../../utils/converTime\";\r\nimport { Placeholder } from \"../../../global/Placeholder\";\r\nimport Checkbox from \"../../../UI/form/Cheeckbox\";\r\nimport { useSubmitDailySubmissionMutation } from \"../../../services/api/dailySubmissionApiSlice\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst TodaysUpdateModalTableRow = ({ data, date, index, open, setOpen, loading, refetch }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [attachmentLink, setAttachmentLink] = useState('');\r\n    const [checked, setChecked] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const [taskDescription, setTaskDescription] = useState('');\r\n    const [updatedValue,] = useState(null);\r\n    const [completedSection, setCompletedSection] = useState('');\r\n    const [submitDailySubmission, { isLoading: isSubmitting }] = useSubmitDailySubmissionMutation();\r\n    \r\n\r\n    // error state\r\n    const [attachmentLinkError, setAttachmentLinkError] = useState('');\r\n    const [taskDescriptionError, setTaskDescriptionError] = useState('');\r\n    const [completedSectionError, setCompletedSectionError] = useState('')\r\n\r\n    // check validation of attachmentLink and taskDescription\r\n    const isValid = () => {\r\n        let valid = true;\r\n        if (attachmentLink === '') {\r\n            setAttachmentLinkError('You must provide the link of your work');\r\n            valid = false;\r\n        }\r\n        if (taskDescription === '') {\r\n            setTaskDescriptionError(\"Please describe what you've done !\");\r\n            valid = false;\r\n        }\r\n        if (completedSection === '') {\r\n            setCompletedSectionError(\"You must provide at least one section name that you have completed\");\r\n            valid = false;\r\n        }\r\n        return valid;\r\n    }\r\n\r\n\r\n    // daily update submission function\r\n    const handleSubmit = () => {\r\n        if (!isValid()) {\r\n            return;\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('task_id', data.id);\r\n        formData.append('user_id', window.Laravel?.user?.id)\r\n        formData.append('project_id', data.projectId);\r\n        formData.append('task_heading', data.task_title);\r\n        formData.append('client_id', data.clientId);\r\n        formData.append('client_name', data.client_name);\r\n        formData.append('hours_spent', data.total_time_spent);\r\n        formData.append('link_name', attachmentLink);\r\n        formData.append('section_name', completedSection);\r\n        formData.append('comment', taskDescription);\r\n        formData.append('mark_as_complete', checked);\r\n        formData.append('report_date', date);\r\n        const _token = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\");\r\n        formData.append(\"_token\", _token);\r\n        files.forEach((file) => formData.append('file[]', file))\r\n\r\n\r\n        submitDailySubmission(formData)\r\n            .unwrap()\r\n            .then(res => {\r\n                // console.log(res);\r\n                if (res.mark_as_complete===\"true\" || res.mark_as_complete===true) {\r\n                    navigate(`${location.pathname}?modal=complete-task`);\r\n                }\r\n                const Toast = Swal.mixin({\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n                })\r\n\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'Submitted successfully'\r\n                })\r\n                setOpen(null);\r\n                refetch();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <tr\r\n                className={`sp1_tlr_tr ${open === index && 'openRow_bg'}`}\r\n                // style={{\r\n                //     backgroundColor: `${data.daily_submission_status ? 'lightgreen' : 'white'}`\r\n                // }}\r\n            >\r\n\r\n                <td className={`sp1_tlr_td`} style={{ minWidth: '50px' }}>{loading ? <Placeholder /> : index + 1}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : data?.task_title}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : \r\n                    data?.page_url ?\r\n                        <a href={data.page_url} title={data.page_url} target=\"_blank\">View Link</a>\r\n                        :\r\n                        'No Link attached'\r\n                }</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : convertTime(data.total_time_spent)}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : (data?.client_name ?? 'N/A')}</td>\r\n                <td className={`sp1_tlr_td`}>\r\n                    {\r\n                        loading ?\r\n                            <Placeholder />\r\n                            :\r\n                            <button\r\n                                onClick={() => {\r\n                                    if (data.daily_submission_status) {\r\n                                        return;\r\n                                    }\r\n                                    setOpen((prev) => {\r\n                                        if (prev === index) {\r\n                                            return null;\r\n                                        } else {\r\n                                            return index;\r\n                                        }\r\n                                    })\r\n                                }\r\n                                }\r\n                                className={`btn btn-sm ${data.daily_submission_status ? 'btn-success' : 'btn-outline-success'}`}\r\n                            >\r\n                                {\r\n                                    data.daily_submission_status ? 'Submitted' : 'Click To Submit'\r\n                                }\r\n                            </button>\r\n                    }\r\n                </td>\r\n            </tr>\r\n            {open === index && (\r\n                <tr className={``} style={{ border: \"solid gray 1px\", borderTop: \"none\" }}>\r\n                    <td colSpan={6}>\r\n                        <form className=\"from_body openRow_bg\">\r\n\r\n                            {/* completed section names */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionName\">\r\n                                    Completed Section Name <sup>*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Sections Name\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <input\r\n                                    value={completedSection}\r\n                                    type=\"text\"\r\n                                    id=\"sectionName\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        margin: '2px 0',\r\n                                        borderRadius: '3px',\r\n                                        border: 'none',\r\n                                        fontSize: '1.2rem',\r\n                                        padding: '10px',\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    onChange={(e) => setCompletedSection(e.target.value)}\r\n                                />\r\n                                {completedSectionError && <small className=\"form-text text-danger\">{completedSectionError}</small>}\r\n                            </div>\r\n\r\n                            {/* attachment url link */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionName\">\r\n                                    Screenshots/Screen records of the sections <sup>*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Sections Name\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <input\r\n                                    value={attachmentLink}\r\n                                    type=\"text\"\r\n                                    id=\"sectionName\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        margin: '2px 0',\r\n                                        borderRadius: '3px',\r\n                                        border: 'none',\r\n                                        fontSize: '1.2rem',\r\n                                        padding: '10px',\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    onChange={(e) => setAttachmentLink(e.target.value)}\r\n                                />\r\n                                {attachmentLinkError && <small className=\"form-text text-danger\">{attachmentLinkError}</small>}\r\n                            </div>\r\n\r\n                            {/* upload files */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput1\">\r\n                                    Attachments\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Attachment\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <FileUploader files={files} setFiles={setFiles}>\r\n                                    <FileUploader.Input />\r\n                                    <FileUploader.SelectedFiles>\r\n                                        {({ previews, onDelete }) =>\r\n                                            Array.from(previews)?.map(\r\n                                                (p, i) => (\r\n                                                    <FileUploader.Preview\r\n                                                        key={i}\r\n                                                        id={i}\r\n                                                        fileName={p.name}\r\n                                                        previewUrl={p.preview}\r\n                                                        fileType={p.type}\r\n                                                        onRemove={onDelete}\r\n                                                    />\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </FileUploader.SelectedFiles>\r\n                                </FileUploader>\r\n                            </div>\r\n                            {/* End Upload files */}\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput2\" style={{ maxWidth: '95%' }}>\r\n                                    Describe which sections you have worked on today <sup className=\"text-danger\">*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Describe What You've Done\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n\r\n                                <div\r\n                                    className=\"sp1_st_write_comment_editor\"\r\n                                    style={{ minHeight: \"100px\" }}\r\n                                >\r\n                                    <CKEditorComponent\r\n                                        value={taskDescription}\r\n                                        onChange={(e, editor) => {\r\n                                            const data = editor.getData();\r\n                                            setTaskDescription(data);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {taskDescriptionError && <small className=\"form-text text-danger\">{taskDescriptionError}</small>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <Checkbox checked={checked} onChange={(e) => setChecked(e.target.checked)} label={'Mark as Complete'} className=\"user-select-none\" />\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 d-flex align-items-center\" style={{ gap: '5px' }}>\r\n                                <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" />\r\n                                {/* <SubmitButton onClick={()=>{}} isLoading={false} title=\"Submit & Mark as Complete\"></SubmitButton> */}\r\n                            </div>\r\n                        </form>\r\n                    </td>\r\n                </tr>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodaysUpdateModalTableRow;\r\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./DailySubmission.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./DataTable.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { useState } from \"react\";\r\nimport TodaysUpdateModalTableRow from \"./TodaysUpdateModalTableRow\";\r\nimport style from \"./styles/DailySubmission.module.css\";\r\nimport \"./styles/DataTable.css\";\r\nimport { useGetDailySubmissionQuery } from \"../../../services/api/dailySubmissionApiSlice\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst TodaysUpdateModalTable = () => {\r\n    const [open, setOpen] = useState(null);\r\n    const [searchParams] = useSearchParams();\r\n    const date_type = searchParams.get(\"data_type\");\r\n\r\n    const loggedUser = new User(window.Laravel?.user);\r\n\r\n    const today = dayjs().format('YYYY-MM-DD');\r\n\r\n    const { data, isLoading, refetch } = useGetDailySubmissionQuery(\r\n        `${loggedUser?.id}?date_type=${today}`\r\n    ); \r\n     \r\n\r\n    return (\r\n        <div className={`sp1_tlr_tbl_wrapper`} style={{ overflow: \"auto\" }}>\r\n            <table className={`sp1_tlr_table`} style={{ minWidth: \"0\" }}>\r\n                <thead>\r\n                    <tr className={``}>\r\n                        <th className={`sp1_tlr_th`}>SL No.</th>\r\n                        <th className={`sp1_tlr_th`}>Task Name</th>\r\n                        <th className={`sp1_tlr_th`}>Page Link</th>\r\n                        <th className={`sp1_tlr_th`}>\r\n                            Total Time Spend on This Task Today\r\n                        </th>\r\n                        <th className={`sp1_tlr_th`}>Client Name</th>\r\n                        <th className={`sp1_tlr_th`} style={{ width: \"10rem\" }}>\r\n                            Action\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody className={`sp1_tlr_tbody`}>\r\n                    {/* {\r\n                        (isLoading ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] : data?.data).filter((d) => !d.daily_submission_status).map((d, i) => <TodaysUpdateModalTableRow data={d} key={i} index={i} open={open} setOpen={setOpen} loading={isLoading} />)\r\n                    } */}\r\n                    {(isLoading\r\n                        ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n                        : data?.data\r\n                    ).map((d, i) => (\r\n                        <TodaysUpdateModalTableRow\r\n                            data={d}\r\n                            date={data?.date}\r\n                            key={i}\r\n                            index={i}\r\n                            open={open}\r\n                            setOpen={setOpen}\r\n                            loading={isLoading}\r\n                            refetch={refetch}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodaysUpdateModalTable;\r\n","import { useState } from \"react\";\r\n// import { Button } from \"react-bootstrap\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport TodaysUpdateModalTable from \"../daily-submission/TodaysUpdateModalTable\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\"; \r\nimport dayjs from \"dayjs\";\r\n\r\nconst DailySubmissionControl = () => {\r\n    const [todaysUpdateModalisOpen, setTodaysUpdateModalisOpen] =\r\n        useState(false);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const url = new URLSearchParams(location.search);\r\n \r\n\r\n    const isOpen = url.get(\"modal\") === \"daily-submission\"; \r\n\r\n\r\n     \r\n\r\n    // console.log(location);\r\n\r\n    const close = () => {\r\n        if(url.get('trigger') === 'stop-button'){\r\n            Swal.fire({\r\n                icon: \"warning\",\r\n                title: \"If you don't submit the daily submission, you won't be able to start any task on next day.\",\r\n                showConfirmButton: true,\r\n            });\r\n        }\r\n\r\n        navigate(`${location.pathname}`);\r\n        setTodaysUpdateModalisOpen(false);\r\n    };\r\n    const open = () => navigate(`${location.pathname}?modal=daily-submission&data_type=today`);\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                // onClick={toggle}\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {/* {isFetching ? <Loader title=\"Processing...\" /> : <i className=\"fa-solid fa-check\" />} */}\r\n                <span className=\"d-inline ml-1\"> Submit Today's Update </span>\r\n            </Button>\r\n\r\n            <Modal isOpen={isOpen} className=\"sp1_mark-as--modal \">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_mark-as--modal-panel\"\r\n                        style={{ overflow: \"visible\", maxWidth: \"70rem\" }}\r\n                    >\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0\">Submit Today's Update</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"visible\" }}\r\n                        >\r\n                            <div className=\"alert alert-warning text-center\">\r\n                                If you don't submit the daily submission, you\r\n                                won't be able to start any task on next day.\r\n                            </div>\r\n\r\n                            {isOpen && <TodaysUpdateModalTable />}\r\n                            <div className=\"mt-3 d-flex align-items-center\">\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                    onClick={close}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                                {/* <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" /> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DailySubmissionControl;\r\n","import _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport CKEditorComponent from \"../../../ckeditor/index\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport {\r\n    useLazyCheckSubTaskStateQuery,\r\n    useMarkAsCompleteMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport Button from \"../../components/Button\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Modal from \"../../components/Modal\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\n\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst MarkAsComplete = ({ task, auth }) => {\r\n    // screen record url for trainee\r\n    const [screenRecordUrl, setScreenRecordUrl] = useState(\"\");\r\n    const [screenRecordUrlErr, setScreenRecordUrlErr] = useState(\"\");\r\n    // form data\r\n    const dispatch = useDispatch();\r\n    const [links, setLinks] = useState([\"\"]);\r\n    const [linkErr, setLinkErr] = useState(\"\");\r\n    const [isModalUrl, setIsModalUrl] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentErr, setCommentErr] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [markAsComplete, { isLoading: isSubmitting }] =\r\n        useMarkAsCompleteMutation();\r\n    const [checkSubTaskState, { isFetching }] = useLazyCheckSubTaskStateQuery();\r\n\r\n    const [markAsCompleteModaIsOpen, setMarkAsCompleteModalIsOpen] =\r\n        useState(false);\r\n\r\n    // open modal\r\n    const open = () => {\r\n        navigate(`${location.pathname}?modal=complete-task`);\r\n    };\r\n\r\n    // close modal\r\n    const close = () => {\r\n        navigate(`${location.pathname}`);\r\n    };\r\n\r\n    // const [err, setErr] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const url = new URLSearchParams(location.search);\r\n        if (url.get(\"modal\") === \"complete-task\") {\r\n            setIsModalUrl(true);\r\n        } else {\r\n            setIsModalUrl(false);\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        // const url = new URLSearchParams(location.search);\r\n\r\n        // if (url.get('modal')==='complete-task') {\r\n        if (isModalUrl) {\r\n            if (Number(auth.getRoleId()) === 6) {\r\n                checkSubTaskState(task?.id)\r\n                    .unwrap()\r\n                    .then((res) => {\r\n                        if (res.status === \"true\" || res.status === true) {\r\n                            Swal.fire({\r\n                                icon: \"warning\",\r\n                                title: `You can't complete this task because you\r\n                                have some pending subtask?`,\r\n                            });\r\n                            close();\r\n                        } else {\r\n                            setMarkAsCompleteModalIsOpen(true);\r\n                        }\r\n                    });\r\n            } else {\r\n                setMarkAsCompleteModalIsOpen(true);\r\n            }\r\n        } else {\r\n            setMarkAsCompleteModalIsOpen(false);\r\n        }\r\n    }, [isModalUrl]);\r\n\r\n    // handle editor change\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // handle remove link\r\n    const handleRemoveLink = (e, index) => {\r\n        const _links = [...links];\r\n        _links.splice(index, 1);\r\n        setLinks(_links);\r\n    };\r\n\r\n    // handle link change\r\n    const handleOnLinkInputChange = (e, index) => {\r\n        const _links = [...links];\r\n        (_links[index] = e.target.value), setLinks(_links);\r\n    };\r\n    // handle screenRecord link change\r\n    const handleOnScreenRecordLinkInputChange = (e) => {\r\n        setScreenRecordUrl(e.target.value);\r\n    };\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n        let valid = true;\r\n        if (!_.size(links) || links[0] === \"\") {\r\n            setLinkErr(\"You must provide at least one link to your work\");\r\n            toast.warn(\"You must provide at least one link to your work\");\r\n            valid = false;\r\n        }\r\n\r\n        if (_.size(links)) {\r\n            _.forEach(links, (link) => {\r\n                if (!checkIsURL(link)) {\r\n                    toast.warn(\"Please provide a valid url\");\r\n                    setLinkErr(\"Please provide a valid url\");\r\n                    valid = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (comment === \"\") {\r\n            setCommentErr(\"Please describe what you've done !\");\r\n            toast.warn(\"Please describe what you've done!\");\r\n            valid = false;\r\n        }\r\n        if (auth.roleId === 14 && !checkIsURL(screenRecordUrl)) {\r\n            toast.warn(\"Please provide a valid url\");\r\n            setScreenRecordUrlErr(\"Please provide a valid url\");\r\n            valid = false;\r\n        }\r\n\r\n        return valid;\r\n    };\r\n\r\n    // handle submit\r\n    const handleSubmit = (e) => {\r\n        const formData = new FormData();\r\n        formData.append(\"text\", comment);\r\n        formData.append(\"user_id\", auth?.getId());\r\n        formData.append(\"task_id\", task?.id);\r\n        formData.append(\"screen_record_link\", screenRecordUrl);\r\n        links.map((link) => formData.append(\"link[]\", link));\r\n        files?.map((file) => formData.append(\"file[]\", file));\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n\r\n        if (isValid()) {\r\n            markAsComplete(formData)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: \"top-end\",\r\n                        showConfirmButton: false,\r\n                        timer: 3000,\r\n                        timerProgressBar: true,\r\n                    });\r\n\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: \"Task submitted successfully\",\r\n                    });\r\n                    close();\r\n                })\r\n                .catch((err) => {\r\n                    close();\r\n                    console.log(err);\r\n                })\r\n                .finally(() => {\r\n                    close();\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {isFetching ? (\r\n                    <Loader title=\"Processing...\" />\r\n                ) : (\r\n                    <i className=\"fa-solid fa-check\" />\r\n                )}\r\n                <span className=\"d-inline ml-1\">\r\n                    {\" \"}\r\n                    {isFetching ? \"\" : \"Mark As Complete\"}\r\n                </span>\r\n            </Button>\r\n\r\n            <Modal\r\n                isOpen={markAsCompleteModaIsOpen}\r\n                className=\"sp1_mark-as--modal\"\r\n            >\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div className=\"sp1_mark-as--modal-panel\">\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0\">Submit Task</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"unset\" }}\r\n                        >\r\n                            <form>\r\n                                {/* //multiple link */}\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlInput1\">\r\n                                        Submit Links What You've Done\r\n                                        <sup>*</sup>\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Submit Links What You've Done\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n                                    {links?.map((link, i) => (\r\n                                        <div\r\n                                            key={i}\r\n                                            className=\"mark-as-compeleted-link mb-2\"\r\n                                        >\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control py-2\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                placeholder=\"--\"\r\n                                                value={link}\r\n                                                onChange={(e) =>\r\n                                                    handleOnLinkInputChange(\r\n                                                        e,\r\n                                                        i\r\n                                                    )\r\n                                                }\r\n                                            />\r\n\r\n                                            {links?.length > 1 && (\r\n                                                <button\r\n                                                    onClick={(e) =>\r\n                                                        handleRemoveLink(e, i)\r\n                                                    }\r\n                                                >\r\n                                                    <i className=\"fa-regular fa-trash-can\"></i>\r\n                                                </button>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n\r\n                                    {linkErr && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            class=\"form-text text-danger\"\r\n                                        >\r\n                                            {linkErr}\r\n                                        </small>\r\n                                    )}\r\n\r\n                                    <button\r\n                                        className=\"mt-2 d-flex align-items-center bg-transparent\"\r\n                                        style={{ gap: \"10px\" }}\r\n                                        onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            setLinks((prev) => [...prev, \"\"]);\r\n                                        }}\r\n                                    >\r\n                                        <i className=\"fa-solid fa-circle-plus\" />\r\n                                        Add Another Link\r\n                                    </button>\r\n                                </div>\r\n\r\n                                {/* single link for screen recording in case of trainee , role id===14 */}\r\n                                {_.includes(\r\n                                    [14, 15, 16, 17],\r\n                                    Number(auth.roleId)\r\n                                ) && (\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">\r\n                                            Screen recording of the last work\r\n                                            done\r\n                                            <sup>*</sup>\r\n                                            <span\r\n                                                className=\"ml-2\"\r\n                                                data-toggle=\"tooltip\"\r\n                                                data-placement=\"top\"\r\n                                                title=\"Submit Screen recording of the last work done\"\r\n                                                data-boundary=\"window\"\r\n                                                style={{ cursor: \"pointer\" }}\r\n                                            >\r\n                                                <i className=\"fa-regular fa-circle-question\" />\r\n                                            </span>\r\n                                        </label>\r\n\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control py-2\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"--\"\r\n                                            value={screenRecordUrl}\r\n                                            onChange={(e) =>\r\n                                                handleOnScreenRecordLinkInputChange(\r\n                                                    e\r\n                                                )\r\n                                            }\r\n                                        />\r\n\r\n                                        {screenRecordUrlErr && (\r\n                                            <small\r\n                                                id=\"emailHelp\"\r\n                                                class=\"form-text text-danger\"\r\n                                            >\r\n                                                {screenRecordUrlErr}\r\n                                            </small>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {/* upload files */}\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlInput1\">\r\n                                        Attachments\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Attachment\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n                                    <FileUploader\r\n                                        files={files}\r\n                                        setFiles={setFiles}\r\n                                    >\r\n                                        <FileUploader.Input />\r\n                                        <FileUploader.SelectedFiles>\r\n                                            {({ previews, onDelete }) =>\r\n                                                Array.from(previews)?.map(\r\n                                                    (p, i) => (\r\n                                                        <FileUploader.Preview\r\n                                                            key={i}\r\n                                                            id={i}\r\n                                                            fileName={p.name}\r\n                                                            previewUrl={\r\n                                                                p.preview\r\n                                                            }\r\n                                                            fileType={p.type}\r\n                                                            onRemove={onDelete}\r\n                                                        />\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        </FileUploader.SelectedFiles>\r\n                                    </FileUploader>\r\n                                </div>\r\n                                {/* End Upload files */}\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label\r\n                                        htmlFor=\"exampleFormControlInput1\"\r\n                                        style={{ maxWidth: \"95%\" }}\r\n                                    >\r\n                                        Mention clearly if anything asked in the\r\n                                        instruction couldn't be done or if there\r\n                                        is anything else your reporting boss\r\n                                        should know while approving or rejecting\r\n                                        this task<sup>*</sup>\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Describe What You've Done\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n\r\n                                    <div className=\"ck-editor-holder stop-timer-options\">\r\n                                        <CKEditorComponent\r\n                                            onChange={handleEditorChange}\r\n                                        />\r\n                                    </div>\r\n                                    {commentErr && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            class=\"form-text text-danger\"\r\n                                        >\r\n                                            {commentErr}\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"mt-3 d-flex align-items-center\">\r\n                                    <Button\r\n                                        variant=\"tertiary\"\r\n                                        className=\"ml-auto mr-2\"\r\n                                        onClick={close}\r\n                                    >\r\n                                        Close\r\n                                    </Button>\r\n                                    <SubmitButton\r\n                                        onClick={handleSubmit}\r\n                                        isLoading={isSubmitting}\r\n                                        title=\"Submit\"\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MarkAsComplete;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport { useRevision } from \"../../../../hooks/useRevision\";\r\nimport { useCreateRevisionMutation } from \"../../../../services/api/SingleTaskPageApi\";\r\nimport Button from \"../../../components/Button\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst RevisionCreationModal = ({ close, task, auth }) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [isDeniable, setIsDeniable] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const {\r\n        getLeadDeveloperAcknowladgementOptions,\r\n        getProjectManagerAcknowladgementOptions,\r\n    } = useRevision(task);\r\n    const { pathname } = useLocation();\r\n    const navigate = useNavigate();\r\n    // console.log({pathname});\r\n\r\n    const role = auth.getRoleId();\r\n\r\n    const revisionOptions =\r\n        role === 1 || role === 4 || role === 8\r\n            ? getProjectManagerAcknowladgementOptions()\r\n            : getLeadDeveloperAcknowladgementOptions();\r\n\r\n    const [createRevision, { isLoading }] = useCreateRevisionMutation();\r\n\r\n    // radio button change\r\n    const handleChange = (value) => {\r\n        setReason(value);\r\n    };\r\n\r\n    // editor change text\r\n    const handleEditorTextChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // validation\r\n    const validate = () => {\r\n        let errorCount = 0;\r\n\r\n        if (comment === \"\") {\r\n            errorCount++;\r\n            setCommentError(\r\n                \"You have to explain the revision in details, so that lead developer/developer can understand where they need to work.\"\r\n            );\r\n        }\r\n\r\n        if (!reason) {\r\n            errorCount++;\r\n            setReasonError(\"You have to select a reason from above options\");\r\n        }\r\n\r\n        return errorCount === 0;\r\n    };\r\n\r\n    // handle submission\r\n    const handleSubmission = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            task_id: task?.id,\r\n            user_id: auth?.id,\r\n            revision_acknowledgement: reason?.revision ?? \"\",\r\n            acknowledgement_id: reason?.id,\r\n            comment,\r\n            is_deniable: reason?.isDeniable ?? false,\r\n        };\r\n\r\n        if (validate()) {\r\n            createRevision(data)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: \"top-end\",\r\n                        showConfirmButton: false,\r\n                        timer: 3000,\r\n                        timerProgressBar: true,\r\n                    });\r\n\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: \"Task submitted for Revision successfully\",\r\n                    });\r\n                    navigate(`${pathname}`);\r\n                    close();\r\n                })\r\n                .catch((err) => console.log(err));\r\n        } else {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: \"top-end\",\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n            });\r\n\r\n            Toast.fire({\r\n                icon: \"error\",\r\n                title: \"Your forgot to fill up some required fields\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div\r\n                className=\"sp1_single_task--modal-panel\"\r\n                style={{ maxWidth: \"550px\" }}\r\n            >\r\n                <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                    <div className=\"font-weight-bold f-14\">\r\n                        Revision - Task: {task?.id}#\r\n                        {task?.title || task?.heading}\r\n                    </div>\r\n                    <Button onClick={close} className=\"\">\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <form className=\"px-3\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select Reason for Revision\r\n                            <sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {revisionOptions.map((option) => (\r\n                                <div\r\n                                    key={option.id}\r\n                                    className=\"form-check d-flex align-items-start mb-2\"\r\n                                >\r\n                                    <input\r\n                                        className=\"form-check-input mr-2\"\r\n                                        type=\"radio\"\r\n                                        name=\"exampleRadios\"\r\n                                        id={option.id}\r\n                                        required={true}\r\n                                        onChange={() => handleChange(option)}\r\n                                        value={option.revision}\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            marginTop: \"3px\",\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor={option.id}\r\n                                        style={{ marginBottom: \"3px\" }}\r\n                                    >\r\n                                        {option.revision}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {reasonError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {reasonError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Explain or Comment<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"ck-editor-holder\">\r\n                            <CKEditorComponent\r\n                                onChange={handleEditorTextChange}\r\n                            />\r\n                        </div>\r\n                        {commentError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {commentError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                onClick={close}\r\n                                variant=\"tertiary\"\r\n                                className=\"ml-auto mr-2\"\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                            <SubmitButton\r\n                                title=\"Submit\"\r\n                                onClick={handleSubmission}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RevisionCreationModal;\r\n","import React, { useState, lazy, Suspense } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport { SingleTask } from \"../../../../utils/single-task\";\r\nimport RevisionCreationModal from \"./RevisionCreationModal\";\r\n\r\nconst RevisionControl = ({ task, auth }) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    // const singleTask = new SingleTask(task)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={() => setRevisionModal(true)}\r\n                className=\"d-flex align-items-center sp1-st-revision-btn sp1-st-revision-btn\"\r\n            >\r\n                <i className=\"fa-solid fa-plus-minus\" />\r\n                <span className=\"d-inline ml-1\">Need Revision</span>\r\n            </Button>\r\n\r\n            <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <RevisionCreationModal\r\n                        auth={auth}\r\n                        task={task}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                </div>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RevisionControl;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport Button from \"../../../components/Button\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\n// button\r\nexport const AcceptAndContinueButton = ({ isLoading, onClick }) => {\r\n    if (!isLoading) {\r\n        return <Button onClick={onClick}>Accept & Continue</Button>;\r\n    } else {\r\n        <React.Fragment>\r\n            <Button className=\"cursor-processing\">\r\n                <div\r\n                    className=\"spinner-border text-white\"\r\n                    role=\"status\"\r\n                    style={{\r\n                        width: \"18px\",\r\n                        height: \"18px\",\r\n                    }}\r\n                />{\" \"}\r\n                Processing...\r\n            </Button>\r\n        </React.Fragment>;\r\n    }\r\n};\r\n\r\n// component\r\nexport const RevisionAcceptAndContinue = ({\r\n    task,\r\n    revision,\r\n    onSubmit,\r\n    close,\r\n    onNext,\r\n    isSubmitting = false,\r\n}) => {\r\n    const [comment, setComment] = useState(\"\");\r\n    const [err, setErr] = useState(\"\");\r\n\r\n    const handleEditorDataChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n        if(comment !== ''){\r\n            onSubmit({comment});\r\n        }else{\r\n            setErr(\"You have to Explain Why & How Did This Happen!\")\r\n        }\r\n    }\r\n\r\n    const auth = window?.Laravel?.user;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form action=\"\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Please Explain Why & How Did This Happen?{\" \"}\r\n                        <sup className=\"f-16 text-red\">*</sup>\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent onChange={handleEditorDataChange} />\r\n                    </div>\r\n                    {err && <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                        {err}\r\n                    </small>}\r\n\r\n                    <div className=\"mt-3 d-flex align-items-center\">\r\n                        <Button\r\n                            onClick={close}\r\n                            variant=\"tertiary\"\r\n                            className=\"ml-auto mr-2\"\r\n                        >\r\n                            Back\r\n                        </Button>\r\n\r\n                        {!isSubmitting ? (\r\n                            <React.Fragment>\r\n                                {_.includes([4, 6], auth?.role_id) ? (\r\n                                    <Button onClick={handleOnSubmit}>Next</Button>\r\n                                ): \r\n                                    <SubmitButton\r\n                                        title=\"Submit\" \r\n                                        isLoading={isSubmitting}\r\n                                        onClick={handleOnSubmit}\r\n                                    />\r\n                                }\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Button className=\"cursor-processing\">\r\n                                    <div\r\n                                        className=\"spinner-border text-white\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"18px\",\r\n                                            height: \"18px\",\r\n                                        }}\r\n                                    />{\" \"}\r\n                                    Processing...\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport { AcceptAndContinueButton } from \"./RevisionAcceptAndContinue\";\r\nimport { Placeholder } from \"../../../../global/Placeholder\";\r\nimport { User } from \"../../../../utils/user-details\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\nconst RevisionView = ({\r\n    revision,\r\n    isLoading,\r\n    onAccept,\r\n    onDeny,\r\n    onContinue,\r\n    isContinue,\r\n}) => {\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n    // const getComment = () => {\r\n    //     if (\r\n    //         auth?.isHasRolePermission(6) ||\r\n    //         auth?.isHasRolePermission(13) ||\r\n    //         auth?.isHasRolePermission(9) ||\r\n    //         auth?.isHasRolePermission(10)\r\n    //     ) {\r\n    //         return revision?.pm_comment;\r\n    //     } else {\r\n    //         return revision?.lead_comment;\r\n    //     }\r\n    // };\r\n\r\n    //new logic\r\n\r\n    const getComment = () => {\r\n        if (auth?.isHasRolePermission(6) || auth?.isHasRolePermission(13)) {\r\n            return revision?.pm_comment;\r\n        } else if (\r\n            auth?.isHasRolePermission(9) ||\r\n            auth?.isHasRolePermission(10) ||\r\n            auth?.isHasRolePermission(14) ||\r\n            auth?.isHasRolePermission(5)\r\n        ) {\r\n            if (\r\n                revision?.revision_status === \"Project Manager Revision\" ||\r\n                revision?.revision_status === \"Client Has Revision\"\r\n            ) {\r\n                return revision?.pm_comment;\r\n            } else {\r\n                return revision?.lead_comment;\r\n            }\r\n        } else {\r\n            return revision?.pm_comment;\r\n        }\r\n    };\r\n\r\n    const comment = getComment();\r\n    if (isLoading) {\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <div>\r\n                        <Placeholder width=\"450px\" className=\"mb-2\" />\r\n                        <Placeholder width=\"100px\" className=\"mb-3\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"st_revision_comment mb-4\">\r\n                    {isLoading && (\r\n                        <div>\r\n                            <Placeholder width=\"100%\" className=\"mb-2\" />\r\n                            <Placeholder width=\"100%\" className=\"mb-2\" />\r\n                            <Placeholder width=\"30%\" className=\"mb-2\" />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    } else if (!comment && !isLoading) {\r\n        return null;\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                {revision?.revision_acknowledgement && (\r\n                    <div>\r\n                        {!isLoading ? (\r\n                            <p>\r\n                                <span className=\"font-weight-bold text-danger f-16\">\r\n                                    Reason:{\" \"}\r\n                                </span>\r\n                                {revision?.revision_acknowledgement ??\r\n                                    revision?.revision_reason}\r\n                            </p>\r\n                        ) : (\r\n                            <div>\r\n                                <Placeholder width=\"450px\" className=\"mb-2\" />\r\n                                <Placeholder width=\"100px\" className=\"mb-3\" />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"st_revision_comment\">\r\n                    {!isLoading && (\r\n                        <div\r\n                            className=\"sp1_ck_content\"\r\n                            dangerouslySetInnerHTML={{ __html: comment }}\r\n                        />\r\n                    )}\r\n\r\n                    {isLoading && (\r\n                        <div>\r\n                            <Placeholder width=\"100%\" className=\"mb-2\" />\r\n                            <Placeholder width=\"100%\" className=\"mb-2\" />\r\n                            <Placeholder width=\"30%\" className=\"mb-2\" />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"mt-4 mb-2 d-flex align-items-center\">\r\n                    {!isLoading &&\r\n                        (revision?.is_deniable ? (\r\n                            <React.Fragment>\r\n                                <Button\r\n                                    onClick={onDeny}\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                >\r\n                                    Deny & Continue\r\n                                </Button>\r\n\r\n                                <AcceptAndContinueButton\r\n                                    onClick={onAccept}\r\n                                    isLoading={false}\r\n                                />\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <div className=\"ml-auto\">\r\n                                    <SubmitButton\r\n                                        onClick={onContinue}\r\n                                        variant=\"primary\"\r\n                                        isLoading={isContinue}\r\n                                        title=\"Continue\"\r\n                                    />\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default RevisionView;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport _ from \"lodash\";\r\n\r\nconst options = [\r\n    {\r\n        id: \"LDRx10\",\r\n        revision: \"I overlooked a few things while checking\",\r\n        isDeniable: true,\r\n    },\r\n    {\r\n        id: \"LDRx11\",\r\n        revision: \"I couldn't understand a few things in the instruction\",\r\n        isDeniable: false,\r\n    },\r\n];\r\n\r\nconst AssigneeRevisionToDev = ({\r\n    task,\r\n    onBack,\r\n    onSubmit,\r\n    revision,\r\n    type = false,\r\n    isSubmitting = false,\r\n}) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comments, setComments] = useState([]);\r\n    const [commentError, setCommentError] = useState(false);\r\n    const [subtasks, setSubtasks] = useState([]);\r\n    const [subtaskError, setSubtaskError] = useState(\"\");\r\n    const [isDeniable, setIsDeniable] = useState(false);\r\n\r\n    // radio button change\r\n    const handleChange = (value) => {\r\n        setReason(value);\r\n    };\r\n\r\n    // editor change text\r\n    const hanldeEditorTextChange = (e, editor, id) => {\r\n        const data = editor.getData();\r\n        const _comments = [...comments];\r\n\r\n        const index = _comments?.findIndex((d) => d.subtask_id === id);\r\n        if (index === -1) {\r\n            _comments.push({\r\n                id: id,\r\n                subtask_id: id,\r\n                comment: data,\r\n                acknowledgement_id: reason?.id ?? \"\",\r\n            });\r\n        } else {\r\n            _comments[index] = {\r\n                id: id,\r\n                subtask_id: id,\r\n                comment: data,\r\n                acknowledgement_id: reason?.id ?? \"\",\r\n            };\r\n        }\r\n\r\n        setComments([..._comments]);\r\n    };\r\n\r\n    // validation\r\n    const validate = () => {\r\n        let errorCount = 0;\r\n        if (reason === null && revision?.is_deniable && type) {\r\n            errorCount++;\r\n            setReasonError(\"You have to select a reason from below options\");\r\n        }\r\n\r\n        if (_.size(task?.subtask) > 0) {\r\n            if (subtasks.length === 0) {\r\n                errorCount++;\r\n                setSubtaskError(\r\n                    \"You need to selecd at least one sub task to continue.\"\r\n                );\r\n            }\r\n\r\n            if (comments.length === 0 || comments.length !== subtasks.length) {\r\n                errorCount++;\r\n                setCommentError(true);\r\n            }\r\n\r\n            comments?.map((comment) => {\r\n                if (comment?.comment === \"\") {\r\n                    errorCount++;\r\n                    setCommentError(true);\r\n                }\r\n            });\r\n        }\r\n\r\n        return errorCount === 0 ? true : false;\r\n    };\r\n\r\n    // handle submiton\r\n    const handleSubmition = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            task_id: task?.id,\r\n            reason: reason?.revision,\r\n            comments,\r\n            is_deniable: reason?.isDeniable ?? false,\r\n        };\r\n        if (validate()) {\r\n            onSubmit(data);\r\n        }\r\n    };\r\n\r\n    const onBackButtonClick = (e) => {\r\n        e.preventDefault();\r\n        onBack();\r\n    };\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form action=\"\">\r\n                {revision?.is_deniable !== 0 && type ? (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Revision Acknowledgement\r\n                            <sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {_.map(options, (revision) => (\r\n                                <div\r\n                                    key={revision.id}\r\n                                    className=\"form-check d-flex align-items-start mb-2\"\r\n                                >\r\n                                    <input\r\n                                        className=\"form-check-input mr-2\"\r\n                                        type=\"radio\"\r\n                                        name=\"exampleRadios\"\r\n                                        id={revision.id}\r\n                                        required={true}\r\n                                        onChange={() => handleChange(revision)}\r\n                                        value={revision.revision}\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            marginTop: \"3px\",\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor={revision.id}\r\n                                        style={{ marginBottom: \"3px\" }}\r\n                                    >\r\n                                        {revision.revision}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {reasonError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {reasonError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n                ) : null}\r\n\r\n                {task?.taskSubTask?.length > 0 && (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select SubTask\r\n                            <sup className=\"font-weight-bold f-16\">*</sup> :\r\n                        </label>\r\n                        <SubtaskSelectionMenu\r\n                            task={task}\r\n                            subTasks={subtasks}\r\n                            setSubtasks={setSubtasks}\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n                {subtasks?.length > 0 && (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Comment:\r\n                        </label>\r\n                        {subtasks.map((s, i) => (\r\n                            <React.Fragment key={s.subtask_id}>\r\n                                <div className=\"form-group\">\r\n                                    <label\r\n                                        htmlFor=\"\"\r\n                                        className=\"font-weight-bold\"\r\n                                    >\r\n                                        {i + 1}. Task: {s?.title}\r\n                                    </label>{\" \"}\r\n                                    <br />\r\n                                    <label className=\"font-weight-bold\">\r\n                                        Write Your Revision\r\n                                        <sup className=\"font-weight-bold f-16\">\r\n                                            *\r\n                                        </sup>\r\n                                        :{\" \"}\r\n                                    </label>\r\n                                    <div className=\"ck-editor-holder\">\r\n                                        <CKEditorComponent\r\n                                            onChange={(e, editor) =>\r\n                                                hanldeEditorTextChange(\r\n                                                    e,\r\n                                                    editor,\r\n                                                    s?.subtask_id\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    {commentError && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            className=\"form-text text-danger\"\r\n                                        >\r\n                                            You have to explain the revision in\r\n                                            details, so that Developer can\r\n                                            understand where they need to work.\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"mt-3 mb-3 d-flex align-items-center\">\r\n                    {/* <Button\r\n                        onClick={onBackButtonClick}\r\n                        variant=\"tertiary\"\r\n                        className=\"ml-auto mr-2\"\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                     */}\r\n                    <NextAndContinueButton\r\n                        onClick={handleSubmition}\r\n                        isLoading={isSubmitting}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AssigneeRevisionToDev;\r\n\r\nconst NextAndContinueButton = ({ onClick, isLoading }) => {\r\n    if (!isLoading) {\r\n        return (\r\n            <Button className=\"ml-auto\" onClick={onClick}>\r\n                {\" \"}\r\n                Continue\r\n            </Button>\r\n        );\r\n    } else {\r\n        return (\r\n            <Button className=\"cursor-processing ml-auto\">\r\n                <div\r\n                    className=\"spinner-border text-white mr-2\"\r\n                    role=\"status\"\r\n                    style={{\r\n                        width: \"18px\",\r\n                        height: \"18px\",\r\n                    }}\r\n                />\r\n                Processing...\r\n            </Button>\r\n        );\r\n    }\r\n};\r\n\r\n// sub task selection menu\r\nconst SubtaskSelectionMenu = ({ task, subTasks, setSubtasks }) => {\r\n    return (\r\n        <div className=\"position-relative\">\r\n            <Listbox value={subTasks} onChange={setSubtasks} multiple>\r\n                <Listbox.Button className=\"position-relative w-100 bg-white py-2 pl-2 pr-1 border d-flex align-items-center justify-content-between\">\r\n                    <span\r\n                        className=\"w-100 mr-auto text-left d-flex flex-wrap align-items-center\"\r\n                        style={{ gap: \"6px\" }}\r\n                    >\r\n                        {subTasks?.length > 0\r\n                            ? subTasks.map((s) => (\r\n                                  <span\r\n                                      key={s.subtask_id}\r\n                                      className=\"badge badge-light\"\r\n                                      style={{ fontSize: \"13px\" }}\r\n                                  >\r\n                                      {\" \"}\r\n                                      {s?.title}{\" \"}\r\n                                  </span>\r\n                              ))\r\n                            : \"Select Subtasks\"}\r\n                    </span>\r\n                    <HiOutlineSelector />\r\n                </Listbox.Button>\r\n                <Listbox.Options\r\n                    className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                    style={{\r\n                        zIndex: 10,\r\n                        maxHeight: \"350px\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {task?.taskSubTask?.length > 0 ? (\r\n                        task?.taskSubTask?.map((s) => (\r\n                            <Listbox.Option\r\n                                value={s}\r\n                                key={s.subtask_id}\r\n                                tabIndex={-1}\r\n                                className={({ active }) =>\r\n                                    active\r\n                                        ? \"task-selection-list-option active\"\r\n                                        : \"task-selection-list-option\"\r\n                                }\r\n                            >\r\n                                {({ selected }) => (\r\n                                    <React.Fragment>\r\n                                        <div>{s.title} <span className=\"badge badge-success\">{s.assigned_to_name}</span></div>\r\n                                        {selected && (\r\n                                            <div>\r\n                                                <i className=\"fa-solid fa-check\"></i>\r\n                                            </div>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                )}\r\n                            </Listbox.Option>\r\n                        ))\r\n                    ) : (\r\n                        <div>No Data Found</div>\r\n                    )}\r\n                </Listbox.Options>\r\n            </Listbox>\r\n        </div>\r\n    );\r\n};\r\n","import React, {useState} from 'react'\r\nimport Button from '../../../components/Button';\r\nimport CKEditorComponent from '../../../../ckeditor';\r\nimport SubmitButton from '../../../components/SubmitButton';\r\nimport { User } from '../../../../utils/user-details';\r\n\r\n\r\n\r\nconst denyOptions = (type) => {\r\n    switch(type){\r\n        case 'lead_dev': \r\n            return ([\r\n                {id: 'deny1', title: 'The project manager added new things in the instruction which was not part of the original instruction'},\r\n                {id: 'deny2', title: 'The way the project manager is interpreting his original instruction now was not possible to understand from what his writing'}\r\n            ])\r\n        case 'dev':\r\n            return([\r\n                {id: 'deny1', title: 'The lead developer added new things in the instruction which was not part of the original instruction'},\r\n                {id: 'deny2', title: 'The way the lead developer is interpreting his original instruction now was not possible to understand from what his writing'}\r\n            ])\r\n        default: []\r\n    }\r\n}\r\n\r\n\r\n\r\nconst DenyAndContinue = ({onSubmit, isSubmitting, onBack, task}) => {\r\n    const auth = new User(window?.Laravel?.user);\r\n    const [reason, setReason] = useState(\"\");\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [err, setErr] = useState(null);\r\n\r\n    const handleEditorDataChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // radio button change\r\n    const handleChange = (e) => {\r\n        setReason(e.target.value);\r\n    };\r\n\r\n     // validation\r\n     const validate = () => {\r\n        let errorCount = 0;\r\n        \r\n        if(comment === \"\"){\r\n             errorCount++;\r\n             setCommentError('You have to explain the revision in details, so that lead developer/developer can understand where they need to work.')     \r\n        }\r\n \r\n        if(reason === ''){\r\n             errorCount++;\r\n             setReasonError('You have to select a reason from above options')\r\n        }\r\n \r\n        return errorCount === 0; \r\n     }\r\n\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            onSubmit({\r\n                comment,\r\n                denyReason: reason\r\n            });\r\n        }else{\r\n            setErr(\"You have to Explain Why Did You Deny!\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const options = auth?.getRoleId() === 6 ? denyOptions('lead_dev') : denyOptions('dev');\r\n    return (\r\n        <React.Fragment>  \r\n            <form action=\"\">\r\n                {/* reason for deny */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Select reason for deny<sup className=\"f-16\">*</sup> :\r\n                    </label>\r\n                    <div className=\"px-3\">\r\n                        {options.map(option => (\r\n                            <div key={option.id} className=\"form-check d-flex align-items-start mb-2\">\r\n                                <input\r\n                                    className=\"form-check-input mr-2\"\r\n                                    type=\"radio\"\r\n                                    name=\"exampleRadios\"\r\n                                    id={option.id}\r\n                                    required= {true}\r\n                                    onChange={handleChange}\r\n                                    value={option.title}\r\n                                    style={{\r\n                                        width: \"16px\",\r\n                                        height: \"16px\",\r\n                                        marginTop: \"3px\",\r\n                                    }}\r\n                                    \r\n                                />\r\n                                <label\r\n                                    className=\"form-check-label\"\r\n                                    htmlFor={option.id}\r\n                                    style={{ marginBottom: \"3px\" }}\r\n                                >\r\n                                    {option.title}\r\n                                </label>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    {reasonError && <small id=\"emailHelp\" className=\"form-text text-danger\">{reasonError}</small>}\r\n                </div>\r\n\r\n\r\n                {/* rich editor  */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Please Explain Why Did You Deny? <sup className=\"f-16 text-red\">*</sup>\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent onChange={handleEditorDataChange} />\r\n                    </div>\r\n                    {commentError && <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                        {commentError}\r\n                    </small>} \r\n                </div>\r\n\r\n                <div className=\"mt-3 d-flex align-items-center\">\r\n                        <Button onClick={onBack} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                            Back\r\n                        </Button>\r\n\r\n                        {!isSubmitting ? (\r\n                            <React.Fragment>\r\n                                <React.Fragment>\r\n                                {_.includes([4, 6], auth?.getRoleId()) ? (\r\n                                    <Button onClick={handleOnSubmit}>Next</Button>\r\n                                ): \r\n                                    <SubmitButton\r\n                                        title=\"Submit\" \r\n                                        isLoading={isSubmitting}\r\n                                        onClick={handleOnSubmit}\r\n                                    />\r\n                                }\r\n                            </React.Fragment>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Button className=\"cursor-processing\">\r\n                                    <div\r\n                                        className=\"spinner-border text-white\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"18px\",\r\n                                            height: \"18px\",\r\n                                        }}\r\n                                    />{\" \"}\r\n                                    Processing...\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default DenyAndContinue","import React, { useState } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport RevisionView from \"./RevisionView\";\r\nimport { RevisionAcceptAndContinue } from \"./RevisionAcceptAndContinue\";\r\nimport AssigneeRevisionToDev from \"./AssigneeRevisionToDev\";\r\nimport DenyAndContinue from \"./DenyAndContinue\";\r\nimport {\r\n    useGetRevisionDetailsQuery,\r\n    useRevisionAcceptOrDenyMutation,\r\n} from \"../../../../services/api/SingleTaskPageApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setTaskStatus } from \"../../../../services/features/subTaskSlice\";\r\nimport { User } from \"../../../../utils/user-details\";\r\n\r\nconst DeveloperRevisionView = ({ task, close }) => {\r\n    const [show, setShow] = useState(\"REVISION\");\r\n    const [accept, setAccept] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const { data: revision, isFetching: isFetchingRevision } =\r\n        useGetRevisionDetailsQuery(task?.id);\r\n    const [revisionAcceptOrDeny, { isLoading: isLoadingRevisionReview }] =\r\n        useRevisionAcceptOrDenyMutation();\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n    // handle Accept and continue submission\r\n    const handleAcceptAndContinueSubmission = (data, type) => {\r\n        const _data = {\r\n            comment: data?.comment ?? \"\",\r\n            deny_reason: data?.denyReason ?? \"\",\r\n            task_id: task?.id,\r\n            user_id: auth?.getId(),\r\n            revision_id: revision?.id,\r\n            mode: data?.continue ? \"continue\" : accept,\r\n        };\r\n\r\n        revisionAcceptOrDeny(_data)\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (_.includes([4, 6], auth?.getRoleId())) {\r\n                    setShow(type);\r\n                } else {\r\n                    dispatch(setTaskStatus(res?.task_status));\r\n                    close();\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    // generate modal title by user role id\r\n\r\n    const generateModalTitle = () => {\r\n        if (auth.getRoleId() === 4) {\r\n            return show === \"ASSIGNEE_TO_DEV\"\r\n                ? \"Revision For Lead Developer\"\r\n                : \"Revision By Project Manager/Top Management\";\r\n        } else if (auth.getRoleId() === 6) {\r\n            return show === \"ASSIGNEE_TO_DEV\"\r\n                ? \"Revision For Developer\"\r\n                : \"Revision By Project Manager/Top Management\";\r\n        } else if (auth.getRoleId() === 9 || auth.getRoleId() === 10) {\r\n            if (\r\n                revision?.revision_status === \"Project Manager Revision\" ||\r\n                revision?.revision_status === \"Client Has Revision\"\r\n            ) {\r\n                return \"Revision By Project Manager /Top Management\";\r\n            } else {\r\n                return \"Revision By Lead Designer\";\r\n            }\r\n        } else return \"Revision By Lead Developer\";\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div\r\n                className=\"sp1_single_task--modal-panel\"\r\n                style={{ maxWidth: \"550px\" }}\r\n            >\r\n                <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                    <div className=\"font-weight-bold f-16\">\r\n                        Task#{task?.id}: {generateModalTitle()}\r\n                    </div>\r\n                    <Button onClick={close} className=\"\">\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"px-3\">\r\n                    {show === \"REVISION\" && (\r\n                        <RevisionView\r\n                            revision={revision}\r\n                            isLoading={isFetchingRevision}\r\n                            isContinue={isLoadingRevisionReview}\r\n                            onAccept={() => {\r\n                                setAccept(\"accept\");\r\n                                setShow(\"ACCEPT_AND_CONTINUE\");\r\n                            }}\r\n                            onDeny={() => {\r\n                                setAccept(\"deny\");\r\n                                setShow(\"DENY_AND_CONTINUE\");\r\n                            }}\r\n                            onContinue={() => {\r\n                                setAccept(\"continue\");\r\n                                handleAcceptAndContinueSubmission(\r\n                                    { continue: true },\r\n                                    \"\"\r\n                                );\r\n                            }}\r\n                        />\r\n                    )}\r\n\r\n                    {show === \"ACCEPT_AND_CONTINUE\" && (\r\n                        <RevisionAcceptAndContinue\r\n                            task={task}\r\n                            isSubmitting={isLoadingRevisionReview}\r\n                            onSubmit={(data) =>\r\n                                handleAcceptAndContinueSubmission(\r\n                                    data,\r\n                                    \"ASSIGNEE_TO_DEV\"\r\n                                )\r\n                            }\r\n                            close={() => setShow(\"REVISION\")}\r\n                        />\r\n                    )}\r\n\r\n                    {show === \"DENY_AND_CONTINUE\" && (\r\n                        <DenyAndContinue\r\n                            task={task}\r\n                            onSubmit={(data) =>\r\n                                handleAcceptAndContinueSubmission(\r\n                                    data,\r\n                                    \"DENY_ASSIGNEE_TO_DEV\"\r\n                                )\r\n                            }\r\n                            isSubmitting={isLoadingRevisionReview}\r\n                            onBack={() => setShow(\"REVISION\")}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default DeveloperRevisionView;\r\n","import _ from 'lodash';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { useGetRevisionDetailsQuery, useRevisionAcceptOrDenyByLeadDeveloperMutation } from '../../../../services/api/SingleTaskPageApi';\r\nimport { User } from '../../../../utils/user-details';\r\nimport Button from '../../../components/Button';\r\nimport AssigneeRevisionToDev from './AssigneeRevisionToDev';\r\nimport DenyAndContinue from './DenyAndContinue';\r\nimport { RevisionAcceptAndContinue } from './RevisionAcceptAndContinue';\r\nimport RevisionView from './RevisionView';\r\n\r\n\r\nconst RevisionViewModal = ({task, close}) => {\r\n  const [show, setShow] = useState(\"REVISION\");\r\n  const [accept, setAccept] = useState('');\r\n  const [comment, setComment] = useState('');\r\n  const [denyReason, setDenyReason] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { data: revision, isFetching } = useGetRevisionDetailsQuery(task?.id);\r\n//   const [revisionAcceptOrDeny, {isLoading: isLoadingRevisionReview}] = useRevisionAcceptOrDenyMutation();\r\n  const auth = new User(window?.Laravel?.user);\r\n  const [\r\n    revisionAcceptOrDeny,\r\n    {isLoading: isLoadingRevisionReview}\r\n  ] = useRevisionAcceptOrDenyByLeadDeveloperMutation();\r\n\r\n  // handle Accept and continue submition\r\n  const hanldeAcceptAndContinueSubmition = (data, type) => {\r\n    setComment(data);\r\n    setShow(type);\r\n  }\r\n\r\n   // handle Accept and continue submition\r\n   const hanldeDenyAndContinueSubmition = (data, type) => {\r\n    setComment(data);\r\n    setDenyReason(data?.denyReason);\r\n    setShow(type);\r\n  }\r\n\r\n\r\n  const handleOnSubmit = async (data, type) =>{\r\n    let fdata ={\r\n        comment: comment?.comment ?? '',\r\n        task_id: data?.task_id,\r\n        project_id: task?.projectId,\r\n        user_id: auth?.getId(),\r\n        subTask: _.map(data?.comments, comment => ({...comment, is_deniable: data?.is_deniable})),\r\n        revision_acknowledgement: data?.reason ?? '',\r\n        revision_id: revision?.id,\r\n        mode: data?.continue ? 'continue' : accept,\r\n        deny_reason: denyReason ?? '',\r\n        is_deniable: data?.is_deniable ?? false,\r\n    }\r\n\r\n\r\n    const params = (!data?.continue && accept===\"deny\") ? 'deny-continue' :'accept-continue';\r\n\r\n    await revisionAcceptOrDeny({fdata, params})\r\n    .unwrap()\r\n    .then(res => {\r\n        toast.success('Your request has been successfully processed')\r\n        close();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  const handleContinueButton = () => {\r\n    setAccept('continue');\r\n    if(_.size(revision?.taskSubTask) === 0){\r\n        setShow('DENY_ASSIGNEE_TO_DEV');\r\n    }else{\r\n        handleOnSubmit({\r\n            continue: true,\r\n        }, '')\r\n    }\r\n  }\r\n\r\n\r\n  const generateModalTitle = () => {\r\n    if(auth.getRoleId() === 4){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Lead Developer\":\"Revision By Project Manager\";\r\n    }else if(auth.getRoleId() === 6){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Developer\":\"Revision By Project Manager\";\r\n    }else if(auth.getRoleId() === 9 || auth.getRoleId() === 10){\r\n        return \"Revision By Project Manager\";\r\n    }else return \"Revision By Lead Developer\"\r\n  }\r\n\r\n\r\n\r\n\r\n//   console.log({task})\r\n  return (\r\n    <React.Fragment>\r\n        <div\r\n            className=\"sp1_single_task--modal-panel\"\r\n            style={{ maxWidth: \"550px\" }}\r\n        >\r\n            <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                <div className=\"font-weight-bold f-16\">\r\n                    Task#{task?.id}:\r\n                    {generateModalTitle()}\r\n                </div>\r\n                <Button onClick={close} className=\"\">\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"px-3\">\r\n               {show === 'REVISION' &&\r\n                    <RevisionView\r\n                        revision={revision}\r\n                        isLoading= {isFetching}\r\n                        isContinue={isLoadingRevisionReview}\r\n                        onAccept={() => {\r\n                            setAccept('accept');\r\n                            setShow('ACCEPT_AND_CONTINUE');\r\n                        }}\r\n                        onDeny={() => {\r\n                            setAccept('deny');\r\n                            setShow('DENY_AND_CONTINUE')\r\n                        }}\r\n                        onContinue={handleContinueButton}\r\n                    />\r\n                }\r\n\r\n                {\r\n                    show === 'ACCEPT_AND_CONTINUE' &&\r\n                    <RevisionAcceptAndContinue\r\n                        task={task}\r\n                        isSubmitting={isLoadingRevisionReview}\r\n                        onSubmit={data => hanldeAcceptAndContinueSubmition(data, \"ASSIGNEE_TO_DEV\")}\r\n                        close={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n\r\n                {show === \"ASSIGNEE_TO_DEV\" &&\r\n                    <AssigneeRevisionToDev\r\n                        task={task}\r\n                        revision={revision}\r\n                        type={true}\r\n                        onSubmit={(data) =>handleOnSubmit( data, 'ASSIGNEE_TO_DEV' )}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"ACCEPT_AND_CONTINUE\")}\r\n                    />\r\n                }\r\n\r\n                {show === \"DENY_AND_CONTINUE\" &&\r\n                    <DenyAndContinue\r\n                        task={task}\r\n                        onSubmit={data => hanldeDenyAndContinueSubmition(data, \"DENY_ASSIGNEE_TO_DEV\")}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n\r\n\r\n                {_.size(task?.taskSubTask) > 0 && show === \"DENY_ASSIGNEE_TO_DEV\" &&\r\n                    <AssigneeRevisionToDev\r\n                        task={task}\r\n                        revision={revision}\r\n                        type={false}\r\n                        onSubmit={(data) => handleOnSubmit(data, 'DENY_ASSIGNEE_TO_DEV')}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"DENY_AND_CONTINUE\")}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default RevisionViewModal\r\n","import React, { useState } from 'react';\r\nimport Button from '../../../components/Button';\r\nimport Modal from '../../../components/Modal';\r\nimport DeveloperRevisionView from './DeveloperRevisionView';\r\nimport RevisionViewModal from './RevisionViewModal';\r\n\r\nconst RevisionViewControl = ({task, auth, status}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const singleTask = task;\r\n\r\n    console.log({task})\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn --view-revision'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Revision</span>\r\n        </Button>\r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                {\r\n                    // check is subtask\r\n                    task?.hasSubtask ?\r\n                    <RevisionViewModal\r\n                        task={singleTask}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                    :\r\n                    <DeveloperRevisionView\r\n                        task={task}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n        </Modal>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RevisionViewControl\r\n","import React from 'react'\r\n\r\nexport default function GuideLineText() {\r\n\r\n    const html = `<html><head><meta content=\"text/html; charset=UTF-8\" http-equiv=\"content-type\"><style type=\"text/css\">ol{margin:0;padding:0}table td,table th{padding:0}.c4{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c5{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c2{height:11pt}.c3{font-style:italic}.c1{font-weight:700}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class=\"c5 doc-content\"><p class=\"c0\"><span>Other than all the old fields, we have introduced the task type and page type fields in the new subtask creation form. Here is a guide for you so you know when to choose which one: <br><br></span><span class=\"c1\">1. New page design:</span><span>&nbsp;When you are going to need any new pages developed (except for cloning for example duplicating a service page to create 20 more service pages and cases like this), you should select this one. It has 2 subdivisions in the next field: <br><br></span><span class=\"c1\">A. Primary page development:</span><span class=\"c4\">&nbsp;All the pages on the website that are money pages (can generate money or revenue), require significant effort to be developed and clients usually remain very picky about them and don&rsquo;t want to compromise anything in those pages are what we are calling primary pages. Primary pages will have these elements mandatorily: <br> &nbsp; &nbsp; They have to be money pages like home, product, service, collection etc. </span></p><p class=\"c0\"><span class=\"c4\">&nbsp; &nbsp; &nbsp;*Most of the traffic will be on these pages <br> &nbsp; &nbsp; They have not less than 6 sections and every section has to be well designed<br> &nbsp; &nbsp; Homepage should be always counted as a primary page. <br> &nbsp; &nbsp; The developers will have to put significant effort to build them</span></p><p class=\"c0\"><span>&nbsp; &nbsp; &nbsp;*The clients will be serious/picky about these pages and won&#39;t accept unless they are perfect. <br><br></span><span class=\"c1\">Rough numbers of primary page on a website:</span><span>&nbsp;Not more than 3 (Except for very rare cases)<br><br></span><span class=\"c1\">Example:</span><span>&nbsp;Home, product page and collection pages for woocommerce/shopify; home, service category and service page for service websites; Home, property buy/sale listing pages for a real estate broker site and like this. <br><br><br>B. </span><span class=\"c1\">Secondary page development:</span><span class=\"c4\">&nbsp;All the relatively less important pages on the site should go to secondary pages. The characteristics include: <br> &nbsp;*They don&rsquo;t generate money necessarily, they are needed for customers&#39; trust, information and other things. For example, about us, shipping policy, FAQ, return policy etc. <br> &nbsp;*They have less than 6 sections, for example contact us. <br> &nbsp;*Require less efforts from the developers to develop them.<br> &nbsp;*In many cases, developers can directly use the template with minimum customization. For example, cart, checkout pages on ecommerce sites. </span></p><p class=\"c0\"><span>&nbsp; *The clients will be less serious about them as these pages are not super sensitive. <br><br><br>2. </span><span class=\"c1\">Cloning existing design: <br></span><span class=\"c4\">Any cloning/duplication job that needs to be done in bulk should go under this. Example include: <br><br>A. Creating 20 service pages from 1 service page just by changing the content and the picture. <br>B. Creating/uploading 300 products after the product page will be developed initially. </span></p><p class=\"c0\"><span class=\"c4\">C. Creating 70 location pages from 1 page template finalized initially. <br><br>These tasks can be assigned to junior most persons in the team as these are identical to data entry works. <br><br></span></p><p class=\"c0\"><span>3. </span><span class=\"c1\">Others: </span><span><br>Under others, there are some other work types which you can select depending on your needs. <br><br>Choosing any task as the primary task will require authorization from team lead/management and the task will be assigned to the developers after the authorization part will be done. Declare any page as a primary page carefully as we are going to set up a point system for the developers where developers will get more points for the primary pages when compared to the secondary pages. So declaring any page as a primary page when it will take almost no effort to create can give the respective developer an unfair edge over the rest of him team members. <br><br></span><span class=\"c1\">P.S. </span><span class=\"c1 c3\">Other than these, we have added a new field named page url in the subtask creation form. So from now, you have to define the urls where the developers will work when assigning a task. It&rsquo;s important that the developers don&#39;t choose urls/permalinks randomly and you declare them beforehand and they use them mandatorily. <br><br></span><span class=\"c1\">Naming Criteria<br></span><span class=\"c4\">Make sure the subtask names are self explanatory so you or anyone else from the management knows what the subtask was about from its name. <br><br>For example, if the task name is &ldquo;Homepage&rdquo;, and if you have to break it into parts for obvious reasons, the subtask names should be as below: <br>Homepage mockup design (XD)</span></p><p class=\"c0\"><span class=\"c4\">Creating a custom slider for the homepage</span></p><p class=\"c0\"><span class=\"c4\">Converting XD to wordpress for the homepage</span></p><p class=\"c0 c2\"><span class=\"c4\"></span></p><p class=\"c0 c2\"><span><br><br><br></span></p></body></html>`\r\n  return (\r\n    <div dangerouslySetInnerHTML={{__html: html}}/>\r\n  )\r\n}\r\n","import { useState } from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport GuideLineText from \"./subtask_creation_guide/GuideLineText\";\r\n\r\n\r\nexport default function SubtaskCreationControl({ className }) {\r\n  const [subtaskCreationModalIsOpen, setSubtaskCreationModalIsOpen] = useState(false);\r\n\r\n\r\n    // console.log(location);\r\n\r\n    const close = () => setSubtaskCreationModalIsOpen(false);\r\n    const open = () => setSubtaskCreationModalIsOpen(true);\r\n\r\n    return (\r\n        <div className={` ${className}`} >\r\n            <Button\r\n                variant=\"tertiary\"\r\n                // onClick={toggle}\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {/* {isFetching ? <Loader title=\"Processing...\" /> : <i className=\"fa-solid fa-check\" />} */}\r\n                <span className=\"d-inline ml-1\"> Subtask creation guide </span>\r\n            </Button>\r\n\r\n            <Modal isOpen={subtaskCreationModalIsOpen} className=\"sp1_mark-as--modal \">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_mark-as--modal-panel\"\r\n                        style={{ overflow: \"visible\", maxWidth: \"70rem\" }}\r\n                    >\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0 ml-2\" style={{fontStyle:'normal',fontWeight:'bold'}}>Subtask creation guide</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"visible\" }}\r\n                        >\r\n                            \r\n                            <div style={{maxHeight:'80vh',overflow:'auto',padding:'0 20px 0 0'}}>\r\n                                <GuideLineText />\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 d-flex align-items-center\">\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                    onClick={close}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                                {/* <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" /> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\n\r\nconst StartTimerConfirmationModal = ({isOpen, onConfirm}) => {\r\n  const [buttonVisible, setButtonVisible] = React.useState(false);\r\n  const [countDown, setCountDown] = React.useState(20);\r\n\r\n  React.useEffect(() => {\r\n    let count = countDown ?? 0;\r\n\r\n    let timeIntervelId = setInterval(() => {\r\n        setCountDown(count--);\r\n    }, 1000);\r\n\r\n\r\n    let timeOutId = setTimeout(() => {\r\n      setButtonVisible(true);\r\n      clearInterval(timeIntervelId)\r\n    }, 22000);\r\n\r\n    \r\n\r\n    return () => {\r\n      clearTimeout(timeOutId);\r\n      clearInterval(timeIntervelId);\r\n    };\r\n  }, []);\r\n\r\n  const text = `<html><head><meta content=\"text/html; charset=UTF-8\" http-equiv=\"content-type\"><style type=\"text/css\">ol{margin:0;padding:0}table td,table th{padding:0}.c0{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c2{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c3{height:11pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class=\"c2 doc-content\"><p class=\"c1\"><span class=\"c0\">Do You Understand The Following Things?</span></p><p class=\"c1\"><span class=\"c0\">A. Your job is not to decide what the look and feel of a website will be based on a few reference websites.</span></p><p class=\"c1\"><span class=\"c0\">B. Your job is not to research a theme based on an instruction shared by the PM.</span></p><p class=\"c1\"><span class=\"c0\">C. Your job is not to research a plugin based on a problem shared by PM.</span></p><p class=\"c1\"><span class=\"c0\">D. Your job is not to choose the color scheme of a website.</span></p><p class=\"c1\"><span class=\"c0\">E. Your job is not to talk to the support for example the Shopify support team, theme support, plugin support and any other support for any solution.</span></p><p class=\"c1\"><span class=\"c0\">F. Your job is not to create the training videos for the client after the completion of a project.</span></p><p class=\"c1\"><span class=\"c0\">G. You understand that all your hours have to be logged/tracked, and you will be questioned if you don&rsquo;t log at least 7 hours for any reason.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your job is to execute the work based on the defined requirements.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily. Report immediately if you are asked to do any of these and if it wasn&rsquo;t authorized by top management. You should see a text like &ldquo;Authorized by top management&rdquo; on the right side of the task title if it was authorized.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">In case, you don&rsquo;t report, the extra time taken for these will be considered as your lacking (as they will remain unaccountable) and you will receive negative performance score.&quot;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2438;&#2474;&#2472;&#2495; &#2453;&#2495; &#2472;&#2495;&#2478;&#2509;&#2472;&#2482;&#2495;&#2454;&#2495;&#2468; &#2476;&#2495;&#2487;&#2479;&#2492;&#2455;&#2497;&#2482;&#2495; &#2476;&#2497;&#2461;&#2503;&#2472;?</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2535;&#2404; &#2453;&#2527;&#2503;&#2453;&#2463;&#2495; &#2480;&#2503;&#2475;&#2494;&#2480;&#2503;&#2472;&#2509;&#2488; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; &#2451;&#2474;&#2480; &#2477;&#2495;&#2468;&#2509;&#2468;&#2495; &#2453;&#2480;&#2503; &#2453;&#2509;&#2482;&#2494;&#2527;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; Look &amp; Feel &#2453;&#2503;&#2478;&#2472; &#2489;&#2476;&#2503; &#2468;&#2494;&#2480; &#2476;&#2495;&#2487;&#2527;&#2503; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2536;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2439;&#2472;&#2509;&#2488;&#2463;&#2509;&#2480;&#2494;&#2453;&#2486;&#2472; &#2437;&#2472;&#2497;&#2479;&#2494;&#2527;&#2496; &#2480;&#2495;&#2488;&#2494;&#2480;&#2509;&#2458; &#2453;&#2480;&#2503; &#2469;&#2495;&#2478; &#2454;&#2497;&#2433;&#2460;&#2503; &#2476;&#2503;&#2480; &#2453;&#2480;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2537;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2439;&#2472;&#2509;&#2488;&#2463;&#2509;&#2480;&#2494;&#2453;&#2486;&#2472; &#2437;&#2472;&#2497;&#2479;&#2494;&#2527;&#2496; &#2480;&#2495;&#2488;&#2494;&#2480;&#2509;&#2458; &#2453;&#2480;&#2503; &#2474;&#2509;&#2482;&#2494;&#2455;&#2495;&#2472; &#2454;&#2497;&#2433;&#2460;&#2503; &#2476;&#2503;&#2480; &#2453;&#2480;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2538;&#2404; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; &#2453;&#2494;&#2482;&#2494;&#2480; &#2488;&#2509;&#2453;&#2495;&#2478; &#2453;&#2495; &#2489;&#2476;&#2503; &#2488;&#2503;&#2463;&#2494; &#2474;&#2459;&#2472;&#2509;&#2470; &#2453;&#2480;&#2494; &#2476;&#2494; &#2453;&#2507;&#2472; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2539;&#2404; &#2453;&#2507;&#2472; &#2471;&#2480;&#2472;&#2503;&#2480; &#2488;&#2478;&#2488;&#2509;&#2479;&#2494;&#2480; &#2488;&#2478;&#2494;&#2471;&#2494;&#2472;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2453;&#2507;&#2472; &#2474;&#2509;&#2480;&#2453;&#2494;&#2480; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;&#2503;&#2480; &#2488;&#2494;&#2469;&#2503; &#2479;&#2507;&#2455;&#2494;&#2479;&#2507;&#2455; &#2453;&#2480;&#2494; (&#2479;&#2503;&#2478;&#2472;, &#2486;&#2474;&#2495;&#2475;&#2494;&#2439; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;, &#2469;&#2495;&#2478; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463;, &#2474;&#2509;&#2482;&#2494;&#2455;&#2495;&#2472; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463;, &#2447;&#2476;&#2434; &#2437;&#2472;&#2509;&#2479; &#2453;&#2507;&#2472; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;) &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2540;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2486;&#2503;&#2487; &#2489;&#2476;&#2494;&#2480; &#2474;&#2480;&#2503; &#2453;&#2509;&#2482;&#2494;&#2527;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2453;&#2507;&#2472; &#2474;&#2509;&#2480;&#2453;&#2494;&#2480; &#2463;&#2509;&#2480;&#2503;&#2439;&#2472;&#2495;&#2434; &#2477;&#2495;&#2465;&#2495;&#2451; &#2476;&#2494;&#2472;&#2494;&#2472;&#2507; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2541;&#2404; &#2438;&#2474;&#2472;&#2495; &#2488;&#2509;&#2476;&#2496;&#2453;&#2494;&#2480; &#2453;&#2480;&#2459;&#2503;&#2472; &#2479;&#2503;, &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2488;&#2453;&#2482; &#2453;&#2494;&#2460;&#2503;&#2480; &#2488;&#2478;&#2527; Seopage1 &#2447;&#2480; &#2439; &#2438;&#2480; &#2474;&#2495; &#2488;&#2495;&#2488;&#2509;&#2463;&#2503;&#2478;&#2503; &#2463;&#2509;&#2480;&#2509;&#2479;&#2494;&#2453; &#2453;&#2480;&#2468;&#2503; &#2489;&#2476;&#2503; &#2447;&#2476;&#2434; &#2479;&#2470;&#2495; &#2438;&#2474;&#2472;&#2495; &#2453;&#2507;&#2472; &#2453;&#2494;&#2480;&#2467;&#2503; &#2453;&#2478;&#2474;&#2453;&#2509;&#2487;&#2503; 7 &#2456;&#2467;&#2509;&#2463;&#2494; &#2463;&#2509;&#2480;&#2509;&#2479;&#2494;&#2453; &#2472;&#2494; &#2453;&#2480;&#2503;&#2472; &#2468;&#2494;&#2489;&#2482;&#2503; &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2474;&#2509;&#2480;&#2486;&#2509;&#2472; &#2453;&#2480;&#2494; &#2489;&#2476;&#2503;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2488;&#2494;&#2471;&#2494;&#2480;&#2467;&#2477;&#2494;&#2476;&#2503;, &#2479;&#2503;&#2453;&#2507;&#2472;&#2507; &#2471;&#2480;&#2467;&#2503;&#2480; &#2474;&#2509;&#2480;&#2479;&#2492;&#2507;&#2460;&#2472;&#2496;&#2479;&#2492;&#2468;&#2494; &#2476;&#2494; Requirements &#2447;&#2480; &#2476;&#2495;&#2487;&#2527;&#2503; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; (&#2479;&#2503; &#2453;&#2507;&#2472; &#2471;&#2480;&#2467;&#2503;&#2480;) &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2453;&#2494;&#2460;&#2404; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2489;&#2458;&#2509;&#2459;&#2503;, &#2438;&#2474;&#2472;&#2494;&#2480; &#2441;&#2474;&#2480;&#2503; &#2447;&#2488;&#2494;&#2439;&#2472; &#2453;&#2480;&#2494; &#2453;&#2494;&#2460;&#2455;&#2497;&#2482;&#2507;&#2453;&#2503; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2470;&#2503;&#2527;&#2494; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2437;&#2472;&#2509;&#2479;&#2479;&#2494;&#2527;&#2496; &#2476;&#2494;&#2488;&#2509;&#2468;&#2476;&#2494;&#2527;&#2472; &#2453;&#2480;&#2494;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2479;&#2470;&#2495; &#2453;&#2507;&#2472; &#2453;&#2494;&#2480;&#2467;&#2503;, &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480; &#2447;&#2439; &#2453;&#2507;&#2472;&#2451; &#2453;&#2494;&#2460;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2488;&#2494;&#2489;&#2494;&#2479;&#2509;&#2479;&#2503;&#2480; &#2474;&#2509;&#2480;&#2479;&#2492;&#2507;&#2460;&#2472; &#2478;&#2472;&#2503; &#2453;&#2480;&#2503;, &#2468;&#2494;&#2489;&#2482;&#2503; &#2468;&#2495;&#2472;&#2495; &#2488;&#2503;&#2455;&#2497;&#2482;&#2495;&#2480; &#2460;&#2472;&#2509;&#2479; &#2438;&#2482;&#2494;&#2470;&#2494; &#2438;&#2482;&#2494;&#2470;&#2494; &#2476;&#2495;&#2486;&#2503;&#2487; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2494;&#2460; &#2468;&#2504;&#2480;&#2495; &#2453;&#2480;&#2468;&#2503; &#2489;&#2476;&#2503; &#2447;&#2476;&#2434; &#2448; &#2453;&#2494;&#2460;&#2455;&#2497;&#2482;&#2495; &#2437;&#2476;&#2486;&#2509;&#2479;&#2439; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2489;&#2468;&#2503; &#2489;&#2476;&#2503;&#2404; &#2479;&#2470;&#2495; &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2507;&#2472;&#2451; &#2453;&#2494;&#2460; &#2453;&#2480;&#2468;&#2503; &#2476;&#2482;&#2494; &#2489;&#2479;&#2492; &#2447;&#2476;&#2434; &#2488;&#2503;&#2439; &#2453;&#2494;&#2460;&#2463;&#2495; &#2479;&#2470;&#2495; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2472;&#2494; &#2489;&#2479;&#2492; &#2468;&#2476;&#2503; &#2468;&#2494; &#2437;&#2476;&#2495;&#2482;&#2478;&#2509;&#2476;&#2503; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2453;&#2494;&#2459;&#2503; &#2480;&#2495;&#2474;&#2507;&#2480;&#2509;&#2463;&#2503;&#2480; &#2478;&#2494;&#2471;&#2509;&#2479;&#2478;&#2503; &#2460;&#2494;&#2472;&#2494;&#2468;&#2503; &#2489;&#2476;&#2503;&#2404; &nbsp;&#2488;&#2494;&#2471;&#2494;&#2480;&#2467;&#2468;, &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2494;&#2460;&#2503;&#2480; &#2453;&#2509;&#2487;&#2503;&#2468;&#2509;&#2480;&#2503;, &#2488;&#2434;&#2486;&#2509;&#2482;&#2495;&#2487;&#2509;&#2463; &#2474;&#2503;&#2460;&#2503;&#2480; &#2465;&#2494;&#2472; &#2474;&#2494;&#2486;&#2503; &ldquo;Authorized by top management&rdquo; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2447;&#2453;&#2463;&#2495; &#2482;&#2503;&#2454;&#2494; &#2470;&#2503;&#2454;&#2468;&#2503; &#2474;&#2494;&#2480;&#2476;&#2503;&#2472; &#2479;&#2470;&#2495; &#2488;&#2503;&#2463;&#2495; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2489;&#2479;&#2492;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2447;&#2439;&#2471;&#2480;&#2467;&#2503;&#2480; &#2437;&#2472;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2453;&#2494;&#2460;&#2503;&#2480; &#2453;&#2509;&#2487;&#2503;&#2468;&#2509;&#2480;&#2503; &#2438;&#2474;&#2472;&#2495; &#2479;&#2470;&#2495; &#2480;&#2495;&#2474;&#2507;&#2480;&#2509;&#2463; &#2472;&#2494; &#2453;&#2480;&#2503;&#2472;, &#2468;&#2494;&#2489;&#2482;&#2503; &#2488;&#2503;&#2439; &#2453;&#2494;&#2460;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2438;&#2474;&#2472;&#2495; &#2479;&#2503;&#2439; &#2488;&#2478;&#2527; &#2476;&#2509;&#2479;&#2527; &#2453;&#2480;&#2476;&#2503;&#2472; &#2468;&#2494; &#2455;&#2509;&#2480;&#2489;&#2472;&#2479;&#2507;&#2455;&#2509;&#2479; &#2476;&#2482;&#2503; &#2476;&#2495;&#2476;&#2503;&#2458;&#2495;&#2468; &#2489;&#2476;&#2503; &#2472;&#2494; &#2447;&#2476;&#2434; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2437;&#2472;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2453;&#2494;&#2460;&#2503; &#2460;&#2524;&#2495;&#2468; &#2469;&#2494;&#2453;&#2494;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2474;&#2494;&#2480;&#2475;&#2480;&#2509;&#2478;&#2503;&#2472;&#2509;&#2488; &#2488;&#2509;&#2453;&#2507;&#2480;&#2503; &#2472;&#2503;&#2455;&#2503;&#2463;&#2495;&#2477; &#2474;&#2527;&#2503;&#2472;&#2509;&#2463; &#2479;&#2507;&#2455; &#2489;&#2476;&#2503;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p></body></html>`\r\n\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"subtask-timer-confirmation--modal\">\r\n        <div className='subtask-timer-confirmation--panel'>\r\n           <div className=\"subtask-timer-confirmation--content\">\r\n            <div dangerouslySetInnerHTML={{__html: text}} />\r\n\r\n            \r\n                {/* <h4 className='mb-3'> Do You Understand The Following Things? </h4>\r\n                \r\n                <ol type='A'>\r\n                    <li> Your job is not to decide what the look and feel of a website will be based on a few reference websites. </li>\r\n                    <li>Your job is not to research a theme based on an instruction shared by the PM.</li>\r\n                    <li>Your job is not to research a plugin based on a problem shared by PM.</li>\r\n                    <li>Your job is not to choose the color scheme of a website.</li>\r\n                    <li>Your job is not to talk to the support for example the Shopify support team, theme support, plugin support and any other support for any solution.</li>\r\n                    <li>Your job is not to create the training videos for the client after the completion of a project.</li>\r\n                    <li>You understand that all your hours have to be logged/tracked, and you will be questioned if you don’t log at least 7 hours for any reason.</li>\r\n                </ol>\r\n\r\n\r\n                <p>In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your job is to execute the work based on the defined requirements. </p> \r\n\r\n                <p>If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily. Report immediately if you are asked to do any of these and if it wasn’t authorized by top management. You should see a text like “Authorized by top management” on the right side of the task title if it was authorized.</p>\r\n                \r\n                <p> In case, you don’t report, the extra time taken for these will be considered as your lacking (as they will remain unaccountable) and you will receive negative performance score.”</p>\r\n                */}\r\n                <div className='d-flex align-items-center'>\r\n                     <Button \r\n                        onClick={onConfirm} \r\n                        className='ml-auto'\r\n                        disabled={!buttonVisible}\r\n                      > \r\n                        Yes, I Fully Understand This {!buttonVisible && `(${countDown})`}\r\n                      </Button> \r\n                </div> \r\n           </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StartTimerConfirmationModal","import * as React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLessTrackModal } from \"../../../../services/features/subTaskSlice\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport Loader from \"../../../components/Loader\";\r\n\r\nconst StopTimerConfrimationPopUp = React.lazy(() =>\r\n    import(\"./StopTimerConfrimationPopUp\")\r\n);\r\n\r\nconst LessTrackTimerModal = ({ stopTimer, startTimer }) => {\r\n    const { task, lessTrackModal, lessTrackModalFor } = useSelector(\r\n        (s) => s.subTask\r\n    );\r\n    const dispatch = useDispatch();\r\n\r\n    const close = () => {\r\n        dispatch(setLessTrackModal({ show: false, type: \"\" }));\r\n    };\r\n\r\n    // temporarily stop timer now\r\n    const stopTimerTemporarily = () => {\r\n        if (lessTrackModalFor === \"STOP_TIMER\") {\r\n            stopTimer();\r\n        }\r\n\r\n        if (lessTrackModalFor === \"START_TIMER\") {\r\n            startTimer();\r\n        }\r\n\r\n        close();\r\n    };\r\n    // lessTrackModal\r\n    return (\r\n        <Modal isOpen={lessTrackModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <React.Suspense\r\n                    fallback={\r\n                        <div className=\"sp1_single_task--modal-panel\">\r\n                            <Loader />\r\n                        </div>\r\n                    }\r\n                >\r\n                    <StopTimerConfrimationPopUp\r\n                        handleTemporarilyStopTimer={stopTimerTemporarily}\r\n                        close={close}\r\n                    />\r\n                </React.Suspense>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default LessTrackTimerModal;\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const StartTimerWorkingReport = () => {\r\n    return(\r\n       <div>\r\n            <Title>You haven't submitted the last day's working report.</Title>\r\n            <Text> Do you want to submit the working report?</Text>\r\n            <Note><strong>Note:</strong> If you didn't submit last day's working report, you won't be able to start the timer</Note>\r\n       </div>\r\n    )\r\n}\r\n\r\n\r\nconst Title = styled.h1`\r\n    font-weight: 600;\r\n    font-size: 1.5rem;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Text = styled.p`\r\n    font-size: 1.1rem;\r\n    color: #ee3f07;\r\n`\r\n\r\nconst Note = styled.p`\r\n    font-size: 13px;\r\n    margin-top: 5px;\r\n    color: rgb(0 0 0 / 50%);\r\n    & > strong{\r\n        color:  #ee3f07;;\r\n    }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactModal from \"react-modal\";\r\n\r\nconst ExpiredTimeModalForNewEmployee = ({\r\n    showExpirationWarningModal,\r\n    setShowExpirationWarningModal,\r\n    timeLeft,\r\n    setTimeLeft,\r\n    timerStatusForWarningModal,\r\n}) => {\r\n    const [toggleModal, setToggleModal] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setTimeLeft((prevTime) => {\r\n                if (prevTime >= 0) {\r\n                    return prevTime - 1;\r\n                } else {\r\n                    clearInterval(timer);\r\n                    return prevTime;\r\n                }\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setToggleModal(true);\r\n        }, 600000); //10 minutes\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n    // console.log(\"show warning modal\", showExpirationWarningModal);\r\n    // console.log(\"time left\", timeLeft);\r\n    // console.log(\" toggle modal warning modal\", toggleModal);\r\n    // console.log(\"time left less then 4200 seconds\", timeLeft <= 4200);\r\n    // console.log(\"time left greater then 0\", timeLeft > 0);\r\n    // console.log(\"timer status for warning\", timerStatusForWarningModal);\r\n\r\n    useEffect(() => {\r\n        if (\r\n            toggleModal &&\r\n            timeLeft <= 3600 && // 60 minutes\r\n            timeLeft > 0 &&\r\n            timerStatusForWarningModal\r\n        ) {\r\n            setShowExpirationWarningModal(true);\r\n        }\r\n    }, [toggleModal, timeLeft]);\r\n\r\n    const closeModal = () => {\r\n        setShowExpirationWarningModal(false);\r\n        setToggleModal(false);\r\n    };\r\n\r\n    const minutes = Math.floor(timeLeft / 60);\r\n    const seconds = timeLeft % 60;\r\n\r\n    return (\r\n        <ReactModal\r\n            isOpen={showExpirationWarningModal}\r\n            onRequestClose={closeModal}\r\n            contentLabel=\"Expired Time Modal\"\r\n            shouldCloseOnOverlayClick={false}\r\n            style={{\r\n                overlay: {\r\n                    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    zIndex: 9999999998,\r\n                },\r\n                content: {\r\n                    width: \"400px\",\r\n                    height: \"fit-content\",\r\n                    margin: \"auto\",\r\n                    padding: \"20px\",\r\n                    borderRadius: \"8px\",\r\n                    textAlign: \"center\",\r\n                    Index: 9999999999,\r\n                },\r\n            }}\r\n        >\r\n            <h2 style={{ marginBottom: \"20px\" }}>\r\n                Your timer will be stopped by the system after\r\n            </h2>\r\n            <h3 style={{ marginBottom: \"20px\" }}>\r\n                <span style={{ color: \"red\" }}>\r\n                    {minutes === -1 ? 0 : minutes}\r\n                </span>{\" \"}\r\n                minutes{\" \"}\r\n                <span style={{ color: \"red\" }}>\r\n                    {seconds === -1 ? 0 : seconds}\r\n                </span>{\" \"}\r\n                seconds.\r\n            </h3>\r\n            <h6>\r\n                Please complete your task, stop the timer yourself and submit\r\n                your work\r\n            </h6>\r\n            <button onClick={closeModal} className=\"btn btn-danger mt-4\">\r\n                Close\r\n            </button>\r\n        </ReactModal>\r\n    );\r\n};\r\n\r\nexport default ExpiredTimeModalForNewEmployee;\r\n","import * as React from \"react\";\r\nimport styles from \"./paginate.module.css\";\r\n\r\nimport {\r\n    useReactTable,\r\n    getCoreRowModel,\r\n    getPaginationRowModel,\r\n    getFilteredRowModel,\r\n    getExpandedRowModel,\r\n    getSortedRowModel,\r\n    flexRender,\r\n} from \"@tanstack/react-table\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\n// ui component\r\nimport {\r\n    TableContainer,\r\n    Table,\r\n    TableRow,\r\n    TableBody,\r\n    TableItem,\r\n    Flex,\r\n    TableFooter,\r\n    Select,\r\n} from \"./ui\";\r\nimport DataTableHeader from \"./TableHeader\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useLocalStorage } from \"react-use\";\r\nimport EmptyTable from \"../../../global/EmptyTable\";\r\nimport { Placeholder } from \"../../../global/Placeholder\";\r\n\r\nconst PendingTasksTable = ({\r\n    data,\r\n    columns = [],\r\n    isLoading,\r\n    onPageChange,\r\n    sorting,\r\n    tableName,\r\n    setSorting,\r\n}) => {\r\n    const [tableData, setTableData] = React.useState([]);\r\n    const [tableColumns, setTableColumns] = React.useState(columns);\r\n    const [{ pageIndex, pageSize }, setPagination] = React.useState({\r\n        pageIndex: 0,\r\n        pageSize: 10,\r\n    });\r\n\r\n    const [value, setValue] = useLocalStorage(tableName);\r\n\r\n    // on pagination\r\n    const handlePageChange = ({ selected }) => {\r\n        const paginate = {\r\n            pageIndex: selected,\r\n            pageSize,\r\n        };\r\n\r\n        setPagination({ ...paginate, pageIndex: 0 });\r\n        onPageChange(paginate);\r\n    };\r\n\r\n    // handle page size change\r\n    const handlePageSizeChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        const paginate = {\r\n            pageIndex,\r\n            pageSize: e.target.value,\r\n        };\r\n        setPagination({ ...paginate, pageIndex: 0 });\r\n        onPageChange(paginate);\r\n    };\r\n\r\n    // columns order\r\n    const [columnOrder, setColumnOrder] = React.useState(_.map(columns, \"id\"));\r\n\r\n    // if has table columns record on local store\r\n    // organize column orders\r\n    React.useEffect(() => {\r\n        if (value && value.columnOrder) {\r\n            setColumnOrder(value.columnOrder);\r\n        }\r\n    }, []);\r\n\r\n    // formate data\r\n\r\n    // use effect\r\n    // React.useEffect(() => {\r\n    //     data ? setTableData(_.orderBy(data?.data, \"desc\")) : setTableData([]);\r\n    // }, [data]);\r\n    React.useEffect(() => {\r\n        data ? setTableData(_.orderBy(data, \"desc\")) : setTableData([]);\r\n    }, [data]);\r\n\r\n    // pagination\r\n    const pagination = React.useMemo(\r\n        () => ({ pageIndex, pageSize }),\r\n        [pageIndex, pageSize]\r\n    );\r\n\r\n    // table instance\r\n    const table = useReactTable({\r\n        data: tableData,\r\n        columns: tableColumns,\r\n        state: {\r\n            sorting,\r\n            pagination,\r\n            tableName,\r\n            columnOrder,\r\n        },\r\n        // onPaginationChange: setPagination,\r\n        onSortingChange: setSorting,\r\n        onColumnOrderChange: setColumnOrder,\r\n        getCoreRowModel: getCoreRowModel(),\r\n        getPaginationRowModel: getPaginationRowModel(),\r\n        // getFilteredRowModel: getFilteredRowModel(),\r\n        getSortedRowModel: getSortedRowModel(),\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <React.Fragment>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <DataTableHeader table={table} columns={tableColumns} />\r\n                        <TableBody>\r\n                            {!isLoading &&\r\n                                table.getRowModel().rows.map((row) => (\r\n                                    <TableRow key={row.id}>\r\n                                        {row.getVisibleCells().map((cell) => (\r\n                                            <TableItem key={cell.id}>\r\n                                                {flexRender(\r\n                                                    cell.column.columnDef.cell,\r\n                                                    cell.getContext()\r\n                                                )}\r\n                                            </TableItem>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n\r\n                            {/* On loading  */}\r\n                            {isLoading &&\r\n                                _.times(pageSize, (item) => (\r\n                                    <TableRow key={item}>\r\n                                        {_.times(tableColumns.length, (col) => (\r\n                                            <TableItem\r\n                                                key={col}\r\n                                                className=\"py-3\"\r\n                                            >\r\n                                                <Placeholder />\r\n                                            </TableItem>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n\r\n                            {!isLoading && _.size(tableData) === 0 && (\r\n                                <TableRow>\r\n                                    <TableItem colSpan={_.size(tableColumns)}>\r\n                                        <EmptyTable />\r\n                                    </TableItem>\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                {data?.length > 10 && (\r\n                    <TableFooter>\r\n                        <Flex>\r\n                            Show\r\n                            <Select\r\n                                value={pageSize}\r\n                                onChange={handlePageSizeChange}\r\n                            >\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"20\">20</option>\r\n                                <option value=\"30\">30</option>\r\n                                <option value=\"50\">50</option>\r\n                                <option value=\"100\">100</option>\r\n                            </Select>\r\n                            Entries\r\n                        </Flex>\r\n\r\n                        <Flex>\r\n                            <span>\r\n                                Showing {data?.from} to {data?.to} of{\" \"}\r\n                                {data?.total} entries\r\n                            </span>\r\n\r\n                            <ReactPaginate\r\n                                breakLabel=\"...\"\r\n                                onPageChange={handlePageChange}\r\n                                previousLabel=\"Previous\"\r\n                                nextLabel=\"Next\"\r\n                                pageRangeDisplayed={3}\r\n                                marginPagesDisplayed={1}\r\n                                pageCount={data?.last_page ?? 1}\r\n                                renderOnZeroPageCount={null}\r\n                                containerClassName={styles.containerClassName}\r\n                                pageLinkClassName={styles.pageLinkClassName}\r\n                                activeLinkClassName={styles.activeLinkClassName}\r\n                                previousLinkClassName={styles.pageLinkClassName}\r\n                                nextLinkClassName={styles.pageLinkClassName}\r\n                            />\r\n                        </Flex>\r\n                    </TableFooter>\r\n                )}\r\n            </React.Fragment>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PendingTasksTable;\r\n","import Popover from \"../../../../react-latest/ui/Popover\";\r\nimport Button from \"../../../global/Button\";\r\nimport { convertTime } from \"../../../utils/converTime\";\r\nimport EvaluationTaskRevisionModal from \"../modal/EvaluationTaskRevisionModal\";\r\nimport ActionEvaluationTaskTable from \"./ActionEvaluationTaskTable\";\r\n\r\nexport const PendingTasksTableColumns = [\r\n    {\r\n        id: \"task_name\",\r\n        header: \"Task Name\",\r\n        accessorKey: \"task_name\",\r\n\r\n        cell: ({ row: { original }, className }) => {\r\n            return original?.task_name ? (\r\n                <div style={{ minWidth: \"10rem\" }}>\r\n                    <Popover>\r\n                        <Popover.Button>\r\n                            <span className=\" singleline-ellipsis link_color\">\r\n                                <span className=\"link_color\">\r\n                                    {original?.task_name}\r\n                                </span>\r\n                            </span>\r\n                        </Popover.Button>\r\n\r\n                        <Popover.Panel>\r\n                            <div className=\"revision_popover_panel\">\r\n                                <a\r\n                                    href={`/account/tasks/${original?.task_id}`}\r\n                                    className=\"hover-underline\"\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    <span className=\"link_color \">\r\n                                        {original?.task_name}\r\n                                    </span>\r\n                                </a>\r\n                            </div>\r\n                        </Popover.Panel>\r\n                    </Popover>\r\n                </div>\r\n            ) : (\r\n                <span>Not Available</span>\r\n            );\r\n        },\r\n    },\r\n\r\n    {\r\n        id: \"status\",\r\n        header: \"Task Status\",\r\n        accessorKey: \"task_board_column_name\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            // console.log('from independent task table column',data?.column_name);\r\n            return (\r\n                <span\r\n                    className=\"badge text-white\"\r\n                    style={{ background: data?.task_board_column_color }}\r\n                >\r\n                    {data?.task_board_column_name ?? \"--\"}\r\n                </span>\r\n            );\r\n        },\r\n    },\r\n\r\n    {\r\n        id: \"total_hours\",\r\n        header: \"Total Hours Tracked\",\r\n        accessorKey: \"total_hours\",\r\n        cell: ({ row }) => {\r\n            const data = row.original;\r\n            return (\r\n                <div style={{ marginLeft: \"50px\" }}>\r\n                    {convertTime(data?.total_min)}\r\n                </div>\r\n            );\r\n        },\r\n    },\r\n\r\n    {\r\n        header: \"Action\",\r\n        accessorKey: \"assign_date\",\r\n\r\n        cell: ({ row }) => {\r\n            const data = row.original;\r\n\r\n            return (\r\n                <Button variant=\"primary\" className=\"text-white\">\r\n                    <a\r\n                        href={`/account/tasks/${data?.task_id}`}\r\n                        className=\"hover-underline text-white\"\r\n                        target=\"_blank\"\r\n                    >\r\n                        Submit\r\n                    </a>\r\n                </Button>\r\n            );\r\n        },\r\n    },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport ReactModal from \"react-modal\";\r\n\r\nimport styles from \"../../../../react/tasks/components/PrimaryPageAuthorization.module.css\";\r\nimport Card from \"../../../global/Card\";\r\n\r\nimport PendingTasksTable from \"../../../employee-evaluation/components/Table/PendingTasksTable\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\nimport { useGetTaskListQuery } from \"../../../services/api/EvaluationApiSlice\";\r\n\r\nimport { PendingTasksTableColumns } from \"../../../employee-evaluation/components/Table/PendingTasksTableColumn\";\r\nconst PendingTasksForTrainee = ({\r\n    isPendingModalOpen,\r\n    setIsPendingModalOpen,\r\n}) => {\r\n    const auth = useAuth();\r\n\r\n    const { data, isLoading } = useGetTaskListQuery(auth.id);\r\n\r\n    //filter tasks by board column id to extract un submitted tasks\r\n    const Tasks = data?.data.filter((task) =>\r\n        _.includes([1, 2, 3, 7], Number(task.task_board_column_id))\r\n    );\r\n\r\n    const [sorting, setSorting] = useState([]);\r\n    const onPageChange = (paginate) => {\r\n        setPagination(paginate);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ReactModal\r\n                style={{\r\n                    overlay: {\r\n                        backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n                        margin: \"auto auto\",\r\n                        zIndex: 99998,\r\n                    },\r\n                    content: {\r\n                        borderRadius: \"10px\",\r\n                        maxWidth: \"820px\",\r\n                        height: \"fit-content\",\r\n                        maxHeight: \"100%\",\r\n                        margin: \"auto auto\",\r\n                        padding: \"10px\",\r\n                        overflowY: \"auto\",\r\n                        zIndex: 99999,\r\n                    },\r\n                }}\r\n                isOpen={isPendingModalOpen}\r\n                onRequestClose={() => setIsPendingModalOpen(false)}\r\n                ariaHideApp={false}\r\n            >\r\n                <Card className={styles.card}>\r\n                    <Card.Head\r\n                        onClose={() => setIsPendingModalOpen(false)}\r\n                        className={styles.card_head}\r\n                    >\r\n                        Pending tasks\r\n                    </Card.Head>\r\n\r\n                    <Card.Body className={styles.card_body}>\r\n                        <PendingTasksTable\r\n                            data={Tasks}\r\n                            columns={[...PendingTasksTableColumns]}\r\n                            isLoading={isLoading}\r\n                            onPageChange={onPageChange}\r\n                            sorting={sorting}\r\n                            tableName=\"Pending Tasks Table\"\r\n                            setSorting={setSorting}\r\n                        />\r\n                    </Card.Body>\r\n                </Card>\r\n            </ReactModal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PendingTasksForTrainee;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactModal from \"react-modal\";\r\nimport PendingTasksForTrainee from \"./PendingTasksForTrainee\";\r\n\r\nconst ExpiredNotifyModalForNewEmployee = ({\r\n    expireDateForTrainer,\r\n    showExpirationNotifyModal,\r\n    setShowExpirationNotifyModal,\r\n    timeLeft,\r\n}) => {\r\n    const [isPendingModalOpen, setIsPendingModalOpen] = useState(false);\r\n    useEffect(() => {\r\n        const expireDate = new Date(expireDateForTrainer);\r\n        const currentTime = new Date();\r\n        if (currentTime > expireDate) {\r\n            // if (timeLeft < 0 && expireDateForTrainer !== null) {\r\n            setShowExpirationNotifyModal(true);\r\n        }\r\n    }, [timeLeft]);\r\n\r\n    const closeModal = () => {\r\n        setShowExpirationNotifyModal(false);\r\n    };\r\n\r\n    const handlePendingTasks = () => {\r\n        setIsPendingModalOpen(true);\r\n    };\r\n    return (\r\n        <ReactModal\r\n            isOpen={showExpirationNotifyModal}\r\n            onRequestClose={closeModal}\r\n            contentLabel=\"Expired Time Modal\"\r\n            shouldCloseOnOverlayClick={false}\r\n            ariaHideApp={false}\r\n            style={{\r\n                overlay: {\r\n                    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    zIndex: 9998,\r\n                },\r\n                content: {\r\n                    width: \"400px\",\r\n                    height: \"fit-content\",\r\n                    margin: \"auto\",\r\n                    padding: \"20px\",\r\n                    borderRadius: \"8px\",\r\n                    textAlign: \"center\",\r\n                    zIndex: 9999,\r\n                },\r\n            }}\r\n        >\r\n            <h2 style={{ marginBottom: \"20px\", color: \"red\" }}>\r\n                Your time has expired\r\n            </h2>\r\n            <h6>\r\n                Please Submit your{\" \"}\r\n                <span\r\n                    onClick={handlePendingTasks}\r\n                    className=\"link_color\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                >\r\n                    pending\r\n                </span>{\" \"}\r\n                tasks\r\n            </h6>\r\n            <button onClick={closeModal} className=\"btn btn-danger mt-4\">\r\n                Close\r\n            </button>\r\n\r\n            <PendingTasksForTrainee\r\n                isPendingModalOpen={isPendingModalOpen}\r\n                setIsPendingModalOpen={setIsPendingModalOpen}\r\n            />\r\n        </ReactModal>\r\n    );\r\n};\r\n\r\nexport default ExpiredNotifyModalForNewEmployee;\r\n","import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport Button from \"../../components/Button\";\r\nimport StartTimerConfirmationModal from \"./StartTimerConfirmationModal\";\r\nimport {\r\n    useCheckWorkingReportMutation,\r\n    useLazyGetTaskDetailsQuery,\r\n    useLazyGetUserTrackTimeQuery,\r\n    useStartTimerApiMutation,\r\n    useStopTimerApiMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport _ from \"lodash\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    setLessTrackModal,\r\n    setTaskStatus,\r\n} from \"../../../services/features/subTaskSlice\";\r\nimport LessTrackTimerModal from \"./stop-timer/LessTrackTimerModal\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { workingReportError } from \"../helper/timer-start-working-report-error-toaster\";\r\nimport ExpiredTimeModalForNewEmployee from \"./ExpiredTimeModalForNewEmployee\";\r\nimport ExpiredNotifyModalForNewEmployee from \"./ExpiredNotifyModalForNewEmployee\";\r\nimport { useGetSingleEvaluationQuery } from \"../../../services/api/EvaluationApiSlice\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// component\r\nconst TimerControl = ({ task, timerStart, setTimerStart, auth }) => {\r\n    const { data: EvaluationData, isLoading } = useGetSingleEvaluationQuery(\r\n        auth?.id\r\n    );\r\n\r\n    const expireDate = EvaluationData?.data[0]?.exp_date;\r\n    // console.log(\"auth\", auth?.id);\r\n    // console.log(\"evaluation data\", EvaluationData);\r\n    // console.log(\"expire date\", expireDate);\r\n    //new employee timer hiding and warning modal showing\r\n    const [timerStatusForWarningModal, setTimerStatusForWarningModal] =\r\n        useState(true);\r\n    const [timeLeft, setTimeLeft] = useState(0);\r\n    const [showExpirationWarningModal, setShowExpirationWarningModal] =\r\n        useState(false);\r\n    const [showExpirationNotifyModal, setShowExpirationNotifyModal] =\r\n        useState(false);\r\n    const [expiredTimerForNewEmployee, setExpiredTimerForNewEmployee] =\r\n        useState(false);\r\n    //expired time check and state change for new employee / Trainee\r\n    const [expireDateForTrainer, setExpireDateForTrainer] =\r\n        useState(expireDate);\r\n\r\n    // console.log(\"expired date\", expireDateForTrainer);\r\n    const [timerId, setTimerId] = useState(null);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [isOpenConfirmationModal, setIsOpenConfirmationModal] =\r\n        useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const dayjs = new CompareDate();\r\n    const loggedUser = new User(window?.Laravel?.user);\r\n    const navigate = useNavigate();\r\n\r\n    const timerStatus = task?.ranningTimer?.status;\r\n    const taskRunning = useMemo(() => timerStatus, [timerStatus]);\r\n\r\n    useEffect(() => {\r\n        if (taskRunning === \"running\") {\r\n            let serverTime = task?.ranningTimer?.time;\r\n            let localTime = dayjs.dayjs().unix();\r\n            let timer = localTime - serverTime;\r\n            setTimerStart(true);\r\n            setSeconds(timer);\r\n            setTimerId(task?.ranningTimer?.id);\r\n        }\r\n    }, [taskRunning]);\r\n\r\n    // console.log(\"time left\", timeLeft);\r\n    // console.log(\"expire date\", expireDateForTrainer);\r\n    //   timer control\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (timerStart) {\r\n            //   interval for timer\r\n            interval = setInterval(() => {\r\n                setSeconds((s) => s + 1);\r\n            }, 1000);\r\n        } else clearInterval(interval); // clear interval\r\n        return () => clearInterval(interval); // clear interval\r\n    }, [timerStart]);\r\n\r\n    const intervalRef = useRef(null);\r\n    useEffect(() => {\r\n        setExpireDateForTrainer(expireDate);\r\n    }, [timerId, taskRunning, expireDate]);\r\n\r\n    useEffect(() => {\r\n        // Function to check the expiration status\r\n        const checkExpiration = () => {\r\n            if (expireDateForTrainer !== null) {\r\n                const expireDate = new Date(expireDateForTrainer);\r\n                const currentTime = new Date();\r\n                const timeDifference =\r\n                    expireDate.getTime() - currentTime.getTime();\r\n                setTimeLeft(Math.max(0, Math.floor(timeDifference / 1000)));\r\n\r\n                if (\r\n                    currentTime >= expireDate &&\r\n                    _.includes([14, 15, 16, 17], Number(auth.roleId))\r\n                ) {\r\n                    setExpiredTimerForNewEmployee(true);\r\n                    stopTimer();\r\n                    clearInterval(intervalRef.current); // Stop the interval\r\n                }\r\n            }\r\n        };\r\n\r\n        // Check expiration immediately on mount\r\n        checkExpiration();\r\n\r\n        intervalRef.current = setInterval(checkExpiration, 1000); //expire checking every 1 seconds\r\n\r\n        return () => clearInterval(intervalRef.current);\r\n    }, [expireDateForTrainer, timerId]);\r\n\r\n    // time formating\r\n    const timer = () => {\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const s = Math.floor((seconds % 3600) % 60);\r\n\r\n        // format\r\n        let sec = s < 10 ? `0${s}` : s;\r\n        let min = minutes < 10 ? `0${minutes}` : minutes;\r\n        let hr = hours < 10 ? `0${hours}` : hours;\r\n        return `${hr}:${min}:${sec}`;\r\n    };\r\n\r\n    // tostar\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 5000,\r\n        timerProgressBar: true,\r\n    });\r\n\r\n    /******** Start timer control *********/\r\n\r\n    // timer start first timer : checking api\r\n    const [\r\n        startTimerFirstCheck,\r\n        { isFetching: startTimerFirstCheckIsFetching },\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    // start timer api slice\r\n    const [startTimerApi, { isLoading: timerStartStatusIsLoading }] =\r\n        useStartTimerApiMutation();\r\n\r\n    // stop timer api slice\r\n    const [stopTimerApi, { isLoading: timerStopStatusIsLoading }] =\r\n        useStopTimerApiMutation();\r\n\r\n    const [checkWorkReport] = useCheckWorkingReportMutation();\r\n\r\n    // timer start control\r\n    const startTimerControl = async () => {\r\n        setIsOpenConfirmationModal(false);\r\n\r\n        // check is developer submit their daily working report on previous day\r\n\r\n        try {\r\n            // check\r\n            const workReport = await checkWorkReport().unwrap();\r\n\r\n            // if submit all required report start timer\r\n            if (\r\n                workReport &&\r\n                workReport.data &&\r\n                (workReport.data.check_in_check_out.check_in_status ||\r\n                    _.includes([14, 15, 16, 17], Number(auth.roleId))) &&\r\n                (workReport.data.daily_task_report.daily_submission_status ||\r\n                    _.includes([14, 15, 16, 17], Number(auth.roleId))) &&\r\n                (workReport.data.hours_log_report.hours_log_report_status ||\r\n                    _.includes([14, 15, 16, 17], Number(auth.roleId)))\r\n            ) {\r\n                await startTimerApi({\r\n                    task_id: task?.id,\r\n                    project_id: task?.projectId,\r\n                    memo: task?.title,\r\n                    user_id: window?.Laravel?.user?.id,\r\n                })\r\n                    .unwrap()\r\n                    .then((res) => {\r\n                        if (res?.status === \"success\" || res?.status === 200) {\r\n                            setTimerStart(true);\r\n                            setTimerId(res?.id);\r\n                            dispatch(setTaskStatus(res?.task_status));\r\n                            // localStorage.setItem(\r\n                            //     \"expireDateForTrainer\",\r\n                            //     res?.evaluation\r\n                            // );\r\n                            Toast.fire({\r\n                                icon: \"success\",\r\n                                title: _.startCase(res?.message),\r\n                            });\r\n                        } else {\r\n                            Toast.fire({\r\n                                icon: \"warning\",\r\n                                title: _.startCase(res?.message),\r\n                            });\r\n                        }\r\n                    });\r\n            } else {\r\n                workingReportError();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        /*\r\n        startTimerApi({\r\n            task_id: task?.id,\r\n            project_id: task?.projectId,\r\n            memo: task?.title,\r\n            user_id: window?.Laravel?.user?.id,\r\n        })\r\n            .unwrap()\r\n            .then((res) => {\r\n                  if (res?.status === \"success\" || res?.status === 200) {\r\n                    setTimerStart(true);\r\n                    setTimerId(res?.id);\r\n                    dispatch(setTaskStatus(res?.task_status));\r\n                    Toast.fire({\r\n                        icon: 'success',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                } else {\r\n                    Toast.fire({\r\n                        icon: 'warning',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => { \r\n                if(err.status === 400){\r\n                    if(err.data.acknowledgement_submitted === false){\r\n                        Swal.fire({\r\n                            title:  \"You have not meet last day's minimum hour count. Please share the reasons!\",\r\n                            showDenyButton: true,\r\n                            confirmButtonText: 'Yes',\r\n                            denyButtonText: `Close`,\r\n                            icon: 'warning'\r\n                          }).then((result) => {\r\n                            // Read more about isConfirmed, isDenied below\r\n                            if (result.isConfirmed) {\r\n                                dispatch(setLessTrackModal({\r\n                                    show: true, \r\n                                    type: 'START_TIMER', \r\n                                    date: dayjs.dayjs(err?.data?.date).format(\"MMM DD, YYYY\"),\r\n                                }))\r\n                            } \r\n                          })\r\n                     }\r\n                     \r\n                     else if(err.data.daily_submission_submitted === false){\r\n                        Swal.fire({\r\n                            title:  \"You didn't submit last day daily submission\",\r\n                            showDenyButton: true,\r\n                            confirmButtonText: 'Yes',\r\n                            denyButtonText: `Close`,\r\n                            icon: 'warning'\r\n                          }).then((result) => {\r\n                            // Read more about isConfirmed, isDenied below \r\n                            if (result.isConfirmed) {\r\n                                navigate(`?modal=daily-submission&date_type=last-date`)\r\n                            } \r\n                          })\r\n                     }\r\n    \r\n                } \r\n            });\r\n        */\r\n    };\r\n\r\n    // start timer function\r\n    const startTimer = (e) => {\r\n        e.preventDefault();\r\n        setTimerStatusForWarningModal(true);\r\n        startTimerFirstCheck(\r\n            `/${task?.id}/json?mode=developer_first_task_check&project_id=${task?.projectId}`\r\n        )\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res.is_first_task) {\r\n                    setIsOpenConfirmationModal(true);\r\n                } else startTimerControl();\r\n            });\r\n    };\r\n\r\n    /*********** End of Start Timer control ***************/\r\n\r\n    // stop timer\r\n    const stopTimer = () => {\r\n        //navigate(`/account/tasks/${task?.id}?modal=daily-submission&trigger=stop-button`);\r\n        setTimerStatusForWarningModal(false);\r\n        stopTimerApi({ timeId: timerId, task_id: task?.id })\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res?.status === \"success\" || res?.status === 200) {\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                    setTimerStart(false);\r\n                    setSeconds(0);\r\n                    timerId(null);\r\n                } else if (res?.status === 400) {\r\n                    Swal.fire({\r\n                        icon: \"warning\",\r\n                        title: _.startCase(res?.message),\r\n                        showConfirmButton: true,\r\n                    });\r\n                    window.location.reload();\r\n                } else {\r\n                    Toast.fire({\r\n                        icon: \"warning\",\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                }\r\n            });\r\n    };\r\n    const [getUserTrackTime, { isFetching: trackTimerFetcing }] =\r\n        useLazyGetUserTrackTimeQuery();\r\n\r\n    // handle stop timer\r\n    const handleStopTimer = () => {\r\n        // fetch data\r\n        getUserTrackTime(loggedUser?.getId())\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res) {\r\n                    let currentTime = dayjs.dayjs(res.current_time);\r\n                    let target = currentTime\r\n                        .set(\"hour\", 16)\r\n                        .set(\"minute\", 45)\r\n                        .set(\"second\", 0);\r\n                    const isSaturday = currentTime.day() === 6;\r\n\r\n                    if (isSaturday) {\r\n                        target = currentTime\r\n                            .set(\"hour\", 13)\r\n                            .set(\"minute\", 0)\r\n                            .set(\"second\", 0);\r\n                    }\r\n\r\n                    let check = dayjs.dayjs(currentTime).isBefore(target);\r\n                    let isDev = _.includes(\r\n                        [5, 9, 10],\r\n                        Number(auth?.getRoleId())\r\n                    );\r\n                    if (!check && isDev) {\r\n                        res.tracked_times < res.target_time\r\n                            ? dispatch(\r\n                                  setLessTrackModal({\r\n                                      show: true,\r\n                                      type: \"STOP_TIMER\",\r\n                                      date: \"Today\",\r\n                                  })\r\n                              )\r\n                            : stopTimer();\r\n                    } else {\r\n                        stopTimer();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    // control loading states...\r\n    useEffect(() => {\r\n        if (startTimerFirstCheckIsFetching || timerStartStatusIsLoading) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [startTimerFirstCheckIsFetching, timerStartStatusIsLoading]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!timerStart ? (\r\n                <React.Fragment>\r\n                    {!timerStartStatusIsLoading &&\r\n                    !startTimerFirstCheckIsFetching ? (\r\n                        <div>\r\n                            {!expiredTimerForNewEmployee ? (\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    onClick={startTimer}\r\n                                    className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                                >\r\n                                    <i className=\"fa-solid fa-circle-play\" />\r\n                                    <span>Start Timer</span>\r\n                                </Button>\r\n                            ) : (\r\n                                <Button\r\n                                    variant=\"danger\"\r\n                                    className=\"d-flex align-items-center  \"\r\n                                >\r\n                                    <i\r\n                                        className=\"fa-solid fa-circle-play\"\r\n                                        style={{ color: \"white\" }}\r\n                                    />\r\n\r\n                                    <span>Time Expired</span>\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                    ) : (\r\n                        <Button className=\"cursor-processing mr-2\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{ width: \"18px\", height: \"18px\" }}\r\n                            ></div>\r\n                            Starting...\r\n                        </Button>\r\n                    )}\r\n                    <StartTimerConfirmationModal\r\n                        isOpen={isOpenConfirmationModal}\r\n                        onConfirm={startTimerControl}\r\n                    />\r\n                </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                    >\r\n                        <i className=\"fa-solid fa-stopwatch\" />\r\n                        <span className=\"d-inline ml-1\">{timer()}</span>\r\n                    </Button>\r\n\r\n                    {/* <StopTimerControl\r\n                        stopTimer={stopTimer}\r\n                        timerStopStatusIsLoading={timerStopStatusIsLoading}\r\n                    /> */}\r\n\r\n                    {trackTimerFetcing ? (\r\n                        <Button className=\"cursor-processing\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{ width: \"18px\", height: \"18px\" }}\r\n                            />\r\n                            Processing...\r\n                        </Button>\r\n                    ) : !timerStopStatusIsLoading ? (\r\n                        <Button\r\n                            variant=\"tertiary\"\r\n                            onClick={handleStopTimer}\r\n                            className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                        >\r\n                            <i className=\"fa-solid fa-pause\" />\r\n                            <span className=\"d-inline ml-1\">Stop Timer</span>\r\n                        </Button>\r\n                    ) : (\r\n                        <Button className=\"cursor-processing\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{ width: \"18px\", height: \"18px\" }}\r\n                            />\r\n                            Stopping...\r\n                        </Button>\r\n                    )}\r\n                </React.Fragment>\r\n            )}\r\n\r\n            {/* LessTrackTimerModal */}\r\n            <LessTrackTimerModal\r\n                stopTimer={stopTimer}\r\n                startTimer={startTimerControl}\r\n            />\r\n\r\n            {_.includes([14, 15, 16, 17], Number(auth.roleId)) && (\r\n                <>\r\n                    <ExpiredTimeModalForNewEmployee\r\n                        showExpirationWarningModal={showExpirationWarningModal}\r\n                        setShowExpirationWarningModal={\r\n                            setShowExpirationWarningModal\r\n                        }\r\n                        timeLeft={timeLeft}\r\n                        setTimeLeft={setTimeLeft}\r\n                        taskRunning={taskRunning}\r\n                        task={task}\r\n                        timerStatusForWarningModal={timerStatusForWarningModal}\r\n                    />\r\n                    <ExpiredNotifyModalForNewEmployee\r\n                        expireDateForTrainer={expireDateForTrainer}\r\n                        showExpirationNotifyModal={showExpirationNotifyModal}\r\n                        setShowExpirationNotifyModal={\r\n                            setShowExpirationNotifyModal\r\n                        }\r\n                        timeLeft={timeLeft}\r\n                    />\r\n                </>\r\n            )}\r\n\r\n            {console.log(\r\n                \"timeleft , expireDate, show expire task modal\",\r\n                timeLeft,\r\n                expireDateForTrainer,\r\n                showExpirationNotifyModal\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TimerControl;\r\n","import Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport { StartTimerWorkingReport } from '../../components/StartTimerWorkingReportPopup'\r\n\r\n\r\nexport const workingReportError = () => {\r\n    withReactContent(Swal).fire({\r\n        icon: 'error',\r\n        html: <StartTimerWorkingReport />,\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'No',\r\n        customClass: {\r\n            confirmButton: 'btn btn-primary py-2 px-4',\r\n            cancelButton: 'btn py-2 px-4 text-white'\r\n        },\r\n    }).then(result => {\r\n        if(result.isConfirmed){\r\n            window.location.reload();\r\n        }\r\n    })\r\n}\r\n","import React, {useState, useRef} from 'react'\r\nimport Button from '../../../components/Button'\r\nimport Modal from '../../../components/Modal';\r\nimport { useClickAway } from 'react-use';\r\nimport { useSubmitForClientApprovalMutation } from '../../../../services/api/SingleTaskPageApi';\r\nimport Loader from '../../../components/Loader';\r\n\r\nexport const SubmitForClientApproval = ({task, auth}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const closeModal = () => setIsOpen(false)\r\n  const openModal = () => setIsOpen(true)\r\n  const ref = useRef();\r\n  useClickAway(ref, closeModal);\r\n\r\n\r\n  const [submitForClientApproval, {isLoading}] = useSubmitForClientApprovalMutation();\r\n\r\n\r\n  const handleOnSubmit = ()=>{\r\n    submitForClientApproval({task_id: task?.id, user_id: auth?.getId()})\r\n    .unwrap()\r\n    .then(res => {\r\n      Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: 'Submitted Task For Client Approval Successfully',\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n      });\r\n    })\r\n    .catch(err => console.log(err))\r\n    .finally(() => closeModal())\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <React.Fragment>\r\n          {\r\n            isLoading ? \r\n            <React.Fragment>\r\n              <div className=\"cursor-processing cnx__btn cnx__btn_sm cnx__btn_primary\">\r\n                    <div\r\n                        className=\"spinner-border text-white\"\r\n                        role=\"status\"\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                        }}\r\n                    ></div>\r\n                    Processing...\r\n                </div>\r\n            </React.Fragment>\r\n            :\r\n              <Button \r\n                  variant='success'\r\n                  onClick={openModal}\r\n                  className='d-flex align-items-center border-success'\r\n              >\r\n                  <i className=\"fa-solid fa-handshake-angle\"></i>\r\n                  <span className=\"d-inline ml-1\">Submit For Client Approval</span>\r\n              </Button> \r\n          }\r\n        </React.Fragment>\r\n        <Modal isOpen={isOpen} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n              <div \r\n                ref={ref}\r\n                className=\"sp1_single_task--modal-panel position-absolute p-2 mb-3\"\r\n                style={{top:'50%', left:'50%',transform:'translate(-50%, -50%)', width: '250px'}}\r\n              >\r\n                {!isLoading &&\r\n                  <div className='d-flex align-items-center border-bottom pb-1'>\r\n                    <Button variant='tertiary' onClick={closeModal} className='ml-auto border-0'>\r\n                      <i className='fa-solid fa-xmark' />\r\n                    </Button>\r\n                </div>\r\n                }\r\n                <div className='d-flex flex-column align-items-center p-2' style={{gap:'10px'}}>\r\n                  {isLoading && \r\n                    <React.Fragment>\r\n                      <Loader title='Submitting...' />\r\n                    </React.Fragment>\r\n                  }\r\n                  \r\n                  {!isLoading &&\r\n                    <React.Fragment>\r\n                      <img src='/img/warning.gif' alt='' style={{width: '50px', height: '50px'}}/>\r\n                      <div className='d-flex flex-column aling-items-center'>\r\n                        <h5 className='d-block mb-3'>Are You Sure?</h5>\r\n                        <div className='d-flex align-items-center justify-content-center'>\r\n                          <Button onClick={handleOnSubmit} className='mr-2 py-0'>Yes</Button>\r\n                          <Button variant='tertiary' onClick={closeModal} className='py-0'>No</Button>\r\n                        </div>\r\n                      </div>\r\n                   </React.Fragment>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Button from '../../../components/Button'\r\nimport { useConfirmClientApprovalMutation } from '../../../../services/api/SingleTaskPageApi'\r\nimport SubmitButton from '../../../components/SubmitButton';\r\n\r\nconst ClientAcceptedTask = ({task}) => { \r\n\r\n  const [confirmClientApproval, {isLoading}] = useConfirmClientApprovalMutation();\r\n\r\n  const handleClick=(e)=>{\r\n    e.preventDefault();\r\n    confirmClientApproval({\r\n        task_id: task?.id\r\n    }).unwrap()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <SubmitButton \r\n            onClick={handleClick}\r\n            variant='success'\r\n            isLoading={isLoading}\r\n            className='d-flex align-items-center border-success'\r\n        >\r\n            <i className=\"fa-solid fa-check\"></i>\r\n            <span className=\"d-inline ml-1\">Client Has Accepted This Task</span>\r\n        </SubmitButton>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientAcceptedTask","import React, { useState, useRef } from \"react\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport Button from \"../../../components/Button\";\r\nimport { useCreateRevisionMutation } from \"../../../../services/api/SingleTaskPageApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setTaskStatus } from \"../../../../services/features/subTaskSlice\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\n\r\n\r\n\r\nconst projectManagerAcknowladgement = [\r\n    {\r\n        id: \"CPRx01\",\r\n        title: 'Client added some additional requirements which was not part of the actual job scope',\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'PLRx12',\r\n        title: 'I submitted the work without proper checking and overlooked the issues',\r\n        isDeniable: true,\r\n    },\r\n    {\r\n        id: 'PLRx03',\r\n        title: 'I couldnt understand clients expectation properly earlier',\r\n        isDeniable: false\r\n    },\r\n    {\r\n        id: 'PLRx04',\r\n        title: 'I didnt understand the job properly as it’s very technical in nature and relied fully on technical team for success',\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'CPRx05',\r\n        title: \"The client didnt change his instruction but his interpretation of the original instruction now is weird and nobody could have interpreted it this way from his instruction\",\r\n        isDeniable: false,\r\n        createDispute: true,\r\n    },\r\n    {\r\n        id: 'CPRx06',\r\n        title: \"The client is asking for some minor changes which he couldn’t specify until he saw the completed work and we can’t charge him for these\",\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'SPRx01',\r\n        title: \"Sales person discussed something in a verbal meeting with the client and then forgot to document it when assigning\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    },\r\n    {\r\n        id: 'SPRx02',\r\n        title: \"Sales person couldn't define requirement properly and I also failed to define it after I took over\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    },\r\n    {\r\n        id: 'SPRx03',\r\n        title: \"Sales overpromised: This task is not doable to this extent or in this way and I informed management about it on day 1\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    }\r\n]\r\n\r\n\r\nconst AssigneeToLeadFromClientRevision = ({ close, onBack, onSubmit, task, auth, isSubmitting }) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [additionalPaid, setAdditionalPaid] = useState('');\r\n    const [additionalInfo, setAdditionalInfo] = useState(null);\r\n    const [additionalAmount, setAdditionalAmount] = useState(0);\r\n    const [additionalError, setAdditionalError] = useState('');\r\n\r\n    // radio button change\r\n    const handleChange = (e, reason) => {\r\n        setReason(reason);\r\n        setAdditionalAmount(0);\r\n        setAdditionalPaid('');\r\n        setAdditionalInfo(null);\r\n    };\r\n\r\n\r\n    // on blur\r\n    const handleBlurEvent = () => {\r\n        Swal.fire({\r\n            title: 'Do you want to create a milestone?',\r\n            // showDenyButton: true,\r\n            confirmButtonText: 'Yes',\r\n            // denyButtonText: `No`,\r\n            }).then(res => {\r\n            if(res.isConfirmed){\r\n                window.open(`/account/projects/${task?.projectId}?tab=milestones`, '_blank');\r\n            }\r\n        })\r\n    }\r\n\r\n    // additional payment\r\n    const hasAdditionalPayment = (isPay) =>{\r\n        setAdditionalPaid(() => isPay ? 'yes': 'no');\r\n    }\r\n\r\n    // editor change text\r\n    const handleEditorTextChange= (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    }\r\n\r\n    // validation\r\n    const validate = () => {\r\n       let errorCount = 0;\r\n\r\n       if(comment === \"\"){\r\n            errorCount++;\r\n            setCommentError('You have to explain the revision in details, so that lead developer can understand where they need to work.')\r\n       }\r\n\r\n       if(!reason){\r\n            errorCount++;\r\n            setReasonError('You have to select a reason from above options')\r\n       }\r\n\r\n\r\n       if(reason && reason?.id === 'CPRx01'){\r\n            if(additionalPaid === 'yes' && additionalAmount === 0){\r\n                errorCount++;\r\n                setAdditionalError('You have to provide amount')\r\n            }\r\n\r\n            if(additionalPaid === 'no' && !additionalInfo){\r\n                errorCount++;\r\n                setAdditionalError('You have to select an option')\r\n            }\r\n       }\r\n\r\n       return errorCount === 0;\r\n    }\r\n\r\n\r\n    // handle submission\r\n    const handleSubmission=(e)=>{\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        const data = {\r\n            acknowledgement_id: reason?.id ,\r\n            task_id: task?.id,\r\n            user_id: auth?.id,\r\n            is_deniable: reason?.isDeniable,\r\n            revision_acknowledgement: reason?.title,\r\n            comment: comment,\r\n            additional_amount: Number(additionalAmount),\r\n            additional_status: additionalPaid,\r\n            additional_comment: additionalInfo?.info ?? '',\r\n            dispute_create: reason?.createDispute || additionalInfo?.disputeCreate || false\r\n        }\r\n\r\n        if(validate()){\r\n            onSubmit(data);\r\n        }else{\r\n            console.log('Your forgot to fillup some required fields')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <form className=\"px-3\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select Reason for Revision<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {\r\n                                _.map(projectManagerAcknowladgement, option => (\r\n                                    <div key={option.id} className=\"form-check d-flex align-items-start mb-2\">\r\n                                        <input\r\n                                            className=\"form-check-input mr-2\"\r\n                                            type=\"radio\"\r\n                                            name=\"exampleRadios\"\r\n                                            id={option.id}\r\n                                            required= {true}\r\n                                            onChange={e => handleChange(e, option)}\r\n                                            value={option.title}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n\r\n                                        />\r\n                                        <label\r\n                                            className=\"form-check-label\"\r\n                                            htmlFor={option.id}\r\n                                            style={{ marginBottom: \"3px\" }}\r\n                                        >\r\n                                           {option.title}\r\n                                        </label>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        {reasonError && <small id=\"emailHelp\" className=\"form-text text-danger\">{reasonError}</small>}\r\n                    </div>\r\n\r\n                    {reason?.id === 'CPRx01' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Is the client paying additionally for these changes? <sup>*</sup></label>\r\n                            <div className=\"d-block\">\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"milestone\"\r\n                                            type=\"radio\"\r\n                                            id=\"createMilestoneYes\"\r\n                                            value=\"1\"\r\n                                            onChange={(e)=>hasAdditionalPayment(true)}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"createMilestoneYes\" className=\"form-check-label\">Yes</label>\r\n                                    </div>\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"milestone\"\r\n                                            type=\"radio\"\r\n                                            id=\"createMilestoneNo\"\r\n                                            value=\"0\"\r\n                                            onChange={(e) => hasAdditionalPayment(false)}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"createMilestoneNo\" className=\"form-check-label\">No</label>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {additionalPaid === 'yes' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Amount? <sup>*</sup></label>\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">$</div>\r\n                                </div>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onChange={e => setAdditionalAmount(e.target.value)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inlineFormInputGroup\"\r\n                                    placeholder=\"300\"\r\n                                    onBlur={handleBlurEvent}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        additionalPaid === 'no' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Is the client paying additionally for these changes? <sup>*</sup></label>\r\n                            <div className=\"d-block\">\r\n                                    <div className=\"form-check mb-3\">\r\n                                        <input\r\n                                            name=\"additionalInformation\"\r\n                                            className=\"form-check-input\"\r\n                                            type=\"radio\"\r\n                                            id=\"additionalInformation1\"\r\n                                            onChange={e => setAdditionalInfo({\r\n                                                info: e.target.value,\r\n                                                disputeCreate: false,\r\n                                            })}\r\n                                            value=\"Client changed his/her mind and he/she don't want to pay additional payment. We have to continue the task for client satisfaction\"\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"additionalInformation1\" className=\"form-check-label\">\r\n                                            Client changed his/her mind and he/she don't want to pay additional payment. We have to continue the task for client satisfaction\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"additionalInformation\"\r\n                                            type=\"radio\"\r\n                                            id=\"additionalInformation2\"\r\n                                            value=\"The client is interpreting his original instruction in a very unusual way!\"\r\n                                            onChange={(e) => setAdditionalInfo({\r\n                                                info: e.target.value,\r\n                                                disputeCreate: true,\r\n                                            })}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"additionalInformation2\" className=\"form-check-label\">\r\n                                        The client is interpreting his original instruction in a very unusual way!\r\n                                        </label>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    { additionalError && <div className=\"mb-3\">\r\n                        <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                            {additionalError}\r\n                        </small>\r\n                    </div>}\r\n\r\n                    {/* Editor  */}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Explain or Comment<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"ck-editor-holder\">\r\n                            <CKEditorComponent onChange={handleEditorTextChange}/>\r\n                        </div>\r\n                        {commentError && <small id=\"emailHelp\" className=\"form-text text-danger\">{commentError}</small>}\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button onClick={onBack} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                Back\r\n                            </Button>\r\n                            <SubmitButton title=\"Submit\" onClick={handleSubmission} isLoading={isSubmitting} />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AssigneeToLeadFromClientRevision;\r\n","import React, {useState, lazy, Suspense} from 'react'\r\nimport Button from '../../../components/Button' \r\nimport Modal from '../../../components/Modal';\r\nimport { SingleTask } from '../../../../utils/single-task';\r\nimport ClientRevisionForm from './ClientRevisionForm';\r\nimport AssigneeToLeadFromClientRevision from './AssigneeToLeadFromClientRevision';\r\nimport { useStoreClientRevisionTaskMutation } from '../../../../services/api/SingleTaskPageApi';\r\n\r\nconst ClientRevision = ({task, auth}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const [show,setShow] = useState('ASSINEE_TO_DEV');\r\n    \r\n    const singleTask = task;\r\n\r\n    // client revision data\r\n    const [clientComment, setClientComment] = useState('');\r\n    const [clientAcknowledgement, setClientAcknowladgement] = useState('');\r\n\r\n\r\n    const [storeClientRevisionTask, {isLoading}] = useStoreClientRevisionTaskMutation();\r\n\r\n    const handleSubmit = (data) => {\r\n       setClientAcknowladgement(data?.reason);\r\n       setClientComment(data?.comment); \r\n       setShow('ASSINEE_TO_DEV'); \r\n    }\r\n\r\n    const close = () => {\r\n        setRevisionModal(false)\r\n    }\r\n\r\n    const handleSubmitToStore = (data) =>{\r\n        const fData = {\r\n            ...data,\r\n            project_id: task?.projectId\r\n        }\r\n  \r\n        // show toster notification\r\n        const showToster= () =>{\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n            }) \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Task submitted for Revision successfully'\r\n            })\r\n        }\r\n    \r\n        storeClientRevisionTask(fData)\r\n        .unwrap()\r\n        .then(res => showToster())\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    \r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn sp1-st-revision-btn'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Client Has Revision</span>\r\n        </Button> \r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <div\r\n                    className=\"sp1_single_task--modal-panel w-100 pb-3\"\r\n                    style={{ maxWidth: \"550px\" }}\r\n                >\r\n                    <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <div className=\"font-weight-bold f-14\">\r\n                            Task#{task?.id} - Client Revision\r\n                        </div>\r\n                        <Button onClick={close} className=\"\">\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {/* {show === 'CLIENT_REVISION' && \r\n                        <ClientRevisionForm \r\n                            task={singleTask}\r\n                            close={() => setRevisionModal(false)} \r\n                            onSubmitForm={(data) => handleSubmit(data)}\r\n                        />\r\n                    }  */}\r\n                    {/* {show === \"ASSINEE_TO_DEV\" && */}\r\n                        <AssigneeToLeadFromClientRevision \r\n                            task={task}\r\n                            auth={auth}\r\n                            isSubmitting = {isLoading}\r\n                            onSubmit={handleSubmitToStore}\r\n                            close={() => setRevisionModal(false)}\r\n                            onBack={() => setShow('CLIENT_REVISION')}\r\n                        />\r\n                    {/* }  */}\r\n                </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientRevision \r\n\r\n","import React from 'react'\r\nimport { SubmitForClientApproval } from './SubmitForClientApproval'\r\nimport ClientAcceptedTask from './ClientAcceptedTask'\r\nimport { SingleTask } from '../../../../utils/single-task'\r\nimport ClientRevision from '../Revision/ClientRevision'\r\nimport { submitForClientApproval, clientApproveConfirmationButtonPermission } from '../../../permissions'\r\n\r\nconst ClientApproval = ({task, status, auth}) => {\r\n  return (\r\n    <React.Fragment>\r\n        { submitForClientApproval({task, status, auth}) && <SubmitForClientApproval task={task} auth={auth} /> }\r\n        { clientApproveConfirmationButtonPermission({task, status, auth}) && \r\n          <React.Fragment>\r\n            <ClientAcceptedTask task={task} auth={auth} />\r\n            <ClientRevision task={task} auth={auth} />\r\n          </React.Fragment>\r\n        }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientApproval","import React, { useState, lazy, Suspense } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport { SingleTask } from \"../../../../utils/single-task\";\r\nimport Loader from \"../../../components/Loader\";\r\nconst ReportForm = lazy(() => import(\"./ReportForm\"));\r\n\r\nconst ReportControl = ({ task }) => {\r\n    const [reportModalOpen, setReportModalOpen] = useState(false); \r\n\r\n    const close = () => setReportModalOpen(false);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={() => setReportModalOpen(true)}\r\n                className=\"ml-auto d-flex align-items-center sp1-st-revision-btn --view-revision sp1_report_btn\"\r\n            >\r\n                <i className=\"fa-solid fa-flag\"></i>\r\n                <span className=\"d-inline ml-1\">Report</span>\r\n            </Button>\r\n\r\n            <Modal isOpen={reportModalOpen} className=\"sp1_single_task--modal\">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_single_task--modal-panel task-report-form--modal-panel\"\r\n                    >\r\n                        <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                            <div className=\"font-weight-bold f-14\">\r\n                                Task#{task?.id} : Report\r\n                            </div>\r\n                            <Button onClick={close} className=\"\">\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n                        <Suspense fallback={<div className=\"py-3 d-flex align-items-center justify-content-center\"><Loader /></div>}>\r\n                            <ReportForm task={task} close={close} />\r\n                        </Suspense>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ReportControl;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { useDeveloperCanCompleteTaskQuery, useLazyCheckSubTaskTimerQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useDailySubmission } from \"../../../single-task/hooks/useDailySubmission\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport {\r\n    approveButtonPermission,\r\n    markAsCompletedButtonPermission,\r\n    needRevisionPermision,\r\n    revisionButtonPermission,\r\n    timeControlPermision\r\n} from \"../../permissions\";\r\nimport DailySubmissionControl from './DailySubmissionControl';\r\nimport MarkAsComplete from \"./MarkAsComplete\";\r\nimport RevisionControl from \"./Revision/RevisionControl\";\r\nimport RevisionViewControl from \"./Revision/RevisionViewControl\";\r\nimport SubtaskCreationControl from \"./SubtaskCreationControl\";\r\nimport TimerControl from \"./TimerControl\";\r\nimport ApproveTask from \"./approve-task/ApproveTask\";\r\nimport ClientApproval from \"./client-approval/ClientApproval\";\r\nimport ReportControl from \"./report/Report\";\r\n\r\nconst TaskAction = ({ task, status }) => {\r\n    const loggedUser = new User(window?.Laravel?.user);\r\n    const [timerStart, setTimerStart] = React.useState(false);\r\n    const { isEnable } = useDailySubmission();\r\n\r\n\r\n    const [checkSubTaskTimer, { isFetching }] = useLazyCheckSubTaskTimerQuery();\r\n\r\n    const {  data: checkMarkAsCompleteEnableStatus, isLoading: isLoadingCompleteCheck } = useDeveloperCanCompleteTaskQuery(task?.id, {skip: !task.id});\r\n    const ENABLE_MARKASCOMPLETE_BUTTON = task && (task?.isSubtask ? checkMarkAsCompleteEnableStatus?.message === \"Developer can complete this task\" : true);\r\n\r\n    // console.log({task});\r\n\r\n\r\n    const onModalEditButtonClick = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(task?.id)\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res?.status === 200) {\r\n                    window.location = `/account/tasks/${task?.id}/edit`;\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Oops...\",\r\n                        text: \"You cannot edit the task because timer is already running\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    let time = task.isSubtask ? task?.parentTaskTimeLog : task?.totalTimeLog;\r\n\r\n    return (\r\n        <div\r\n            className=\"d-flex flex-wrap border-bottom pb-3 sp1_task_btn_group\"\r\n            style={{ gap: \"10px\" }}\r\n        >\r\n            {/* with permission */}\r\n            {timeControlPermision({ task, status, loggedUser }) ? (\r\n                <TimerControl\r\n                    task={task}\r\n                    timerStart={timerStart}\r\n                    setTimerStart={setTimerStart}\r\n                    auth={loggedUser}\r\n                />\r\n            ) : null}\r\n            {!timerStart && !isLoadingCompleteCheck &&\r\n            ENABLE_MARKASCOMPLETE_BUTTON && markAsCompletedButtonPermission({ task, status, loggedUser }) ? (\r\n                <MarkAsComplete task={task} auth={loggedUser} />\r\n            ) : null}\r\n\r\n\r\n            {/* develop */}\r\n            {approveButtonPermission({ task, status, loggedUser }) ? (\r\n                <ApproveTask task={task} status={status} auth={loggedUser} />\r\n            ) : null}\r\n\r\n            {needRevisionPermision({ task, status, loggedUser }) ? (\r\n                <RevisionControl task={task} auth={loggedUser} />\r\n            ) : null}\r\n\r\n            {/*  */}\r\n            {revisionButtonPermission({ task, status, loggedUser }) && (\r\n                <RevisionViewControl\r\n                    task={task}\r\n                    status={status}\r\n                    auth={loggedUser}\r\n                />\r\n            )}\r\n            {/* <TimeExtension task={task} /> */}\r\n            <ClientApproval task={task} status={status} auth={loggedUser} />\r\n\r\n             {/* daily submission control */}\r\n             {_.includes([5, 9, 10], loggedUser?.getRoleId()) && isEnable && (\r\n                <DailySubmissionControl />\r\n             )}\r\n\r\n\r\n\r\n            {/* right side button container */}\r\n            <div style={{display:'inline-flex',marginLeft:'auto',gap:'0 10px'}}>\r\n\r\n                {/* Subtask creation guideline */}\r\n                {_.includes([6, 4, 1], loggedUser?.getRoleId()) && !task?.isSubtask &&  <SubtaskCreationControl />}\r\n\r\n\r\n                {/*********** Report Control ***********/}\r\n                {_.includes([6, 5, 9, 10], loggedUser?.getRoleId()) && (\r\n                    <ReportControl task={task} />\r\n                )}\r\n\r\n\r\n                {/* {taskEditPermision({ task, status, auth: loggedUser }) && (\r\n                    <Link\r\n                        to={`?modal=edit&task=${task?.id}`}\r\n                        onClick={onModalEditButtonClick}\r\n                        className=\"cnx__btn cnx__btn_sm cnx__btn_primary sp1_task-edit-button\"\r\n                        style={{\r\n                            marginLeft: 'none'\r\n                        }}\r\n                    >\r\n                        {isFetching ? (\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgb(255, 255, 255)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                }}\r\n                            />\r\n                        ) : (\r\n                            <i className=\"fa-regular fa-pen-to-square\"></i>\r\n                        )}\r\n                        <span className=\"ml-1 mr-2\">Edit</span>\r\n                    </Link>\r\n                )} */}\r\n\r\n                {/* {task &&  task.boardColumn.id === 2 && !(_.includes([5, 6], loggedUser?.getRoleId()))  &&\r\n                    <Link\r\n                        to={`?modal=edit&task=${task?.id}`}\r\n                        className=\"cnx__btn cnx__btn_sm cnx__btn_primary sp1_task-edit-button\"\r\n                        style={{\r\n                            marginLeft: 'none'\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-regular fa-pen-to-square\" />\r\n                        Edit\r\n                    </Link>\r\n                } */}\r\n            </div>\r\n\r\n            {/* {{-- 3 dot --}} */}\r\n            {/* <button type=\"button\" className=\"d-flex align-items-center btn btn-sm btn-outline-dark mr-2 border-0 ml-auto\">\r\n                <i className=\"bi bi-three-dots\" ></i>\r\n            </button> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskAction;\r\n","import { User } from \"../../../utils/user-details\";\r\nimport dayjs from 'dayjs';\r\n\r\nconst TableRow = ({log}) => {\r\n    const user = log?.user ? new User(log.user) : null;\r\n    return(\r\n        <tr className='__tbody_tr'>\r\n            <td className='__tbody_td _tbody_td_employee'>\r\n                <img src={user?.getAvatar()} alt={user?.getName()} />\r\n                <span className='px-2'>{user?.getName()}</span>\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_start_time'>\r\n                {dayjs(log?.start_time).format('MMM DD, YYYY')} <br/>\r\n                {dayjs(log?.start_time).format('hh:mm a')}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_start_time _tbody_td_start_end'>\r\n                {log?.end_time ? <>\r\n                    {dayjs(log?.end_time).format('MMM DD, YYYY')} <br/>\r\n                    {dayjs(log?.end_time).format('hh:mm a')}\r\n                </> : <span className='text-success font-weight-bold'>Active</span>}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_memo'>\r\n                {log?.memo}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_hour_logged'>\r\n                {log?.hours_logged}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow\r\n","import React from \"react\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from '../../components/Modal';\r\n\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport TableRow from \"./InnerTableRow\";\r\nimport _ from \"lodash\";\r\nimport Avatar from \"../../../global/Avatar\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\nimport Button from \"../../components/Button\";\r\n\r\n\r\n\r\n\r\nconst Table = ({data}) => {\r\n    return(\r\n        <table className=\"sp1_subtask_log-tbl\">\r\n            <thead className=\"__thead\">\r\n                <tr>\r\n                    <th>Employee</th>\r\n                    <th>Start Time</th>\r\n                    <th>End Time</th>\r\n                    <th>Memo</th>\r\n                    <th>Hours Logged</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"__tbody\">\r\n                {data\r\n                    ? data.map((log) => (\r\n                        <TableRow key={log.id} log={log} />\r\n                    ))\r\n                    : null}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\n\r\nconst Card = ({log, className}) => {\r\n    const user = new User(log.user);\r\n    return(\r\n        <div className={`border-bottom ${className}`}>\r\n            <div className=\"d-flex align-items-center\" style={{gap:'10px'}}>\r\n                <Avatar \r\n                    src={user?.getAvatar()} \r\n                    name={user?.getName()} \r\n                    alt={user?.getName()} \r\n                    type=\"circle\"\r\n                /> \r\n                <h6>{user?.getName()}</h6>\r\n            </div>\r\n            <div className=\"d-flex flex-column flex-wrap ml-5\" style={{gap: '4px'}}>\r\n                <span><span className=\"font-weight-bold\">Memo:</span> {log?.memo}</span>\r\n                <span><span className=\"font-weight-bold\">Hours Logged:</span> {log?.hours_logged}</span>\r\n                <span><span className=\"font-weight-bold\">Start Time:</span> {dayjs(log?.start_time).format('MMM DD, YYYY hh:mm a')} </span>\r\n                <span><span className=\"font-weight-bold\">End Time:</span> {dayjs(log?.end_time).format('MMM DD, YYYY hh:mm a')} </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CardView = ({data}) => {\r\n    return(\r\n        <div className=\"d-flex flex-column\" style={{gap: '10px'}}>\r\n            {_.map(data, (log) =>(\r\n                    <Card log={log} key={log.id} className=\"w-100 py-2\" />\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\nconst TimeLogTable = ({ isOpen, close, toggle, data = [] }) => {\r\n    const ref = React.useRef(null);\r\n    const {width: deviceWidth} = useWindowSize();\r\n    useClickAway(ref, close);\r\n\r\n\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\"> \r\n                <div className='sp1-subtask-form --modal-panel-header'> \r\n                    <h6>Session Logs</h6> \r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button> \r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <div className=\"mt-3\">\r\n                        {deviceWidth > 800 ? <Table data={data} />: <CardView data={data} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if(deviceWidth > 1200){\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </CustomModal>\r\n        );\r\n    }else{\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </Modal>\r\n        );\r\n    }\r\n\r\n};\r\nexport default TimeLogTable;\r\n","import React from 'react'\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst TimeLogItemLoader = ({}) => {\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item py-2\" style={{gap: '10px', height: '30px'}}>\r\n        <div className='d-flex align-items-center'>\r\n            <Placeholder width=\"24px\" height=\"24px\" type='circle' className='mr-2' />\r\n            <span className='sp1_time_log_emplyee_name'>\r\n                <Placeholder width='100px' />\r\n            </span>\r\n        </div> \r\n\r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div> \r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div>\r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeLogItemLoader","import React, {lazy, Suspense} from 'react'\r\nconst TimeLogItem = lazy(() => import('./TimeLogItem'));\r\nimport TimeLogTable from './TimeLogTable';\r\nimport { useDispatch, useSelector } from 'react-redux'; \r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport { storeTimeLogs } from '../../../services/features/subTaskSlice';\r\nimport { Placeholder } from '../../../global/Placeholder';\r\nimport TimeLogItemLoader from './TimeLogItemLoader';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\n\r\nconst TimeLogSection = () => {\r\n  const {task, timeLogs} = useSelector(s => s.subTask);\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n  // get data\r\n    // fetch all task \r\n    const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n      skip: timeLogs?.length\r\n    }) \r\n  \r\n    // if task notes fetch completed store data into redux store\r\n    React.useEffect(()=> {\r\n      if(task && task.id){\r\n        getTaskDetails(`/${task?.id}/json?mode=task_time_log`)\r\n        .unwrap()\r\n        .then(res => {\r\n          if(res){\r\n            dispatch(storeTimeLogs(res));\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      } \r\n    }, [task]); \r\n    \r\n\r\n    // control modal\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const close = () => setIsOpen(false);\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3'  \r\n    ref={setModalRefButton} style={{zIndex: isOpen ? '99' : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Session Logs</span> \r\n        {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n        {_.size(timeLogs) > 0 &&\r\n          <button \r\n              aria-label='openCommentModalButton'\r\n              className='sp1_task_right_dl_toggle'\r\n              onClick={toggle}\r\n              style={{zIndex: isOpen ? 110 : ''}}\r\n            >\r\n              <i \r\n                className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n                style={{color: \"#276fec\"}} \r\n              />\r\n          </button>}\r\n        {/* side drop toggle button end */}\r\n\r\n\r\n          <TimeLogTable\r\n            isOpen={isOpen}\r\n            close={close}\r\n            toggle={modalRefButton}\r\n            data={timeLogs}\r\n          />\r\n\r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          { _.size(timeLogs) > 0 ?\r\n            _.map(timeLogs, log => (\r\n              <React.Fragment key={log.id}>\r\n                <Suspense fallback={<TimeLogItemLoader />}>\r\n                  <TimeLogItem log={log}/>\r\n                </Suspense>\r\n              </React.Fragment>\r\n            )):\r\n            <div\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{\r\n                    color: \"#B4BCC4\",\r\n                    fontSize: \"15px\",\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                No Logged Session is Available\r\n            </div>\r\n          } \r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeLogSection","import dayjs from \"dayjs\";\r\nimport _ from \"lodash\";\r\nimport * as React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useErrorHandler } from \"../context/ErrorHandleServiceContextProvider\";\r\nimport FileUploader from \"../file-upload/FileUploader\";\r\nimport Toaster from \"../global/Toaster\";\r\nimport {\r\n    useGetTaskStatusQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n    useLazyGetWorkingEnvironmentQuery,\r\n} from \"../services/api/SingleTaskPageApi\";\r\nimport { storeTask } from \"../services/features/subTaskSlice\";\r\nimport { BoardColumn, SingleTask } from \"../utils/single-task\";\r\nimport { User } from \"../utils/user-details\";\r\nimport Accordion from \"./components/Accordion\";\r\nimport Guideline from \"./components/Guideline\";\r\nimport Loading from \"./components/Loading\";\r\nimport RevisionText from \"./components/RevisionText\";\r\nimport GenarelLoader from \"./components/loader/GenarelLoader\";\r\nimport { singleTaskPagePermission } from \"./permissions\";\r\nimport CommentSection from \"./section/comments/CommentsSection\";\r\nimport DailySubmissionSection from \"./section/daily-submission/DailySubmissionSection\";\r\nimport HistorySection from \"./section/history/HistorySection\";\r\nimport NoteSection from \"./section/notes/NoteSection\";\r\nimport RevisionSection from \"./section/revisions/RevisionSection\";\r\nimport SubTaskEditModal from \"./section/sub-task/SubTaskEditModal\";\r\nimport SubTaskSection from \"./section/sub-task/SubTaskSection\";\r\nimport TaskEditForm from \"./section/sub-task/TaskEditForm\";\r\nimport SubmittedWork from \"./section/submitted-work/SubmittedWork\";\r\nimport TaskAction from \"./section/task-actions/TaskAction\";\r\nimport TimeLogSection from \"./section/time-logs/TimeLogSection\";\r\nimport { useGetTaskForTotalTimeQuery } from \"../services/api/tasksApiSlice\";\r\n\r\nconst RefetchTaskProvider = React.createContext({});\r\nexport const useRefetchTaskDetails = () => {\r\n    const { setRefetchTask } = React.useContext(RefetchTaskProvider);\r\n    return () => {\r\n        setRefetchTask((prev) => !prev);\r\n    };\r\n};\r\n\r\nconst SingleIndependentTask = () => {\r\n    const { task: Task } = useSelector((s) => s.subTask);\r\n    const [refetchTask, setRefetchTask] = React.useState(false);\r\n    const { throwError } = useErrorHandler();\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n\r\n    // lazily get task details\r\n    const [\r\n        getTaskDetails,\r\n        { isFetching: isTaskFetching, isLoading: isTaskLoading },\r\n    ] = useLazyGetTaskDetailsQuery({ skip: !params?.taskId });\r\n\r\n    // get task status query\r\n    const { data: taskStatus } = useGetTaskStatusQuery(params?.taskId);\r\n\r\n    // lazily get task working environment\r\n    const [\r\n        getWorkingEnv,\r\n        { isFetching: isWorkingEnvFetching, isLoading: isWorkingEnvLoading },\r\n    ] = useLazyGetWorkingEnvironmentQuery();\r\n\r\n    const task = new SingleTask(Task); // task instance\r\n    const loggedUser = new User(window?.Laravel?.user); // logged users data\r\n\r\n    const [taskForTimeLog, setTaskForTimeLog] = React.useState({});\r\n    const [totalTime, setTotalTime] = React.useState(\"\");\r\n    const taskId = task?.id;\r\n\r\n    console.log(\"total time\", totalTime);\r\n    const { data: taskForTime } = useGetTaskForTotalTimeQuery(taskId, {\r\n        skip: !taskId,\r\n    });\r\n    useEffect(() => {\r\n        setTaskForTimeLog(taskForTime);\r\n    }, [taskForTime]);\r\n    const calculateTotalTime = (task) => {\r\n        if (task) {\r\n            let totalTimeInMinutes = 0;\r\n            const parentTimeArray = task?.parent_task_time_log?.split(\" \");\r\n            const subTimeArray = task?.sub_task_time_log?.split(\" \");\r\n\r\n            if (task?.subtask.length === 0) {\r\n                if (parentTimeArray && parentTimeArray.length >= 1) {\r\n                    totalTimeInMinutes += parseInt(parentTimeArray[0]) * 60;\r\n                    totalTimeInMinutes += parseInt(\r\n                        parentTimeArray[2] === \"\"\r\n                            ? 0\r\n                            : parseInt(parentTimeArray[2])\r\n                    );\r\n                }\r\n            } else {\r\n                if (\r\n                    parentTimeArray &&\r\n                    parentTimeArray.length >= 1 &&\r\n                    subTimeArray &&\r\n                    subTimeArray.length >= 1\r\n                ) {\r\n                    totalTimeInMinutes += parseInt(parentTimeArray[0]) * 60;\r\n                    totalTimeInMinutes += parseInt(\r\n                        parentTimeArray[2] === \"\"\r\n                            ? 0\r\n                            : parseInt(parentTimeArray[2])\r\n                    );\r\n\r\n                    totalTimeInMinutes += parseInt(subTimeArray[0]) * 60;\r\n                    if (subTimeArray[0]) {\r\n                        totalTimeInMinutes += parseInt(\r\n                            subTimeArray[2] === \"\"\r\n                                ? 0\r\n                                : parseInt(subTimeArray[2])\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n            const hours = Math.floor(totalTimeInMinutes / 60);\r\n            const minutes = totalTimeInMinutes % 60;\r\n\r\n            setTotalTime(`${hours} hrs ${minutes} mins`);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (taskForTimeLog) {\r\n            calculateTotalTime(taskForTimeLog.task);\r\n        }\r\n    }, [taskForTimeLog]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const CurrentTask = {};\r\n\r\n            await getTaskDetails(`/${params?.taskId}/json?mode=basic`)\r\n                .unwrap()\r\n                .then(\r\n                    ({\r\n                        task,\r\n                        parent_task_heading,\r\n                        parent_task_action,\r\n                        subtasks,\r\n                        task_guideline,\r\n                        revisions,\r\n                        Sub_Tasks,\r\n                        ppTaskFiles,\r\n                    }) => {\r\n                        for (const key in task) {\r\n                            CurrentTask[key] = task[key];\r\n                        }\r\n                        CurrentTask.parent_task_title =\r\n                            parent_task_heading?.heading || null;\r\n                        CurrentTask.parent_task_action = parent_task_action;\r\n                        CurrentTask.subtask = subtasks;\r\n                        CurrentTask.pm_task_guideline = task_guideline;\r\n                        CurrentTask.task_revisions = revisions;\r\n                        CurrentTask.taskSubTask = Sub_Tasks;\r\n                        CurrentTask.taskFiles = [...ppTaskFiles];\r\n                    }\r\n                );\r\n\r\n            // console.log(CurrentTask.subtask_id);\r\n\r\n            await getWorkingEnv(\r\n                CurrentTask.subtask_id\r\n                    ? CurrentTask.parent_task_id\r\n                    : CurrentTask.id\r\n            )\r\n                .unwrap()\r\n                .then(({ task_working_environment }) => {\r\n                    CurrentTask.working_environment_data =\r\n                        task_working_environment;\r\n                });\r\n\r\n            // console.log({ CurrentTask });\r\n\r\n            const _task = new SingleTask(CurrentTask);\r\n\r\n            // console.log({ _task });\r\n\r\n            let hasPermission = singleTaskPagePermission(_task, loggedUser);\r\n\r\n            if (!hasPermission) {\r\n                return throwError({\r\n                    title: \"Access Denied\",\r\n                    message:\r\n                        \"Access to this resource is forbidden. Please contact the administrator for assistance.\",\r\n                    code: 403,\r\n                });\r\n            } else {\r\n                // const task = _task;\r\n                dispatch(storeTask(CurrentTask));\r\n            }\r\n        })();\r\n    }, [refetchTask]);\r\n\r\n    const loadingClass =\r\n        isTaskFetching || isTaskLoading ? \"skeleton-loading\" : \"\";\r\n\r\n    if (\r\n        isTaskFetching ||\r\n        isTaskLoading ||\r\n        isWorkingEnvFetching ||\r\n        isWorkingEnvLoading\r\n    ) {\r\n        return <Loading isLoading={true} />;\r\n    }\r\n\r\n    const _taskStatus = new BoardColumn(taskStatus);\r\n\r\n    if (!task) return null;\r\n\r\n    // console.log(\"task revision\", task?.revisions);\r\n\r\n    return (\r\n        <RefetchTaskProvider.Provider value={{ setRefetchTask }}>\r\n            <div className=\"position-relative content-wrapper\">\r\n                <div className=\"mb-3\">\r\n                    <div className={`f-18 ${loadingClass}`}>\r\n                        <span>\r\n                            {\" \"}\r\n                            <strong>Task: </strong>{\" \"}\r\n                        </span>\r\n                        <a href={`/account/tasks/${task?.id}`}>\r\n                            {task?.getSubtaskTitle()}\r\n                        </a>\r\n                        {_.includes(\r\n                            [1, 4, 6, 7, 8],\r\n                            loggedUser?.getRoleId()\r\n                        ) && (\r\n                            <span className=\"ml-2\">\r\n                                (\r\n                                <a\r\n                                    href={`/account/projects/${task.projectId}?tab=tasks`}\r\n                                    className=\"f-14\"\r\n                                >\r\n                                    See All Tasks\r\n                                </a>\r\n                                )\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {isTaskFetching || isTaskLoading ? (\r\n                        <GenarelLoader />\r\n                    ) : (\r\n                        <React.Fragment>\r\n                            <div className=\"col-12 col-md-7 col-lg-8 mb-3\">\r\n                                <div className=\"bg-white rounded-lg p-3\">\r\n                                    <TaskAction\r\n                                        task={task}\r\n                                        status={taskStatus}\r\n                                    />\r\n\r\n                                    {/* task information */}\r\n                                    <div>\r\n                                        <div\r\n                                            className=\"d-flex flex-column py-3\"\r\n                                            style={{ gap: \"10px\" }}\r\n                                        >\r\n                                            {task?.isSubtask && (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        {\" \"}\r\n                                                        Parent Task:{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        <a\r\n                                                            href={`/account/tasks/${task?.parentTaskId}`}\r\n                                                            className=\"text-hover-underline\"\r\n                                                        >\r\n                                                            {\r\n                                                                task?.parentTaskTitle\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n\r\n                                            {/* project name */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">Project : </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <span className=\"dot-color bg-danger mr-2\" />\r\n                                            <a href={`/account/projects/${task?.projectId}`} className=\"text-hover-underline\">\r\n                                                {task?.projectName}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* client name */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Client :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <span className=\"dot-color bg-info mr-2\" />\r\n                                                    <span>\r\n                                                        {Task?.ind_clientId\r\n                                                            ? Task?.ind_client_name\r\n                                                            : Task?.independent_client_name}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* project manager */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">Project Manager: </div>\r\n\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                                <img\r\n                                                    src={`/user-uploads/avatar/${task?.projectManagerAvatar}`}\r\n                                                    alt={task?.projectManagerName}\r\n                                                    width=\"32px\"\r\n                                                    height=\"32px\"\r\n                                                    className=\"rounded-circle\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"ml-2\">\r\n                                                <span\r\n                                                    className={`d-block f-14 font-weight-bold`}\r\n                                                >\r\n                                                    <a\r\n                                                        href={`/account/employees/${task?.projectManagerId}`}\r\n                                                        className=\"hover-underline\"\r\n                                                    >\r\n                                                        {task?.projectManagerName}</a>\r\n                                                    {Number(task?.projectManagerId) ===\r\n                                                        Number(loggedUser?.getId()) && (\r\n                                                        <sup\r\n                                                            className=\"rounded-pill bg-dark text-white px-1 ml-1\"\r\n                                                            style={{ fontSize: \"10px\", whiteSpace: 'nowrap' }}\r\n                                                        >\r\n                                                            It's You\r\n                                                        </sup>\r\n                                                    )}\r\n                                                </span>\r\n\r\n                                                <span style={{ fontSize: \"12px\" }}>\r\n                                                   {task?.projectManagerDesignation}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* milestone */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">\r\n                                            Milestone :{\" \"}\r\n                                        </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <span className=\"dot-color bg-primary mr-2\" />\r\n                                            {task?.milestoneTitle}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* assignee to */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Assigned To :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            width: \"32px\",\r\n                                                            height: \"32px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <img\r\n                                                            src={task?.assigneeTo?.getAvatar()}\r\n                                                            alt={task?.assigneeTo?.getName()}\r\n                                                            width=\"32px\"\r\n                                                            height=\"32px\"\r\n                                                            className=\"rounded-circle\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"ml-2\">\r\n                                                        <span\r\n                                                            className={`d-block f-14 font-weight-bold`}\r\n                                                        >\r\n                                                            <a\r\n                                                                href={task?.assigneeTo?.getUserLink()}\r\n                                                                className=\"hover-underline\"\r\n                                                            >\r\n                                                                {task?.assigneeTo?.getName()}\r\n                                                            </a>\r\n                                                            {Number(\r\n                                                                task?.assigneeTo?.getId()\r\n                                                            ) ===\r\n                                                                Number(\r\n                                                                    loggedUser?.getId()\r\n                                                                ) && (\r\n                                                                <sup\r\n                                                                    className=\"rounded-pill bg-dark text-white px-1 ml-1\"\r\n                                                                    style={{\r\n                                                                        fontSize:\r\n                                                                            \"10px\",\r\n                                                                        whiteSpace:\r\n                                                                            \"nowrap\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    It's You\r\n                                                                </sup>\r\n                                                            )}\r\n                                                        </span>\r\n\r\n                                                        <span\r\n                                                            style={{\r\n                                                                fontSize:\r\n                                                                    \"12px\",\r\n                                                            }}\r\n                                                        >\r\n                                                            {task?.assigneeTo?.getDesignationName()}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* assignee by */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Assigned by:{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            width: \"32px\",\r\n                                                            height: \"32px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <img\r\n                                                            src={task?.assigneeBy?.getAvatar()}\r\n                                                            alt={task?.assigneeBy?.getName()}\r\n                                                            width=\"32px\"\r\n                                                            height=\"32px\"\r\n                                                            className=\"rounded-circle\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"ml-2\">\r\n                                                        <span\r\n                                                            className={`d-block f-14 font-weight-bold`}\r\n                                                        >\r\n                                                            <a\r\n                                                                href={task?.assigneeBy?.getUserLink()}\r\n                                                                className=\"hover-underline\"\r\n                                                            >\r\n                                                                {task?.assigneeBy?.getName()}\r\n                                                            </a>\r\n                                                            {Number(\r\n                                                                task?.assigneeBy?.getId()\r\n                                                            ) ===\r\n                                                                Number(\r\n                                                                    loggedUser?.getId()\r\n                                                                ) && (\r\n                                                                <sup\r\n                                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                                    style={{\r\n                                                                        fontSize:\r\n                                                                            \"10px\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    It's You\r\n                                                                </sup>\r\n                                                            )}\r\n                                                        </span>\r\n\r\n                                                        <span\r\n                                                            style={{\r\n                                                                fontSize:\r\n                                                                    \"12px\",\r\n                                                            }}\r\n                                                        >\r\n                                                            {task?.assigneeBy?.getDesignationName()}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* TASK CATEGORY */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Task Category :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {task.category.name}\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* PRIORITY */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Priority :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    />\r\n                                                    {task?.priority}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* login url */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Login URL :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n\r\n                                                        <a\r\n                                                            target=\"__blank\"\r\n                                                            href={\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.loginURL\r\n                                                            }\r\n                                                        >\r\n                                                            {\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.loginURL\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* username */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Username :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {\r\n                                                            task.additionalInfo\r\n                                                                .username\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* password */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Password :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {\r\n                                                            task.additionalInfo\r\n                                                                .password\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* ref site */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Reference page :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        <a\r\n                                                            target=\"__blank\"\r\n                                                            href={\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.refSite\r\n                                                            }\r\n                                                        >\r\n                                                            {\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.refSite\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* category */}\r\n                                            {task?.isSubtask && (\r\n                                                <>\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Task Category :{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.category\r\n                                                                ?.name ?? \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    {/* task type */}\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Task Type:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.taskType ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Type:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageType ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Name:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageName ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Url:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageUrl ? (\r\n                                                                <a\r\n                                                                    href={\r\n                                                                        task?.pageUrl\r\n                                                                    }\r\n                                                                >\r\n                                                                    ( view )\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <span>--</span>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        {/* project manager guideline */}\r\n                                        {(!_.isEmpty(task?.workEnvData) ||\r\n                                            !_.isEmpty(task?.guidelines)) && (\r\n                                            <Accordion\r\n                                                expendable={false}\r\n                                                title=\"General Guidelines\"\r\n                                            >\r\n                                                {/* {task?.hasProjectManagerGuideline && <PMGuideline guideline={task?.PMTaskGuideline} /> } */}\r\n\r\n                                                {!_.isEmpty(\r\n                                                    task?.workEnvData\r\n                                                ) && (\r\n                                                    <div className=\"sp1_task_card--sub-card\">\r\n                                                        <div\r\n                                                            className=\"px-4 py-3\"\r\n                                                            style={{\r\n                                                                background:\r\n                                                                    \"#F3F5F9\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <h6 className=\"mb-2\">\r\n                                                                Working\r\n                                                                Environment\r\n                                                            </h6>\r\n                                                            <hr />\r\n                                                            <div className=\"row\">\r\n                                                                {/* working/staging site's url */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            URL\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.site_url\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* frontend password */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Frontend\r\n                                                                            Password\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.frontend_password\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* working/staging site's login url */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            Login\r\n                                                                            URL\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.login_url\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>{\" \"}\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* working/staging site's username/email */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            Username/Email\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {task\r\n                                                                            ?.workEnvData\r\n                                                                            ?.email ||\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.user_name}\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* password */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Password\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.password\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* Reference Page */}\r\n                                                                {/* <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Reference\r\n                                                                            Page\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.reference_site\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                <Guideline\r\n                                                    text={task?.guidelines}\r\n                                                    workEnv={task?.workEnvData}\r\n                                                />\r\n                                            </Accordion>\r\n                                        )}\r\n\r\n                                        {/* task revision */}\r\n                                        {_.size(task?.revisions) > 0 && (\r\n                                            <Accordion\r\n                                                title={\r\n                                                    _.last(task?.revisions)\r\n                                                        ?.revisionStatus\r\n                                                }\r\n                                                headingClass=\"d-flex align-items-center justify-content-between\"\r\n                                                headingStyle={{\r\n                                                    background:\r\n                                                        \"rgba(227,62,79,1)\",\r\n                                                    color: \"#fff\",\r\n                                                }}\r\n                                            >\r\n                                                {_.map(\r\n                                                    _.reverse([\r\n                                                        ...task?.revisions,\r\n                                                    ]),\r\n                                                    (revision, index) => (\r\n                                                        <RevisionText\r\n                                                            key={revision?.id}\r\n                                                            index={index + 1}\r\n                                                            date={dayjs(\r\n                                                                revision.createdAt\r\n                                                            ).format(\r\n                                                                \"MMM DD, YYYY\"\r\n                                                            )}\r\n                                                            time={dayjs(\r\n                                                                revision.createdAt\r\n                                                            ).format(\"hh:mm a\")}\r\n                                                            text={\r\n                                                                revision?.comment ||\r\n                                                                revision?.devComment ||\r\n                                                                revision?.pmComment\r\n                                                            }\r\n                                                            revision={revision}\r\n                                                        />\r\n                                                    )\r\n                                                )}\r\n                                            </Accordion>\r\n                                        )}\r\n\r\n                                        {/* task description */}\r\n                                        <Accordion\r\n                                            expendable={false}\r\n                                            title=\"Task Descriptions\"\r\n                                        >\r\n                                            <Guideline\r\n                                                text={task?.description}\r\n                                            />\r\n\r\n                                            {_.size(task?.attachments) > 0 ? (\r\n                                                <div className=\"mt-3\">\r\n                                                    <h4 className=\"mb-2\">\r\n                                                        Task Attachments:{\" \"}\r\n                                                    </h4>\r\n                                                    <FileUploader>\r\n                                                        {_.map(\r\n                                                            task?.attachments,\r\n                                                            (attachment) =>\r\n                                                                attachment?.pp_task_file_name ? (\r\n                                                                    <FileUploader.Preview\r\n                                                                        key={\r\n                                                                            attachment?.pp_task_file_id\r\n                                                                        }\r\n                                                                        fileName={\r\n                                                                            attachment?.pp_task_file_name\r\n                                                                        }\r\n                                                                        downloadAble={\r\n                                                                            true\r\n                                                                        }\r\n                                                                        deleteAble={\r\n                                                                            false\r\n                                                                        }\r\n                                                                        downloadUrl={\r\n                                                                            attachment?.pp_task_file_url\r\n                                                                        }\r\n                                                                        previewUrl={\r\n                                                                            attachment?.pp_task_file_url\r\n                                                                        }\r\n                                                                        fileType={\r\n                                                                            _.includes(\r\n                                                                                [\r\n                                                                                    \"png\",\r\n                                                                                    \"jpeg\",\r\n                                                                                    \"jpg\",\r\n                                                                                    \"svg\",\r\n                                                                                    \"webp\",\r\n                                                                                    \"gif\",\r\n                                                                                ],\r\n                                                                                attachment?.pp_task_file_icon\r\n                                                                            )\r\n                                                                                ? \"images\"\r\n                                                                                : \"others\"\r\n                                                                        }\r\n                                                                        classname=\"comment_file\"\r\n                                                                        ext={\r\n                                                                            attachment?.pp_task_file_icon\r\n                                                                        }\r\n                                                                    />\r\n                                                                ) : null\r\n                                                        )}\r\n                                                    </FileUploader>\r\n                                                </div>\r\n                                            ) : null}\r\n                                        </Accordion>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )}\r\n\r\n                    <div className=\"col-12 col-md-5 col-lg-4\">\r\n                        <div className=\"d-flex flex-column\">\r\n                            {/* period */}\r\n                            <div\r\n                                className=\"sp1_task_right_card mb-3\"\r\n                                style={{ maxHeight: \"450px\" }}\r\n                            >\r\n                                <div className=\"d-flex align-items-center font-weight-bold border-bottom pl-2 pb-2 mb-2\">\r\n                                    <span\r\n                                        style={{\r\n                                            display: \"block\",\r\n                                            width: \"10px\",\r\n                                            height: \"10px\",\r\n                                            borderRadius: \"100%\",\r\n                                            background: taskStatus?.label_color,\r\n                                            marginRight: \"6px\",\r\n                                            boxShadow:\r\n                                                \"0 0 10px rgba(0,0,0,.1)\",\r\n                                        }}\r\n                                    />\r\n\r\n                                    {_taskStatus.getTaskStatusName(\r\n                                        loggedUser?.getRoleId(),\r\n                                        task.isSubtask\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Start Date: </div>\r\n                                    <div\r\n                                        className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                    >\r\n                                        {task?.getStartDate(\"MMM DD, YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Due Date */}\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Due Date: </div>\r\n                                    <div\r\n                                        className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                    >\r\n                                        {task?.getDueDate(\"MMM DD, YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n                                {/* End Due Date */}\r\n\r\n                                {/* Time Estimate */}\r\n                                {/* <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">Time Estimate: </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.getEstimateTime()}\r\n                                </div>\r\n                            </div> */}\r\n                                {/* End Time Estimate */}\r\n\r\n                                {/* <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">\r\n                                    Parent Task Hours Logged:\r\n                                </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.parentTaskTimeLog || \"--\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">Subtask Hours Logged: </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold ml-2 pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.subTaskTimeLog || \"--\"}\r\n                                </div>\r\n                            </div> */}\r\n\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Total Hours Logged: </div>\r\n                                    <div className=\"d-flex align-items-center font-weight-bold pl-2\">\r\n                                        {(task.isSubtask\r\n                                            ? task?.parentTaskTimeLog\r\n                                            : totalTime\r\n                                            ? totalTime\r\n                                            : \"0 hrs 0 mins\") || \"--\"}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* comments */}\r\n                            {task && task?.id && <SubmittedWork task={task} />}\r\n                            {!task.isSubtask && (\r\n                                <SubTaskSection status={taskStatus} />\r\n                            )}\r\n                            {task && task?.id && (\r\n                                <DailySubmissionSection task={task} />\r\n                            )}\r\n                            {task && task?.id && (\r\n                                <CommentSection\r\n                                    task={task}\r\n                                    isLoading={isTaskFetching || isTaskLoading}\r\n                                />\r\n                            )}\r\n                            <NoteSection />\r\n                            <TimeLogSection />\r\n                            {task && task?.id && <HistorySection />}\r\n                            {task && task?.id && (\r\n                                <RevisionSection task={task} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Toaster />\r\n                <ShowEditModals task={task} auth={loggedUser} />\r\n            </div>\r\n        </RefetchTaskProvider.Provider>\r\n    );\r\n};\r\n\r\nexport default SingleIndependentTask;\r\n\r\nconst ShowEditModals = ({ auth, task }) => {\r\n    let hasAccess = false;\r\n\r\n    let time = task.isSubtask ? task?.parentTaskTimeLog : task?.totalTimeLog;\r\n\r\n    if (auth.getRoleId() === 1) {\r\n        hasAccess = true;\r\n    } else if (\r\n        auth.getId() === task.assigneeBy.id &&\r\n        task.boardColumn.id === 2\r\n    ) {\r\n        hasAccess = true;\r\n    } else hasAccess = false;\r\n\r\n    if (hasAccess) {\r\n        if (task.isSubtask) {\r\n            return <SubTaskEditModal task={task} />;\r\n        } else {\r\n            return <TaskEditForm task={task} />;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({\r\n    children, \r\n    type=\"button\",\r\n    disabled=false, \r\n    className = '', \r\n    variant='primary',\r\n    size=\"sm\",\r\n    onClick,\r\n    ...props\r\n}) => {\r\n    const classes = `cnx__btn cnx__btn_${variant} ${disabled ? 'cnx__btn_disabled': ''} cnx__btn_${size} ${className}`\r\n\r\n    const handleOnClick = (e) => {\r\n        onClick && onClick(e)\r\n    }\r\n\r\n\r\n    return (\r\n        <button \r\n            type='button' \r\n            className={classes} \r\n            disabled={disabled} \r\n            onClick={handleOnClick} \r\n            {...props}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    children: PropTypes.node.isRequired || PropTypes.string.isRequired || PropTypes.array.isRequired,\r\n    disabled: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    variant: PropTypes.oneOf(['primary', 'secondary', 'tertiary', 'success', 'danger']),\r\n    size: PropTypes.oneOf(['sm', 'md', 'lg']),\r\n    onClick: PropTypes.func,\r\n    href: PropTypes.string\r\n}\r\n\r\nexport default Button;","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {usePopper} from 'react-popper';\r\nimport {motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst DropdownContext = React.createContext();\r\n\r\n\r\nconst DropdownProvider = ({children}) => {\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [element, setElement] = React.useState(null);\r\n    const [reference, setReference] = React.useState(null);\r\n\r\n    return (\r\n        <DropdownContext.Provider value={{\r\n            element,\r\n            setElement,\r\n            reference,\r\n            setReference,\r\n            isOpen,\r\n            setIsOpen\r\n        }}>\r\n            {children}\r\n        </DropdownContext.Provider>\r\n    )\r\n}\r\n\r\n// dropdown hooks\r\nconst useDropdown = () => {\r\n    const context = React.useContext(DropdownContext);\r\n    if(!context) {\r\n        throw new Error('useDropdown must be used within a DropdownProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\n\r\n// dropdown item\r\nconst DropdownItem = ({children, className, onClick, disabled=false, ...props}) => {\r\n    const {setIsOpen} = useDropdown();\r\n    return(\r\n        <div \r\n            onMouseUp={() => disabled ? null : setIsOpen(false)}\r\n            onClick={(e) => disabled ? null : onClick ? onClick(e): null}\r\n            className={`cnx_dropdown__item ${disabled ? 'cnx_dropdown__item_disabled}': ''} ${className}`}\r\n            {...props}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DropdownToggle = ({children, icon=true, className}) => {\r\n    const {setIsOpen, isOpen, setReference} = useDropdown();\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    return(\r\n        <div\r\n            ref={setReference}\r\n            className={`cnx_dropdown__toggle ${className}`}\r\n            onClick={toggle}\r\n        >\r\n\r\n            {children}\r\n            {icon && <i className={`fas fa-caret-${isOpen ? 'up' : 'down'} cnx_dropdown__toggle_icon`}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n// dropdown menu\r\nconst DropdownMenu = ({children, className, placement=\"bottom-start\", offset=[0, 3], ...props}) => {\r\n    const { reference, setIsOpen, isOpen} = useDropdown();\r\n    const [popperElement , setPopperElement] = React.useState(null);\r\n    const [width, setWidth] = React.useState(100);\r\n    \r\n    // generate random id for dropdown menu\r\n    const id = React.useMemo(() => Math.random().toString(36).substr(2, 9), []);\r\n\r\n\r\n    let DOM = document.getElementById(id);\r\n    const {styles, attributes} = usePopper(reference, popperElement, {\r\n        placement,\r\n        modifiers: [\r\n            {\r\n                name: 'offset',\r\n                options: {\r\n                    offset,\r\n                },\r\n            },\r\n            {\r\n                name: 'flip',\r\n                options: {\r\n                    fallbackPlacements: ['bottom', 'left', 'right', 'top' ],\r\n                },\r\n            }\r\n        ],\r\n    });\r\n\r\n\r\n    // min width\r\n    React.useEffect(() => {\r\n        if(reference){\r\n            setWidth(reference.offsetWidth);\r\n        }\r\n    }, [reference])\r\n\r\n\r\n    // outside click\r\n\r\n    React.useEffect(() => {\r\n        let timeout;\r\n        const handleClickOutside = (event) => {\r\n            if (popperElement && !popperElement.contains(event.target)) {\r\n                setIsOpen(false);\r\n                clearTimeout(timeout);\r\n                window.removeEventListener('click', handleClickOutside);\r\n            }\r\n        };\r\n\r\n\r\n        if(isOpen) {\r\n            timeout = setTimeout(() => {\r\n                window.addEventListener('click', handleClickOutside);\r\n            }, 100);\r\n        } else {\r\n            window.removeEventListener('click', handleClickOutside);\r\n        }\r\n        return () => {\r\n            window.removeEventListener('click', handleClickOutside);\r\n            clearTimeout(timeout);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isOpen, popperElement])\r\n\r\n    // create element in html body\r\n    React.useEffect(() => {\r\n        const el = document.createElement('div');\r\n        el.id = id;\r\n        document.body.appendChild(el);\r\n        \r\n        setPopperElement(el);\r\n        return () => {\r\n            document.body.removeChild(el);\r\n        }\r\n    }, [])\r\n\r\n    \r\n    if(!DOM) {\r\n        return null\r\n    }\r\n\r\n    return(\r\n       ReactDOM.createPortal(\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1 }}\r\n                        exit={{opacity: 0}}\r\n                        className={`cnx_dropdown__menu ${isOpen ? 'cnx_dropdown__menu_open' : ''} ${className}`}\r\n                        ref={setPopperElement}\r\n                        style={{...styles.popper, minWidth: width}}\r\n                        {...attributes.popper}\r\n                        {...props}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>, \r\n            DOM\r\n       )\r\n    )\r\n} \r\n\r\n\r\n\r\nconst Dropdown = ({children, className=''}) => {\r\n    return(\r\n        <div className={`cnx_dropdown ${className}`}>\r\n            <DropdownProvider>\r\n                {children}\r\n            </DropdownProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nDropdown.Item = DropdownItem;\r\nDropdown.Toggle = DropdownToggle;\r\nDropdown.Menu = DropdownMenu;\r\n\r\nexport default Dropdown;\r\n\r\n\r\n// type\r\n\r\nDropdownProvider.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\nDropdownItem.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    onClick: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    className: PropTypes.string,\r\n}\r\n\r\nDropdownToggle.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    icon: PropTypes.bool,\r\n    className: PropTypes.string,\r\n}\r\n\r\n\r\nDropdownMenu.propTypes = {\r\n    children: PropTypes.node.isRequired || PropTypes.arrayOf(PropTypes.node).isRequired,\r\n    className: PropTypes.string,\r\n    placement: PropTypes.string,\r\n    offset: PropTypes.arrayOf(PropTypes.number),\r\n}\r\n\r\nDropdown.propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.node.isRequired || PropTypes.arrayOf(PropTypes.node).isRequired,\r\n}","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ children, isOpen, className }) => {\r\n    const [isBrowser, setIsBrowser] = React.useState(false);\r\n    // generate random id for dropdown menu\r\n    const id = React.useMemo(() => Math.random().toString(36).substr(2, 9), []);\r\n    let DOM = document.getElementById(id);\r\n \r\n  \r\n    React.useEffect(() => {\r\n        setIsBrowser(true);\r\n        const el = document.createElement('div');\r\n        el.id = id;\r\n        document.body.appendChild(el);\r\n        return () => {\r\n            document.body.removeChild(el);\r\n        }\r\n    }, []);\r\n\r\n\r\n    // React.useEffect(() => {\r\n    //     if(isOpen){\r\n    //         document.body.classList.add('cnx_body-overflow-hidden')\r\n    //     }else{\r\n    //         document.body.classList.remove('cnx_body-overflow-hidden')\r\n    //     }\r\n    // }, [isOpen]) \r\n\r\n    if(!DOM) return;\r\n \r\n\r\n    const modalContent = isOpen ? (\r\n        <div className={`cnx_modal ${className}`}>\r\n            {children}\r\n        </div>\r\n    ) : null;\r\n\r\n    if (isBrowser) {\r\n        return ReactDOM.createPortal(\r\n            modalContent,\r\n            DOM\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nModal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    isOpen: PropTypes.bool.isRequired,\r\n    className: PropTypes.string,\r\n}\r\n\r\n\r\nexport default Modal;","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst SubmitButton = ({onClick, isLoading, className, variant=\"primary\", children, title}) => {\r\n    let body = document.querySelector('#body');\r\n\r\n    const handleOnClick = (e) => {\r\n        e.stopPropagation();\r\n        onClick(e)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(isLoading){\r\n            body.style.cursor = 'progress';\r\n        }else{\r\n            body.style.cursor = 'default';\r\n        }\r\n    }, [isLoading])\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {!isLoading ? (\r\n                <Button variant={variant} onClick={handleOnClick} className={className}>\r\n                    {children || title}\r\n                </Button>\r\n            ) : (\r\n                <div className=\"cursor-processing cnx__btn cnx__btn_sm cnx__btn_primary\">\r\n                    <div\r\n                        className=\"spinner-border text-white\"\r\n                        role=\"status\"\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                        }}\r\n                    ></div>\r\n                    Processing...\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from 'styled-components';\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useReplyTaskCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst AttachmentUpload = ({ comment, onReply, close }) => {\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = React.useState(null);\r\n    const [replyTaskComment, { isLoading }] = useReplyTaskCommentMutation();\r\n\r\n    const visibleToScreenRef = React.useRef(null);\r\n    // update on layout change\r\n    React.useLayoutEffect(() => {\r\n        if (visibleToScreenRef && visibleToScreenRef.current) {\r\n            visibleToScreenRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, []);\r\n\r\n    // handle update\r\n    const onUpdate = async (e) => {\r\n\r\n        // if not select any file show error message\r\n        if(_.size(files) === 0){\r\n           setError(p => ({...p, fileError: \"Please select at least one file.\"}));\r\n           return;\r\n        }\r\n\r\n        // create form data\r\n        const formData = new FormData();\r\n        formData.append(\"reply_text\", \"\");\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"parent_comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n        // submit form\r\n        try {\r\n            const response = await replyTaskComment({ formData, commentId: comment.id });\r\n            if(response){\r\n                toast.success(\"Your files has been successfully uploaded.\");\r\n                onReply();\r\n                close();\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        <UploadFilesInLine\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        />\r\n\r\n                        {error && error.fileError ? <ErrorText> {error.fileError} </ErrorText> :''}\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Processing..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onUpdate}>\r\n                                Reply\r\n                            </Button>\r\n                            <Button variant=\"secondary\" onClick={close}>\r\n                                Close\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n\r\n            <div ref={visibleToScreenRef} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AttachmentUpload;\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n`;\r\n","import { Menu } from \"@headlessui/react\";\r\nimport * as React from \"react\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\nimport { timeCalculate } from \"../../../utils/timeCalculate\";\r\nimport { User } from \"../../../utils/user-details\";\r\n\r\nconst Comment = ({ comment, onDelete }) => {\r\n    const auth = useAuth();\r\n    const user = comment?.user ? new User(comment.user) : null;\r\n    const [showDeletedComment, setShowDeletedComment] = React.useState(false);\r\n\r\n    if (comment.is_deleted && !showDeletedComment) {\r\n        return (\r\n            <div className=\"sp1_comment_deleted_status w-100\">\r\n                This Comment has been deleted\r\n                {auth.getRoleId() === 1 ? (\r\n                    <button onClick={() => setShowDeletedComment(!showDeletedComment)}>\r\n                        <i className=\"fa-solid fa-eye-slash\" />\r\n                    </button>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deletedClass = comment.is_deleted ? \"sp1_comment_deleted_status\" : \"\";\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`w-100 d-flex align-items-center  ${deletedClass}`}>\r\n                <div className=\"mr-2\">\r\n                    <div className=\"rounded-circle\">\r\n                        <img\r\n                            src={user?.getAvatar()}\r\n                            alt={user?.getName()}\r\n                            width=\"32px\"\r\n                            height=\"32px\"\r\n                            className=\"rounded-circle\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"w-100 d-flex align-items-center justify-between\">\r\n                    <div className=\"sp1_comment\">\r\n                        <span className=\"sp1_comment_user--name\">\r\n                            {user?.getName()} ({user?.getDesignationName()})\r\n                        </span>\r\n                        <span\r\n                            className=\"sp1_comment_time\"\r\n                            style={{ color: \"#888\" }}\r\n                        >\r\n                            {timeCalculate(comment.last_updated_date)}\r\n                        </span>\r\n                    </div>\r\n\r\n                    {comment.is_deleted && auth.getRoleId() === 1 ? (\r\n                        <button className=\"ml-auto\" onClick={() => setShowDeletedComment(!showDeletedComment)}>\r\n                            <i className=\"fa-solid fa-eye\" />\r\n                        </button>\r\n                    ) : null}\r\n                </div>\r\n\r\n\r\n\r\n                {/* <Dropdown className=\"sp1_comment_extend_menu_dd\">\r\n                    <Dropdown.Toggle icon={false}>\r\n                        <i className=\"fa-solid fa-ellipsis\"></i>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu placement=\"bottom-end\" className=\"sp1_comment_extend_menu\">\r\n                        <Dropdown.Item>Edit</Dropdown.Item>\r\n                        <Dropdown.Item>Delete</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown> */}\r\n                {comment.is_deleted || user.getId() !== auth.getId() ? null : (\r\n                    <Menu as=\"div\" className=\"sp1_comment_extend_menu\">\r\n                        <Menu.Button\r\n                            as=\"button\"\r\n                            className=\"sp1_comment_extend_menu-btn\"\r\n                        >\r\n                            <i className=\"fa-solid fa-ellipsis\"></i>\r\n                        </Menu.Button>\r\n                        <Menu.Items\r\n                            as=\"div\"\r\n                            placement=\"bottom-end\"\r\n                            className=\"sp1_comment_extend_menu__items\"\r\n                        >\r\n                            <Menu.Item\r\n                                as=\"div\"\r\n                                className=\"sp1_comment_extend_menu__item --disabled\"\r\n                            >\r\n                                Edit\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                as=\"div\"\r\n                                className=\"sp1_comment_extend_menu__item --delete\"\r\n                                onClick={(e) => onDelete(e, comment.id)}\r\n                            >\r\n                                Delete\r\n                            </Menu.Item>\r\n                        </Menu.Items>\r\n                    </Menu>\r\n                )}\r\n            </div>\r\n            {comment?.comment ? (\r\n                <div className=\"__box __reply_text w-100 my-1 text-dark border-rounded\">\r\n                    <div\r\n                        className=\"sp1_ck_content sp1_message--body\"\r\n                        style={{ overflow: \"hidden\" }}\r\n                        dangerouslySetInnerHTML={{ __html: comment?.comment }}\r\n                    />\r\n                </div>\r\n            ) : null}\r\n\r\n            <div className=\"comment_files mt-2\">\r\n                <FileUploader>\r\n                    {comment?.files_data?.map((file) => (\r\n                        <FileUploader.Preview\r\n                            key={file?.name}\r\n                            fileName={file?.name}\r\n                            downloadAble={true}\r\n                            deleteAble={false}\r\n                            downloadUrl={file?.url}\r\n                            previewUrl={file?.url}\r\n                            fileType={file?.icon}\r\n                            classname=\"comment_file\"\r\n                            ext=\"\"\r\n                        />\r\n                    ))}\r\n                </FileUploader>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default Comment;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useRemoveCommentPreviousUploadedFileMutation, useUpdateCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst EditComment = ({ comment, updateComments, close }) => {\r\n    const [text, setText] = React.useState(comment.comment);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [previousFiles, setPreviousFiles] = React.useState([\r\n        ..._.map(comment.files_data, (file) => ({ id: file.name, ...file })),\r\n    ]);\r\n\r\n    const [updateComment, { isLoading }] = useUpdateCommentMutation();\r\n    const [removeCommentPreviousUploadedFile, {isLoading: uploadingFileDeleting}] = useRemoveCommentPreviousUploadedFileMutation();\r\n\r\n    // const isLoading = false;\r\n\r\n    const handleEditor = (e, editor) => {\r\n        const data = editor.getData();\r\n        setText(data);\r\n    };\r\n\r\n    // handle previous uploaded file delete\r\n    const handlePreviousFileDeleted = (e, file) => {\r\n        console.log(\"deleted: \", file);\r\n        const data = {\r\n            task_id: comment.task_id,\r\n            comment_id: comment.id,\r\n            file_details: file\r\n        }\r\n        removeCommentPreviousUploadedFile(data)\r\n        .unwrap()\r\n        .then(res => {\r\n            console.log(res)\r\n        })\r\n        .catch(err => {console.log(err)})\r\n    };\r\n\r\n    // handle update\r\n    const onUpdate = (e) => {\r\n        const formData = new FormData();\r\n        formData.append(\"comment\", text);\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n\r\n        updateComment({ data: formData, commentId: comment.id })\r\n            .unwrap()\r\n            .then((res) => {\r\n                toast.success(\"Successfully Updated!\");\r\n                updateComments(res.data);\r\n\r\n                close();\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent\r\n                            data={text}\r\n                            onChange={handleEditor}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        {/* <UploadFilesInLine\r\n                            onPreviousFileDelete={handlePreviousFileDeleted}\r\n                            previous={previousFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        /> */}\r\n\r\n                        <FileUploader files={files} setFiles={setFiles}>\r\n                            <FileUploader.Input />\r\n                            {comment?.files_data?.map((file) => (\r\n                                <FileUploader.Preview\r\n                                    id={file}\r\n                                    key={file?.name}\r\n                                    fileName={file?.name}\r\n                                    downloadAble={true}\r\n                                    deleteAble={true}\r\n                                    onRemove={handlePreviousFileDeleted}\r\n                                    downloadUrl={file?.url}\r\n                                    previewUrl={file?.url}\r\n                                    fileType={file?.icon}\r\n                                    ext=\"\"\r\n                                />\r\n                            ))}\r\n\r\n                            <FileUploader.SelectedFiles>\r\n                                {({previews, onDelete}) => (\r\n                                   _.map(previews, (preview, index) => (\r\n                                        <FileUploader.Preview\r\n                                            id={index}\r\n                                            key={index}\r\n                                            fileName={preview?.name}\r\n                                            downloadAble={true}\r\n                                            deleteAble={true}\r\n                                            onRemove={onDelete}\r\n                                            previewUrl={preview.preview}\r\n                                            fileType={preview.type}\r\n                                            ext={preview.ext}\r\n                                        />\r\n                                   ))\r\n                                )}\r\n                            </FileUploader.SelectedFiles>\r\n                        </FileUploader>\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Updating..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onUpdate}>\r\n                                Update\r\n                            </Button>\r\n                            <Button variant=\"secondary\">Close</Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditComment;\r\n","import * as React from \"react\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\nimport Dropdown from \"../../components/Dropdown\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport EditComment from \"./EditComment\";\r\nimport ReplyComment from \"./ReplyComment\";\r\nimport AttachmentUpload from \"./AttachmentUpload\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\nimport _, { compact } from \"lodash\";\r\nimport AvatarGroup from \"../../../global/AvatarGroup\";\r\nimport {\r\n    useDeleteCommentMutation,\r\n    useGetTaskCommentRepliesQuery,\r\n} from \"../../../services/api/TaskCommentApiSlice\";\r\nimport Loader from \"../../../global/Loader\";\r\nimport { BsFillPlusCircleFill } from \"react-icons/bs\";\r\nimport Comment from \"./Comment\";\r\nimport ReplyCommentPreview from \"./ReplyCommentPreview\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst InnerComment = ({ comment, updateComments }) => {\r\n    const [showReplies, setShowReplies] = React.useState(false);\r\n    const [replyMode, setReplyMode] = React.useState(false);\r\n    const [activeEditMode, setActiveEditModal] = React.useState(false);\r\n    const [uploadAttachment, setUploadAttachment] = React.useState(false);\r\n    const [selectedEmoji, setSelectedEmoji] = React.useState(\"\");\r\n    const user = comment?.user ? new User(comment.user) : null;\r\n    const auth = useAuth();\r\n\r\n    const [isRepliesLoading, setIsRepliesLoading] = React.useState(false);\r\n\r\n    // api hook\r\n    // handle delete\r\n    const [deleteComment, { isLoading: isDeleting }] =\r\n        useDeleteCommentMutation();\r\n\r\n    const handleReplyButtonClick = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(true);\r\n        setActiveEditModal(false);\r\n        setUploadAttachment(false);\r\n    };\r\n\r\n    // handle edit\r\n    const handleEditButton = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(false);\r\n        setUploadAttachment(false);\r\n        setActiveEditModal(true);\r\n    };\r\n\r\n    const handleUploadAttachment = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(false);\r\n        setActiveEditModal(false);\r\n        setUploadAttachment(true);\r\n    };\r\n\r\n    // handle comment delete\r\n    // delete comment\r\n    const handleDeleteComment = (e, commentId) => {\r\n        e.preventDefault();\r\n\r\n        Swal.fire({\r\n            icon: \"warning\",\r\n            title: `Are you sure you want to delete this comment?`,\r\n            html: \"This action cannot be undone. Deleting this comment will permanently remove it from the discussion.\",\r\n            showDenyButton: true,\r\n            denyButtonText: \"Cancel\",\r\n            // denyButtonColor: '#ffffff',\r\n\r\n            showConfirmButton: true,\r\n            confirmButtonText: \"Yes, Delete It!\",\r\n            confirmButtonColor: \"#E73819\",\r\n            customClass: {\r\n                confirmButton: \"delete-confirm-button\",\r\n                denyButton: \"delete-deny-button\",\r\n            },\r\n            buttonsStyling: false,\r\n        }).then((res) => {\r\n            if (res.isConfirmed) {\r\n                deleteCommentData();\r\n            }\r\n        });\r\n\r\n        // delete\r\n        const deleteCommentData = async () => {\r\n            const response = await deleteComment(commentId).unwrap();\r\n            if (response) {\r\n                toast.success(\"Comment Deleted Successfully\");\r\n            }\r\n        };\r\n    };\r\n\r\n    // emoji selection control\r\n    const handleEmojiSelect = (emojiData, event) => {\r\n        setSelectedEmoji(emojiData.unified);\r\n    };\r\n\r\n    // permission\r\n    const CAN_EDIT_COMMENT = auth.getId() === user.getId();\r\n\r\n    // console.log({ comment });\r\n\r\n    return (\r\n        <div className=\"sp1_task_comment_send_box sp1_task_comment_replied pl-2 pr-3 pb-2\">\r\n            <div\r\n                className=\"__send-box flex-column align-items-start\"\r\n                style={{ maxWidth: \"100%\" }}\r\n            >\r\n                {/* show comment details */}\r\n                <Comment comment={comment} onDelete={handleDeleteComment} />\r\n\r\n                <Switch>\r\n                    <Switch.Case\r\n                        condition={\r\n                            !comment.is_deleted || auth.getRoleId() === 1\r\n                        }\r\n                    >\r\n                        <div className=\"sp1_task_comment_actions\">\r\n                            {/* <Dropdown>\r\n                                <Dropdown.Toggle icon={false}>\r\n                                    <i className=\"fa-regular fa-face-smile\"></i>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    <EmojiPicker lazyLoadEmojis={true} />\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n\r\n                            <span>•</span> */}\r\n                            <Switch.Case condition={!comment.is_deleted}>\r\n                                <a href=\"#\" onClick={handleReplyButtonClick}>\r\n                                    Reply\r\n                                </a>\r\n                                <span>•</span>\r\n                                <a href=\"#\" onClick={handleUploadAttachment}>\r\n                                    <i className=\"fa-solid fa-paperclip\"></i>\r\n                                </a>\r\n                            </Switch.Case>\r\n\r\n                            {/* <Switch>\r\n                                <Switch.Case condition={CAN_EDIT_COMMENT}>\r\n                                    <a href=\"#\" onClick={handleEditButton}>\r\n                                        Edit\r\n                                    </a>\r\n                                    <span>•</span>\r\n                                </Switch.Case>\r\n                            </Switch>\r\n                            */}\r\n\r\n                            {/* <a href=\"#\">Delete</a>\r\n                <span>•</span> */}\r\n\r\n                            <Switch>\r\n                                <Switch.Case\r\n                                    condition={comment?.total_replies > 0}\r\n                                >\r\n                                    <div\r\n                                        className=\"replies_count\"\r\n                                        onClick={() =>\r\n                                            setShowReplies(!showReplies)\r\n                                        }\r\n                                    >\r\n                                        <AvatarGroup\r\n                                            users={_.map(\r\n                                                comment?.replies_users,\r\n                                                (user) => ({\r\n                                                    ...user,\r\n                                                    src: user.image_url,\r\n                                                })\r\n                                            )}\r\n                                        />\r\n                                        <div className=\"ml-1 mr-2\">\r\n                                            {comment.total_replies} replies\r\n                                        </div>\r\n                                        {isRepliesLoading ? (\r\n                                            <Loader title=\"\" />\r\n                                        ) : null}\r\n                                    </div>\r\n                                    {/* </div> */}\r\n                                </Switch.Case>\r\n                            </Switch>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n\r\n                {/* reply box */}\r\n\r\n                {showReplies ? (\r\n                    <>\r\n                        <ReplyCommentPreview\r\n                            comment={comment}\r\n                            onReply={handleReplyButtonClick}\r\n                            showReplyButton={!replyMode}\r\n                            onDelete={handleDeleteComment}\r\n                            cb={(loading) => setIsRepliesLoading(loading)}\r\n                        />\r\n                    </>\r\n                ) : null}\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={activeEditMode}>\r\n                        <EditComment\r\n                            comment={comment}\r\n                            updateComments={updateComments}\r\n                            close={() => setActiveEditModal(false)}\r\n                        />\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={replyMode}>\r\n                        <ReplyComment\r\n                            comment={comment}\r\n                            onReply={() => {\r\n                                setShowReplies(true);\r\n                            }}\r\n                            close={() => setReplyMode(false)}\r\n                        />\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={uploadAttachment}>\r\n                        <AttachmentUpload\r\n                            comment={comment}\r\n                            onReply={() => setShowReplies(true)}\r\n                            close={() => setUploadAttachment(false)}\r\n                        />\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InnerComment;\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from 'styled-components';\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useReplyTaskCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst ReplyComment = ({ comment, close, onReply }) => {\r\n    const [text, setText] = React.useState(\"\");\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = React.useState(null);\r\n\r\n    // comment reply api hook from redux toolkit\r\n    const [replyTaskComment, { isLoading }] = useReplyTaskCommentMutation();\r\n\r\n    const visibleToScreenRef = React.useRef(null); // reference element\r\n    // update on layout change\r\n    React.useLayoutEffect(() => {\r\n        if (visibleToScreenRef && visibleToScreenRef.current) {\r\n            // scroll into view on visible\r\n            visibleToScreenRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, []);\r\n\r\n    // handle ck editor text change\r\n    const handleEditor = (e, editor) => {\r\n        const data = editor.getData(); // get editor text\r\n        setText(data);\r\n    };\r\n\r\n    // handle update\r\n    const onReplied = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // if text not provide show error message\r\n        if(!text){\r\n            setError(s => ({...s, comment: \"Please provide a comment before submitting.\"}));\r\n            return;\r\n        }\r\n\r\n        // make form\r\n        const formData = new FormData();\r\n        formData.append(\"reply_text\", text);\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"parent_comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n        // show formData\r\n        // for(const [key, value] of formData.entries()){\r\n        //     console.log(key, ': ', value)\r\n        // }\r\n\r\n\r\n        // submit form\r\n        await replyTaskComment({ formData, commentId: comment.id }).then(\r\n            (res) => {\r\n                toast.success(\"Your reply has been successfully submitted.\");\r\n                onReply();\r\n                close();\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <h6>Reply: <sup >(<span className=\"text-danger\"> Require </span>)</sup></h6>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent\r\n                            data={text}\r\n                            onChange={handleEditor}\r\n                        />\r\n                    </div>\r\n                    {error?.comment ? <ErrorText>{error?.comment}</ErrorText> : null }\r\n\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        <UploadFilesInLine\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        />\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Processing..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onReplied}>\r\n                                Reply\r\n                            </Button>\r\n                            <Button onClick={close} variant=\"secondary\">\r\n                                Close\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n\r\n            <div ref={visibleToScreenRef} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReplyComment;\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n    padding: 10px 0;\r\n`;\r\n","import * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useGetTaskCommentRepliesQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport { BsFillPlusCircleFill } from \"react-icons/bs\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst ReplyCommentPreview = ({\r\n    comment,\r\n    cb,\r\n    onReply,\r\n    showReplyButton,\r\n    onDelete,\r\n}) => {\r\n    const { data, isLoading } = useGetTaskCommentRepliesQuery(comment.id, {\r\n        refetchOnMountOrArgChange: true,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        cb(isLoading);\r\n    }, [isLoading]);\r\n\r\n    return (\r\n        <div className=\"sp1_task_replies_comment_list ml-3 w-100\">\r\n            {_.map(data, (r, i) => (\r\n                <div\r\n                    key={i}\r\n                    className=\"pl-3 pr-4 border-left border__left py-3 w-100\"\r\n                >\r\n                    <Comment comment={r} onDelete={onDelete} />\r\n                </div>\r\n            ))}\r\n\r\n            {!comment.is_deleted && !isLoading && showReplyButton ? (\r\n                <div className=\"border-left border__left reply_button pl-3\">\r\n                    <button onClick={onReply}>\r\n                        {/* <BsFillPlusCircleFill className=\"fs-16 icon\" /> */}\r\n                        <span>+ Reply</span>\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReplyCommentPreview;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { CompareDate } from '../../utils/dateController';\r\n\r\nconst d = new CompareDate();\r\nexport const useDailySubmission = () => {\r\n    const [isEnable, setIsEnable] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                // Fetch server time\r\n                let response = await axios.get('/server-time-status');\r\n                const date = response.data.data;\r\n\r\n                // Get the current day abbreviation (e.g., 'Sat', 'Sun', 'Mon', etc.)\r\n                const dayAbbreviation = d.dayjs(date).format('ddd');\r\n\r\n                // Define the cutoff times\r\n                const saturdayCutoffTime = d.dayjs(date).set('hour', 12).set('minute', 45);\r\n                const otherDaysCutoffTime = d.dayjs(date).set('hour', 16).set('minute', 45);\r\n\r\n                // Get the current time\r\n                const currentTime = d.dayjs(date);\r\n\r\n                // Check if it's Saturday or not\r\n                if (dayAbbreviation === 'Sat') {\r\n                    // Check if the current time is greater than 12:30 PM on Saturday\r\n                    if (currentTime.isSameOrAfter(saturdayCutoffTime)) {\r\n                       setIsEnable(true);\r\n                    }else{\r\n                        setIsEnable(false);\r\n                    }\r\n                } else {\r\n                    // Check if the current time is greater than 4:30 PM on other days\r\n                    if (currentTime.isSameOrAfter(otherDaysCutoffTime)) {\r\n                        setIsEnable(true);\r\n                    }else setIsEnable(false);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n    return {isEnable}\r\n}\r\n","import dayjs from \"dayjs\";\r\n\r\nexport const timeCalculate = (date) => {\r\n    const providedDate = dayjs(date);\r\n    const currentDate = dayjs();\r\n    const diff = currentDate.diff(providedDate, 'minute');\r\n    if (diff < 1) {\r\n        return 'Just now';\r\n    } else if (diff < 60) {\r\n        return `${diff} minute${diff > 1 ? 's' : ''} ago`;\r\n    } else if (diff < 1440) { // Less than 24 hours\r\n        const hours = Math.floor(diff / 60);\r\n        return `${hours} hour${hours > 1 ? 's' : ''} ago`;\r\n    } else if (diff < 10080) { // Less than 7 days\r\n        const days = Math.floor(diff / 1440);\r\n        return `${days} day${days > 1 ? 's' : ''} ago`\r\n    } else {\r\n        return providedDate.format('MMM DD, YYYY [at] h:mm A');\r\n    }\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp1_checkbox--label.disable{color:#aaa}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/UI/form/checkbox.css\"],\"names\":[],\"mappings\":\"AAAA,6BACI,UACJ\",\"sourcesContent\":[\".sp1_checkbox--label.disable {\\r\\n    color: #aaa;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".fpsqco3G\\\\+Hf7gF1vYUOU9Q\\\\=\\\\={flex-direction:row-reverse;margin:auto;width:-moz-fit-content;width:fit-content}.rpJ2L0Uklhu0QGtrM7rb3Q\\\\=\\\\=,.fpsqco3G\\\\+Hf7gF1vYUOU9Q\\\\=\\\\={display:flex;padding:0}.rpJ2L0Uklhu0QGtrM7rb3Q\\\\=\\\\={align-items:center;background-color:#ededed;border:2px solid #f4f4f4;border-radius:100%;box-shadow:0 0 2px rgba(0,0,0,.1);height:24px;justify-content:center;margin-left:-10px;width:24px}.N71c75OLkFHuPvS5HeIkpQ\\\\=\\\\={border-radius:100%;height:100%;object-fit:fill;-o-object-fit:fill;width:100%}.\\\\+F5c8j7QS2thczRvvUXBlw\\\\=\\\\={background-color:#276fec;color:#fff;text-decoration:none!important}.\\\\+F5c8j7QS2thczRvvUXBlw\\\\=\\\\= span{font-size:12px;text-decoration:none!important}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/global/AvatarGroup.module.css\"],\"names\":[],\"mappings\":\"AAAA,6BAKI,0BAA2B,CAF3B,WAAY,CAFZ,sBAAkB,CAAlB,iBAKJ,CAEA,yDANI,YAAa,CAEb,SAgBJ,CAZA,4BAQI,kBAAmB,CAFnB,wBAAyB,CAFzB,wBAAqC,CADrC,kBAAmB,CAQnB,iCAAoC,CATpC,WAAY,CAOZ,sBAAuB,CACvB,iBAAkB,CATlB,UAWJ,CAGA,4BAGI,kBAAmB,CADnB,WAAY,CAEZ,eAAgB,CAChB,kBAAmB,CAJnB,UAKJ,CAGA,6BACI,wBAAmC,CACnC,UAAW,CACX,8BACJ,CAEA,kCACI,cAAe,CACf,8BACJ\",\"sourcesContent\":[\".avatar_group{\\r\\n    width: fit-content;\\r\\n    display: flex;\\r\\n    margin: auto;\\r\\n    padding: 0;\\r\\n    flex-direction: row-reverse;\\r\\n}\\r\\n\\r\\n.avatar{\\r\\n    width: 24px;\\r\\n    height: 24px;\\r\\n    border-radius: 100%;\\r\\n    border: 2px solid rgb(244, 244, 244) ;\\r\\n    padding: 0;\\r\\n    background-color: #ededed;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-left: -10px;\\r\\n    box-shadow: 0 0 2px rgb(0 0 0 / 10%);\\r\\n}\\r\\n\\r\\n\\r\\n.avatar_image{\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    border-radius: 100%;\\r\\n    object-fit: fill;\\r\\n    -o-object-fit: fill;\\r\\n}\\r\\n\\r\\n\\r\\n.empty_avatar{\\r\\n    background-color: rgb(39, 111, 236);\\r\\n    color: #fff;\\r\\n    text-decoration:none !important;\\r\\n}\\r\\n\\r\\n.empty_avatar span{\\r\\n    font-size: 12px;\\r\\n    text-decoration:none !important;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"avatar_group\": \"fpsqco3G+Hf7gF1vYUOU9Q==\",\n\t\"avatar\": \"rpJ2L0Uklhu0QGtrM7rb3Q==\",\n\t\"avatar_image\": \"N71c75OLkFHuPvS5HeIkpQ==\",\n\t\"empty_avatar\": \"+F5c8j7QS2thczRvvUXBlw==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._8xXZnlhj3eHMkUUObnMmZw\\\\=\\\\={margin:2rem auto;max-width:90%;min-height:10rem;padding:1rem}._7n-CpR1Fy19zjUlU6WsThQ\\\\=\\\\={margin:0 auto}.SxO-JfljZkxUGDLmlQviZg\\\\=\\\\= th{background-color:#222;color:#fff;font-weight:700;padding:15px 25px;text-align:center}.YQAkXuuhsOlsr6ZIt378wQ\\\\=\\\\= td{padding:15px;text-align:center}.A5JA7hH72pS6vSurU7mqwQ\\\\=\\\\={padding:2rem 15px 15px}.A5JA7hH72pS6vSurU7mqwQ\\\\=\\\\=,.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={background-color:#fff}.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={border-radius:5px;margin-bottom:16px}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=,.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={position:relative}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\={background-color:transparent;border:1px solid rgba(0,0,0,.37);border-radius:4px;color:rgba(0,0,0,.85);display:block;font-size:16px;height:40px;margin:0 auto;outline:none!important;padding:6px 4px 4px 14px;transition:all .2s ease-in-out;width:100%}.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\={background:#fff;color:rgba(0,0,0,.519);cursor:text;display:inline-block;font-size:14px;font-weight:700;height:14px;left:12px;line-height:14px;margin:0 auto;padding:0 4px;position:absolute;text-align:left;top:30%;transition:all .15s ease-in-out}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:focus,.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:hover{border:1px solid #000}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:focus+.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\=,.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:valid+.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\={color:#000;font-weight:700;top:-6px}.sU7OfO8z\\\\+2G5bBnOIGPJmA\\\\=\\\\={background-color:inherit;color:#e32b2b;padding:0 0 0 3px}.sU7OfO8z\\\\+2G5bBnOIGPJmA\\\\=\\\\=:after{content:\\\"*\\\"}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css\"],\"names\":[],\"mappings\":\"AAIA,6BAGE,gBAAiB,CADjB,aAAc,CAEd,gBAAiB,CAHjB,YAIF,CAEA,6BACE,aACF,CAEA,+BACE,qBAAiC,CAGjC,UAAY,CACZ,eAAiB,CAHjB,iBAAkB,CAClB,iBAGF,CAMA,+BAEE,YAAa,CADb,iBAEF,CAGA,4BAGE,sBAEF,CAGA,wDAJE,qBASF,CALA,4BAIE,iBAAkB,CAHlB,kBAIF,CACA,0DAJE,iBAkBF,CAdA,8BAME,4BAA6B,CAF7B,gCAAiC,CACjC,iBAAkB,CAOlB,qBAAuB,CAVvB,aAAc,CASd,cAAe,CAFf,WAAY,CAFZ,aAAgB,CAGhB,sBAAwB,CAFxB,wBAAyB,CAKzB,8BAA+B,CAV/B,UAWF,CAEA,4BAWE,eAAiB,CACjB,sBAA2B,CAE3B,WAAY,CATZ,oBAAqB,CAIrB,cAAe,CACf,eAAiB,CAHjB,WAAY,CAJZ,SAAU,CAKV,gBAAiB,CAKjB,aAAgB,CAPhB,aAAc,CALd,iBAAkB,CAGlB,eAAgB,CAFhB,OAAQ,CAaR,+BACF,CACA,wEAA6B,qBAAwB,CAErD,gIAEE,UAAW,CACX,eAAiB,CAFjB,QAGF,CACA,6BACI,wBAAyB,CACzB,aAAc,CAEd,iBACJ,CACA,mCACI,WACJ\",\"sourcesContent\":[\".bdr{\\r\\n  /* border: solid; */\\r\\n}\\r\\n\\r\\n.container{\\r\\n  padding: 1rem;\\r\\n  max-width: 90%;\\r\\n  margin: 2rem auto;\\r\\n  min-height: 10rem;\\r\\n}\\r\\n\\r\\n.myTable{\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.headerRow th{\\r\\n  background-color: rgb(34, 34, 34);\\r\\n  padding: 15px 25px;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.bodyRow tr{\\r\\n  /* border-radius: 5px; */\\r\\n}\\r\\n\\r\\n.bodyRow td{\\r\\n  text-align: center;\\r\\n  padding: 15px;\\r\\n}\\r\\n\\r\\n\\r\\n.form{\\r\\n  /* border: solid; */\\r\\n  padding: 15px;\\r\\n  padding-top: 2rem;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n/* floating .label input field */\\r\\n.wrapper {\\r\\n  margin-bottom: 16px;\\r\\n  position: relative;\\r\\n  background-color: white;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n.input {\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  border: 1px solid rgba(0,0,0,.37);\\r\\n  border-radius: 4px;\\r\\n  background-color: transparent;\\r\\n  margin: 0px auto;\\r\\n  padding: 6px 4px 4px 14px;\\r\\n  height: 40px;\\r\\n  outline: none !important;\\r\\n  font-size: 16px;\\r\\n  color: rgba(0,0,0,0.85);\\r\\n  transition: all .2s ease-in-out;\\r\\n}\\r\\n\\r\\n.label {\\r\\n  position: absolute;\\r\\n  top: 30%; \\r\\n  left: 12px;\\r\\n  text-align: left;\\r\\n  display: inline-block;\\r\\n  padding: 0 4px;\\r\\n  height: 14px;\\r\\n  line-height: 14px;\\r\\n  font-size: 14px;\\r\\n  font-weight: bold;\\r\\n  background: white;\\r\\n  color: rgba(0, 0, 0, 0.519);\\r\\n  margin: 0px auto;\\r\\n  cursor: text;\\r\\n  transition: all .15s ease-in-out;\\r\\n}\\r\\n.input:hover, .input:focus { border: 1px solid #000; }\\r\\n\\r\\n.input:valid + .label, .input:focus + .label { \\r\\n  top: -6px;\\r\\n  color: #000;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.formAsterisk {\\r\\n    background-color: inherit;\\r\\n    color: #e32b2b;\\r\\n    padding: 0;\\r\\n    padding-left: 3px;\\r\\n}\\r\\n.formAsterisk:after {\\r\\n    content: \\\"*\\\";\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"_8xXZnlhj3eHMkUUObnMmZw==\",\n\t\"myTable\": \"_7n-CpR1Fy19zjUlU6WsThQ==\",\n\t\"headerRow\": \"SxO-JfljZkxUGDLmlQviZg==\",\n\t\"bodyRow\": \"YQAkXuuhsOlsr6ZIt378wQ==\",\n\t\"form\": \"A5JA7hH72pS6vSurU7mqwQ==\",\n\t\"wrapper\": \"sHn0ikpJ-siiyePWSQMFFA==\",\n\t\"input\": \"YRqnDsOCvlyUNmnxtR++ug==\",\n\t\"label\": \"P-INSzqztmJ-mpd7zZK14w==\",\n\t\"formAsterisk\": \"sU7OfO8z+2G5bBnOIGPJmA==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp1_tlr_tbl_wrapper{overflow-y:auto}.sp1_tlr_table{width:100%}.sp1_tlr_th{border-bottom:2px solid #dbe4ff;color:#373737;height:36px;padding:3px 10px;position:sticky;text-align:center;top:0;z-index:10}.sp1_tlr_td{border-bottom:1px solid #dbe4ff;max-width:350px;min-width:150px;padding:10px;text-align:center}.sp1_tlr_tbody>.sp1_tlr_tr:hover .sp1_tlr_td{background-color:rgba(233,235,240,.349)}.sp1_tlr_tr .sp1_tlr_td_marged{background-color:rgba(243,244,248,.349);border-inline:1px solid #dbe4ff}.sp1_tlr_tr .sp1_tlr_td_marged:first-child,.sp1_tlr_tr .sp1_tlr_td_marged:nth-child(2){border-left-color:transparent}.sp1_tlr_td_border{border-bottom:2px solid #dbe4ff}.sp1_drag_th.__dragging{background-color:hsla(222,6%,69%,.222)}.sp1_drag_th.__drop-area{background-color:rgba(34,45,71,.349)}.from_body{padding:2rem 1rem 3rem}.openRow_bg{background-color:hsla(218,7%,78%,.32)!important;border:none!important;overflow:visible}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css\"],\"names\":[],\"mappings\":\"AAAA,qBACI,eACJ,CAEA,eACI,UACJ,CAEA,YAII,+BAA2C,CAK3C,aAAsB,CARtB,WAAY,CACZ,gBAAiB,CAGjB,eAAgB,CAGhB,iBAAkB,CADlB,KAAM,CADN,UAIJ,CAEA,YAII,+BAA2C,CAF3C,eAAgB,CAChB,eAAgB,CAFhB,YAAa,CAIb,iBACJ,CAEA,6CACI,uCACJ,CAEA,+BACI,uCAA2C,CAC3C,+BACJ,CAEA,uFAEI,6BACJ,CAEA,mBACI,+BACJ,CAQA,wBACI,sCACJ,CAEA,yBACI,oCACJ,CAEA,WACI,sBACJ,CAGA,YACI,+CAAqD,CACrD,qBAAuB,CACvB,gBACJ\",\"sourcesContent\":[\".sp1_tlr_tbl_wrapper{\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n.sp1_tlr_table{\\r\\n    width: 100%; \\r\\n}\\r\\n\\r\\n.sp1_tlr_th {\\r\\n    height: 36px;\\r\\n    padding: 3px 10px;\\r\\n    /* background-color: rgb(55, 55, 55); */\\r\\n    border-bottom: 2px solid rgb(219, 228, 255);\\r\\n    position: sticky;\\r\\n    z-index: 10;\\r\\n    top: 0;\\r\\n    text-align: center;\\r\\n    color: rgb(55, 55, 55);\\r\\n}\\r\\n\\r\\n.sp1_tlr_td{\\r\\n    padding: 10px;\\r\\n    max-width: 350px;\\r\\n    min-width: 150px;\\r\\n    border-bottom: 1px solid rgb(219, 228, 255);\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.sp1_tlr_tbody > .sp1_tlr_tr:hover .sp1_tlr_td{\\r\\n    background-color:rgba(233, 235, 240, 0.349);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged{\\r\\n    background-color:rgba(243, 244, 248, 0.349);\\r\\n    border-inline: 1px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged:first-child,\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged:nth-child(2){\\r\\n    border-left-color: transparent;\\r\\n}\\r\\n\\r\\n.sp1_tlr_td_border{\\r\\n    border-bottom: 2px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n/* .sp1_tlr_tbody > .sp1_tlr_tr:hover .sp1_tlr_td_hover-disable{\\r\\n   background-color: #fff !important; \\r\\n} */\\r\\n\\r\\n\\r\\n\\r\\n.sp1_drag_th.__dragging {\\r\\n    background-color: rgba(170, 173, 180, 0.222);\\r\\n}\\r\\n\\r\\n.sp1_drag_th.__drop-area {\\r\\n    background-color: rgba(34, 45, 71, 0.349);\\r\\n}\\r\\n\\r\\n.from_body{\\r\\n    padding: 2rem 1rem 3rem;\\r\\n}\\r\\n\\r\\n\\r\\n.openRow_bg{\\r\\n    background-color:rgba(194, 197, 202, 0.32) !important;\\r\\n    border: none !important;\\r\\n    overflow: visible;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".QWT8SKIOKp3nCIlWnmqvlA\\\\=\\\\={box-shadow:0 10px 16px rgba(0,0,0,.2);font-family:Inter;font-weight:400;left:50%;max-width:800px;position:absolute;top:50%;transform:translate(-50%,-50%);width:100%}._7q1rGYYnwZMgY33fyvn5Rw\\\\=\\\\={background-color:#f3f3f3}._7q1rGYYnwZMgY33fyvn5Rw\\\\=\\\\= h6{font-weight:600;margin:0}.xFa21Dq-VWzqARlTwQw6ug\\\\=\\\\=:not(:last-child){border-bottom:1px dashed rgba(0,0,0,.1)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css\"],\"names\":[],\"mappings\":\"AAAA,4BASI,qCAAwC,CAFxC,iBAAkB,CAClB,eAAgB,CAHhB,QAAS,CAJT,eAAgB,CAEhB,iBAAkB,CAClB,OAAQ,CAER,8BAAgC,CAJhC,UAQJ,CAGA,6BACI,wBACJ,CAEA,gCAEI,eAAgB,CADhB,QAEJ,CAEA,6CACI,uCACJ\",\"sourcesContent\":[\".form_card{\\r\\n    max-width: 800px;\\r\\n    width: 100%;\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n    font-family: Inter;\\r\\n    font-weight: 400;\\r\\n    box-shadow: 0 10px 16px rgb(0 0 0 / 20%);\\r\\n}\\r\\n\\r\\n\\r\\n.form_card_head{\\r\\n    background-color: rgb(243, 243, 243);\\r\\n}\\r\\n\\r\\n.form_card_head h6{\\r\\n    margin: 0;\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.list_border:not(:last-child){\\r\\n    border-bottom: 1px dashed rgb(0 0 0 / 10%);\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"form_card\": \"QWT8SKIOKp3nCIlWnmqvlA==\",\n\t\"form_card_head\": \"_7q1rGYYnwZMgY33fyvn5Rw==\",\n\t\"list_border\": \"xFa21Dq-VWzqARlTwQw6ug==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["convertTime","time","hours","Math","floor","min","h","concat","_ref","_ref$toggleRef","toggleRef","isOpen","close","_ref$comments","task","comments","taskId","onCommentPost","singleCommentId","_ref$showCommentEdito","showCommentEditor","_ref$showSearchBtn","showSearchBtn","_ref$showFullScreenBt","showFullScreenBtn","_ref$height","height","commentState","useCommentStore","param","useParams","width","useWindowSize","_useState2","_slicedToArray","useState","fullScreenView","setFullScreenView","_useGetCommentsQuery","useGetCommentsQuery","data","isFetching","isLoading","refetch","useEffect","_jsx","CommentContainerDecider","children","CommentsBody","filter","comment","id","loading","fetching","options","locals","value","onChange","label","checked","_ref$className","className","_ref$labelClassName","labelClassName","_ref$disabled","disabled","_objectWithoutProperties","_excluded","_jsxs","type","_ref$users","users","_ref$show","show","len","_","avatars","splice","styles","avatar_group","avatar","empty_avatar","user","i","src","alt","avatar_image","rating","iconClassName","_Fragment","_toConsumableArray","Array","map","r","idx","parseInt","style","color","useRevision","_task$category","taskType","category","isIndependent","isIndependentTask","getLeadDeveloperAcknowladgementOptions","revision","isDeniable","getProjectManagerAcknowladgementOptions","_regeneratorRuntime","e","t","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","key","input","hint","prim","toPrimitive","undefined","res","String","Number","_toPrimitive","_toPropertyKey","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","err","arr","isArray","_arrayWithHoles","_iterableToArrayLimit","minLen","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","arr2","useSingleTask","User","_window","window","Laravel","_useLazyGetTaskDetail2","useLazyGetTaskDetailsQuery","getTaskDetails","taskDetailsIsFetching","getTaskById","_callee","_res$parent_task_head","_context","unwrap","taskFiles","parent_task_action","parent_task_title","parent_task_heading","heading","working_environment","working_environment_data","pm_task_guideline","task_guideline","task_revisions","revisions","taskSubTask","Sub_Tasks","t0","console","log","_x","_useLazyGetSubmittedT2","useLazyGetSubmittedTaskQuery","getSubmittedTask","submittionInfoIsFetching","getSubmittionInfo","_ref2","_callee2","_context2","_x2","_useApproveSubmittedT2","useApproveSubmittedTaskMutation","approveSubmittedTask","approveTaskLoadingStatus","approveTask","_ref3","_callee3","callback","_context3","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","fire","icon","title","_x3","_x4","taskCommentApiSlice","apiSlice","injectEndpoints","endpoints","build","getTaskComments","query","providesTags","getTaskCommentReplies","commentId","getTaskCommentWidgetData","getPreviewCommentData","updateComment","mutation","url","body","formData","invalidatesTags","removeCommentPreviousUploadedFile","task_id","comment_id","_token","document","querySelector","getAttribute","replyTaskComment","result","deleteComment","useGetTaskCommentsQuery","useGetTaskCommentRepliesQuery","useUpdateCommentMutation","useGetTaskCommentWidgetDataQuery","useLazyGetTaskCommentWidgetDataQuery","useGetPreviewCommentDataQuery","useRemoveCommentPreviousUploadedFileMutation","useReplyTaskCommentMutation","useDeleteCommentMutation","_ref$expendable","expendable","headingClass","headingStyle","_React$useState2","React","expend","setExpend","init","onClick","cursor","AnimatePresence","motion","div","initial","animate","exit","text","editorContainerClass","workEnv","useSelector","subTask","isLong","showText","ref","useRef","useClickAway","dangerouslySetInnerHTML","__html","href","preventDefault","Modal","background","target","site_url","frontend_password","login_url","email","password","index","pmComment","leadComment","getComment","disputeBetween","date","dayjs","createdAt","format","minHeight","totalMin","revisionAcknowledgement","isDeny","isAccept","textIndent","gap","Placeholder","singleTaskPagePermission","auth","getRoleId","projectManagerId","getId","timeControlPermision","status","loggedUser","statusPermission","assigneePermission","statusId","assignedUser","assigneeTo","_loggedUser","includes","subtask","markAsCompletedButtonPermission","approveButtonPermission","assigneeBy","needRevisionPermision","_ref4","revisionButtonPermission","_ref5","submitForClientApproval","_ref6","clientApproveConfirmationButtonPermission","_ref7","subTaskCreationPermision","_ref9","assignedBy","styled","_templateObject","modalRef","setModalRef","_usePopper","usePopper","placement","modifiers","offset","attributes","popper","pointerEvents","zIndex","opacity","Shadow","ReactDOM","top","left","maxWidth","Button","minWidth","CKEditorComponent","WidgetItem","setIsOpen","overflow","is_deleted","mention","timeCalculate","deleted_at","created_date","CommentsContainer","skip","sortedComments","sort","b","a_day","diff","handleOrdering","modalIsOpen","setModalIsOpen","_React$useState4","openAddCommentModal","setOpenAddCommentModal","_React$useState6","modalToggleRef","setModalToggleRef","toggleModalButton","_useGetTaskCommentsQu","unshift","role","border","borderRightColor","variant","fontSize","CommentWritingModal","Widget","item","setModalData","modalData","verticalAlign","margin","textAlign","developer_name","submission_creation_date","AiFillEyeInvisible","AiFillEye","toggle","content","singleData","DailySubmissionItem","CustomModal","timeFormatter","_time$split$0$split2","split","year","month","month_name","columnSchema","header","draggable","accessorKey","cell","padding","getValue","DataTable","tableData","tableColumns","tableName","_data$daily_submissio","_useState4","modalTableIsOpen","setModalTableIsOpen","_useState6","modalRefButton","setModalRefButton","_useState8","singleUserSubmissionTableDrawerRef","setSingleUserSubmissionTableDrawerRef","_useState10","_useGetDailyTasksSubm","useGetDailyTasksSubmissionQuery","modalTableClose","DailysubmissionDrawerTable","daily_submissions","SingleUserSubmissionTableDrawer","InnerHistoryItem","lazy","_ref$data","fallback","InnerHistoryItemLoader","history","HistoryItem","fetcher","axios","get","_useSelector","histories","dispatch","useDispatch","_useSWR","useSWR","refreshInterval","storeHistories","Histories","marginRight","Suspense","note","Link","to","_ref$readOnly","readOnly","_ref$placeholder","placeholder","_ref$inputClass","inputClass","_ref$labelClass","labelClass","_ref$type","defaultValue","rest","htmlFor","required","onWheel","currentTarget","blur","notes","files","setFiles","setTitle","errTitle","setErrTitle","_React$useState8","setNote","deviceWidth","_useCrateNoteMutation2","useCrateNoteMutation","crateNote","handleSubmit","fd","FormData","append","file","_notes","storeNotes","handleEditorChange","editor","getData","Input","setState","handleChange","UploadFilesInLine","_React$useState10","attachedFiles","setAttachedFiles","searchParams","useSearchParams","noteId","_useUpdateNoteMutatio2","useUpdateNoteMutation","updateNote","_useGetTaskDetailsQue","useGetTaskDetailsQuery","refetchOnMountOrArgChange","clearField","handleClose","_notes2","_res$note","message","getElementsByTagName","deleteNoteUploadedFile","useDeleteNoteUploadedFileMutation","handleFileDelete","previousFile","indexOf","previous","onPreviousFileDelete","getAvatar","getName","getDesignationName","mode","setMode","navigate","useNavigate","paramType","CreateNote","EditNote","NoteView","Note","setToggleRef","cmt","commentLength","maxHeight","Rating","deadline_meet","submission_quality","req_fullfillment","ViewComment","setDate","selected","minDate","maxDate","placeholderText","DatePicker","dateFormat","SearchBox","_ref$autoFocus","autoFocus","props","current","focus","xmlns","viewBox","propTypes","PropTypes","isRequired","_ref$title","onSelect","setQuery","params","categories","filteredData","cat","category_name","toLowerCase","Combobox","displayValue","Options","Loader","catIdx","Option","active","_employees","taskCategory","employeeId","setEmployeeId","_useDeveloperInProgre","useDeveloperInProgressTaskQuery","DevProgressStatus","employees","role_id","employee","isOverloaded","image_url","objectFit","developer_status","priority","setSelected","Listbox","CompareDate","isVisible","location","useLocation","pathname","replace","_useEditSubtaskMutati2","useEditSubtaskMutation","editSubtask","_useEditSubtaskMutati3","Card","form_card","Head","onClose","form_card_head","Body","form_card_body","SubTaskEditModal","onSubmit","success","warn","_required_error$title","_required_error$start","_required_error$start2","_required_error$due_d","_required_error$due_d2","editDataIsFetching","milestoneID","milestone_title","milestoneTitle","milestone","parentTaskTitle","Date","startDate","setStateDate","dueDate","setDueDate","_useState12","projectName","_useState14","setTaskCategory","_useState16","assignedTo","setAssignedTo","_useState18","description","setDescription","_useState20","setPriority","_useState22","estimateHours","estimateTimeHour","_useState24","estimateMinutes","estimateTimeMin","_useState26","_useState28","setError","required_error","_useGetMilestoneDetai","useGetMilestoneDetailsQuery","projectId","deleteUplaodedFile","useDeleteUplaodedFileMutation","start_date","toDate","due_date","TaskCategorySelectionBox","AssignedToSelection","PrioritySelection","_milestone$deliverabl","count","errorMessages","showError","_startDate","_dueDate","parentTaskId","boardColumn","deliverable_type","subtaskId","requiredField","overloadedUser","gender","field","genderPronoun","_task$assigneeTo","_task$assigneeTo2","_task$assigneeTo3","_task$assigneeTo4","_task$assigneeTo5","_task$assigneeTo6","_task$assigneeBy","_task$assigneeBy2","_task$assigneeBy3","_task$assigneeBy4","_task$assigneeBy5","_task$assigneeBy6","_task$boardColumn","_$last","GenarelLoader","getSubtaskTitle","isSubtask","getUserLink","labelColor","columnName","getStartDate","getDueDate","parentTaskTimeLog","size","Accordion","last","revisionStatus","RevisionText","Guideline","SubmittedWorkItem","submittedWork","timeLog","TableRow","colSpan","TimeLog","getStartTime","endTime","getEndTime","memo","hoursLogged","review","overall_tasks","ContentLoader","speed","backgroundColor","foregroundColor","x","rx","ry","HistoryLoader","parentTask","setTask","taskID","setSubmittedWork","setTimeLog","setReview","setHistories","_React$useState12","_React$useState14","isCommentShow","setIsCommentShow","_useSingleTask","detailFetchingStateLoading","subTaskComments","commentsFetching","commentsLoading","commentsRefetch","SingleTask","fetchData","cb","fetchSubmittedWork","fetchTimeLogData","fetchHistories","fetchReviewData","Genarel","SubmittedWork","showCloseBtn","History","TaskReview","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","showApproveForm","setShowApproveForm","completedWithInDeadline","setCompletedWithInDeadline","submittedStar","setSubmittedStar","fullfilledStar","setFullfilledStar","setComment","oldSubmittion","setOldSubmittion","latestSubmittion","setLatestSubmittion","_useGetSubmittedTaskQ","useGetSubmittedTaskQuery","setErr","sortBy","latest","old","handleOnSubmit","rating2","rating3","user_id","HiOutlineSelector","SubmittedWorkCard","submission_no","action","radius","SubmitButton","_data$text","_ref3$latest","_ref3$className","_ref3$isLoading","links","compact","attaches","submission_date","listStyle","link","FileUploader","Preview","fileName","downloadAble","deleteAble","downloadUrl","previewUrl","fileType","ext","toggleEditForm","_useLazyCheckSubTaskT2","useLazyCheckSubTaskTimerQuery","checkSubTaskTimer","useCheckEditableSubTaskQuery","isEditable","stopPropagation","hasEditPermission","added_by","PreviewSubtask","onConfirm","buttonVisible","setButtonVisible","countDown","setCountDown","timeIntervelId","setInterval","timeOutId","setTimeout","clearInterval","clearTimeout","marginLeft","siteUrl","setSiteUrl","frontendPassword","setFrontendPassword","loginUrl","setLoginUrl","siteLoginCredentialUserNameOrEmail","setSiteLoginCredentialUserNameOrEmail","setPassword","_useWorkingEnvironmen2","useWorkingEnvironmentMutation","workingEnvironment","project_id","checkIsURL","username","isConfirmed","_required_error$pageT","_required_error$pageT2","_ref12","_required_error$page_","_required_error$page_2","_required_error$descr","_required_error$descr2","_ref$isFirstSubtask","isFirstSubtask","refetchTask","useRefetchTaskDetails","taskDetails","isWorkingEnvironmentSubmit","setParentTask","pageType","setPageType","pageTypeOthers","setPageTypeOthers","pageName","setPageName","pageURL","setPageURL","numberOfPage","setNumberOfPage","existingDesignLink","setExistingDesignLink","_React$useState16","pageTypePriority","setPageTypePriority","_React$useState18","pageTypeName","setPageTypeName","_useCreateSubtaskMuta2","useCreateSubtaskMutation","createSubtask","_useCreateSubtaskMuta3","_useLazyGetTaskDetail3","_React$useState20","showForm","setShowForm","_React$useState22","isValid","pageUrl","_res$sub_task","_res$sub_task2","_subtask","sub_task","storeSubTasks","isHasRolePermission","setWorkingEnvironmentStatus","WorkingEnvironmentForm","LeadConfirmationModal","AssginedToSelection","_ref8","_ref10","_ref11","_ref13","_ref14","page_type","page_url","editId","setMilestone","project","setProject","setEstimateTimeHour","setEstimateTimeMin","_useState30","editSubTask","find","estimation","formatedDate","_res$users","project_name","task_category","estimate_hours","estimate_minutes","_err$estimate_hours","_err$estimate_minutes","errText","hoursErr","minErr","hours_left","minutes_left","milestone_id","board_column_id","subtask_id","_subtask2","edit","setEdit","formMode","setFormMode","isTaskModalOpen","setIsTaskModalOpen","subtaskModalToggleRef","setSubtaskModalToggleRef","_useLazyGetInProgress2","useLazyGetInProgressTaskStatusQuery","inProgressTaskStatus","toggleAddButton","closeAddModal","closeEditForm","Task","SubtTaskEditForm","SubTaskForm","workEnvData","sub","SubTask","_useUpdateTaskMutatio2","useUpdateTaskMutation","updateTask","_useUpdateTaskMutatio3","TaskEditForm","_milestone$milestone_","_$find","projects","isFetchingMilestone","milestones","list_border","_data$name","image","screen_record_link","previewId","SubmitionView","styte","InnerWorkItem","preview","modal","state","SubmittedModalView","WorkItem","_data$client_name","open","setOpen","attachmentLink","setAttachmentLink","setChecked","taskDescription","setTaskDescription","completedSection","setCompletedSection","_useSubmitDailySubmis2","useSubmitDailySubmissionMutation","submitDailySubmission","isSubmitting","attachmentLinkError","setAttachmentLinkError","taskDescriptionError","setTaskDescriptionError","completedSectionError","setCompletedSectionError","task_title","total_time_spent","client_name","daily_submission_status","borderTop","borderRadius","SelectedFiles","_Array$from","previews","onDelete","onRemove","Checkbox","_window$Laravel","valid","clientId","mark_as_complete","today","_useGetDailySubmissio","useGetDailySubmissionQuery","TodaysUpdateModalTableRow","setTodaysUpdateModalisOpen","URLSearchParams","search","TodaysUpdateModalTable","screenRecordUrl","setScreenRecordUrl","screenRecordUrlErr","setScreenRecordUrlErr","setLinks","linkErr","setLinkErr","isModalUrl","setIsModalUrl","commentErr","setCommentErr","_useMarkAsCompleteMut2","useMarkAsCompleteMutation","markAsComplete","_useLazyCheckSubTaskS2","useLazyCheckSubTaskStateQuery","checkSubTaskState","markAsCompleteModaIsOpen","setMarkAsCompleteModalIsOpen","_links","handleOnLinkInputChange","class","roleId","handleOnScreenRecordLinkInputChange","reason","setReason","reasonError","setReasonError","commentError","setCommentError","_useRevision","revisionOptions","_useCreateRevisionMut2","useCreateRevisionMutation","createRevision","option","marginTop","marginBottom","_reason$revision","_reason$isDeniable","errorCount","revision_acknowledgement","acknowledgement_id","is_deniable","revisionModal","setRevisionModal","RevisionCreationModal","AcceptAndContinueButton","RevisionAcceptAndContinue","_ref2$isSubmitting","onNext","_revision$revision_ac","onAccept","onDeny","onContinue","isContinue","pm_comment","revision_status","lead_comment","revision_reason","_task$taskSubTask","onBack","_ref$isSubmitting","setComments","subtasks","setSubtasks","setSubtaskError","SubtaskSelectionMenu","subTasks","_reason$id","_reason$id2","_comments","findIndex","hanldeEditorTextChange","NextAndContinueButton","_task$taskSubTask2","_task$taskSubTask3","multiple","overflowY","tabIndex","assigned_to_name","denyOptions","denyReason","setShow","accept","setAccept","_useGetRevisionDetail","useGetRevisionDetailsQuery","isFetchingRevision","_useRevisionAcceptOrD2","useRevisionAcceptOrDenyMutation","revisionAcceptOrDeny","isLoadingRevisionReview","handleAcceptAndContinueSubmission","_data$comment","_data$denyReason","_data","deny_reason","revision_id","setTaskStatus","task_status","RevisionView","continue","DenyAndContinue","setDenyReason","useRevisionAcceptOrDenyByLeadDeveloperMutation","_comment$comment","_data$reason","_data$is_deniable","fdata","hanldeAcceptAndContinueSubmition","AssigneeRevisionToDev","hanldeDenyAndContinueSubmition","singleTask","hasSubtask","RevisionViewModal","DeveloperRevisionView","GuideLineText","SubtaskCreationControl","subtaskCreationModalIsOpen","setSubtaskCreationModalIsOpen","fontStyle","fontWeight","StopTimerConfrimationPopUp","stopTimer","startTimer","lessTrackModal","lessTrackModalFor","setLessTrackModal","handleTemporarilyStopTimer","StartTimerWorkingReport","Title","Text","h1","_taggedTemplateLiteral","_templateObject2","_templateObject3","showExpirationWarningModal","setShowExpirationWarningModal","timeLeft","setTimeLeft","timerStatusForWarningModal","toggleModal","setToggleModal","prevTime","interval","closeModal","minutes","seconds","ReactModal","onRequestClose","contentLabel","shouldCloseOnOverlayClick","overlay","Index","_data$last_page","_ref$columns","columns","onPageChange","sorting","setSorting","setTableData","pageIndex","pageSize","_React$useState6$","setPagination","_useLocalStorage2","useLocalStorage","columnOrder","setColumnOrder","pagination","table","useReactTable","onSortingChange","onColumnOrderChange","getCoreRowModel","getPaginationRowModel","getSortedRowModel","TableContainer","Table","DataTableHeader","TableBody","getRowModel","rows","row","getVisibleCells","TableItem","flexRender","column","columnDef","getContext","col","EmptyTable","TableFooter","Flex","Select","paginate","total","ReactPaginate","breakLabel","previousLabel","nextLabel","pageRangeDisplayed","marginPagesDisplayed","pageCount","last_page","renderOnZeroPageCount","containerClassName","pageLinkClassName","activeLinkClassName","previousLinkClassName","nextLinkClassName","PendingTasksTableColumns","original","task_name","Popover","Panel","_data$task_board_colu","task_board_column_color","task_board_column_name","total_min","isPendingModalOpen","setIsPendingModalOpen","useAuth","_useGetTaskListQuery","useGetTaskListQuery","Tasks","task_board_column_id","ariaHideApp","card","card_head","card_body","PendingTasksTable","expireDateForTrainer","showExpirationNotifyModal","setShowExpirationNotifyModal","expireDate","PendingTasksForTrainee","_EvaluationData$data$","_task$ranningTimer","timerStart","setTimerStart","_useGetSingleEvaluati","useGetSingleEvaluationQuery","EvaluationData","exp_date","setTimerStatusForWarningModal","expiredTimerForNewEmployee","setExpiredTimerForNewEmployee","setExpireDateForTrainer","timerId","setTimerId","setSeconds","isOpenConfirmationModal","setIsOpenConfirmationModal","timerStatus","ranningTimer","taskRunning","useMemo","_task$ranningTimer2","_task$ranningTimer3","serverTime","unix","intervalRef","checkExpiration","currentTime","timeDifference","getTime","max","sec","hr","Toast","startTimerFirstCheck","startTimerFirstCheckIsFetching","_useStartTimerApiMuta2","useStartTimerApiMutation","startTimerApi","timerStartStatusIsLoading","_useStopTimerApiMutat2","useStopTimerApiMutation","stopTimerApi","timerStopStatusIsLoading","checkWorkReport","useCheckWorkingReportMutation","startTimerControl","workReport","_window2","check_in_check_out","check_in_status","daily_task_report","hours_log_report","hours_log_report_status","withReactContent","html","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","reload","timeId","_useLazyGetUserTrackT2","useLazyGetUserTrackTimeQuery","getUserTrackTime","trackTimerFetcing","current_time","set","day","check","isBefore","isDev","tracked_times","target_time","is_first_task","StartTimerConfirmationModal","LessTrackTimerModal","ExpiredTimeModalForNewEmployee","ExpiredNotifyModalForNewEmployee","SubmitForClientApproval","_useSubmitForClientAp2","useSubmitForClientApprovalMutation","transform","_useConfirmClientAppr2","useConfirmClientApprovalMutation","confirmClientApproval","projectManagerAcknowladgement","createDispute","additionalPaid","setAdditionalPaid","additionalInfo","setAdditionalInfo","additionalAmount","setAdditionalAmount","additionalError","setAdditionalError","hasAdditionalPayment","isPay","onBlur","disputeCreate","_additionalInfo$info","additional_amount","additional_status","additional_comment","dispute_create","_useStoreClientRevisi2","useStoreClientRevisionTaskMutation","storeClientRevisionTask","AssigneeToLeadFromClientRevision","fData","ClientAcceptedTask","ClientRevision","ReportForm","reportModalOpen","setReportModalOpen","isEnable","useDailySubmission","_useDeveloperCanCompl","useDeveloperCanCompleteTaskQuery","checkMarkAsCompleteEnableStatus","isLoadingCompleteCheck","ENABLE_MARKASCOMPLETE_BUTTON","totalTimeLog","TimerControl","MarkAsComplete","ApproveTask","RevisionControl","RevisionViewControl","ClientApproval","DailySubmissionControl","display","ReportControl","start_time","end_time","hours_logged","Avatar","CardView","_ref4$data","_objectDestructuringEmpty","TimeLogItem","timeLogs","storeTimeLogs","TimeLogTable","TimeLogItemLoader","RefetchTaskProvider","setRefetchTask","_task$additionalInfo","_task$additionalInfo2","_task$additionalInfo3","_task$additionalInfo4","_task$category$name","_task$taskType","_task$pageType","_task$pageName","_task$workEnvData","_task$workEnvData2","_task$workEnvData3","_task$workEnvData4","_task$workEnvData5","_task$workEnvData6","throwError","useErrorHandler","isTaskFetching","isTaskLoading","taskStatus","useGetTaskStatusQuery","_useLazyGetWorkingEnv2","useLazyGetWorkingEnvironmentQuery","getWorkingEnv","_useLazyGetWorkingEnv3","isWorkingEnvFetching","isWorkingEnvLoading","taskForTimeLog","setTaskForTimeLog","totalTime","setTotalTime","taskForTime","useGetTaskForTotalTimeQuery","_task$parent_task_tim","_task$sub_task_time_l","totalTimeInMinutes","parentTimeArray","parent_task_time_log","subTimeArray","sub_task_time_log","calculateTotalTime","CurrentTask","ppTaskFiles","parent_task_id","task_working_environment","code","storeTask","loadingClass","Loading","_taskStatus","BoardColumn","Provider","TaskAction","ind_clientId","ind_client_name","independent_client_name","whiteSpace","loginURL","refSite","guidelines","user_name","devComment","attachments","attachment","pp_task_file_name","pp_task_file_url","pp_task_file_icon","classname","pp_task_file_id","label_color","boxShadow","getTaskStatusName","SubTaskSection","DailySubmissionSection","CommentSection","NoteSection","TimeLogSection","HistorySection","RevisionSection","Toaster","ShowEditModals","_ref$variant","_ref$size","classes","DropdownContext","DropdownProvider","element","setElement","reference","setReference","useDropdown","context","DropdownItem","_ref2$disabled","onMouseUp","DropdownToggle","_ref3$icon","_useDropdown2","DropdownMenu","_ref4$placement","_ref4$offset","_excluded2","_useDropdown3","popperElement","setPopperElement","setWidth","random","substr","DOM","getElementById","fallbackPlacements","offsetWidth","timeout","handleClickOutside","event","contains","removeEventListener","addEventListener","el","createElement","appendChild","removeChild","Dropdown","_ref5$className","Item","Toggle","Menu","isBrowser","setIsBrowser","modalContent","onReply","_useReplyTaskCommentM2","visibleToScreenRef","scrollIntoView","behavior","onUpdate","fileError","uploadInputClass","fileWrapperClass","ErrorText","Switch","Case","condition","loaderTitle","_comment$files_data","showDeletedComment","setShowDeletedComment","deletedClass","last_updated_date","as","Items","files_data","updateComments","setText","_React$useState5","_useUpdateCommentMuta2","_useRemoveCommentPrev2","handlePreviousFileDeleted","file_details","showReplies","setShowReplies","replyMode","setReplyMode","activeEditMode","setActiveEditModal","uploadAttachment","setUploadAttachment","isRepliesLoading","setIsRepliesLoading","_useDeleteCommentMuta2","handleReplyButtonClick","handleDeleteComment","showDenyButton","denyButtonText","confirmButtonColor","denyButton","buttonsStyling","deleteCommentData","Comment","total_replies","AvatarGroup","replies_users","ReplyCommentPreview","showReplyButton","EditComment","ReplyComment","AttachmentUpload","onReplied","_useGetTaskCommentRep","setIsEnable","response","dayAbbreviation","saturdayCutoffTime","otherDaysCutoffTime","isSameOrAfter","providedDate","days","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}
=======
{"version":3,"file":"js/react/883.js","mappings":"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","sources":["webpack:///./resources/js/react/UI/comments/CommentsContainer.jsx","webpack:///./resources/js/react/UI/form/checkbox.css?a080","webpack:///./resources/js/react/UI/form/Cheeckbox.jsx","webpack:///./resources/js/react/global/AvatarGroup.module.css?7b6f","webpack:///./resources/js/react/global/AvatarGroup.jsx","webpack:///./resources/js/react/global/Rating.jsx","webpack:///./resources/js/react/hooks/useRevision.jsx","webpack:///./resources/js/react/hooks/useSingleTask.jsx","webpack:///./resources/js/react/services/api/TaskCommentApiSlice.js","webpack:///./resources/js/react/single-independent-task/components/Accordion.jsx","webpack:///./resources/js/react/single-independent-task/components/Guideline.jsx","webpack:///./resources/js/react/single-independent-task/components/RevisionText.jsx","webpack:///./resources/js/react/single-independent-task/components/loader/GenarelLoader.jsx","webpack:///./resources/js/react/single-independent-task/permissions.js","webpack:///./resources/js/react/single-independent-task/section/comments/CommentSendBox.jsx","webpack:///./resources/js/react/single-independent-task/components/CustomModal.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentWritingModal.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/Widget.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentsSection.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailySubmissionItem.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailysubmissionDrawerTable.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/drawer-table-support/Single_user_submission_table_column.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/SingleUserSubmissionTableDrawer.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailySubmissionSection.jsx","webpack:///./resources/js/react/single-independent-task/section/history/InnerHistoryItemLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/history/Histories.jsx","webpack:///./resources/js/react/single-independent-task/section/history/HistorySection.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/Note.jsx","webpack:///./resources/js/react/single-independent-task/components/form/Input.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/CreateNote.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/EditNote.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/NoteView.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/NoteSection.jsx","webpack:///./resources/js/react/single-independent-task/section/revisions/ViewComment.jsx","webpack:///./resources/js/react/single-independent-task/section/revisions/RevisionSection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css?78f7","webpack:///./resources/js/react/single-independent-task/section/comments/DatePicker.jsx","webpack:///./resources/js/react/single-independent-task/components/form/Searchbox.jsx","webpack:///./resources/js/react/single-independent-task/components/Loader.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/TaskCategorySelectionBox.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/AssignedToSelection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/PrioritySelection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskEditModal.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/Genarel.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/SubmittedWork.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/TimeLog.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/TaskReview.jsx","webpack:///./resources/js/react/single-independent-task/components/HistoryLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/History.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/PreviewSubtask.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/approve-task/ApproveTask.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTask.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/LeadConfirmationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/WorkingEnvironmentForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskEditForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskSection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/TaskEditForm.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmitionView.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/WorkItem.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/InnerWorkItem.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmittedModalView.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmittedWork.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/TodaysUpdateModalTableRow.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css?c214","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css?09ae","webpack:///./resources/js/react/single-independent-task/section/daily-submission/TodaysUpdateModalTable.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/DailySubmissionControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/MarkAsComplete.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionCreationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionAcceptAndContinue.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionView.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/AssigneeRevisionToDev.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/DenyAndContinue.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/DeveloperRevisionView.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionViewModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionViewControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/subtask_creation_guide/GuideLineText.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/SubtaskCreationControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/StartTimerConfirmationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/stop-timer/LessTrackTimerModal.jsx","webpack:///./resources/js/react/single-independent-task/components/StartTimerWorkingReportPopup.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/ExpiredTimeModalForNewEmployee.jsx","webpack:///./resources/js/react/employee-evaluation/components/Table/PendingTasksTable.jsx","webpack:///./resources/js/react/employee-evaluation/components/Table/PendingTasksTableColumn.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/PendingTasksForTrainee.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/ExpiredNotifyModalForNewEmployee.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/TimerControl.jsx","webpack:///./resources/js/react/single-independent-task/section/helper/timer-start-working-report-error-toaster.js","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/SubmitForClientApproval.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/ClientAcceptedTask.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/AssigneeToLeadFromClientRevision.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/ClientRevision.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/ClientApproval.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/report/Report.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/TaskAction.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/InnerTableRow.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogTable.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogItemLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogSection.jsx","webpack:///./resources/js/react/single-independent-task/SingleIndependentTask.jsx","webpack:///./resources/js/react/single-independent-task/components/Button.jsx","webpack:///./resources/js/react/single-independent-task/components/Dropdown.jsx","webpack:///./resources/js/react/single-independent-task/components/Modal.jsx","webpack:///./resources/js/react/single-independent-task/components/SubmitButton.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/AttachmentUpload.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/Comment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/EditComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/InnerComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/ReplyComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/ReplyCommentPreview.jsx","webpack:///./resources/js/react/single-task/hooks/useDailySubmission.jsx","webpack:///./resources/js/react/utils/timeCalculate.js","webpack:///./resources/js/react/UI/form/checkbox.css","webpack:///./resources/js/react/global/AvatarGroup.module.css","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css","webpack:///./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css"],"sourcesContent":["import React from \"react\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport CustomModal from \"./components/CustomModal\";\r\nimport Modal from \"./components/Modal\";\r\nimport CommentsBody from \"./CommentsBody\";\r\nimport { useState, useEffect } from \"react\";\r\nimport commentDemoData from \"./_Data/commentDemoData\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGetCommentsQuery } from \"../../services/api/commentsApiSlice\";\r\nimport CommentContainerDecider from \"./CommentContainerDecider\";\r\nimport _ from \"lodash\";\r\nimport { useCommentStore } from \"./zustand/store\";\r\n\r\nconst CommentsContainer = ({\r\n    toggleRef = null,\r\n    isOpen,\r\n    close,\r\n    task,\r\n    comments = null,\r\n    onCommentPost,\r\n    taskId,\r\n    singleCommentId,\r\n    showCommentEditor = true,\r\n    showSearchBtn = true,\r\n    showFullScreenBtn = true,\r\n    height = \"89vh\",\r\n}) => {\r\n    const { commentState } = useCommentStore();\r\n    // ---------------------------------------------------------\r\n    const param = useParams();\r\n\r\n    // ---------------------------------------------------------\r\n\r\n    const { width } = useWindowSize();\r\n    const [fullScreenView, setFullScreenView] = useState(false);\r\n    const { data, isFetching, isLoading, refetch } = useGetCommentsQuery(\r\n        param?.taskId\r\n    );\r\n\r\n    // useEffect hook to call refetch when commentState changes\r\n    useEffect(() => {\r\n        refetch();\r\n    }, [commentState]);\r\n\r\n    return (\r\n        <CommentContainerDecider\r\n            fullScreenView={fullScreenView}\r\n            isOpen={isOpen}\r\n            toggleRef={toggleRef}\r\n            width={width}\r\n        >\r\n            {/* {isOpen && ( */}\r\n            <CommentsBody\r\n                fullScreenView={fullScreenView}\r\n                setFullScreenView={setFullScreenView}\r\n                isOpen={isOpen}\r\n                close={close}\r\n                // comments={param?.taskId ? data : comments}\r\n                comments={\r\n                    param?.taskId\r\n                        ? singleCommentId\r\n                            ? data?.filter(\r\n                                  (comment) => comment.id === singleCommentId\r\n                              )\r\n                            : data\r\n                        : comments\r\n                }\r\n                // comments={demoComments}\r\n                loading={isLoading}\r\n                fetching={isFetching}\r\n                refetch={refetch}\r\n                taskId={taskId ? taskId : param?.taskId}\r\n                showFullScreenBtn={width <= 991 ? false : showFullScreenBtn}\r\n                height={height}\r\n                showCommentEditor={showCommentEditor}\r\n                showSearchBtn={showSearchBtn}\r\n            />\r\n            {/* )} */}\r\n        </CommentContainerDecider>\r\n    );\r\n};\r\n\r\nexport default CommentsContainer;\r\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./checkbox.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import \"./checkbox.css\";\r\n\r\nconst Checkbox = ({\r\n    value,\r\n    onChange,\r\n    label,\r\n    checked,\r\n    className = \"\",\r\n    labelClassName = \"\",\r\n    disabled = false,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <label\r\n            className={`d-flex align-items-center sp1_checkbox--label ${labelClassName}${\r\n                disabled ? \" disable\" : \"\"\r\n            }`}\r\n        >\r\n            <input\r\n                type=\"checkbox\"\r\n                value={value}\r\n                checked={checked}\r\n                disabled={disabled}\r\n                onChange={onChange}\r\n                className={`sp1_checkbox mr-2 ${className}`}\r\n            />\r\n            {label}\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Checkbox;\r\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./AvatarGroup.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from \"react\";\r\nimport styles from \"./AvatarGroup.module.css\";\r\nimport _ from \"lodash\";\r\n\r\nconst AvatarGroup = ({ users = [], className = \"\", show=2 }) => {\r\n\r\n    const len = _.size(users);\r\n\r\n    const avatars = len > show ? users.splice(0, show) : users;\r\n\r\n    return (\r\n        <div className={styles.avatar_group}>\r\n\r\n\r\n            {len > show && (\r\n                <div  className={`${styles.avatar} ${className} ${styles.empty_avatar}`} >\r\n                    <span> +{len}</span>\r\n                </div>\r\n            )}\r\n            {_.map(avatars, (user, i) => (\r\n                <div key={i} className={`${styles.avatar} ${className}`}>\r\n                    <img\r\n                        src={user.src}\r\n                        alt=\"\"\r\n                        className={styles.avatar_image}\r\n                    />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvatarGroup;\r\n","const Rating = ({\r\n    rating,\r\n    className = '',\r\n    iconClassName = '',\r\n}) => {\r\n    return (\r\n        <>\r\n            {[...Array(5)].map((r, idx) =>\r\n                idx <= parseInt(rating) - 1 ? (\r\n                    <i key={idx} className=\"fa-solid fa-star\" style={{color:'#FFA500'}} />\r\n                ) : rating - parseInt(rating) > 0 &&\r\n                  idx === parseInt(rating) ? (\r\n                    <i key={idx} className=\"fa-solid fa-star-half-stroke\" style={{color:'#FFA500'}} />\r\n                ) : (\r\n                    <i key={idx} className=\"fa-regular fa-star\" style={{color: '#b9b9b9'}} />\r\n                ),\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Rating;","import _ from \"lodash\";\r\n\r\nexport const useRevision = (task) => {\r\n    const taskType = _.includes([5, 7], task?.category?.id)\r\n        ? \"design\"\r\n        : \"development\";\r\n\r\n    const isIndependent = task?.isIndependentTask;\r\n\r\n    // project menager acknowladgement options\r\n    const getProjectManagerAcknowladgementOptions = () => {\r\n        const isAlreadyAccepted = false;\r\n\r\n        if (isAlreadyAccepted) {\r\n            return [];\r\n        }\r\n\r\n        if (isIndependent) {\r\n            return [\r\n                {\r\n                    id: \"PLRx01\",\r\n                    revision:\r\n                        \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right\",\r\n                    isDeniable: false,\r\n                },\r\n                {\r\n                    id: \"PLRx02\",\r\n                    revision:\r\n                        \"The work done is aligned with my instruction, but after seeing it, I want to give some minor changes\",\r\n                    isDeniable: false,\r\n                },\r\n                {\r\n                    id: \"PLRx3\",\r\n                    revision: `The Lead ${\r\n                        taskType === \"design\" ? \"designer\" : \"developer\"\r\n                    }/project coordinator’s delivered work doesn’t match my shared requirement`,\r\n                    isDeniable: true,\r\n                },\r\n                {\r\n                    id: \"PLRx04\",\r\n                    revision: `The instruction was followed, but the lead ${\r\n                        taskType === \"design\" ? \"designer\" : \"developer\"\r\n                    } missed out some default/basic things or best practices which are not essential to write in instruction`,\r\n                    isDeniable: true,\r\n                },\r\n            ];\r\n        }\r\n\r\n        return [\r\n            {\r\n                id: \"PLRx01\",\r\n                revision:\r\n                    \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right\",\r\n                isDeniable: false,\r\n            },\r\n            {\r\n                id: \"PLRx02\",\r\n                revision:\r\n                    \"The work done is aligned with my instruction, but after seeing it, I want to give some minor changes\",\r\n                isDeniable: false,\r\n            },\r\n            {\r\n                id: \"PLRx3\",\r\n                revision: `The Lead ${\r\n                    taskType === \"design\" ? \"designer\" : \"developer\"\r\n                }/project coordinator’s delivered work doesn’t match my shared requirement`,\r\n                isDeniable: true,\r\n            },\r\n            {\r\n                id: \"PLRx04\",\r\n                revision: `The instruction was followed, but the lead ${\r\n                    taskType === \"design\" ? \"designer\" : \"developer\"\r\n                } missed out some default/basic things or best practices which are not essential to write in instruction`,\r\n                isDeniable: true,\r\n            },\r\n            {\r\n                id: \"PLRx05\",\r\n                revision: \"I have some general revisions\",\r\n                isDeniable: false,\r\n                type: \"GENERAL_REVISION\",\r\n            },\r\n        ];\r\n    };\r\n\r\n    // lead developer acknowladgement Options\r\n    const getLeadDeveloperAcknowladgementOptions = () => {\r\n        const isAlreadyAccepted = false;\r\n        // if already accepted\r\n        if (isAlreadyAccepted) {\r\n            return [];\r\n        } else {\r\n            return [\r\n                {\r\n                    id: \"LDRx1\",\r\n                    revision: `The concerned ${\r\n                        taskType === \"design\" ? \"designer’s\" : \"developer’s\"\r\n                    }  delivered work doesn’t match my shared requirement`,\r\n                    isDeniable: true,\r\n                },\r\n                {\r\n                    id: \"LDRx2\",\r\n                    revision:\r\n                        \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right.\",\r\n                    isDeniable: false,\r\n                },\r\n                {\r\n                    id: \"LDRx3\",\r\n                    revision:\r\n                        \"The work done is aligned with my instruction but after seeing it, I want to give some minor changes.\",\r\n                    isDeniable: false,\r\n                },\r\n\r\n                {\r\n                    id: \"LDRx4\",\r\n                    revision: `The instruction was followed but the ${\r\n                        taskType === \"design\" ? \"designer\" : \"developer\"\r\n                    } missed out on some default/basic things or best practices which are not essential to mention in instruction.`,\r\n                    isDeniable: true,\r\n                },\r\n            ];\r\n        }\r\n    };\r\n\r\n    return {\r\n        getLeadDeveloperAcknowladgementOptions,\r\n        getProjectManagerAcknowladgementOptions,\r\n    };\r\n};\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {\r\n    useApproveSubmittedTaskMutation,\r\n    useLazyGetSubmittedTaskQuery,\r\n    useLazyGetTaskDetailsQuery\r\n} from '../services/api/SingleTaskPageApi';\r\nimport { User } from '../utils/user-details';\r\n\r\nexport const useSingleTask = () => {\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    /* ********************************** */\r\n    /* ********* Get Task by task ID ********* */\r\n    const [\r\n        getTaskDetails,\r\n        { isFetching: taskDetailsIsFetching }\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    const getTaskById = async (taskId) => {\r\n        try {\r\n            const res = await getTaskDetails(`/${taskId}/json?mode=basic`).unwrap();\r\n            if (res) {\r\n                const task = {\r\n                    ...res.task,\r\n                    taskFiles: res?.taskFiles,\r\n                    parent_task_action: res.parent_task_action,\r\n                    parent_task_title: res.parent_task_heading?.heading || null,\r\n                    working_environment: res.working_environment,\r\n                    working_environment_data: res.working_environment_data,\r\n                    pm_task_guideline: res.task_guideline,\r\n                    task_revisions: res.revisions,\r\n                    taskSubTask: res.Sub_Tasks,\r\n                }\r\n                return task;\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    /* *************************************************** */\r\n    /* ********* Get Task submittion Information ********* */\r\n\r\n    const [getSubmittedTask, { isFetching: submittionInfoIsFetching }] = useLazyGetSubmittedTaskQuery();\r\n\r\n    // method\r\n    const getSubmittionInfo = async (taskId) => {\r\n        try {\r\n            const res = await getSubmittedTask(taskId).unwrap();\r\n            if (res) {\r\n                let data = _.orderBy(res, ['task_id', 'submission_no'], ['desc', 'desc']);\r\n                return data;\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    /* ********************************** */\r\n    /* ********* Approved Task ********* */\r\n    const [\r\n        approveSubmittedTask,\r\n        { isLoading: approveTaskLoadingStatus }\r\n    ] = useApproveSubmittedTaskMutation();\r\n\r\n    // method\r\n    const approveTask = async (data, callback) => {\r\n        if (!data || _.isEmpty(data)) return;\r\n        try {\r\n            const res = await approveSubmittedTask(data).unwrap();\r\n\r\n            if (res) {\r\n                callback && callback();\r\n                const Toast = Swal.mixin({\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n                })\r\n\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'Task Approved Successfully'\r\n                })\r\n            }\r\n        } catch (err) { console.log(err) }\r\n    }\r\n\r\n\r\n    return {\r\n        getTaskById,\r\n        approveTask,\r\n        getSubmittionInfo,\r\n        taskDetailsIsFetching,\r\n        approveTaskLoadingStatus,\r\n        submittionInfoIsFetching\r\n    }\r\n}\r\n","import { apiSlice } from \"./apiSlice\";\r\n\r\nconst taskCommentApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: (build) => ({\r\n        // get task comments\r\n        getTaskComments: build.query({\r\n            query: (taskId) => `/account/tasks/${taskId}/comments`,\r\n            providesTags: (result = [], error, arg) => [\r\n                \"TASK_COMMENTS\",\r\n                \"TASK_COMMENT\",\r\n                ...result.map(({ id }) => ({ type: \"TASK_COMMENT\", id })),\r\n            ],\r\n        }),\r\n\r\n        // get task comments\r\n        getTaskCommentReplies: build.query({\r\n            query: (commentId) =>\r\n                `/account/tasks/comments/${commentId}/replies`,\r\n            providesTags: [\"TASK_COMMENT_REPLIES\"],\r\n        }),\r\n\r\n        // widget data\r\n        getTaskCommentWidgetData: build.query({\r\n            query: (taskId) => `/account/tasks/comments-widget-data/${taskId}`,\r\n            providesTags: [\"TASK_COMMENTS_WIDGET\"],\r\n        }),\r\n\r\n        // preview a comment\r\n        getPreviewCommentData: build.query({\r\n            query: (commentId) =>\r\n                `/account/tasks/comments/${commentId}/preview`,\r\n            providesTags: [\"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // update comment\r\n        updateComment: build.mutation({\r\n            query: ({ data }) => ({\r\n                url: `/account/tasks/comment-edit`,\r\n                method: \"POST\",\r\n                body: data,\r\n                formData: true,\r\n            }),\r\n            invalidatesTags: [\"TASK_COMMENTS_WIDGET\", \"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // remove file\r\n        removeCommentPreviousUploadedFile: build.mutation({\r\n            query: (data) => ({\r\n                url: `/account/tasks/${data.task_id}/comments/${data.comment_id}/delete-attach-file`,\r\n                method: \"DELETE\",\r\n                body: {\r\n                    ...data,\r\n                    _token: document\r\n                        .querySelector(\"meta[name='csrf-token']\")\r\n                        .getAttribute(\"content\"),\r\n                },\r\n            }),\r\n            invalidatesTags: [\"TASK_COMMENTS_WIDGET\", \"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // reply comment\r\n        replyTaskComment: build.mutation({\r\n            query: (data) => ({\r\n                url: `/account/tasks/comment-reply`,\r\n                method: \"POST\",\r\n                body: data.formData,\r\n                formData: true,\r\n            }),\r\n            invalidatesTags: (result, error, arg) => [\r\n                { type: \"TASK_COMMENT\", id: arg.commentId },\r\n                \"TASK_COMMENT_REPLIES\",\r\n                \"TASK_COMMENTS_WIDGET\",\r\n                \"TASK_COMMENT_PREVIEW\",\r\n            ],\r\n        }),\r\n\r\n        deleteComment: build.mutation({\r\n            query: (commentId) => ({\r\n                url: `/account/tasks/comments/${commentId}/delete`,\r\n                method: \"DELETE\",\r\n                body: {\r\n                    _token: document\r\n                        .querySelector(\"meta[name='csrf-token']\")\r\n                        .getAttribute(\"content\"),\r\n                },\r\n            }),\r\n\r\n            invalidatesTags: (_result = [], _error, arg) => [\r\n                { type: \"TASK_COMMENT\", id: arg },\r\n                \"TASK_COMMENT_REPLIES\",\r\n                \"TASK_COMMENTS_WIDGET\",\r\n                \"TASK_COMMENT_PREVIEW\",\r\n            ],\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n    useGetTaskCommentsQuery,\r\n    useGetTaskCommentRepliesQuery,\r\n    useGetTaskCommentWidgetDataQuery,\r\n    useLazyGetTaskCommentWidgetDataQuery,\r\n    useGetPreviewCommentDataQuery,\r\n    useUpdateCommentMutation,\r\n    useRemoveCommentPreviousUploadedFileMutation,\r\n    useReplyTaskCommentMutation,\r\n    useDeleteCommentMutation,\r\n} = taskCommentApiSlice;\r\n","import * as React from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\n\r\nconst Accordion = ({expendable=true, children, title, headingClass, headingStyle}) => {\r\n    const [expend,setExpend] = React.useState(false);\r\n\r\n    const toggle = () => {\r\n        setExpend(!expend);\r\n    }\r\n\r\n    const init = expendable ? 0 : 300;\r\n\r\n  return (\r\n    <div className='sp1_task_card mb-4'>\r\n        <div \r\n            className={`sp1_task_card--head ${headingClass}` }\r\n            onClick={ () => expendable ? toggle() : null}\r\n            style={{...headingStyle, cursor: expendable ? 'pointer': 'default'}}\r\n        > {title} \r\n\r\n            {expendable ? expend ? \r\n                <span className=\"__icon\">\r\n                    <i className=\"fa-solid fa-chevron-up\"></i>\r\n                </span>\r\n            : <span className=\"__icon\">\r\n                    <i className=\"fa-solid fa-chevron-down\"></i>\r\n                </span>: null\r\n            }\r\n        </div>\r\n\r\n\r\n        <AnimatePresence>\r\n            {expendable ? expend && (\r\n                <motion.div\r\n                    initial={{ height: init }}\r\n                    animate={{height: 800}}\r\n                    exit={{height: 0}}\r\n                    className='sp1_task_card--body'\r\n                >\r\n                    {children}\r\n                </motion.div> \r\n            ): <div className='sp1_task_card--body'>\r\n               {children}  \r\n            </div>\r\n        }\r\n        </AnimatePresence>\r\n\r\n\r\n       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Accordion","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport { useClickAway } from \"react-use\";\r\nimport _ from \"lodash\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Guideline = ({ text, editorContainerClass, workEnv }) => {\r\n    const { task } = useSelector((s) => s.subTask);\r\n    const [expend, setExpend] = useState(false);\r\n    let isLong = text?.length > 400;\r\n    const showText = isLong ? text.slice(0, 400) + \"...\" : text;\r\n    const ref = useRef();\r\n\r\n    const handleExpend = (e) => {\r\n        e.preventDefault();\r\n        setExpend(!expend);\r\n    };\r\n\r\n    useClickAway(ref, () => {\r\n        setExpend(false);\r\n    });\r\n\r\n    return (\r\n        <div className=\"sp1_task_card--sub-card\">\r\n            <div\r\n                className={`sp1_ck_content sp1_guideline_text ${editorContainerClass}`}\r\n                dangerouslySetInnerHTML={{ __html: showText }}\r\n            ></div>\r\n            {isLong ? (\r\n                <a href=\"#\" onClick={handleExpend} className=\"\">\r\n                    {\" \"}\r\n                    Read full description{\" \"}\r\n                </a>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n\r\n            <Modal className=\"sp1_task_card--sub-card-modal\" isOpen={expend}>\r\n                <div\r\n                    ref={ref}\r\n                    className=\"sp1_task_card--sub-card-modal-content\"\r\n                >\r\n                    <div className=\"d-flex align-items-center justify-content-between __header\">\r\n                        <button onClick={() => setExpend(false)}>\r\n                            <i className=\"fa-solid fa-xmark\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n                    {!_.isEmpty(workEnv) ? (\r\n                        <div className=\"sp1_task_card--sub-card m-4\">\r\n                            <div\r\n                                className=\"px-4 py-3\"\r\n                                style={{ background: \"#F3F5F9\" }}\r\n                            >\r\n                                <h6 className=\"mb-2\">Working Environment</h6>\r\n                                <hr />\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's URL\r\n                                            </strong>\r\n                                            : <br />{\" \"}\r\n                                            <a\r\n                                                target=\"__blank\"\r\n                                                href={workEnv?.site_url}\r\n                                            >\r\n                                                View on new tab\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>Frontend Password</strong>:{\" \"}\r\n                                            <br /> {workEnv?.frontend_password}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's Login URL\r\n                                            </strong>\r\n                                            : <br />{\" \"}\r\n                                            <a\r\n                                                target=\"__blank\"\r\n                                                href={workEnv?.login_url}\r\n                                            >\r\n                                                View on new tab\r\n                                            </a>{\" \"}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's\r\n                                                Username/Email\r\n                                            </strong>\r\n                                            : <br /> {workEnv?.email}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>Password</strong>: <br />{\" \"}\r\n                                            {workEnv?.password}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <div className=\"__content\">\r\n                        <div\r\n                            className={`sp1_ck_content word-break ${editorContainerClass}`}\r\n                            dangerouslySetInnerHTML={{ __html: text }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\" __footer\">\r\n                        <button\r\n                            className=\"btn btn-sm py-1 btn-primary ml-auto\"\r\n                            onClick={() => setExpend(false)}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Guideline;\r\n","import * as React from \"react\";\r\nimport Modal from \"../../Insights/ui/Modal\";\r\nimport { useClickAway } from \"react-use\";\r\nimport Button from \"./Button\";\r\nimport dayjs from \"dayjs\";\r\nimport { useUsers } from \"../../hooks/useUsers\";\r\nimport { User } from \"../../utils/user-details\";\r\n\r\n// const RevisionText = ({text, index, date, time, revision}) => {\r\n//     const [expend, setExpend] = React.useState(false);\r\n//     const ref = React.useRef();\r\n\r\n//     let isLong = text?.length > 800;\r\n//     const showText = isLong ? text?.slice(0, 800) + '...' : text;\r\n\r\n//     const toggleModal = (e) => {\r\n//         e.preventDefault();\r\n//         setExpend(!expend)\r\n//     }\r\n\r\n//     useClickAway(ref, () => {\r\n//         setExpend(false)\r\n//     })\r\n\r\n//   return (\r\n//     <div className=\"sp1_task_card--sub-card\" style={{minHeight: '110px'}}>\r\n//         <div className=\"sp1_tc_sc-inx\">\r\n//             <h2>{index}</h2>\r\n//             <span className=\"d-block\"><strong>Date</strong> {date} </span>\r\n//             <span className=\"d-block\"><strong>Time</strong>: {time}</span>\r\n//         </div>\r\n//         <div className=\"\">\r\n//             {revision?.revisionAcknowledgement ?\r\n//                 <span className='d-block mb-2'>\r\n//                     <span className='font-weight-bold text-danger'> <strong>Reason: </strong>  </span>\r\n//                     {revision?.revisionAcknowledgement} {\" \"}\r\n//                     {revision?.isDeny ? <span className='badge badge-danger'>Rejected By Developer</span> : null}\r\n//                     {revision?.isAccept ? <span className='badge badge-success'>Accepted By Developer</span> : null}\r\n//                 </span>\r\n//             : null}\r\n//             <div>\r\n//                 <span className='font-weight-bold text-success'>Statement:</span>\r\n//                 <div className='sp1_ck_content' style={{textIndent: '2rem'}} dangerouslySetInnerHTML={{__html: showText}} />\r\n//             </div>\r\n\r\n//             {isLong ? <a href=\"#\" className='ml-2' onClick={toggleModal}>Read full guideline</a> : ''}\r\n\r\n//             <Modal className=\"sp1_task_card--sub-card-modal\" isOpen={expend}>\r\n//                 <div ref={ref} className='sp1_task_card--sub-card-modal-content'>\r\n//                     <div className='d-flex align-items-center justify-content-between __header'>\r\n//                         <button onClick={() => setExpend(false)}>\r\n//                         <i className=\"fa-solid fa-xmark\"></i>\r\n//                         </button>\r\n//                     </div>\r\n//                     <div className='__content'>\r\n//                         <div className=\"sp1_tc_sc-inx\">\r\n//                             <h2>{index}</h2>\r\n//                             <span className=\"d-block\"><strong>Date</strong> {date} </span>\r\n//                             <span className=\"d-block\"><strong>Time</strong>: {time}</span>\r\n//                         </div>\r\n//                         <div>\r\n//                         <span className='d-block mb-2'> <span className='font-weight-bold text-danger'><strong>Reason: </strong></span> {revision?.revisionAcknowledgement}</span>\r\n//                             <span className='font-weight-bold text-success'>Commitment:</span>\r\n//                             <div className='sp1_ck_content' style={{textIndent: '2rem'}} dangerouslySetInnerHTML={{__html: text}} />\r\n//                         </div>\r\n//                     </div>\r\n\r\n//                     <div className=' __footer'>\r\n//                         <button className='btn btn-sm py-1 btn-primary ml-auto' onClick={() => setExpend(false)}>\r\n//                             Close\r\n//                         </button>\r\n//                     </div>\r\n//                 </div>\r\n//             </Modal>\r\n//         </div>\r\n\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nconst RevisionText = ({ index, revision }) => {\r\n    const [expend, setExpend] = React.useState(false);\r\n    const ref = React.useRef();\r\n    console.log(\"revision\", revision);\r\n    const toggleModal = (e) => {\r\n        e.preventDefault();\r\n        setExpend(!expend);\r\n    };\r\n\r\n    useClickAway(ref, () => {\r\n        setExpend(false);\r\n    });\r\n\r\n    const getComment = (key) => {\r\n        switch (key) {\r\n            case \"PLR\":\r\n                return revision?.pmComment;\r\n            case \"SPR\":\r\n                return revision?.pmComment;\r\n            case \"CPR\":\r\n                return revision?.pmComment;\r\n            case \"LDR\":\r\n                return revision?.leadComment;\r\n            default:\r\n                return revision?.pmComment || revision?.leadComment;\r\n        }\r\n    };\r\n    const text = getComment(revision?.disputeBetween);\r\n    let isLong = text?.length > 800;\r\n    const showText = isLong ? text?.slice(0, 800) + \"...\" : text;\r\n\r\n    const date = dayjs(revision?.createdAt).format(\"MMM DD, YYYY\");\r\n    const time = dayjs(revision?.createdAt).format(\"hh:mm A\");\r\n\r\n    return (\r\n        <div className=\"sp1_task_card--sub-card\" style={{ minHeight: \"110px\" }}>\r\n            <div className=\"sp1_tc_sc-inx\">\r\n                <h2>{index < 10 ? `0${index}` : index}</h2>\r\n                <span className=\"d-block\">\r\n                    <strong>Date: </strong>\r\n                    {date}\r\n                </span>\r\n                <span className=\"d-block\">\r\n                    <strong>Time</strong>: {time}\r\n                </span>\r\n            </div>\r\n            <div className=\"px-3\">\r\n                {revision?.revisionAcknowledgement ? (\r\n                    <span className=\"d-block mb-2\">\r\n                        <span className=\"font-weight-bold text-danger\">\r\n                            {\" \"}\r\n                            <strong>Reason: </strong>{\" \"}\r\n                        </span>\r\n                        {revision?.revisionAcknowledgement}\r\n                        {revision?.isDeny ? (\r\n                            <span className=\"badge badge-danger\">\r\n                                Rejected By Developer\r\n                            </span>\r\n                        ) : null}\r\n                        {revision?.isAccept ? (\r\n                            <span className=\"badge badge-success\">\r\n                                Accepted By Developer\r\n                            </span>\r\n                        ) : null}\r\n                    </span>\r\n                ) : null}\r\n                <div>\r\n                    <span className=\"font-weight-bold text-success\">\r\n                        Statement:\r\n                    </span>\r\n                    <div\r\n                        className=\"sp1_ck_content\"\r\n                        dangerouslySetInnerHTML={{ __html: showText }}\r\n                    />\r\n                </div>\r\n\r\n                {isLong ? (\r\n                    <a href=\"#\" className=\"ml-2\" onClick={toggleModal}>\r\n                        View more\r\n                    </a>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n\r\n                <Modal\r\n                    className=\"sp1_task_card--sub-card-modal\"\r\n                    isOpen={expend}\r\n                >\r\n                    <div\r\n                        ref={ref}\r\n                        className=\"sp1_task_card--sub-card-modal-content\"\r\n                    >\r\n                        <div className=\"d-flex align-items-center justify-content-between __header\">\r\n                            <button onClick={() => setExpend(false)}>\r\n                                <i className=\"fa-solid fa-xmark\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"__content\">\r\n                            <div className=\"sp1_tc_sc-inx\">\r\n                                <h2>{index}</h2>\r\n                                <span className=\"d-block\">\r\n                                    <strong>Date: </strong> {date}\r\n                                </span>\r\n                                <span className=\"d-block\">\r\n                                    <strong>Time</strong>: {time}\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                {/* <span className=\"d-block mb-2\">\r\n                                    {\" \"}\r\n                                    <span className=\"font-weight-bold text-danger\">\r\n                                        <strong>Reason: </strong>\r\n                                    </span>{\" \"}\r\n                                    {revision?.revisionAcknowledgement}\r\n                                </span>\r\n                                <span className=\"font-weight-bold text-success\">\r\n                                    Commitment:\r\n                                </span> */}\r\n                                <div\r\n                                    className=\"sp1_ck_content\"\r\n                                    style={{ textIndent: \"2rem\" }}\r\n                                    dangerouslySetInnerHTML={{ __html: text }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\" __footer\">\r\n                            <button\r\n                                className=\"btn btn-sm py-1 btn-primary ml-auto\"\r\n                                onClick={() => setExpend(false)}\r\n                            >\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RevisionText;\r\n","import React from \"react\"; \r\nimport {Placeholder} from '../../../global/Placeholder';\r\n\r\nconst GenarelLoader = () => { \r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-6 pb-3 pb-xl-0\">\r\n                <div className=\"d-flex flex-column\" style={{ gap: \"10px\" }}>\r\n                    <h6 className=\"\">\r\n                       <Placeholder width=\"220px\" />\r\n                    </h6> \r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" /> \r\n                        </div>\r\n                    </div> \r\n\r\n                    {/* <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* asignee to */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                <Placeholder\r\n                                    width=\"32px\"\r\n                                    height=\"32px\"\r\n                                    type=\"circle\"\r\n                                    className=\"rounded-circle\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"ml-2\">\r\n                                <Placeholder width=\"130px\" /> \r\n                                <Placeholder width=\"70px\" height=\"10px\" className=\"mt-2\" /> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* assignee by */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                <Placeholder\r\n                                    width=\"32px\"\r\n                                    height=\"32px\"\r\n                                    type=\"circle\"\r\n                                    className=\"rounded-circle\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"ml-2\">\r\n                                <Placeholder width=\"130px\" /> \r\n                                <Placeholder width=\"70px\" height=\"10px\" className=\"mt-2\" /> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* PRIORITY */}\r\n\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* category */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"100px\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenarelLoader;\r\n","import _ from \"lodash\";\r\nimport { User } from \"../utils/user-details\";\r\n\r\n// * task page permission\r\n\r\nexport function singleTaskPagePermission(task, auth) {\r\n    let hasPermission = false;\r\n    // check is auth\r\n    const isAuth = auth.getRoleId() === 1;\r\n    const pmPermission = task.projectManagerId === auth.getId();\r\n    hasPermission = true;\r\n\r\n    return hasPermission;\r\n}\r\n\r\n// permission for timer control\r\nexport function timeControlPermision({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = loggedUser;\r\n\r\n    // if status id 2 or 3 show timer start button\r\n    if ([2, 3].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    }\r\n    return (\r\n        statusPermission && assigneePermission && _.size(task?.subtask) === 0\r\n    );\r\n}\r\n\r\n// mark as completed button permission controller\r\nexport function markAsCompletedButtonPermission({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n        if (_loggedUser?.getRoleId() === 6) {\r\n            if ([8].includes(Number(statusId))) {\r\n                statusPermission = true;\r\n            }\r\n        } else {\r\n            if ([2, 3].includes(Number(statusId))) {\r\n                statusPermission = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// approve button permission\r\nexport function approveButtonPermission({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if status id 6 show timer start button\r\n    if ([6].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    } else if (_loggedUser?.getRoleId() === 1) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// approve button permission\r\nexport function needRevisionPermision({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if status id 6 show timer start button\r\n    if ([6].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    } else if (_loggedUser?.getRoleId() === 1) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// revision button\r\nexport function revisionButtonPermission({ task, status, loggedUser }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = loggedUser;\r\n    //    console.log(statusId)\r\n    // if status id 6 show timer start button\r\n    if ([1].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser.getId() === _loggedUser.getId()) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// submit for client approval button permission\r\n\r\nexport function submitForClientApproval({ task, status, auth }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([8].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (\r\n        (assignedUser?.getId() === auth?.getId() && auth?.getRoleId() === 4) ||\r\n        auth?.getRoleId() === 1\r\n    ) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\nexport function clientApproveConfirmationButtonPermission({\r\n    task,\r\n    status,\r\n    auth,\r\n}) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([9].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (\r\n        (assignedUser?.getId() === auth?.getId() && auth?.getRoleId() === 4) ||\r\n        auth?.getRoleId() === 1\r\n    ) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\nexport function taskEditPermision({ task, status, auth }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([1, 2, 3].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (assignedUser?.getId() === auth?.getId() || auth?.getRoleId() === 1) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n// sub task creation permission\r\n\r\nexport function subTaskCreationPermision({ task, status, auth }) {\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let assignedBy = task?.assignedBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if ([1, 2, 3].includes(Number(statusId))) {\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if (\r\n        assignedUser?.getId() === auth?.getId() ||\r\n        (assignedBy?.getId() === auth?.getId() &&\r\n            _.includes([5, 6, 9, 10], auth?.getRoleId()))\r\n        // ||\r\n        // auth?.getRoleId() === 1\r\n    ) {\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n","import dayjs from 'dayjs';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport CKEditorComponent from '../../../ckeditor';\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine';\r\nimport { useStoreCommentMutation } from '../../../services/api/SingleTaskPageApi';\r\nimport { User } from '../../../utils/user-details';\r\nimport Button from '../../components/Button';\r\n\r\nconst CommentSendBox = ({onCommentPost, task}) => {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const [comment, setComment] = React.useState('');\r\n  const [files, setFiles] = React.useState([]);\r\n  const [error, setError] = React.useState(null);\r\n\r\n  const auth = new User(window?.Laravel?.user);\r\n\r\n  const [storeComment, {isLoading}] = useStoreCommentMutation();\r\n\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setComment(data);\r\n  }\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // if text not provide show error message\r\n    if(!comment){\r\n        setError(s => ({...s, comment: \"Please provide a comment before submitting.\"}));\r\n        return;\r\n    }\r\n\r\n    // make form data\r\n    const fd = new FormData();\r\n    fd.append('comment', comment);\r\n    fd.append('task_id', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    await storeComment({data: fd, task_id: task?.id})\r\n    .unwrap()\r\n    .then(res=>{\r\n      setEditMode(false);\r\n      setComment(\"\");\r\n      setFiles('');\r\n      let comment = {...res}\r\n      comment.last_updated_at = dayjs(res?.last_updated_at).unix();\r\n      onCommentPost(comment);\r\n    }).catch(err => console.log(err))\r\n\r\n  }\r\n\r\n  const commentMode = () => {\r\n    if(editMode){\r\n      return (\r\n        <div className='w-100'>\r\n            <div className='ck-editor-holder'>\r\n              <CKEditorComponent data={comment} onChange={handleEditorChange} />\r\n            </div>\r\n            {error?.comment ? <ErrorText>{error?.comment}</ErrorText> : null }\r\n\r\n            <div className='mt-2'>\r\n              <h6>Attach Files</h6>\r\n              <UploadFilesInLine\r\n                files={files}\r\n                setFiles={setFiles}\r\n                uploadInputClass='comment-file-upload'\r\n                fileWrapperClass='comment-uploaded-file'\r\n              />\r\n            </div>\r\n          <div className='mt-3 d-flex align-items-center'>\r\n            {isLoading ?\r\n                  <Button className='cursor-processing mr-2'>\r\n                      <div\r\n                          className=\"spinner-border text-white\"\r\n                          role=\"status\"\r\n                          style={{width: '18px', height: '18px' }}\r\n                      >\r\n                      </div>\r\n                      Processing...\r\n                  </Button> :\r\n                <Button className='mr-2' onClick={handleSubmit}>Send</Button>}\r\n\r\n            <Button\r\n              variant='secondary'\r\n              onClick={() => setEditMode(false)}\r\n            >Close</Button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return <div\r\n      onClick={() => setEditMode(true)}\r\n      className='__box'\r\n    ><span>Write a comment ...</span></div>\r\n  }\r\n\r\n  return (\r\n    <div className='sp1_task_comment_send_box'>\r\n        <>\r\n            <div className='__avatar rounded-circle mr-2' style={{width: '36px', height: '36px'}}>\r\n                <img\r\n                  src={auth?.getAvatar()}\r\n                  alt='sender_name'\r\n                  width=\"36px\"\r\n                  height=\"36px\"\r\n                  className='rounded-circle'\r\n                />\r\n            </div>\r\n        </>\r\n          <div className='__send-box'>\r\n            {commentMode()}\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentSendBox\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n    padding: 10px 0;\r\n`;\r\n","import * as React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { usePopper } from 'react-popper';\r\nimport { motion, AnimatePresence } from 'framer-motion'; \r\n  \r\n\r\nconst CustomModal = ({toggleRef = null,  isOpen, close, children}) => {\r\n    const [modalRef, setModalRef] = React.useState(null); \r\n    const { styles, attributes } = usePopper(toggleRef, modalRef,{\r\n        placement: 'left-start',\r\n        modifiers: [ \r\n            {name: 'offset', options: {offset: [0, 0]}},\r\n        ]\r\n    })\r\n\r\n  return ( \r\n        <div \r\n            ref={setModalRef}\r\n            style={{\r\n                ...styles.popper,\r\n                pointerEvents: isOpen ? 'all' : 'none', \r\n                zIndex: 99,\r\n            }} \r\n            {...attributes.popper}\r\n        >   \r\n\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        exit={{opacity: 0}}\r\n                        className=''\r\n                    >\r\n                        {children} \r\n\r\n                        <Shadow/>\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </div> \r\n  )\r\n}\r\n\r\nexport default CustomModal \r\n\r\nconst Shadow = () => {\r\n    return ReactDOM.createPortal(\r\n        <div\r\n            style={{\r\n                width: '100vw',\r\n                height: '100vh',\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                zIndex: 90,\r\n                background: 'rgba(0,0,0,.1)'\r\n            }} \r\n        />,\r\n        document.querySelector('#sp1SingleTaskPageModal')\r\n    )\r\n}","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\nimport CKEditorComponent from '../../../ckeditor'\r\n\r\nconst CommentWritingModal = ({isOpen, close}) => {\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"sp1_st_cnt_modal\">\r\n        <div className='sp1_st_comment_preview'>\r\n            <div className='sp1_st_comment_panel' style={{maxWidth: '60vw', minHeight: '50vh'}}> \r\n                <div className='border-bottom pb-2 d-flex'>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div> \r\n\r\n\r\n                {/* comment */}\r\n                <div className='mt-3 w-100'>\r\n                   <div className=\"sp1_st_write_comment-sendbox\">\r\n                       <div style={{minWidth: '48px'}}>\r\n                            <img \r\n                                src=\"/user-uploads/avatar/40164f31bc7d575c7dbe99b24b408d75.png\" \r\n                                alt=\"\"\r\n                                width={48}\r\n                                height={48}\r\n                                className='rounded-circle'\r\n                            />\r\n                       </div> \r\n                         \r\n                        <div> \r\n                            <div className='sp1_st_write_comment_editor'>\r\n                                <CKEditorComponent/>\r\n                            </div> \r\n                            <div className='py-3'>\r\n                                <div>Attach Files here (if need) <i className='fa-solid fa-paperclip ml-1 text-primary' /></div>\r\n                                <div className='sp1_st_write_comment_editor_attach'>\r\n                                    <i className=\"fa-solid fa-cloud-arrow-up\"></i>\r\n                                    <span>Attach Files</span>\r\n                                </div> \r\n                            </div>\r\n                        </div> \r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CommentWritingModal","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useGetTaskCommentWidgetDataQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport dayjs from \"dayjs\";\r\nimport { timeCalculate } from \"../../../utils/timeCalculate\";\r\nimport Modal from \"../../components/Modal\";\r\nimport CommentPreview from \"./CommentPreview\";\r\nimport CommentsContainer from \"../../../UI/comments/CommentsContainer\";\r\nimport { useGetCommentsQuery } from \"../../../services/api/commentsApiSlice\";\r\n\r\n// widget item\r\n\r\nconst WidgetItem = ({ comment }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    if (!comment) return null;\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"d-flex justify-content-between sp1_tark_right_item align-items-start pt-1 pb-2\">\r\n                <div\r\n                    className=\"w-100 sp1_st_comment-view\"\r\n                    style={{ overflow: \"hidden\" }}\r\n                >\r\n                    <p className=\"mb-0 pb-0\">\r\n                        <a\r\n                            href={`/account/employees/${comment.user.id}`}\r\n                            className=\"hover-underline text-primary\"\r\n                        >\r\n                            {comment.user.name}\r\n                        </a>{\" \"}\r\n                        {comment.is_deleted\r\n                            ? \"deleted \"\r\n                            : comment.mention\r\n                            ? \"replied to \"\r\n                            : \"added \"}{\" \"}\r\n                        a comment\r\n                    </p>\r\n                    <p\r\n                        className=\"text-ellipsis d-flex align-items-center mb-0 pb-0\"\r\n                        style={{ color: \"#AEAFB9\" }}\r\n                    >\r\n                        {comment.is_deleted\r\n                            ? timeCalculate(comment.deleted_at)\r\n                            : timeCalculate(comment.created_date)}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"d-flex align-items-center\">\r\n                    <a\r\n                        href=\"#\"\r\n                        className={`mr-2 py-2 sp1_task_righ_action_btn ${\r\n                            isOpen ? \"text-primary\" : \"\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setIsOpen(true);\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-regular fa-eye\"></i>\r\n                    </a>\r\n                    {/* <a href=\"#\" className=\"mr-2 py-2 sp1_task_righ_action_btn\"><i className=\"fa-regular fa-pen-to-square\"></i></a> */}\r\n                </div>\r\n            </div>\r\n\r\n            {/* <Modal isOpen={isOpen}>\r\n                <CommentPreview\r\n                    isOpen={isOpen}\r\n                    close={() => setIsOpen(false)}\r\n                    commentId={comment.id}\r\n                />\r\n            </Modal> */}\r\n            <CommentsContainer\r\n                singleCommentId={comment.id}\r\n                close={() => setIsOpen(false)}\r\n                isOpen={isOpen}\r\n                showCommentEditor={false}\r\n                showFullScreenBtn={false}\r\n                showSearchBtn={false}\r\n                height=\"50vh\"\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst Widget = ({ task }) => {\r\n    // console.log(task);\r\n    // const { data, isLoading } = useGetTaskCommentWidgetDataQuery(task.id, {\r\n    //     skip: !task.id,\r\n    // });\r\n    const { data: comments, isLoading } = useGetCommentsQuery(task.id, {\r\n        skip: !task.id,\r\n    });\r\n\r\n    const handleOrdering = (comments = []) => {\r\n        const sortedComments = [...comments];\r\n\r\n        sortedComments.sort((a, b) => {\r\n            if (a.is_deleted && b.is_deleted) {\r\n                const a_day = dayjs(a.deleted_at);\r\n                const b_day = dayjs(b.deleted_at);\r\n                return b_day.diff(a_day);\r\n            } else if (a.is_deleted) {\r\n                const a_day = dayjs(a.deleted_at);\r\n                const b_day = dayjs(b.created_date);\r\n                return b_day.diff(a_day);\r\n            } else if (b.is_deleted) {\r\n                const a_day = dayjs(a.created_date);\r\n                const b_day = dayjs(b.deleted_at);\r\n                return b_day.diff(a_day);\r\n            } else {\r\n                const a_day = dayjs(a.created_date);\r\n                const b_day = dayjs(b.created_date);\r\n                return b_day.diff(a_day);\r\n            }\r\n        });\r\n\r\n        return sortedComments;\r\n    };\r\n\r\n    // console.log({ widget: data });\r\n    return (\r\n        <React.Fragment>\r\n            {_.map(handleOrdering(comments), (comment) => (\r\n                <WidgetItem key={comment.id} comment={comment} />\r\n            ))}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Widget;\r\n","import * as React from \"react\";\r\nimport Comment from \"./Comment\";\r\nimport CommentModal from \"./CommentModal\";\r\nimport Button from \"../../components/Button\";\r\nimport CommentWritingModal from \"./CommentWritingModal\";\r\nimport { useLazyGetTaskDetailsQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport _ from \"lodash\";\r\nimport Widget from \"./Widget\";\r\nimport { useGetTaskCommentsQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport CommentsContainer from \"../../../UI/comments/CommentsContainer\";\r\n\r\nconst CommentSection = ({ task, isLoading }) => {\r\n    // const [comments, setComments] = React.useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = React.useState(false);\r\n    const [openAddCommentModal, setOpenAddCommentModal] = React.useState(false);\r\n    const [modalToggleRef, setModalToggleRef] = React.useState(null);\r\n\r\n    const toggleModalButton = () => setModalIsOpen(!modalIsOpen);\r\n    const toggleAddCommentModal = () =>\r\n        setOpenAddCommentModal(!openAddCommentModal);\r\n    const closeAddCommentModal = () => setOpenAddCommentModal(false);\r\n\r\n    // const [getTaskDetails, { isFetching }] = useLazyGetTaskDetailsQuery();\r\n    const { data, isLoading: isFetching } = useGetTaskCommentsQuery(task.id, {\r\n        skip: !task.id,\r\n    });\r\n\r\n    const comments = _.orderBy(data, \"id\", \"desc\");\r\n\r\n    // console.log({comments})\r\n    // // if task notes fetch completed store data into redux store\r\n    // React.useEffect(() => {\r\n    //     if (task && task.id) {\r\n    //         getTaskDetails(`/${task?.id}/json?mode=task_comment`)\r\n    //             .unwrap()\r\n    //             .then((res) => {\r\n    //                 let r = _.orderBy([...res], \"id\", \"desc\");\r\n    //                 setComments(r);\r\n    //             })\r\n    //             .catch((err) => {\r\n    //                 console.log(err);\r\n    //             });\r\n    //     }\r\n    // }, []);\r\n\r\n    // on comment post\r\n    const onCommentPost = (comment) => {\r\n        const _comments = [...comments];\r\n        _comments.unshift(comment);\r\n        // setComments(_comments);\r\n    };\r\n\r\n    const updateComments = (comment) => {\r\n        let _comments = comments;\r\n        _comments = _.map(_comments, (c) =>\r\n            c.id === comment.id ? comment : c\r\n        );\r\n        // setComments(_comments);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"sp1_task_right_card mb-3\"\r\n                ref={setModalToggleRef}\r\n                style={{ zIndex: modalIsOpen ? \"99\" : \"\" }}\r\n            >\r\n                {/* <CommentModal\r\n                    isOpen={modalIsOpen}\r\n                    toggleRef={modalToggleRef}\r\n                    comments={comments}\r\n                    task={task}\r\n                    isLoading={isFetching}\r\n                    close={() => setModalIsOpen(false)}\r\n                    onCommentPost={onCommentPost}\r\n                    updateComments={updateComments}\r\n                /> */}\r\n\r\n                <CommentsContainer\r\n                    isOpen={modalIsOpen}\r\n                    toggleRef={modalToggleRef}\r\n                    comments={comments}\r\n                    task={task}\r\n                    close={() => setModalIsOpen(false)}\r\n                    onCommentPost={onCommentPost}\r\n                />\r\n\r\n                <button\r\n                    aria-label=\"openCommentModalButton\"\r\n                    className=\"sp1_task_right_dl_toggle\"\r\n                    onClick={toggleModalButton}\r\n                    style={{ zIndex: modalIsOpen ? \"110\" : \"\" }}\r\n                >\r\n                    <i\r\n                        className={`fa-solid fa-circle-chevron-${\r\n                            modalIsOpen ? \"right\" : \"left\"\r\n                        }`}\r\n                        style={{ color: \"#276fec\" }}\r\n                    />\r\n                </button>\r\n\r\n                <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n                    <h6 className=\"f-16 mb-0\">Comment</h6>\r\n                    {(isLoading || isFetching) && (\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2 mr-auto\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        />\r\n                    )}\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        className=\"sp1_tark_add_item\"\r\n                        aria-label=\"addButton\"\r\n                        onClick={toggleModalButton}\r\n                    >\r\n                        <i\r\n                            className=\"fa-solid fa-plus\"\r\n                            style={{ fontSize: \"12px\" }}\r\n                        />\r\n                        Comment\r\n                    </Button>\r\n\r\n                    <CommentWritingModal\r\n                        isOpen={openAddCommentModal}\r\n                        close={closeAddCommentModal}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"sp1_task_right_card--body\">\r\n                    <Widget task={task} />\r\n\r\n                    {/*\r\n                    {!isFetching && !isLoading ? (\r\n                        comments?.length > 0 ? (\r\n                            comments?.map((comment) => (\r\n                                <Comment key={comment.id} comment={comment} />\r\n                            ))\r\n                        ) : (\r\n                            <div\r\n                                className=\"d-flex align-items-center justify-content-center\"\r\n                                style={{\r\n                                    color: \"#B4BCC4\",\r\n                                    fontSize: \"15px\",\r\n                                    textAlign: \"center\",\r\n                                    height: \"100%\",\r\n                                    width: \"100%\",\r\n                                }}\r\n                            >\r\n                                No Comment is Available\r\n                            </div>\r\n                        )\r\n                    ) : (\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{\r\n                                color: \"#5A6169\",\r\n                                fontSize: \"15px\",\r\n                                textAlign: \"center\",\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                            }}\r\n                        >\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                    marginRight: \"10px\",\r\n                                }}\r\n                            />\r\n                            Loading...\r\n                        </div>\r\n                    )} */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CommentSection;\r\n","import dayjs from \"dayjs\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst DailySubmissionItem = ({ item, setModalData, modalData }) => {\r\n    // const [show,setShow] = useState(false);\r\n    const { task } = useSelector((s) => s.subTask);\r\n\r\n    if (!item) return null;\r\n\r\n    return (\r\n        <tr\r\n            onClick={() => {\r\n                setModalData((prev) => {\r\n                    if (prev?.id === item.id) {\r\n                        return null;\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n            }}\r\n            className=\"sp1_tlr_tr\"\r\n            style={{\r\n                verticalAlign: \"middle\",\r\n                margin: \"0 auto\",\r\n                cursor: \"pointer\",\r\n            }}\r\n        >\r\n            <td\r\n                className=\"sp1_tlr_td\"\r\n                style={{ minWidth: \"100px\", textAlign: \"left\" }}\r\n            >\r\n                <span className=\"singleline-ellipsis\">\r\n                    <span className=\"text-primary\">Task#{task.id}</span>\r\n                    {\" submitted by \"}\r\n                    <span className=\"text-primary\">{item.developer_name}</span>\r\n                </span>\r\n            </td>\r\n            <td className=\"sp1_tlr_td\" style={{ minWidth: \"100px\" }}>\r\n                {dayjs(item.submission_creation_date).format(\"MMM DD, YYYY\")}\r\n            </td>\r\n            <td className=\"sp1_tlr_td\" style={{ minWidth: \"50px\" }}>\r\n                {modalData?.id === item.id ? (\r\n                    <AiFillEyeInvisible\r\n                        style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <AiFillEye\r\n                        style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    />\r\n                )}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default DailySubmissionItem;\r\n","import { useRef } from \"react\";\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport Button from \"../../components/Button\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { get_data_dailySubmission } from \"./fake-data/data_dailySubmission\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\n\r\nconst DailysubmissionDrawerTable = ({ isOpen, close, toggle, data, modalData, setModalData }) => {\r\n    const ref = useRef(null);\r\n    const { width: deviceWidth } = useWindowSize();\r\n    // useClickAway(ref, close);\r\n\r\n    // console.log(get_data_dailySubmission());\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\">\r\n                <div className='sp1-subtask-form --modal-panel-header'>\r\n                    <h6>Daily Submission</h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <table className=\"mt-3 sp1_tlr_table sp1_tlr_tbody\">\r\n                        {/* {deviceWidth > 800 ? <Table data={data} />: <CardView data={data} />} */}\r\n                        {\r\n                            data?.map((singleData) => (\r\n                                <DailySubmissionItem key={singleData.id} item={singleData} setModalData={setModalData} modalData={modalData} />\r\n                            ))\r\n                        }\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if (deviceWidth > 1200) {\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        );\r\n    } else {\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                {content()}\r\n            </Modal>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DailysubmissionDrawerTable;","import { convertTime } from \"../../../../utils/converTime\";\r\n\r\nconst timeFormatter = (time = '') => {\r\n    // console.log(time);\r\n    const [year, month, date] = time.split(\" \")[0].split(\"-\");\r\n    let month_name = '';\r\n    switch (month) {\r\n        case '01':\r\n            month_name = \"Jan\";\r\n            break;\r\n\r\n        case '02':\r\n            month_name = \"Feb\";\r\n            break;\r\n\r\n        case '03':\r\n            month_name = \"Mar\";\r\n            break;\r\n\r\n        case '04':\r\n            month_name = \"Apr\";\r\n            break;\r\n\r\n        case '05':\r\n            month_name = \"May\";\r\n            break;\r\n\r\n        case '06':\r\n            month_name = \"Jun\";\r\n            break;\r\n\r\n        case '07':\r\n            month_name = \"Jul\";\r\n            break;\r\n\r\n        case '08':\r\n            month_name = \"Aug\";\r\n            break;\r\n\r\n        case '09':\r\n            month_name = \"Sep\";\r\n            break;\r\n\r\n        case '10':\r\n            month_name = \"Oct\";\r\n            break;\r\n\r\n        case '11':\r\n            month_name = \"Nov\";\r\n            break;\r\n\r\n        case '12':\r\n            month_name = \"Dec\";\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return `${month_name} ${date}, ${year}`\r\n}\r\n\r\n\r\nexport const columnSchema = [\r\n    {\r\n        id: 'report_date',\r\n        header: 'Report Date',\r\n        draggable: true,\r\n        // accessor: 'report_date',\r\n        accessorKey: 'submission_creation_date',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {timeFormatter(cell.getValue())}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'page_link',\r\n        header: 'Page Link',\r\n        draggable: true,\r\n        // accessor: 'page_link',\r\n        accessorKey: 'link_name',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\">\r\n                View Link\r\n                </a>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'sections',\r\n        header: 'Sections',\r\n        draggable: true,\r\n        // accessor: 'sections',\r\n        accessorKey: 'section_name',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {cell.getValue()}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'comment',\r\n        header: 'Comment',\r\n        draggable: true,\r\n        // accessor: 'comment',\r\n        accessorKey: 'comment',\r\n        cell: (cell) => (\r\n            <div style={{ minWidth: '20rem', maxWidth: '20rem', width: '100%' }} dangerouslySetInnerHTML={{__html:cell.getValue()}}/>\r\n        )\r\n    },\r\n    {\r\n        id: 'total_time_spent',\r\n        header: 'Total Time Spent',\r\n        draggable: true,\r\n        // accessor: 'total_time_spent',\r\n        accessorKey: 'hours_spent',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {convertTime(cell.getValue())}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'attachment_url',\r\n        header: 'Screenshots/Screen records of the sections',\r\n        draggable: true,\r\n        // accessor: 'attachment_url',\r\n        accessorKey: 'attachments',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\"></a>\r\n                View Link\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'site_url',\r\n        header: `Working/Staging Site's URL`,\r\n        draggable: true,\r\n        // accessor: 'site_url',\r\n        accessorKey: 'site_url',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\">\r\n                    View Link\r\n                </a>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'frontend_password',\r\n        header: 'Frontend Password',\r\n        draggable: true,\r\n        // accessor: 'frontend_password',\r\n        accessorKey: 'frontend_password',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {cell.getValue()?cell.getValue():'No Password'}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'submission_date',\r\n        header: 'Report Submission Date',\r\n        draggable: true,\r\n        // accessor: 'submission_date',\r\n        accessorKey: 'submission_creation_date',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {timeFormatter(cell.getValue())}\r\n            </div>\r\n        )\r\n    }\r\n]","import { useRef } from \"react\";\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport Button from \"../../components/Button\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { get_data_dailySubmission } from \"./fake-data/data_dailySubmission\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\nimport DataTable from \"../../../global/table/DataTable\";\r\nimport { columnSchema } from \"./drawer-table-support/Single_user_submission_table_column\";\r\n\r\nconst SingleUserSubmissionTableDrawer = ({ isOpen, close, toggle, data, setModalData }) => {\r\n    const ref = useRef(null);\r\n    const { width: deviceWidth } = useWindowSize();\r\n    // useClickAway(ref, close);\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\">\r\n                <div className='sp1-subtask-form --modal-panel-header'>\r\n                    <h6>Daily Submission</h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={() => {\r\n                            setModalData(null);\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <DataTable\r\n                        tableData={data?[data]:[]}\r\n                        tableColumns={columnSchema}\r\n                        tableName=\"single-user-submission-table\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if (deviceWidth > 1200) {\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        );\r\n    } else {\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                {content()}\r\n            </Modal>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SingleUserSubmissionTableDrawer;","import { useEffect, useState } from \"react\";\r\nimport DailysubmissionDrawerTable from \"./DailysubmissionDrawerTable\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\nimport SingleUserSubmissionTableDrawer from \"./SingleUserSubmissionTableDrawer\";\r\nimport { useGetDailyTasksSubmissionQuery } from \"../../../services/api/dailySubmissionApiSlice\";\r\n\r\n\r\nconst DailySubmissionSection = ({ task }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [modalTableIsOpen, setModalTableIsOpen] = useState(false);\r\n  const [modalRefButton, setModalRefButton] = useState(null);\r\n  const [singleUserSubmissionTableDrawerRef, setSingleUserSubmissionTableDrawerRef] = useState(null);\r\n  const [modalData, setModalData] = useState(null);\r\n\r\n\r\n  const { data, isLoading } = useGetDailyTasksSubmissionQuery(task?.id);\r\n    // control modal\r\n  const toggle = () => setIsOpen(prev => !prev);\r\n  const close = () => setIsOpen(false);\r\n\r\n  // const modalTableToggle = () => setModalTableIsOpen(prev=> !prev);\r\n  const modalTableOpen = () => setModalTableIsOpen(true);\r\n  const modalTableClose = () => setModalTableIsOpen(false);\r\n\r\n  useEffect(() => {\r\n    if (modalData) {\r\n      modalTableOpen();\r\n    } else {\r\n      modalTableClose();\r\n    }\r\n  }, [modalData])\r\n\r\n  const handleModalRef = (ref) => {\r\n    setModalRefButton(ref);\r\n    setSingleUserSubmissionTableDrawerRef(ref);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='sp1_task_right_card mb-3'\r\n      ref={handleModalRef}\r\n      style={{ zIndex: isOpen ? '99' : '' }}>\r\n\r\n      <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Daily Submission</span>\r\n        {isLoading &&\r\n          <div\r\n            className=\"spinner-border text-dark ml-2 mr-auto\"\r\n            role=\"status\"\r\n            style={{\r\n              width: '16px',\r\n              height: '16px',\r\n              border: '0.14em solid rgba(0, 0, 0, .25)',\r\n              borderRightColor: 'transparent'\r\n            }}\r\n          />\r\n        }\r\n      </div>\r\n\r\n\r\n      {/* side drop toggle button */}\r\n      {/* {_.size(timeLogs) > 0 && } */}\r\n      <button\r\n        aria-label='openCommentModalButton'\r\n        className='sp1_task_right_dl_toggle'\r\n        onClick={toggle}\r\n        style={{ zIndex: isOpen ? 110 : '' }}\r\n      >\r\n        <i\r\n          className={`fa-solid fa-circle-chevron-${isOpen ? 'right' : 'left'}`}\r\n          style={{ color: \"#276fec\" }}\r\n        />\r\n      </button>\r\n      {/* side drop toggle button end */}\r\n\r\n\r\n      <DailysubmissionDrawerTable\r\n        isOpen={isOpen}\r\n        close={close}\r\n        toggle={modalRefButton}\r\n        data={data?.daily_submissions}\r\n        modalData={modalData}\r\n        setModalData={setModalData} />\r\n\r\n      <SingleUserSubmissionTableDrawer\r\n        isOpen={modalTableIsOpen}\r\n        close={modalTableClose}\r\n        toggle={singleUserSubmissionTableDrawerRef}\r\n        data={modalData}\r\n        setModalData={setModalData} />\r\n\r\n\r\n      <div className=\"sp1_task_right_card--body\">\r\n        {data?.daily_submissions.length > 0 ?\r\n          <table className=\"sp1_tlr_table\">\r\n            <tbody className=\"sp1_tlr_tbody\">\r\n              {!isLoading &&\r\n                data?.daily_submissions?.map((singleData) => (\r\n                  <DailySubmissionItem key={singleData.id} item={singleData} setModalData={setModalData} modalData={modalData} />\r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n          :\r\n          <div\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{\r\n              color: \"#B4BCC4\",\r\n              fontSize: \"15px\",\r\n              textAlign: \"center\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            No Submission is Available\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailySubmissionSection;","import React from 'react'\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst InnerHistoryItemLoader = () => {\r\n  return (\r\n    <div className=\"d-flex align-items-center sp1_tark_right_item py-2\">\r\n        <div className=''>\r\n            <Placeholder\r\n              width={48}\r\n              height={48}\r\n            />\r\n        </div>\r\n        <div className='px-3 w-100'>\r\n            <Placeholder className='mb-2'/>  \r\n            <Placeholder/>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default InnerHistoryItemLoader ","import React, {lazy} from 'react'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport Button from '../../components/Button';\r\nconst InnerHistoryItem = lazy(() => import('./InnerHistoryItem'));\r\nimport InnerHistoryItemLoader from './InnerHistoryItemLoader';\r\nimport Modal from '../../components/Modal';\r\nimport { useWindowSize } from \"react-use\";\r\n\r\n\r\nconst Histories = ({isOpen, close, toggle, data = []}) => {\r\n  const {width: deviceWidth} = useWindowSize();\r\n  \r\n  const content = () => {\r\n    return (\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6> History </h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='mt-3'>\r\n                    {data ? data.map(d => (\r\n                        <React.Fragment key={d.id}>\r\n                            <React.Suspense fallback={<InnerHistoryItemLoader />}>\r\n                                <InnerHistoryItem history={d} />\r\n                            </React.Suspense>\r\n                        </React.Fragment>\r\n                    )):null}\r\n                </div>      \r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n \r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n            <React.Fragment>{content()}</React.Fragment>       \r\n        </CustomModal>\r\n    );\r\n    }else{\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Histories\r\n","import React, {lazy, Suspense} from 'react'\r\nconst HistoryItem = lazy(() => import('./HistoryItem'));\r\nimport { Placeholder } from '../../../global/Placeholder';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { storeHistories } from '../../../services/features/subTaskSlice';\r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport Histories from './Histories';\r\nimport useSWR from 'swr';\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst HistorySection = () => {\r\n  const {task, histories} = useSelector(s => s.subTask);\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, error, isLoading:isFetching } = useSWR(`/account/task/${task.id}/json?mode=task_history`, fetcher, {\r\n    refreshInterval: 5000\r\n  });\r\n\r\n  //fetch all task \r\n  // const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n  //   skip: histories?.length\r\n  // })\r\n\r\n   //if task notes fetch completed store data into redux store\r\n  //  React.useEffect(()=> {\r\n  //   if(task && task.id){\r\n  //     getTaskDetails(`/${task?.id}/json?mode=task_history`)\r\n  //     .unwrap()\r\n  //     .then(res => {\r\n  //       if(res){\r\n  //         dispatch(storeHistories(res));\r\n  //       }\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(err)\r\n  //     })\r\n  //   } \r\n  // }, [task]); \r\n\r\n  React.useEffect(()=> {\r\n    if(!isFetching && data){\r\n      dispatch(storeHistories(data));\r\n    }  \r\n  }, [data, isFetching]); \r\n  \r\n\r\n  // control modal\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const close = () => setIsOpen(false);\r\n\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3' ref={setModalRefButton} style={{zIndex: isOpen ? 99 : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">History</span> \r\n        {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n          <button \r\n            aria-label='openCommentModalButton'  \r\n            className='sp1_task_right_dl_toggle'\r\n            onClick={toggle}\r\n            style={{zIndex: isOpen ? '110' : ''}}\r\n          >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>\r\n        {/* side drop toggle button end */}\r\n \r\n          {/* histories details */}\r\n          <Histories\r\n            isOpen={isOpen}\r\n            close={close}\r\n            data={histories} \r\n            toggle={modalRefButton}\r\n          />\r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          {!isFetching ? histories ? histories.map( history => (\r\n            <React.Fragment key={history.id}>\r\n              <Suspense fallback={<div className='sp1_tark_right_item py-2 '> <Placeholder /> </div>}>\r\n                <HistoryItem history={history} />\r\n              </Suspense>\r\n            </React.Fragment>\r\n          )):<div\r\n            className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#B4BCC4',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          >\r\n              Empty History\r\n          </div> : \r\n          <div className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#5A6169',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          > \r\n              <div \r\n                    className=\"spinner-border text-dark ml-2\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent',\r\n                        marginRight: '10px'\r\n                    }}\r\n                />\r\n              Loading...\r\n          </div> }\r\n        </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default HistorySection","import { Link } from \"react-router-dom\"\r\n\r\nconst Note = ({note}) => {\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\">\r\n        <div className='w-100 text-ellipsis'>\r\n          {note?.title || 'Untitled'} \r\n        </div>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?note=${note.id}&type=view`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n            <Link to={`?note=${note.id}&type=edit`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-pen-to-square\"></i>\r\n            </Link>\r\n        </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Input = ({\r\n    label,\r\n    id,\r\n    readOnly=false,\r\n    placeholder='',\r\n    inputClass='',\r\n    labelClass='',\r\n    type='text',\r\n    className='',\r\n    value,\r\n    defaultValue,\r\n    onChange,\r\n    error,\r\n    ...rest\r\n}) => {\r\n  return (\r\n    <div className={`form-group my-3 w-100 ${className}`}>\r\n        <label\r\n            htmlFor={id}\r\n            className={`f-14 text-dark-gray mb-1 ${labelClass}`}\r\n            data-label=\"true\"\r\n        >\r\n            {label}\r\n            {rest.required && <sup className='f-14 mr-1'>*</sup> }\r\n        </label>\r\n        <input\r\n            type={type}\r\n            className={`form-control singleline-ellipsis height-35 w-100 f-14 ${inputClass}`}\r\n            placeholder={placeholder}\r\n            id={id}\r\n            value={value}\r\n            defaultValue={defaultValue}\r\n            onChange={onChange}\r\n            readOnly={readOnly}\r\n            onWheel={e => e.currentTarget.blur()}\r\n            {...rest}\r\n        />\r\n\r\n        {error? <div className='' style={{color: 'red'}}> {error} </div> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import * as React from 'react' \r\nimport Button from '../../components/Button' \r\nimport _ from 'lodash'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useCrateNoteMutation } from '../../../services/api/SingleTaskPageApi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeNotes } from '../../../services/features/subTaskSlice'\r\nimport Input from '../../components/form/Input'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from '../../components/Modal'\r\n\r\n\r\n\r\n\r\n\r\nconst CreateNote = ({isOpen, close,toggleRef}) => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [files, setFiles] = React.useState([]);\r\n  const [title, setTitle] = React.useState('');\r\n  const [errTitle, setErrTitle] = React.useState(null);\r\n  const [note,setNote] = React.useState('');\r\n  const dispatch = useDispatch();  \r\n  const { width: deviceWidth} = useWindowSize();\r\n\r\n\r\n const [crateNote, {isLoading}] = useCrateNoteMutation();\r\n\r\n  // handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n  const handleSubmit = e => { \r\n    e.preventDefault();\r\n    if(!title){\r\n        setErrTitle('Title name required');\r\n        return null;\r\n    }\r\n    const fd = new FormData(); \r\n    fd.append('title', title);\r\n    fd.append('note', note);\r\n    fd.append('taskId', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    \r\n    crateNote(fd).unwrap().then(res => {\r\n            if(res?.status === 'success'){\r\n                let _notes = [...notes];\r\n                _notes.push(res?.note);\r\n                dispatch(storeNotes(_notes));\r\n\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: \"Data has been stored Successfully\",\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                }) \r\n\r\n                close();\r\n            }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setNote(data);\r\n  }  \r\n\r\n  const content = () => {\r\n    return (  \r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6>Write Notes</h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <div className='py-3'>\r\n                        <Input \r\n                            id='title'\r\n                            label=\"Title\"\r\n                            type=\"text\" \r\n                            placeholder='Enter a task title'\r\n                            name='title'\r\n                            required={true}\r\n                            value={title}\r\n                            error= {errTitle}\r\n                            onChange={e => handleChange(e, setTitle)}\r\n                        />\r\n\r\n                        <div className='sp1_st_write_comment_editor' style={{minHeight: '100px'}}>\r\n                            <h6 className='mb-3 f-14' style={{color:'#777'}}>Write Note</h6>\r\n                            <CKEditorComponent onChange={handleEditorChange}/>\r\n                        </div>\r\n\r\n                        <div className='mt-3'>\r\n                            <h6 className='mb-3 f-14' style={{color:'#777'}}>Upload Files</h6>\r\n                            <UploadFilesInLine  \r\n                                files={files} \r\n                                setFiles={setFiles} \r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"mt-5\"> \r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <Button\r\n                                        variant='secondary'\r\n                                        className='mr-2'\r\n                                        onClick={close}\r\n                                    > \r\n                                        Cancel\r\n                                    </Button> \r\n        \r\n                                    {!isLoading ? (\r\n                                        <Button onClick={handleSubmit}>\r\n                                            <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                            Keep as Notes\r\n                                        </Button>\r\n                                    ) : (\r\n                                    <Button className='cursor-processing'>\r\n                                        <div \r\n                                            className=\"spinner-border text-white\" \r\n                                            role=\"status\"\r\n                                            style={{\r\n                                                width: '18px',\r\n                                                height: '18px', \r\n                                            }}\r\n                                        >\r\n                                        </div>\r\n                                        Processing...\r\n                                    </Button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n    )\r\n  }\r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n           <React.Fragment>\r\n            {content()}\r\n           </React.Fragment>\r\n        </CustomModal>\r\n      )\r\n }else{\r\n    return (\r\n        <Modal isOpen={isOpen}> \r\n            <React.Fragment>\r\n                {content()}\r\n            </React.Fragment>\r\n        </Modal>\r\n      )\r\n }\r\n\r\n}\r\n\r\nexport default CreateNote ","import * as React from 'react' \r\nimport Button from '../../components/Button' \r\nimport _ from 'lodash'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useCrateNoteMutation, useDeleteNoteUploadedFileMutation, useGetTaskDetailsQuery, useUpdateNoteMutation } from '../../../services/api/SingleTaskPageApi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeNotes } from '../../../services/features/subTaskSlice'\r\nimport Input from '../../components/form/Input'\r\nimport { useEffect } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport { useWindowSize } from 'react-use' \r\nimport Modal from '../../components/Modal'\r\n\r\nconst EditNote = ({isOpen, close, toggleRef}) => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [files, setFiles] = React.useState([]);\r\n  const [title, setTitle] = React.useState('');\r\n  const [errTitle, setErrTitle] = React.useState(null);\r\n  const [note,setNote] = React.useState('');\r\n  const [attachedFiles, setAttachedFiles] = React.useState([]);\r\n  const dispatch = useDispatch();\r\n  const { width: deviceWidth} = useWindowSize();\r\n  const [searchParams] = useSearchParams();\r\n  const noteId = searchParams.get('note');\r\n  const type = searchParams.get('type');\r\n\r\n\r\n\r\n   const [updateNote, {isLoading}] = useUpdateNoteMutation();\r\n\r\n  // fetch all task \r\n  const {data, isFetching} = useGetTaskDetailsQuery(`/${noteId}/json?mode=task_note_edit`, {\r\n    skip: type ? (type !== 'edit' || !noteId) : true,\r\n    refetchOnMountOrArgChange: true\r\n  }) \r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    clearField();\r\n    if(!isFetching && data){ \r\n        setTitle(data?.title);\r\n        setNote(data?.note);\r\n        setAttachedFiles(data?.files || []);\r\n    }\r\n  }, [data, noteId, isFetching]);\r\n\r\n  const clearField = () => {\r\n    setTitle('');\r\n    setNote('');\r\n    setAttachedFiles([]);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    clearField();\r\n    close();\r\n  }\r\n\r\n\r\n // handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n\r\n// handle submittion\r\n  const handleSubmit = e => { \r\n    e.preventDefault();\r\n    if(!title){\r\n        setErrTitle('Title name required');\r\n        return null;\r\n    }\r\n    const fd = new FormData(); \r\n    fd.append('title', title);\r\n    fd.append('note', note);\r\n    fd.append('taskId', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    fd.append('_method', 'PUT');\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    \r\n    updateNote({data: fd, id: noteId}).unwrap().then(res => { \r\n            if(res?.status === 'success'){  \r\n                let _notes = [...notes];\r\n                _notes = _notes?.map(note => {\r\n                    if(Number(note?.id) === Number(res?.note?.id)){\r\n                        return res?.note;\r\n                    }else return note\r\n                })\r\n  \r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: res?.message,\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                }) \r\n\r\n                dispatch(storeNotes(_notes)); \r\n\r\n                handleClose();\r\n            }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  // handle editor\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setNote(data);\r\n  }  \r\n\r\n  // handle loading state\r\nReact.useEffect(() => { \r\n    if (isLoading || isFetching) {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'progress';\r\n      } else {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'default';\r\n      }\r\n}, [isLoading, isFetching])\r\n\r\n\r\n\r\n\r\n  // handle uplaoded file delete request\r\nconst [deleteNoteUploadedFile] = useDeleteNoteUploadedFileMutation();\r\n\r\nconst handleFileDelete = (e, file) => { \r\n    // delete\r\n    deleteNoteUploadedFile(file?.id).unwrap();\r\n   \r\n    // delete form ui\r\n    let previousFile = [...attachedFiles];\r\n    let index = previousFile?.indexOf(file);\r\n    previousFile.splice(index,1);\r\n    setAttachedFiles(previousFile);\r\n}\r\n\r\n\r\n    const content = () => {\r\n        return (\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6>Update Notes\r\n                        {isFetching && <div \r\n                            className=\"spinner-border text-dark ml-2\" \r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent' \r\n                            }}\r\n                        />}\r\n                  </h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={handleClose}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                {isFetching && \r\n                    <div className='w-100' style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        zIndex: 1\r\n                    }}/>\r\n                }\r\n                <div className='py-3'>\r\n                    <Input \r\n                        id='title'\r\n                        label=\"Title\"\r\n                        type=\"text\" \r\n                        placeholder='Enter a task title'\r\n                        name='title'\r\n                        required={true}\r\n                        value={title}\r\n                        error= {errTitle}\r\n                        onChange={e => handleChange(e, setTitle)}\r\n                    />\r\n\r\n                    <div className='sp1_st_write_comment_editor pr-0' style={{minHeight: '100px'}}>\r\n                        <h6 className='mb-3 f-14' style={{color:'#777'}}>Write Note</h6>\r\n                        <CKEditorComponent data={note} onChange={handleEditorChange}/>\r\n                    </div>\r\n\r\n                    <div className='mt-3'>\r\n                        <h6 className='mb-3 f-14' style={{color:'#777'}}>Upload Files</h6>\r\n                        <UploadFilesInLine  \r\n                            files={files} \r\n                            setFiles={setFiles} \r\n                            previous={attachedFiles}\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"mt-5\"> \r\n                            <div className=\"d-flex align-items-center\">\r\n                                <Button\r\n                                    variant='secondary'\r\n                                    className='mr-2'\r\n                                    onClick={handleClose}\r\n                                > \r\n                                    Cancel\r\n                                </Button> \r\n    \r\n                                {!isLoading ? (\r\n                                    <Button onClick={handleSubmit}>\r\n                                        <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                        Update\r\n                                    </Button>\r\n                                ) : (\r\n                                <Button className='cursor-processing'>\r\n                                    <div \r\n                                        className=\"spinner-border text-white\" \r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: '18px',\r\n                                            height: '18px', \r\n                                        }}\r\n                                    >\r\n                                    </div>\r\n                                    Processing...\r\n                                </Button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </CustomModal>\r\n      )\r\n }else{\r\n    return (\r\n        <Modal isOpen={isOpen}> \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </Modal>\r\n      )\r\n }\r\n}\r\n\r\nexport default EditNote;","import * as React from 'react'\r\nimport Button from '../../components/Button'\r\nimport CustomModal from '../../components/CustomModal' \r\nimport { useGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport { User } from '../../../utils/user-details'\r\nimport ContentLoader from \"react-content-loader\"\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from '../../components/Modal'\r\n\r\n\r\nconst NoteView = ({close, isOpen, toggleRef}) => {\r\n    const [searchParams] = useSearchParams();\r\n    const noteId = searchParams.get('note');\r\n    const type = searchParams.get('type');\r\n    const { width: deviceWidth} = useWindowSize();\r\n\r\n    // fetch all task \r\n    const {data, isFetching} = useGetTaskDetailsQuery(`/${noteId}/json?mode=task_note_edit`, {\r\n        skip: type ? (type !== 'view' || !noteId) : true,\r\n        refetchOnMountOrArgChange: true\r\n    }) \r\n    \r\n  const user = data ?  new User(data.user) : null;\r\n\r\n  const content = () =>{\r\n    return(\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                <h6>Notes</h6> \r\n                {isFetching && <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent'\r\n                    }}\r\n                />} \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='py-3'>\r\n                    <div>\r\n                        {isFetching ? <>Loading...</> : \r\n                        <>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div className=''>\r\n                                    <img src={user?.getAvatar()} alt=\"\" width={40} height={40} />\r\n                                </div>\r\n                                <div className='px-3'>\r\n                                    <h6 className='mb-0'>{user?.getName()}</h6>\r\n                                    <span className='' style={{color: '#A5ACB5'}}>{user?.getDesignationName()}</span>\r\n                                </div>\r\n                            </div> \r\n                            <div className='mt-4'>\r\n                                <h6 className='font-weight-bold'>{data?.title}</h6>\r\n                                <div className='sp1_ck_content mb-5' dangerouslySetInnerHTML={{__html: data?.note}} />\r\n                                {data?.files && <UploadFilesInLine previous={data?.files} mode='preview'/>}\r\n                            </div>\r\n                        </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </CustomModal>\r\n    )\r\n  }else{\r\n    return <Modal isOpen={isOpen} > \r\n        <React.Fragment>\r\n            {content()}\r\n        </React.Fragment>\r\n     </Modal>\r\n  }\r\n}\r\n\r\nexport default NoteView","import React from 'react'\r\nimport Note from './Note'\r\nimport CreateNote from './CreateNote';\r\nimport Button from '../../components/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { storeNotes } from '../../../services/features/subTaskSlice';\r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport EditNote from './EditNote';\r\nimport NoteView from './NoteView';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\n\r\nconst NoteSection = () => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [mode, setMode] = React.useState('');\r\n\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n\r\n  const dispatch = useDispatch();   \r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const paramType = searchParams.get('type');\r\n\r\n\r\n  // fetch all task \r\n  const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n    skip: notes?.length\r\n  })\r\n\r\n  // control mode \r\n  React.useEffect(() => {\r\n    let _mode = paramType ? paramType : '';\r\n    setMode(_mode);\r\n  }, [paramType])\r\n\r\n\r\n  // if task notes fetch completed store data into redux store\r\n  React.useEffect(()=> {\r\n    if(task && task.id){\r\n      getTaskDetails(`/${task?.id}/json?mode=task_note`)\r\n      .unwrap()\r\n      .then(res => {\r\n        if(res){\r\n          dispatch(storeNotes(res));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    } \r\n  }, [task]);\r\n \r\n \r\n  // close modal\r\n  const close = (e) => { \r\n    navigate(`/account/tasks/${task.id}`); \r\n  }\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3' ref={setModalRefButton} style={{zIndex: mode ? '99' : ''}}>\r\n       <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n          <span className=\"f-16\">Notes</span>\r\n          {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n          <Button\r\n              variant='tertiary'\r\n              className=\"sp1_tark_add_item\" \r\n              aria-label=\"addButton\"\r\n              onClick={() => navigate(`?type=create`)}\r\n          > \r\n              {mode === 'create' ? (\r\n                <> <i className=\"fa-solid fa-xmark\" style= {{fontSize: '12px'}}/> Close </> \r\n                ) :\r\n                (\r\n                  <> <i className=\"fa-solid fa-plus\"  style= {{fontSize: '12px'}} /> Note  </>\r\n                )\r\n              }\r\n          </Button>\r\n        </div>\r\n\r\n        {/* left dropdown */}\r\n        {mode && <button \r\n          aria-label='openCommentModalButton'  \r\n          \r\n          className='sp1_task_right_dl_toggle'\r\n          onClick={close}\r\n          style={{zIndex: mode ? '110' : ''}}\r\n        >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ mode ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>}\r\n      {/* left dropdown */}\r\n\r\n        {/* create new */} \r\n        <CreateNote \r\n            close={close}  \r\n            isOpen={mode === 'create'} \r\n            toggleRef={modalRefButton}\r\n        /> \r\n\r\n        {/* edit note */} \r\n        <EditNote \r\n          close={close} \r\n          isOpen={ mode === 'edit'}   \r\n          toggleRef={modalRefButton}\r\n        />  \r\n\r\n\r\n        {/* note view */}\r\n        <NoteView \r\n          close={close}\r\n          isOpen={mode === 'view'} \r\n          toggleRef={modalRefButton}\r\n        /> \r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          { !isFetching ? notes?.length > 0 ? notes.map(note => (\r\n            <Note \r\n              key={note.id} \r\n              note={note}  \r\n            /> \r\n          )): <div\r\n            className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#B4BCC4',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          >\r\n              Empty Notes\r\n            </div> : \r\n            <div className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#5A6169',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          > \r\n              <div \r\n                    className=\"spinner-border text-dark ml-2\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent',\r\n                        marginRight: '10px'\r\n                    }}\r\n                />\r\n              Loading...\r\n            </div> }\r\n        </div>\r\n\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default NoteSection","import * as React from 'react'\r\nimport Button from '../../components/Button'\r\nimport CustomModal from '../../components/CustomModal' \r\n\r\n\r\nconst  ViewComment = ({close, isOpen, toggleRef, comment}) => { \r\n  return (\r\n    <CustomModal isOpen={isOpen} toggleRef={toggleRef}>\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal ml-auto'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='py-3'>\r\n                    <div>\r\n                        {/* comment here... */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </CustomModal>\r\n    \r\n  )\r\n}\r\n\r\nexport default ViewComment \r\n\r\n","import React from 'react'\r\nimport Rating from '../../../global/Rating'\r\nimport useSWR from 'swr';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux'\r\nimport ViewComment from './ViewComment';\r\n\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst RevisionSection = ({task}) => { \r\n  const [toggleRef, setToggleRef] = React.useState(null);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const toggle = (e) => {\r\n    e.preventDefault();\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  const close = e => {\r\n    setIsOpen(false);\r\n  }\r\n\r\n\r\n  const { data, error, isLoading } = useSWR(`/account/task/${task.id}/json?mode=task_approve`, fetcher);\r\n\r\n\r\n  const cmt = data?.comment;\r\n  const commentLength = cmt?.length > 250; \r\n  let comment = commentLength ? cmt?.slice(0, 250): cmt;  \r\n  comment = comment || `<span className='' style=\"color: #A7A9B2\">No Comment is Available</span>`\r\n \r\n  return (\r\n    <div className=\"sp1_task_right_card mb-3\" ref={setToggleRef} style={{maxHeight:'450px'}}>  \r\n\r\n        {/* side drop toggle button */}\r\n        {isOpen && (\r\n            <button \r\n                aria-label='openCommentModalButton'  \r\n                \r\n                className='sp1_task_right_dl_toggle'\r\n                onClick={toggle}\r\n                style={{zIndex: isOpen ? '110' : ''}}\r\n            >\r\n                <i \r\n                className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n                style={{color: \"#276fec\"}} \r\n                />\r\n            </button>\r\n        )}\r\n        {/* side drop toggle button end */}\r\n\r\n        <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n            <span className=\"f-16\">Task Review</span> \r\n        </div> \r\n       \r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Deadline Meet : </div>\r\n            <div className=\"d-flex align-items-center\">\r\n                <Rating rating={Number(data?.deadline_meet)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Submission Quality: </div>\r\n            <div className=\"d-flex align-items-center\">  \r\n                <Rating rating={Number(data?.submission_quality)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Req. Fullfillment: </div>\r\n            <div className=\"d-flex align-items-center\"> \r\n            <Rating rating={Number(data?.req_fullfillment)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Overall Task Ratings: </div>\r\n            <div className=\"d-flex align-items-center\"> \r\n                <Rating rating={Number(data?.overall_tasks)} /> \r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"mb-2\">\r\n            <span className=\"font-weight-bold d-block mb-1\">Comments:</span>\r\n            <div style={{color:'#777', fontSize: '13px'}}>\r\n                <div className='sp1_ck_content' dangerouslySetInnerHTML={{__html: comment}}></div> \r\n                { commentLength && <a href=\"#\" onClick={toggle} >Read More</a>}\r\n            </div>\r\n        </div> \r\n        <ViewComment isOpen={isOpen} toggleRef={toggleRef} close={close} comment={data?.comment} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RevisionSection","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./task-edit-form.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import * as React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nconst DatePickerComponent = ({date, selected, setDate, minDate, maxDate, placeholderText,...rest}) => {\r\n\r\n  return (\r\n        <DatePicker\r\n            selected={date}\r\n            dateFormat='dd-MM-yyyy'\r\n            onChange={(d) => setDate(d)}\r\n            className='w-100 border-0 py-2'\r\n            minDate={minDate}\r\n            maxDate={maxDate}\r\n            placeholderText={placeholderText}\r\n            {...rest}\r\n        />\r\n  )\r\n}\r\n\r\nexport default DatePickerComponent;\r\n","/* eslint-disable react/display-name */\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nconst SearchBox = ({value, onChange, placeholder=\"Search\", autoFocus=false, className=\"\", ...props}) => {\r\n        const ref = React.useRef(null);\r\n        React.useEffect(() => {\r\n            if (autoFocus) {\r\n                ref.current.focus();\r\n            }\r\n        }, [autoFocus, ref])\r\n        return (\r\n            <div className='cnx__ins__ui_search'>\r\n                <input \r\n                    type='text' \r\n                    placeholder= {placeholder}\r\n                    value={value}\r\n                    className={`cnx__ins__ui_search_input ${className}`}\r\n                    onChange={e => onChange(e.currentTarget.value)}  \r\n                    ref={ref}   \r\n                    {...props}\r\n                />\r\n\r\n                {/* search icons */}\r\n                    <div className='cnx__ins__ui_search_icon'>\r\n                        <svg \r\n                            xmlns=\"http://www.w3.org/2000/svg\" \r\n                            className='cnx__ins__ui_search_icon_svg mb-1'\r\n                            viewBox=\"0 0 24 24\" width=\"15\" height=\"15\">\r\n                            <path d=\"M23.707,22.293l-5.969-5.969a10.016,10.016,0,1,0-1.414,1.414l5.969,5.969a1,1,0,0,0,1.414-1.414ZM10,18a8,8,0,1,1,8-8A8.009,8.009,0,0,1,10,18Z\"/>\r\n                        </svg>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nSearchBox.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    placeholder: PropTypes.string,\r\n    className: PropTypes.string,\r\n    autoFocus: PropTypes.bool,\r\n}\r\n\r\n\r\nexport default SearchBox;","const Loader = ({title =\"Loading...\"}) => {\r\n  return (\r\n        <div className='d-flex align-items-center'>\r\n            <div\r\n                className=\"spinner-border text-dark mr-2\"\r\n                role=\"status\"\r\n                style={{\r\n                    width: \"16px\",\r\n                    height: \"16px\",\r\n                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                    borderRightColor: \"transparent\",\r\n                }}\r\n            /> \r\n            <span>{title}</span>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import { Combobox } from '@headlessui/react'\r\nimport * as React from 'react'\r\nimport SearchBox from '../../components/form/Searchbox';\r\nimport _  from 'lodash';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from '../../components/Loader';\r\nimport { useGetTaskDetailsQuery } from '../../../../react-latest/services/api/SingleTaskPageApi';\r\n\r\n\r\n\r\nconst TaskCategorySelectionBox = ({selected, onSelect, taskId}) => {\r\n    const [query, setQuery] = React.useState('');\r\n\r\n    const params = useParams();\r\n    const {\r\n        data:categories,\r\n        isFetching\r\n    } = useGetTaskDetailsQuery(`/${params?.taskId || taskId}/json?mode=category`);\r\n\r\n\r\n    const filteredData =\r\n    query === ''\r\n      ? categories\r\n      : categories?.filter((cat) => {\r\n          return cat?.category_name.toLowerCase().includes(query.toLowerCase())\r\n        })\r\n\r\n  return (\r\n    <Combobox value={selected} onChange={onSelect}>\r\n        <div className=\"form-group position-relative my-3\">\r\n            <label htmlFor=\"\">Task category<sup>*</sup></label>\r\n            <Combobox.Button className=\"d-flex align-items-center w-100 sp1-selection-display-button\">\r\n                <Combobox.Input\r\n                    onChange={e => setQuery(e.target.value)}\r\n                    placeholder='--'\r\n                    displayValue={(value) => value?.category_name || ''}\r\n                    className=\"form-control height-35 f-14 sp1-selection-display w-100\"\r\n                />\r\n                <div className='__icon'>\r\n                    <i className=\"fa-solid fa-sort\"></i>\r\n                </div>\r\n            </Combobox.Button>\r\n\r\n            <Combobox.Options className=\"sp1-select-options\">\r\n\r\n                {isFetching && (\r\n                    <div className='sp1-select-option-nodata'>\r\n                        <Loader />\r\n                    </div>\r\n                )}\r\n\r\n                {filteredData?.length===0 ?\r\n                    <div className='sp1-select-option-nodata'>\r\n                         Nothing found.\r\n                    </div>\r\n                :filteredData?.map((cat, catIdx) => (\r\n                <Combobox.Option\r\n                    key={catIdx}\r\n                    className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                    value={cat}\r\n                >\r\n                    {({ selected }) => (\r\n                        <>\r\n                            <span\r\n                                className={`block truncate ${\r\n                                selected ? 'font-medium' : 'font-normal'\r\n                                }`}\r\n                            >\r\n                                {cat?.category_name}\r\n                            </span>\r\n                            {selected ? (\r\n                                <span className=\"ml-auto\"> <i className='fa-solid fa-check'/> </span>\r\n                            ) : null}\r\n                        </>\r\n                    )}\r\n                </Combobox.Option>\r\n            ))}\r\n            </Combobox.Options>\r\n        </div>\r\n    </Combobox >\r\n  )\r\n}\r\n\r\nexport default TaskCategorySelectionBox\r\n","import { Combobox } from \"@headlessui/react\";\r\nimport * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n    useDeveloperInProgressTaskQuery,\r\n    useGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { Placeholder } from \"../../../global/Placeholder\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\n\r\nconst AssginedToSelection = ({ selected, onSelect, taskCategory }) => {\r\n    const [query, setQuery] = React.useState(\"\");\r\n    const [employeeId, setEmployeeId] = React.useState();\r\n    const params = useParams();\r\n    const { data, isFetching } = useGetTaskDetailsQuery(\r\n        `/${params?.taskId}/json?mode=employees`\r\n    );\r\n\r\n    const { DevProgressStatus, isLoading } = useDeveloperInProgressTaskQuery(\r\n        employeeId,\r\n        {\r\n            skip: !employeeId,\r\n        }\r\n    );\r\n\r\n    let employees = [];\r\n    if (taskCategory && taskCategory.id === 5) {\r\n        employees = _.filter(\r\n            data,\r\n            (d) =>\r\n                Number(d.role_id) === 9 &&\r\n                Number(d.id) !== Number(window.Laravel.user.id)\r\n        );\r\n    } else if (taskCategory && taskCategory.id === 7) {\r\n        employees = _.filter(data, (d) => Number(d.role_id) === 10);\r\n    } else {\r\n        employees = _.filter(\r\n            data,\r\n            (d) => Number(d.role_id) === 5 || Number(d.role_id) === 14\r\n        );\r\n    }\r\n    // console.log(\"employees\", employees);\r\n    const filteredData =\r\n        query === \"\"\r\n            ? employees\r\n            : employees?.filter((employee) => {\r\n                  return employee?.name\r\n                      .toLowerCase()\r\n                      .includes(query.toLowerCase());\r\n              });\r\n\r\n    return (\r\n        <Combobox value={selected} onChange={onSelect}>\r\n            <div className=\"form-group position-relative my-3\">\r\n                <label htmlFor=\"\">Assigned To</label>\r\n                <Combobox.Button className=\"d-flex align-items-center w-100 sp1-selection-display-button\">\r\n                    <Combobox.Input\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        placeholder=\"--\"\r\n                        displayValue={(value) => value?.name || \"\"}\r\n                        className=\"form-control height-35 f-14 sp1-selection-display w-100\"\r\n                    />\r\n                    <div className=\"__icon\">\r\n                        <i className=\"fa-solid fa-sort\"></i>\r\n                    </div>\r\n                </Combobox.Button>\r\n\r\n                <Combobox.Options className=\"sp1-select-options\">\r\n                    {isFetching && (\r\n                        <div className=\"sp1-select-option-nodata\">\r\n                            <Loader />\r\n                        </div>\r\n                    )}\r\n\r\n                    {filteredData?.length === 0 ? (\r\n                        <div className=\"sp1-select-option-nodata\">\r\n                            Nothing found.\r\n                        </div>\r\n                    ) : (\r\n                        filteredData?.map((employee) => (\r\n                            <Option\r\n                                key={employee.id}\r\n                                employee={employee}\r\n                                DevProgressStatus={DevProgressStatus}\r\n                                isLoading={isLoading}\r\n                                setEmployeeId={setEmployeeId}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </Combobox.Options>\r\n            </div>\r\n        </Combobox>\r\n    );\r\n};\r\n\r\nexport default AssginedToSelection;\r\n\r\nconst Option = ({ employee, DevProgressStatus, isLoading, setEmployeeId }) => {\r\n    setEmployeeId(employee?.id);\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"sp1-select-option mb-2\">\r\n                <div className=\"d-flex align-items-center px-3\">\r\n                    <Placeholder />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Combobox.Option\r\n            key={employee?.id}\r\n            className={({ active }) =>\r\n                `sp1-select-option ${active ? \"active\" : \"\"}`\r\n            }\r\n            value={{\r\n                ...employee,\r\n                isOverloaded: DevProgressStatus?.status === 400,\r\n            }}\r\n        >\r\n            {({ selected }) => (\r\n                <div\r\n                    className=\"d-flex align-items-center\"\r\n                    style={{ gap: \"10px\" }}\r\n                >\r\n                    <div\r\n                        className=\"rounded-circle\"\r\n                        style={{\r\n                            width: \"28px\",\r\n                            height: \"28px\",\r\n                            overflow: \"hidden\",\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src={employee?.image_url}\r\n                            alt={employee?.name}\r\n                            width={100}\r\n                            height={100}\r\n                            className=\"rounded-circle\"\r\n                            style={{\r\n                                width: \"100%\",\r\n                                height: \"100%\",\r\n                                objectFit: \"fill\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <span\r\n                        className={`block truncate ${\r\n                            selected ? \"font-medium\" : \"font-normal\"\r\n                        }`}\r\n                    >\r\n                        <span className=\"mr-2\">{employee?.name}</span>\r\n                        {DevProgressStatus?.status === 400 ? (\r\n                            <span className=\"badge badge-danger\">\r\n                                Overloaded\r\n                            </span>\r\n                        ) : employee?.developer_status === 1 ? (\r\n                            <span className=\"badge badge-warning\">\r\n                                Working...\r\n                            </span>\r\n                        ) : (\r\n                            <span className=\"badge badge-primary\">\r\n                                Open to Work\r\n                            </span>\r\n                        )}\r\n                    </span>\r\n                    {selected ? (\r\n                        <span className=\"ml-auto\">\r\n                            <i className=\"fa-solid fa-check\"></i>\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n            )}\r\n        </Combobox.Option>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport { Listbox } from '@headlessui/react'\r\n\r\n\r\n\r\nconst priority = [\"Emergency\", \"Urgent\", \"Regular\"]\r\n\r\n\r\nconst PrioritySelection = ({selected, setSelected}) => { \r\n    return(\r\n        <Listbox value={selected} onChange={setSelected}>\r\n            <div className=\"form-group position-relative my-3\">\r\n                <label htmlFor=\"\"> Priority <sup>*</sup> </label>\r\n                    <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">{selected}\r\n                    \r\n                    <div className='__icon'>\r\n                        <i className=\"fa-solid fa-sort\"></i>\r\n                    </div>\r\n                </Listbox.Button>\r\n                <Listbox.Options  className=\"sp1-select-options\">\r\n                    {priority?.map((s, i) => (\r\n                        <Listbox.Option \r\n                            key={i}\r\n                            className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                            value={s}\r\n                        > {s} </Listbox.Option>\r\n                    ))}\r\n                </Listbox.Options>\r\n            </div>\r\n        </Listbox>\r\n    )\r\n}\r\n\r\nexport default PrioritySelection;","import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport Card from \"../../../global/Card\";\r\nimport styles from \"./task-edit-form.module.css\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport Button from '../../../global/Button';\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\nimport AssignedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\n\r\nimport {\r\n    useDeleteUplaodedFileMutation,\r\n    useGetTaskDetailsQuery,\r\n    useEditSubtaskMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useGetMilestoneDetailsQuery } from \"../../../services/api/projectApiSlice\";\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n// Edit form Provider\r\nconst EditFormProvider = ({ task }) => {\r\n    const [searchParams] = useSearchParams(); // get search params\r\n    const isVisible = searchParams.get(\"modal\") === \"edit\"; // check has modal\r\n    const taskId = searchParams.get(\"task\"); // get task id\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const close = () => navigate(location.pathname, {replace: true});\r\n\r\n\r\n    const [   editSubtask, { isLoading, error } ] = useEditSubtaskMutation();\r\n    // handle submission\r\n    const handleSubmission = (formData) => {\r\n        editSubtask({data: formData, id: task?.id}).unwrap().then(res => {\r\n            toast.success(\"Task Updated successfully!\");\r\n            close();\r\n        }).catch((err) => {\r\n            if(err?.status === 422){\r\n                toast.warn(\"Please fill out all required fields\")\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={isVisible}>\r\n            <Card className={styles.form_card}>\r\n                <Card.Head\r\n                  onClose={close}\r\n                  className={styles.form_card_head}\r\n                >\r\n                    <h6> Edit Task # {taskId} </h6>\r\n                </Card.Head>\r\n\r\n                <Card.Body className={styles.form_card_body}>\r\n                    <div className=\"\">\r\n                        {task && (\r\n                            <SubTaskEditModal\r\n                                task={task}\r\n                                onSubmit={handleSubmission}\r\n                                isLoading={isLoading}\r\n                                onClose={close}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditFormProvider;\r\n\r\nconst SubTaskEditModal = ({ task, onSubmit, isLoading, onClose}) => {\r\n    const editDataIsFetching = !task;\r\n    //form data\r\n    const [title, setTitle] = useState(task.title);\r\n    const [milestone, setMilestone] = useState({id: task.milestoneID, milestone_title: task.milestoneTitle});\r\n    const [parentTask, setParentTask] = useState(task.parentTaskTitle);\r\n    const [startDate, setStateDate] = useState(new Date(task.startDate));\r\n    const [dueDate, setDueDate] = useState(new Date(task.dueDate));\r\n    const [project, setProject] = useState(task.projectName);\r\n    const [taskCategory, setTaskCategory] = useState({\r\n        id: task.category.id,\r\n        category_name: task.category.name,\r\n    });\r\n    const [assignedTo, setAssignedTo] = useState({\r\n        id: task.assigneeTo.id,\r\n        name: task.assigneeTo.name,\r\n    });\r\n    const [description, setDescription] = useState(task.description);\r\n    const [priority, setPriority] = useState(task.priority);\r\n    const [estimateTimeHour, setEstimateTimeHour] = useState(\r\n        task.estimateHours\r\n    );\r\n    const [estimateTimeMin, setEstimateTimeMin] = useState(\r\n        task.estimateMinutes\r\n    );\r\n    const [attachedFiles, setAttachedFiles] = useState([]);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { data: estimation, isFetching } = useGetTaskDetailsQuery(\r\n        `/${task.id}/json?mode=estimation_time`\r\n    );\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n      let count = 0;\r\n      const err = new Object();\r\n\r\n      const errorMessages = {\r\n        requiredField: 'This field is required.',\r\n        startDate: 'Please select a start date.',\r\n        dueDate: 'Please select a due date.',\r\n        taskCategory: 'Please select a task category.',\r\n        assignedTo: 'Please select a user.',\r\n        overloadedUser: (name, gender) =>\r\n          `You cannot assign this task to ${name} because ${\r\n            gender === 'male' ? 'he ' : 'she '\r\n          } has more than 10 submittable tasks.`,\r\n        description: 'This field is required.',\r\n      };\r\n\r\n      const showError = (field) => {\r\n        err[field] = errorMessages[field];\r\n        count++;\r\n      }\r\n\r\n\r\n      if(!title) showError('title');\r\n      if(!startDate) showError('startDate');\r\n      if(!dueDate) showError('dueDate');\r\n      if(!taskCategory) showError('taskCategory');\r\n      if(!assignedTo) showError('assignedTo');\r\n\r\n      if (assignedTo && assignedTo?.isOverloaded) {\r\n        err.assignedTo = overloadedUser(assignedTo.name, genderPronoun);\r\n        count++;\r\n      }\r\n\r\n      if(!description) showError('description');\r\n\r\n      setError(error);\r\n      return count === 0;\r\n\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n         //form data\r\n         const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n         const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n         const fd = new FormData();\r\n         fd.append(\"milestone_id\", task?.milestoneID);\r\n         fd.append(\"task_id\", task?.parentTaskId);\r\n         fd.append(\"title\", title);\r\n         fd.append(\"start_date\", _startDate);\r\n         fd.append(\"due_date\", _dueDate);\r\n         fd.append(\"project_id\", task?.projectId);\r\n         fd.append(\"task_category_id\", taskCategory?.id);\r\n         fd.append(\"user_id\", assignedTo?.id);\r\n         fd.append(\"description\", description);\r\n         fd.append(\"board_column_id\", task?.boardColumn.id);\r\n         fd.append(\"priority\", _.lowerCase(priority));\r\n         fd.append(\"estimate_hours\", estimateTimeHour);\r\n         fd.append(\"estimate_minutes\", estimateTimeMin);\r\n         fd.append(\"deliverable_id\", milestone?.deliverable_type ?? '');\r\n         fd.append(\"image_url\", null);\r\n         fd.append(\"addedFiles\", null);\r\n         fd.append('subTaskID', task?.subtaskId);\r\n         fd.append(\"_method\", \"PUT\");\r\n         fd.append(\r\n             \"_token\",\r\n             document\r\n                 .querySelector(\"meta[name='csrf-token']\")\r\n                 .getAttribute(\"content\")\r\n         );\r\n         Array.from(files).forEach((file) => {\r\n             fd.append(\"file[]\", file);\r\n         });\r\n\r\n        if(isValid()){\r\n         onSubmit(fd);\r\n        }else{\r\n         toast.warn('Please fill out all required fields!');\r\n        }\r\n\r\n    };\r\n\r\n\r\n      const {data: projects, isFetching: isFetchingMilestone} = useGetMilestoneDetailsQuery(task?.projectId)\r\n\r\n\r\n\r\n    // handle uploaded file delete request\r\n    const [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\n    const handleFileDelete = (e, file) => {\r\n        // delete\r\n        deleteUplaodedFile(file?.id).unwrap();\r\n\r\n        // delete form ui\r\n        let previousFile = [...attachedFiles];\r\n        let index = previousFile?.indexOf(file);\r\n        previousFile.splice(index, 1);\r\n        setAttachedFiles(previousFile);\r\n    };\r\n\r\n    // handle loading state\r\n    React.useEffect(() => {\r\n        if (isLoading || editDataIsFetching) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading, editDataIsFetching]);\r\n\r\n    //   editor\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        let errText = \"\";\r\n        let hoursErr = err?.estimate_hours?.[0];\r\n        let minErr = err?.estimate_minutes?.[0];\r\n        if (hoursErr) errText += hoursErr;\r\n        if (minErr) errText += minErr;\r\n        return errText;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching && (\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            zIndex: 1,\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className=\"sp1-subtask-form --form row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Input\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter a task title\"\r\n                            name=\"title\"\r\n                            required={true}\r\n                            value={title}\r\n                            error={required_error?.title?.[0]}\r\n                            onChange={(e) => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* project */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* Project Milestone Selection Menu */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Milestone\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={milestone?.milestone_title}\r\n                            />\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* parent task */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Parent Task\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={task?.parentTaskTitle}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Start Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={dayjs\r\n                                        .dayjs(task?.start_date)\r\n                                        .toDate()}\r\n                                    maxDate={\r\n                                        dueDate ||\r\n                                        dayjs.dayjs(task?.due_date).toDate()\r\n                                    }\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.start_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.start_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Due Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={\r\n                                        startDate ||\r\n                                        dayjs.dayjs(task?.start_date).toDate()\r\n                                    }\r\n                                    maxDate={dayjs\r\n                                        .dayjs(task?.due_date)\r\n                                        .toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.due_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.due_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <TaskCategorySelectionBox\r\n                            selected={taskCategory}\r\n                            onSelect={setTaskCategory}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <AssignedToSelection\r\n                            selected={assignedTo}\r\n                            onSelect={setAssignedTo}\r\n                        />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <PrioritySelection\r\n                            selected={priority}\r\n                            setSelected={setPriority}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Set Estimate Time */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className=\"f-14 text-dark-gray\">\r\n                                Set Estimate Time{\" \"}\r\n                                <sup className=\"f-14\"> * </sup>\r\n                            </label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeHour)\r\n                                    }\r\n                                />{\" \"}\r\n                                hrs\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeMin)\r\n                                    }\r\n                                />{\" \"}\r\n                                min\r\n                            </div>\r\n\r\n                            <div style={{ color: \"red\" }}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{ color: \"red\" }}>\r\n                                Estimation time can't exceed{\" \"}\r\n                                {estimation?.hours_left} hours{\" \"}\r\n                                {estimation?.minutes_left} minutes\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div\r\n                                className=\"sp1_st_write_comment_editor\"\r\n                                style={{ minHeight: \"100px\" }}\r\n                            >\r\n                                <CKEditorComponent\r\n                                    data={description}\r\n                                    onChange={handleEditorChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3 mb-5\">\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                className=\"mr-2\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n\r\n                            <Button\r\n                              onClick={handleSubmit}\r\n                              isLoading={isLoading}\r\n                            >\r\n                                <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\"; \r\nimport { User } from \"../../../../utils/user-details\"; \r\nimport Accordion from \"../../../components/Accordion\";\r\nimport Guideline from \"../../../components/Guideline\";\r\nimport RevisionText from \"../../../components/RevisionText\";\r\nimport GenarelLoader from \"../../../components/loader/GenarelLoader\";\r\nimport ArticleLoader from \"../../../components/loader/ArticleLoader\";\r\nimport dayjs from \"dayjs\";\r\nimport { Placeholder } from \"../../../../global/Placeholder\";\r\n\r\nconst Genarel = ({task, isFetching}) => { \r\n    const loggedUser = new User(window?.Laravel?.user);\r\n\r\n    \r\n    return (\r\n        <div className=\"row\">\r\n            {isFetching ? <GenarelLoader /> : \r\n                <React.Fragment>\r\n                    <div className=\"col-12 col-xl-6 pb-3 pb-xl-0\">\r\n                        <div className=\"d-flex flex-column\" style={{ gap: \"10px\" }}>\r\n                            <h6 className=\"\">\r\n                                Task: <a target=\"__blank\" href={`/account/tasks/${task?.id}`} className=\"text-primary font-weight-normal\">\r\n                                    {task?.getSubtaskTitle()}\r\n                                </a>\r\n                            </h6>\r\n                            {\r\n                                task?.isSubtask && (\r\n                                    <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">\r\n                                            Parent Task :\r\n                                        </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <a href={`/account/tasks/${task?.parentTaskId}`} className=\"text-dark text-hover-underline\">\r\n                                                {task?.parentTaskTitle}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n                            {/* project name */}\r\n                            {/* <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">Project : </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span className=\"dot-color bg-danger mr-2\" />\r\n                                    <a href={`/account/projects/${task?.projectId}`} className=\"text-dark text-hover-underline\"> \r\n                                        {task?.projectName} \r\n                                    </a>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            {/* milestone */}\r\n                            {/* <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Milestone :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span className=\"dot-color bg-primary mr-2\" />\r\n                                    {task?.milestoneTitle}\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            {/* asignee to */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Assigned To :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                        <img\r\n                                            src={task?.assigneeTo?.getAvatar()}\r\n                                            alt={task?.assigneeTo?.getName()}\r\n                                            width=\"32px\"\r\n                                            height=\"32px\"\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"ml-2\">\r\n                                        <span\r\n                                            className={`d-block f-14 font-weight-bold`}\r\n                                        >\r\n                                            <a href={task?.assigneeTo?.getUserLink()} className=\"text-dark hover-underline\">{task?.assigneeTo?.getName()}</a> \r\n                                            {Number(task?.assigneeTo?.getId()) ===\r\n                                                Number(loggedUser?.getId()) && (\r\n                                                <sup\r\n                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                    style={{ fontSize: \"10px\" }}\r\n                                                >\r\n                                                    {\" \"}\r\n                                                    It's You{\" \"}\r\n                                                </sup>\r\n                                            )}\r\n                                        </span>\r\n\r\n                                        <span style={{ fontSize: \"12px\" }}>\r\n                                            {task?.assigneeTo?.getDesignationName()}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* assignee by */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Assigned by:{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                        <img\r\n                                            src={task?.assigneeBy?.getAvatar()}\r\n                                            alt={task?.assigneeBy?.getName()}\r\n                                            width=\"32px\"\r\n                                            height=\"32px\"\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"ml-2\">\r\n                                        <span\r\n                                            className={`d-block f-14 font-weight-bold`}\r\n                                        >\r\n                                            <a \r\n                                                href={task?.assigneeBy?.getUserLink()}\r\n                                                className=\"text-dark hover-underline\"\r\n                                            >\r\n                                                {task?.assigneeBy?.getName()}\r\n                                            </a>\r\n                                            {Number(task?.assigneeBy?.getId()) ===\r\n                                                Number(loggedUser?.getId()) && (\r\n                                                <sup\r\n                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                    style={{ fontSize: \"10px\" }}\r\n                                                >\r\n                                                    It's You\r\n                                                </sup>\r\n                                            )}\r\n                                        </span>\r\n\r\n                                        <span style={{ fontSize: \"12px\" }}>\r\n                                            {task?.assigneeBy?.getDesignationName()}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* PRIORITY */}\r\n\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">Priority : </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span\r\n                                        className=\"dot-color mr-2\"\r\n                                        style={{ background: \"rgba(252, 189, 1, 1)\" }}\r\n                                    />\r\n                                    {task?.priority}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* category */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Task Category :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    {task?.category?.name}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            }\r\n\r\n            <div\r\n                className=\"col-12 col-xl-6 d-flex flex-column py-3 px-3\"\r\n                style={{ gap: \"10px\", background: \"#F0F2F6\" }}\r\n            >\r\n                <div className=\"font-weight-bold d-block\"> Status: </div>\r\n\r\n                {\r\n                    isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    <div\r\n                    className=\"d-flex align-items-center\"\r\n                    style={{ gap: \"6px\" }}\r\n                >\r\n                    <span\r\n                        className=\"dot-color mr-2\"\r\n                        style={{ background: task?.boardColumn?.labelColor }}\r\n                    />\r\n                    <span className=\"font-weight-bold\">{task?.boardColumn.columnName}</span>\r\n                </div>\r\n                }\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Start Date{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.getStartDate(\"MMM DD, YYYY\")}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Due Date{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.getDueDate(\"MMM DD, YYYY\")}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Time Estimate */}\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Time Estimate{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.getEstimateTime()}\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                    Total Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.parentTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Parent Task Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.parentTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Subtask Hours Logged:{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.subTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Total Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.totalTimeLog || \"--\"}\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"col-12 border-top py-4 mt-4\">\r\n                {/* <Accordion expendable={false} title=\"General Guidelines\">\r\n                    {\r\n                        isFetching ? \r\n                        <ArticleLoader /> :\r\n                        <Guideline text={task?.guidelines} editorContainerClass=\"modal-guideline-editor-text\" />\r\n                    }\r\n                </Accordion> */}\r\n\r\n                {_.size(task?.revisions) > 0 &&\r\n                    <Accordion\r\n                        title={_.last(task?.revisions)?.revisionStatus}\r\n                        headingClass=\"d-flex align-items-center justify-content-between\"\r\n                        headingStyle={{\r\n                            background: \"rgba(227,62,79,1)\",\r\n                            color: \"#fff\",\r\n                        }}\r\n                    >\r\n\r\n                        {_.map(task?.revisions, (revision, index) => (\r\n                                <RevisionText\r\n                                    key={revision.id}\r\n                                    index={index + 1}\r\n                                    date={dayjs(revision.createdAt).format('MMM DD, YYYY')}\r\n                                    time={dayjs(revision.createdAt).format('hh:mm a')}\r\n                                    text={revision?.comment}\r\n                                />\r\n                            ))\r\n                        }\r\n                        \r\n                    </Accordion>\r\n                }\r\n\r\n                <Accordion expendable={false} title=\"Task Descriptions\">\r\n                    <Guideline text={task?.description} />\r\n                </Accordion>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Genarel;\r\n","import React, { Suspense, lazy } from 'react'\r\nimport Loader from '../../../components/Loader'\r\nconst SubmittedWorkItem = lazy(() => import('./SubmittedWorkItem'))\r\n\r\nconst SubmittedWork = ({task, submittedWork, loading}) => { \r\n  return (\r\n    <React.Fragment>\r\n        <h6 className='font-weight-bold'>Submitted Work</h6>\r\n        <div className='d-flex flex-column h-100' style={{gap:'10px'}}>\r\n\r\n            {loading && <div className='mt-3'><Loader /></div>}  \r\n            {submittedWork.length > 0 ? submittedWork.map((s) => (\r\n                <React.Fragment key={s?.task_id}>\r\n                    <Suspense fallback={<div className='mt-3'><Loader /></div>}>\r\n                        <SubmittedWorkItem data={s} task={task} />\r\n                    </Suspense>\r\n                </React.Fragment> \r\n            )): null}\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SubmittedWork","import React from \"react\";\r\nimport { TimeLog } from \"../../../../utils/single-task\"; \r\nimport Loader from \"../../../components/Loader\"; \r\n\r\nconst TimeLogContainer = ({ task, timeLog, isLoading }) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"sp1_modal_timelog_view\">\r\n            <div><h6> Session Logs </h6> </div>\r\n            <div>\r\n                <table className=\"sp1_subtask_log-tbl\">\r\n                        <thead className=\"__thead\">\r\n                            <tr>\r\n                                <th>Employee</th>\r\n                                <th>Start Time</th>\r\n                                <th>End Time</th>\r\n                                <th>Memo</th>\r\n                                <th>Hours Logged</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                </table>\r\n                <div className=\"sp1_modal_timelog_view-tbl-contanier\">  \r\n                    <table className=\"sp1_subtask_log-tbl\"> \r\n                        <tbody className=\"__tbody\"> \r\n                            {timeLog\r\n                                ? timeLog.map((log) => (\r\n                                    <TableRow key={log.id} log={log} />\r\n                                ))\r\n                                : null}\r\n\r\n                            {isLoading && <tr><td className=\"py-2 text-center\" colSpan={5}><Loader /></td></tr>}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeLogContainer;\r\n\r\nconst TableRow = ({ log }) => {\r\n    const timeLog = new TimeLog(log);\r\n    const user = timeLog?.user;\r\n\r\n\r\n    return (\r\n        <tr className=\"__tbody_tr\">\r\n            <td className=\"__tbody_td _tbody_td_employee\">\r\n                <img src={user?.getAvatar()} alt={user?.getName()} />\r\n                <span className=\"px-2\">{user?.getName()}</span>\r\n            </td> \r\n            <td className='__tbody_td _tbody_td_start_time'>\r\n                {timeLog?.getStartTime()} <br/>\r\n                {timeLog?.getStartTime('hh:mm a')}\r\n            </td>\r\n            \r\n            <td className='__tbody_td _tbody_td_start_time _tbody_td_start_end'>\r\n                {!timeLog?.endTime ? <span className=\"text-success font-weight-bold\">Active</span> :\r\n                    <>\r\n                        {timeLog?.getEndTime()} <br/>\r\n                        {timeLog?.getEndTime('hh:mm a')}\r\n                    </>\r\n                }\r\n\r\n            </td> \r\n            <td className=\"__tbody_td _tbody_td_memo\">{timeLog?.memo}</td> \r\n            <td className=\"__tbody_td _tbody_td_hour_logged\">{timeLog?.hoursLogged}</td>\r\n        </tr>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport Rating from '../../../../global/Rating';\r\nimport Loader from '../../../components/Loader';\r\n\r\nconst TaskReview = ({review, isLoading}) => {\r\n    const data = review; \r\n    let comment = data?.comment || `<span className='' style=\"color: #A7A9B2\">No Comment is Available</span>`;\r\n   \r\n    return (\r\n        <div className=\"sp1_task_right_card mb-3\" style={{maxHeight:'450px'}}>  \r\n          {/* side drop toggle button end */}\r\n          <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n              <span className=\"f-16\">Task Review</span> \r\n          </div> \r\n\r\n          {isLoading ? <Loader/> : <React.Fragment>\r\n            \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Deadline Meet : </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Rating rating={Number(data?.deadline_meet)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Submission Quality: </div>\r\n                <div className=\"d-flex align-items-center\">  \r\n                    <Rating rating={Number(data?.submission_quality)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Req. Fullfillment: </div>\r\n                <div className=\"d-flex align-items-center\"> \r\n                <Rating rating={Number(data?.req_fullfillment)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Overall Task Ratings: </div>\r\n                <div className=\"d-flex align-items-center\"> \r\n                    <Rating rating={Number(data?.overall_tasks)} /> \r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"mb-2\">\r\n                <span className=\"font-weight-bold d-block mb-1\">Comments:</span>\r\n                <div style={{color:'#777', fontSize: '13px'}}>\r\n                    <div className='sp1_ck_content' dangerouslySetInnerHTML={{__html: comment}}></div>\r\n                </div>\r\n            </div> \r\n            </React.Fragment>} \r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskReview","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nconst HistoryLoader = (props) => (\r\n    <ContentLoader\r\n        speed={2}\r\n        width={450}\r\n        height={45}\r\n        viewBox=\"0 0 450 45\"\r\n        backgroundColor=\"#f3f3f3\"\r\n        foregroundColor=\"#ecebeb\"\r\n        {...props}\r\n    >\r\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"46\" height=\"48\" />\r\n        <rect x=\"62\" y=\"29\" rx=\"0\" ry=\"0\" width=\"227\" height=\"12\" />\r\n        <rect x=\"60\" y=\"5\" rx=\"0\" ry=\"0\" width=\"344\" height=\"12\" />\r\n    </ContentLoader>\r\n);\r\n\r\nexport default HistoryLoader;\r\n","import React, {lazy, Suspense} from 'react'\r\nimport Loader from '../../../components/Loader' \r\nimport HistoryLoader from '../../../components/HistoryLoader';\r\nconst InnerHistoryItem = lazy(()=> import('../../history/InnerHistoryItem'));\r\n\r\nconst History = ({histories, isLoading}) => { \r\n  return (\r\n    <React.Fragment>\r\n        <h6 className='font-weight-bold'> Histories </h6> \r\n        <div className='mt-3 px-2'>  \r\n          {histories.length > 0 ? histories.map(d => (\r\n             <React.Fragment key={d.id}>\r\n               <Suspense fallback={<HistoryLoader />}>\r\n                  <InnerHistoryItem history={d} />\r\n              </Suspense>\r\n             </React.Fragment> \r\n          )):null} \r\n          {isLoading && <Loader />}\r\n        </div> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default History\r\n\r\n\r\n\r\n// history loader","import * as React from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Genarel from \"./preview/Genarel\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport {\r\n    useGetTaskDetailsQuery,\r\n    useLazyGetSubmittedTaskQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport SubmittedWork from \"./preview/SubmittedWork\";\r\nimport TimeLog from \"./preview/TimeLog\";\r\nimport TaskReview from \"./preview/TaskReview\";\r\nimport History from \"./preview/History\";\r\nimport Comments from \"./preview/Comments\";\r\nimport _ from \"lodash\";\r\nimport { useSingleTask } from \"../../../hooks/useSingleTask\";\r\nimport CommentsBody from \"../../../UI/comments/CommentsBody\";\r\nimport { useGetCommentsQuery } from \"../../../services/api/commentsApiSlice\";\r\n\r\nconst PreviewSubtask = ({ parentTask, subTask }) => {\r\n    const [task, setTask] = React.useState(null);\r\n    const taskID = subTask?.id;\r\n    const [submittedWork, setSubmittedWork] = React.useState([]);\r\n    const [timeLog, setTimeLog] = React.useState([]);\r\n    const [review, setReview] = React.useState(null);\r\n    const [histories, setHistories] = React.useState([]);\r\n    const [comments, setComments] = React.useState([]);\r\n    const [isCommentShow, setIsCommentShow] = React.useState(false);\r\n\r\n    const {\r\n        getTaskById,\r\n        getSubmittionInfo,\r\n        taskDetailsIsFetching,\r\n        submittionInfoIsFetching,\r\n    } = useSingleTask();\r\n\r\n    const [getTaskDetails, { isFetching: detailFetchingStateLoading }] =\r\n        useLazyGetTaskDetailsQuery();\r\n\r\n    const {\r\n        data: subTaskComments,\r\n        isFetching: commentsFetching,\r\n        isLoading: commentsLoading,\r\n        refetch: commentsRefetch,\r\n    } = useGetCommentsQuery(subTask?.id);\r\n\r\n    // fetch task details\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            let task = await getTaskById(taskID);\r\n            task = new SingleTask(task);\r\n            setTask(task);\r\n        })();\r\n    }, []);\r\n\r\n    //   fetch submitted rtk api\r\n    const fetchData = (url, cb) => {\r\n        getTaskDetails(`/${task?.id}/json?mode=${url}`)\r\n            .unwrap()\r\n            .then((res) => {\r\n                let d = _.orderBy(res, \"id\", \"desc\");\r\n                cb(d);\r\n            })\r\n            .catch((err) => console.error(err));\r\n    };\r\n\r\n    // fetch submitted works when submitted tab clieked\r\n    const fetchSubmittedWork = async (e) => {\r\n        e.preventDefault();\r\n        if (submittedWork.length === 0) {\r\n            const data = await getSubmittionInfo(taskID);\r\n            console.log({ data });\r\n            setSubmittedWork([...data]);\r\n        }\r\n    };\r\n\r\n    // fetch timelog data on tab click\r\n    const fetchTimeLogData = (e) => {\r\n        e.preventDefault();\r\n        if (timeLog.length === 0) {\r\n            fetchData(\"task_time_log\", setTimeLog);\r\n        }\r\n    };\r\n\r\n    // fetch review\r\n    const fetchReviewData = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_approve\", setReview);\r\n    };\r\n\r\n    // fetch histories\r\n    const fetchHistories = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_history\", setHistories);\r\n    };\r\n\r\n    // fetch comments\r\n    const fetchComments = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_comment\", setComments);\r\n    };\r\n\r\n    // on comment post\r\n    const onCommentPost = (comment) => {\r\n        const _comments = [...comments];\r\n        _comments.unshift(comment);\r\n        setComments(_comments);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* tab */}\r\n            <div\r\n                className=\"nav flex-column nav-pills sp1-subtask-modal-sidebar\"\r\n                id=\"v-pills-tab\"\r\n                role=\"tablist\"\r\n                aria-orientation=\"vertical\"\r\n            >\r\n                <a\r\n                    className=\"nav-link active\"\r\n                    id=\"v-pills-general-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-home\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-home\"\r\n                    aria-selected=\"true\"\r\n                    onClick={() => setIsCommentShow(false)}\r\n                >\r\n                    General\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-submitted-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-submitted-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-submitted-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchSubmittedWork(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Submitted Works\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-comments-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-comments\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-comments\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        commentsRefetch(e);\r\n                        setIsCommentShow(true);\r\n                    }}\r\n                >\r\n                    Comment\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-time-log-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-time-log-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-time-log-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchTimeLogData(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Time Logs\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-history-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-history\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-history\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchHistories(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    History\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-task-review-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-task-review-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-task-review-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchReviewData(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Task Review\r\n                </a>\r\n            </div>\r\n\r\n            <div\r\n                className={`tab-content ${\r\n                    isCommentShow ? \"p-0\" : \"p-3\"\r\n                } sp1-subtask-modal-tab-content`}\r\n                id=\"v-pills-tabContent\"\r\n            >\r\n                <div\r\n                    className=\"tab-pane fade show active sp1_st_tab_panel\"\r\n                    id=\"v-pills-home\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-general-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <Genarel\r\n                            isFetching={taskDetailsIsFetching}\r\n                            taskID={taskID}\r\n                            task={task}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-submitted-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-submitted-work-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <SubmittedWork\r\n                            task={task}\r\n                            submittedWork={submittedWork}\r\n                            loading={submittionInfoIsFetching}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-comments\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-comments-tab\"\r\n                >\r\n                    {/* <Comments\r\n                        task={task}\r\n                        comments={comments}\r\n                        onCommentPost={onCommentPost}\r\n                        isLoading={detailFetchingStateLoading}\r\n                    /> */}\r\n                    <CommentsBody\r\n                        close={() => {}}\r\n                        comments={subTaskComments}\r\n                        loading={commentsLoading}\r\n                        onSubmit={() => {}}\r\n                        isOpen={true}\r\n                        fullScreenView={false}\r\n                        setFullScreenView={() => {}}\r\n                        height={\"741px\"}\r\n                        fetching={commentsFetching}\r\n                        refetch={commentsRefetch}\r\n                        showFullScreenBtn={false}\r\n                        taskId={subTask?.id}\r\n                        showCloseBtn={false}\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-time-log-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-time-log-work-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <TimeLog\r\n                            task={task}\r\n                            timeLog={timeLog}\r\n                            isLoading={detailFetchingStateLoading}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-history\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-history-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <History\r\n                            histories={histories}\r\n                            isLoading={detailFetchingStateLoading}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-task-review-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-task-review-work-tab\"\r\n                >\r\n                    <TaskReview\r\n                        review={review}\r\n                        isLoading={detailFetchingStateLoading}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* end tab */}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PreviewSubtask;\r\n","import { Rating } from '@smastrom/react-rating';\r\nimport '@smastrom/react-rating/style.css';\r\nimport dayjs from 'dayjs';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { HiOutlineSelector } from 'react-icons/hi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport CKEditorComponent from '../../../../ckeditor/index';\r\nimport FileUploader from '../../../../file-upload/FileUploader';\r\nimport { Placeholder } from '../../../../global/Placeholder';\r\nimport { useSingleTask } from '../../../../hooks/useSingleTask';\r\nimport { useApproveSubmittedTaskMutation, useGetSubmittedTaskQuery } from '../../../../services/api/SingleTaskPageApi';\r\nimport Button from '../../../components/Button';\r\nimport Modal from '../../../components/Modal';\r\nimport SubmitButton from '../../../components/SubmitButton';\r\n\r\nconst ApproveTask = ({task, status, auth}) => {\r\n  const dispatch = useDispatch();\r\n  const [showApproveForm, setShowApproveForm] = useState(false);\r\n  const [completedWithInDeadline, setCompletedWithInDeadline] = useState(1);\r\n  const [submittedStar, setSubmittedStar] = useState(1);\r\n  const [fullfilledStar, setFullfilledStar] = useState(1);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const [oldSubmittion, setOldSubmittion] = useState([]);\r\n  const [latestSubmittion, setLatestSubmittion] = useState({});\r\n\r\n  const [approveSubmittedTask, {isLoading}] = useApproveSubmittedTaskMutation();\r\n  const { data: getSubmittedTask, isFetching  } = useGetSubmittedTaskQuery(task?.id);\r\n\r\n  const { approveTask,  approveTaskLoadingStatus } = useSingleTask();\r\n\r\n  const [err, setErr] = useState(null);\r\n\r\n \r\n useEffect(() => {\r\n    if(getSubmittedTask){\r\n        const data = _.sortBy(getSubmittedTask, ['submission_no']);\r\n        const latest = _.last(data);\r\n        const old = _.initial(data);\r\n        setOldSubmittion([...old]);\r\n        setLatestSubmittion(latest);\r\n    }\r\n }, [isFetching]);\r\n\r\n  const close = (e) => {\r\n    e.preventDefault();\r\n    setShowApproveForm(false)\r\n  }\r\n\r\n  // editor data \r\n  const onWriteOnEditor = (e, editor) => {\r\n    const data = editor.getData();\r\n    setComment(data);\r\n  }\r\n\r\n\r\n  const isValid = () =>{\r\n    let count = 0;\r\n    const error = new Object();\r\n\r\n    if(!comment){\r\n        error.comment = \"Please add a comment!\"\r\n        count ++;\r\n    }\r\n\r\n    setErr(error);\r\n    return !count;\r\n  }\r\n\r\n  // submit \r\n  const handleOnSubmit = async (e) =>{\r\n    e.preventDefault();\r\n    const data = {\r\n        rating: completedWithInDeadline,\r\n        rating2: submittedStar,\r\n        rating3: fullfilledStar,\r\n        comment,\r\n        task_id: task?.id,\r\n        user_id: auth?.getId()\r\n    }   \r\n\r\n    if(isValid()){ \r\n        const cb = () => setShowApproveForm(false);\r\n        await approveTask(data, cb ); \r\n    }else{\r\n        toast.warn(\"Please add a comment!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='success'\r\n            onClick={() => setShowApproveForm(true)}\r\n            className='d-flex align-items-center border-success'\r\n        >\r\n            <i className=\"fa-solid fa-handshake-angle\"></i>\r\n            <span className=\"d-inline ml-1\">Approve</span>\r\n        </Button>\r\n\r\n        <Modal isOpen={showApproveForm} className=\"sp1_single_task--modal w-100\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper w-100\">\r\n                <div\r\n                    className=\"sp1_single_task--modal-panel w-100\"\r\n                    style={{ maxWidth: '600px', minWidth: '320px' }}\r\n                >\r\n                    <div className=\"border-bottom pb-2 pl-3 pr-2 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <div className=\"font-weight-bold f-16\"> Approve Task </div>\r\n                        <Button onClick={close} className=\"\">\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"px-3\">\r\n                         { _.size(oldSubmittion) > 0 &&\r\n                            <div className='mb-3'>\r\n                                <div className=\"sp1_st--approve-card\"> \r\n                                    <div className=\"sp1_st--approve-card-header\" data-toggle=\"collapse\" href=\"#oldSubmittedSuccess\" role=\"button\"   aria-expanded=\"false\" aria-controls=\"oldSubmittedSuccess\">\r\n                                        Old Submitted Works ({_.size(oldSubmittion)})\r\n                                        <button>\r\n                                            <HiOutlineSelector />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"collapse multi-collapse shadow-none\" id=\"oldSubmittedSuccess\">\r\n                                    <div className=\"card card-body\">\r\n                                        {\r\n                                            _.size(oldSubmittion) > 0 ?\r\n                                            _.map(oldSubmittion, (task)=>(\r\n                                                <SubmittedWorkCard key={`${task.id}_${task?.submission_no}`} data={task} isLoading={isFetching}/>\r\n                                            )):\r\n                                            <span>\r\n                                                No Old Submittion!\r\n                                            </span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                         }\r\n                        {/* content */}\r\n                        {\r\n                            // getSubmittedTask?.submission_no === getSubmittedTask.\r\n                        }\r\n                        <SubmittedWorkCard data={latestSubmittion} latest={true} isLoading={isFetching} />\r\n                    </div>\r\n                    {\r\n                        !isFetching && \r\n                        <div className=\"mt-4 px-3\">\r\n                            <form action=\"\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>Is This Task Completed Within Deadline?<sup className='f-16'>*</sup></label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={completedWithInDeadline}\r\n                                            onChange={setCompletedWithInDeadline}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>How Beautifully The Task Is Submitted?<sup className='f-16'>*</sup></label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={submittedStar}\r\n                                            onChange={setSubmittedStar}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>\r\n                                        How Perfectly The Task Requirements Are Fullfilled?<sup className='f-16'>*</sup>\r\n                                    </label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={fullfilledStar}\r\n                                            onChange={setFullfilledStar}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>\r\n                                        Any Recommendations For Developer?<sup className='f-16'>*</sup>\r\n                                    </label>\r\n                                    <div className='ck-editor-holder'>\r\n                                        <CKEditorComponent onChange={onWriteOnEditor} />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"mt-3 d-flex align-items-center\">\r\n                                    <Button onClick={close} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                       Close \r\n                                    </Button>\r\n    \r\n                                    {/* {!isLoading ? (\r\n                                        <React.Fragment>\r\n                                            <Button onClick={handleOnSubmit}>Approve</Button>\r\n                                        </React.Fragment>\r\n                                    ) : (\r\n                                        <React.Fragment>\r\n                                            <Button className=\"cursor-processing\">\r\n                                                <div\r\n                                                    className=\"spinner-border text-white\"\r\n                                                    role=\"status\"\r\n                                                    style={{\r\n                                                        width: \"18px\",\r\n                                                        height: \"18px\",\r\n                                                    }}\r\n                                                />{\" \"}\r\n                                                Processing...\r\n                                            </Button>\r\n                                        </React.Fragment>\r\n                                    )} */}\r\n                                    <SubmitButton onClick={handleOnSubmit} title=\"Approve\" isLoading={approveTaskLoadingStatus} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ApproveTask\r\n\r\n\r\n// Submitted work\r\n\r\nconst SubmittedWorkCard = ({data, latest=false, className=\"\", style, isLoading = false}) => {\r\n\r\n    const links = _.compact(_.split(data?.links, ','));\r\n    const attaches =  _.compact(_.split(data?.attaches, ','));\r\n   \r\n\r\n    if(isLoading){\r\n        return <div className={`sp1_st--approve-card mb-3 ${className}`} style={style}> \r\n            <div className=\"sp1_st--approve-card-header\">\r\n                <Placeholder height=\"14px\" width='80px' className='mb-2' />\r\n                <Placeholder height=\"14px\" width='50px' className='mb-2' />\r\n            </div>\r\n\r\n            <div className='sp1_st--approve-card-body'>\r\n                <div className='mb-2'>\r\n                    <Placeholder height=\"14px\" width='80px' className='mb-2'/>\r\n\r\n                    <div className='ml-2'>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                    </div> \r\n                </div>\r\n\r\n                <div className='mb-2'>\r\n                    <Placeholder height=\"14px\" width='80px' className='mb-2'/>\r\n\r\n                    <div className='ml-2'>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='50%' className='mb-2'/>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    \r\n    return(\r\n        <div className={`sp1_st--approve-card mb-3 ${className}`} style={style}> \r\n            <div className=\"sp1_st--approve-card-header\">\r\n                <span>{latest ? 'Latest': \"Old\"} Submittion {!latest && `(${data?.submission_no})`}</span>\r\n                <span>\r\n                    {dayjs(data?.submission_date).format('MMM DD, YYYY hh:mm a')}\r\n                </span>\r\n            </div>\r\n\r\n            <div className='sp1_st--approve-card-body'>\r\n                <div className='mb-2'>\r\n                    <div className='font-weight-bold f-12' style={{color: '#81868E'}}> Links</div>\r\n                    <ol style={{listStyle: 'unset'}}>\r\n                        {_.map(links, (link, index) =>(\r\n                            <li key={`${link}_${index}`} style={{listStyle: 'numaric'}}>\r\n                                <a href={link}>{link}</a>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n\r\n                <div className='mb-2'>\r\n                    <div className=\"font-weight-bold f-12\" style={{color: '#81868E'}}>Description</div>\r\n                    <div className='sp1_ck_content p-2' dangerouslySetInnerHTML={{__html: data?.text ?? `<span style=\"color:rgb(180,188,196);\">Comment Not Available</span>`}}/>\r\n                </div>\r\n\r\n\r\n                <div className=\"mt-3\">\r\n                <span\r\n                    className=\"d-block f-12 font-weight-bold mb-2\"\r\n                    style={{ color: \"#767581\" }}\r\n                >\r\n                    Attached Files\r\n                </span>\r\n                {_.size(attaches) > 0 ? (\r\n                    <FileUploader>\r\n                        {_.map(attaches, (file, index) => (\r\n                            <FileUploader.Preview\r\n                                key={`${file}_${index}`}\r\n                                fileName={file}\r\n                                downloadAble={true}\r\n                                deleteAble={false}\r\n                                downloadUrl={`${file}`}\r\n                                previewUrl={`${file}`}\r\n                                fileType={_.includes([\"png\",\"jpg\", \"jpeg\", \"gif\", \"svg\"], _.last(_.split(file, '.'))) ? 'images' : 'others'}\r\n                                ext=\"\"\r\n                            />\r\n                        ))}\r\n                    </FileUploader>\r\n                    ) : (\r\n                        <span\r\n                            className=\"px-2\"\r\n                            style={{ color: \"rgb(180, 188, 196)\" }}\r\n                        >\r\n                            No Attachment is available\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useCheckEditableSubTaskQuery, useLazyCheckSubTaskTimerQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport Button from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport PreviewSubtask from \"./PreviewSubtask\";\r\nimport ApproveTask from \"../task-actions/approve-task/ApproveTask\";\r\n\r\nconst SubTask = ({ subTask, task, status, toggleEditForm }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    const [checkSubTaskTimer, {isFetching}] = useLazyCheckSubTaskTimerQuery()\r\n      // check task edit\r\n\r\n        const { data } = useCheckEditableSubTaskQuery(subTask?.id);\r\n        const isEditable = data?.task === 0;\r\n\r\n    const toggle = (e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setIsOpen(true);\r\n    }\r\n\r\n\r\n    const hasEditPermission = () => {\r\n        return Number(subTask?.added_by) === auth?.getId() && _.includes([1,2,3], status?.id);\r\n    }\r\n\r\n    const onEdit = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(subTask?.id)\r\n        .unwrap()\r\n        .then(res=>{\r\n            if(res?.status === 200){\r\n                toggleEditForm(e, subTask?.id)\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'You cannot edit the task because timer is already running',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const onModalEditButtonClick = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(subTask?.id)\r\n        .unwrap()\r\n        .then(res=>{\r\n            if(res?.status === 200){\r\n                window.location = `/account/tasks/${subTask?.id}/edit`\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'You cannot edit the task because timer is already running',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\"\r\n            style={{ gap: \"16px\" }}\r\n        >\r\n            <div className=\"w-100 text-ellipsis\">\r\n                <div onClick={toggle} className=\"hover-underline\" style={{cursor: 'pointer'}}>\r\n                    {subTask?.title}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <div\r\n                    onClick={toggle}\r\n                    className=\"mr-2 py-2 sp1_task_righ_action_btn\"\r\n                    style={{cursor: 'pointer'}}\r\n                >\r\n                    <i className=\"fa-regular fa-eye\"></i>\r\n                </div>\r\n                {\r\n                    isEditable && hasEditPermission() && <div\r\n                        onClick={onEdit}\r\n                        className=\"mr-2 py-2 sp1_task_righ_action_btn\"\r\n                        style={{cursor: 'pointer'}}\r\n                    >\r\n                        {isFetching ?  <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        /> :<i className=\"fa-regular fa-pen-to-square\"></i>}\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n            {/* task Preview Modal */}\r\n            <React.Fragment>\r\n                <Modal\r\n                    className={`sp1_subtask_offsetcanvas--modal`}\r\n                    isOpen={isOpen}\r\n                >\r\n                    <div\r\n                        className={`sp1_subtask_offsetcanvas ${\r\n                            isOpen ? \"open\" : \"\"\r\n                        }`}\r\n                    >\r\n                        <div className=\"d-flex align-items-center justify-content-between p-2 sp1_subtask_offsetcanvas--bar\">\r\n                            <div className=\"pl-3\">\r\n                                <span className=\"font-weight-bold f-16\">\r\n                                    Sub Task # {subTask?.id} :{\" \"}\r\n                                    <span className=\"font-weight-normal\">\r\n                                        {subTask?.title}\r\n                                    </span>{\" \"}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"d-flex align-items-center ml-auto\">\r\n                                {/* <ApproveTask\r\n                                    task={subTask}\r\n                                    auth={auth}\r\n                                />\r\n\r\n                                <Button variant=\"success\" onClick={() => setIsOpen(false)} className=\"mr-2 bg-danger\">\r\n                                    Revision\r\n                                </Button> */}\r\n\r\n                                {isEditable && hasEditPermission() && <a href=\"#\" onClick={onModalEditButtonClick} className=\"border text-dark mr-2 py-1 px-2\">\r\n                                    {isFetching ?  <div\r\n                                        className=\"spinner-border text-dark ml-2\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                            borderRightColor: \"transparent\",\r\n                                        }}\r\n                                    /> :<i className=\"fa-regular fa-pen-to-square\"></i>}\r\n                                </a>}\r\n                                <a\r\n                                    href={`/account/tasks/${subTask?.id}`}\r\n                                    target=\"_blank\"\r\n                                    className=\"border text-dark mr-2 py-1 px-2\"\r\n                                >\r\n                                    {/* <i className=\"fa-solid fa-up-right-and-down-left-from-center\" /> */}\r\n                                    <i className=\"fa-solid fa-arrow-up-right-from-square\"></i>\r\n                                </a>\r\n                                <Button onClick={() => setIsOpen(false)} className=\"\">\r\n                                    <i className=\"fa-solid fa-xmark\" />\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"sp1_subtask_offsetcanvas--body\">\r\n                            <PreviewSubtask\r\n                                parentTask={task}\r\n                                subTask={subTask}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubTask;\r\n","import React from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport { User } from \"../../../utils/user-details\";\r\n\r\nconst LeadConfirmationModal = ({ isOpen, onConfirm }) => {\r\n    const [buttonVisible, setButtonVisible] = React.useState(false);\r\n    // const [countDown, setCountDown] = React.useState(5);\r\n    const [countDown, setCountDown] = React.useState(3);\r\n    const auth = new User(window.Laravel.user);\r\n\r\n    React.useEffect(() => {\r\n        if (auth.getRoleId() && auth.getRoleId() === 6) {\r\n            let count = countDown ?? 0;\r\n\r\n            let timeIntervelId = setInterval(() => {\r\n                setCountDown(count--);\r\n            }, 1000);\r\n\r\n            let timeOutId = setTimeout(() => {\r\n                setButtonVisible(true);\r\n                clearInterval(timeIntervelId);\r\n                // }, 5000);\r\n            }, 3000);\r\n\r\n            return () => {\r\n                clearTimeout(timeOutId);\r\n                clearInterval(timeIntervelId);\r\n            };\r\n        }\r\n\r\n        return () => onConfirm();\r\n    }, []);\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} className=\"subtask-timer-confirmation--modal\">\r\n            <div className=\"subtask-timer-confirmation--panel\">\r\n                <div className=\"subtask-timer-confirmation--content\">\r\n                    <h4 className=\"mb-3\">\r\n                        {\" \"}\r\n                        Do You Understand The Following Things?{\" \"}\r\n                    </h4>\r\n\r\n                    <ol type=\"A\" style={{ marginLeft: \"30px\" }}>\r\n                        <li>\r\n                            {\" \"}\r\n                            Your teams job is not to decide what the look and\r\n                            feel of a website will be based on a few reference\r\n                            websites{\" \"}\r\n                        </li>\r\n                        <li>\r\n                            Your teams job is not to research a theme based on\r\n                            an instruction shared by the PM.{\" \"}\r\n                        </li>\r\n                        <li>\r\n                            Your teams job is not to research a plugin based on\r\n                            a problem shared by PM.\r\n                        </li>\r\n                        <li>\r\n                            Your teams job is not to choose the color scheme of\r\n                            a website.\r\n                        </li>\r\n                        <li>\r\n                            Your teams job is not to talk to the support for\r\n                            example the shopify support team, theme support,\r\n                            plugin support and any other support for any\r\n                            solution.\r\n                        </li>\r\n                        <li>\r\n                            Your teams job is not to create the training videos\r\n                            for the client after the completion of a project.{\" \"}\r\n                        </li>\r\n                        <li>\r\n                            You understand that all your teams hours have to be\r\n                            logged/tracked and you team mates will questioned if\r\n                            each of them doesn’t log at least 7 hours for any\r\n                            reason.\r\n                        </li>\r\n                    </ol>\r\n\r\n                    <p>\r\n                        In general, anything that has to do with requirements\r\n                        define (of any sort) has to be done by the project\r\n                        manager. Your teams job is to execute the work based on\r\n                        the defined requirements.{\" \"}\r\n                    </p>\r\n\r\n                    <p>\r\n                        If for any reason, project manager needs your help for\r\n                        any of those things, he will have to create a separate\r\n                        task for each of them and those tasks have to be\r\n                        authorized by the top management mandatorily.\r\n                    </p>\r\n\r\n                    <p>\r\n                        {\" \"}\r\n                        Report immediately if you are asked to do any of these\r\n                        and if it was’t authorized by top management. You should\r\n                        see a text like “Authorized by top management” at the\r\n                        right side of the task title if it was authorized.In\r\n                        case, you don’t report, the extra time taken for these\r\n                        will be considered as your lackings (as they will remain\r\n                        unaccountable) and you will receive negative performance\r\n                        score.”\r\n                    </p>\r\n\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <Button\r\n                            onClick={onConfirm}\r\n                            className=\"ml-auto\"\r\n                            disabled={!buttonVisible}\r\n                        >\r\n                            Yes, I Fully Understand This{\" \"}\r\n                            {!buttonVisible && `(${countDown})`}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default LeadConfirmationModal;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../../components/form/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport { useWorkingEnvironmentMutation } from \"../../../services/api/SingleTaskPageApi\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport { toast } from \"react-toastify\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst WorkingEnvironmentForm = ({ task, onSubmit, close }) => {\r\n    const [siteUrl, setSiteUrl] = useState(\"\");\r\n    const [frontendPassword, setFrontendPassword] = useState(\"\");\r\n    const [loginUrl, setLoginUrl] = useState(\"\");\r\n    const [\r\n        siteLoginCredentialUserNameOrEmail,\r\n        setSiteLoginCredentialUserNameOrEmail,\r\n    ] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [err, setErr] = useState(null);\r\n\r\n    const [workingEnvironment, { isLoading }] = useWorkingEnvironmentMutation();\r\n\r\n    // handle input change\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        setState(e.target.value);\r\n    };\r\n\r\n    const isValid = () => {\r\n        let count = 0;\r\n        const error = new Object();\r\n\r\n        if (!siteUrl) {\r\n            count++;\r\n            error.siteUrl = \"You have to provide Working/Staging Site's URL\";\r\n        } else if (!checkIsURL(siteUrl)) {\r\n            count++;\r\n            error.siteUrl = \"Please enter a valid URL\";\r\n            toast.warn(\"Please enter a valid Working/Staging Site's URL\", {\r\n                position: \"top-right\",\r\n            });\r\n        }\r\n\r\n        if (!loginUrl) {\r\n            count++;\r\n            error.loginUrl =\r\n                \"You have to provide Working/Staging Site's Admin Panel URL\";\r\n        } else if (!checkIsURL(loginUrl)) {\r\n            count++;\r\n            error.loginUrl = \"Please enter a valid URL\";\r\n            toast.warn(\r\n                \"Please enter a valid Working/Staging Site's Admin Panel URL\",\r\n                { position: \"top-right\" }\r\n            );\r\n        }\r\n\r\n        if (!siteLoginCredentialUserNameOrEmail) {\r\n            count++;\r\n            error.username =\r\n                \"You have to provide Working/Staging Site's Admin Username/Email\";\r\n        }\r\n\r\n        if (!password) {\r\n            count++;\r\n            error.password =\r\n                \"You have to provide Working/Staging Site's Admin Password\";\r\n        }\r\n\r\n        if (!frontendPassword) {\r\n            count++;\r\n            error.frontendPassword =\r\n                \"You have to provide Working/Staging Site's Frontend Password\";\r\n        }\r\n\r\n        setErr(error);\r\n        return !count;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        const data = {\r\n            project_id: task?.projectId,\r\n            site_url: siteUrl,\r\n            login_url: loginUrl,\r\n            email: siteLoginCredentialUserNameOrEmail,\r\n            password: password,\r\n            task_id: task?.id,\r\n            frontend_password: frontendPassword,\r\n        };\r\n\r\n        if (isValid()) {\r\n            try {\r\n                await workingEnvironment(data)\r\n                    .unwrap()\r\n                    .then((res) => {\r\n                        close();\r\n                        Swal.fire(\r\n                            \"Working environment store successfully\",\r\n                            \"You can create subtask now\",\r\n                            \"success\"\r\n                        ).then(({ isConfirmed }) => {\r\n                            onSubmit();\r\n                        });\r\n                    });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            toast.error(\"Please provide all required fields\", {\r\n                position: \"top-right\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"sp1-subtask-form w-100 --form -row\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 lg:col-6\">\r\n                    <Input\r\n                        id=\"siteURL\"\r\n                        label=\"Working/Staging Site's URL\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's URL\"\r\n                        name=\"stie_url\"\r\n                        required={true}\r\n                        value={siteUrl}\r\n                        error={err?.siteUrl}\r\n                        onChange={(e) => handleChange(e, setSiteUrl)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 lg:col-6\">\r\n                    <Input\r\n                        id=\"frontendPassword\"\r\n                        label=\"Frontend Password\"\r\n                        type=\"text\"\r\n                        placeholder=\"Frontent Password\"\r\n                        name=\"frontend-end-password\"\r\n                        required={true}\r\n                        value={frontendPassword}\r\n                        error={err?.frontendPassword}\r\n                        onChange={(e) => handleChange(e, setFrontendPassword)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-4\">\r\n                    <Input\r\n                        id=\"loginUrl\"\r\n                        label=\"Working/Staging Site's Admin Panel URL\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's Admin Panel URL\"\r\n                        name=\"login_url\"\r\n                        required={true}\r\n                        value={loginUrl}\r\n                        error={err?.loginUrl}\r\n                        onChange={(e) => handleChange(e, setLoginUrl)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-5 h-100\">\r\n                    <Input\r\n                        id=\"siteLoginCredential\"\r\n                        label=\"Working/Staging Site's Admin Panel Username/Email\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's Admin Panel Username/Email\"\r\n                        name=\"site-login-credential\"\r\n                        required={true}\r\n                        value={siteLoginCredentialUserNameOrEmail}\r\n                        error={err?.username}\r\n                        onChange={(e) =>\r\n                            handleChange(\r\n                                e,\r\n                                setSiteLoginCredentialUserNameOrEmail\r\n                            )\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"h-100 d-md-flex align-items-end\">\r\n                        <Input\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"text\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            className=\"mt-md-auto\"\r\n                            required={true}\r\n                            value={password}\r\n                            error={err?.password}\r\n                            onChange={(e) => handleChange(e, setPassword)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 mt-3\">\r\n                <div className=\"d-flex align-items-center justify-content-end\">\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        className=\"mr-2\"\r\n                        onClick={close}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n\r\n                    <SubmitButton onClick={handleSubmit} isLoading={isLoading}>\r\n                        <i className=\"fa-regular fa-paper-plane\" />\r\n                        Create\r\n                    </SubmitButton>\r\n\r\n                    {/* {isLoading ? (\r\n                        <Button onClick={handleSubmit}>\r\n                            \r\n                        </Button>\r\n                    ) : (\r\n                        <Button className=\"cursor-processing\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"18px\",\r\n                                    height: \"18px\",\r\n                                }}\r\n                            ></div>\r\n                            Processing...\r\n                        </Button>\r\n                    )} */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkingEnvironmentForm;\r\n","import React, { useState } from \"react\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport AssginedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\n\r\nimport _ from \"lodash\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n    useCheckRestrictedWordsMutation,\r\n    useCreateSubtaskMutation,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\n\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n    setWorkingEnvironmentStatus,\r\n    storeSubTasks,\r\n} from \"../../../services/features/subTaskSlice\";\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport LeadConfirmationModal from \"./LeadConfirmationModal\";\r\nimport WorkingEnvironmentForm from \"./WorkingEnvironmentForm\";\r\nimport { useRefetchTaskDetails } from \"../../SingleIndependentTask\";\r\n\r\nconst SubTaskForm = ({ close, isFirstSubtask = false }) => {\r\n    const refetchTask = useRefetchTaskDetails();\r\n    const {\r\n        task: taskDetails,\r\n        subTask,\r\n        isWorkingEnvironmentSubmit,\r\n    } = useSelector((s) => s.subTask);\r\n    const dispatch = useDispatch();\r\n    const dayjs = new CompareDate();\r\n\r\n    //   form data\r\n    const [title, setTitle] = useState(\"\");\r\n    const [parentTask, setParentTask] = useState(\"\");\r\n    const [startDate, setStateDate] = useState(null);\r\n    const [dueDate, setDueDate] = useState(null);\r\n    const [taskCategory, setTaskCategory] = useState(\"\");\r\n    const [assignedTo, setAssignedTo] = useState(null);\r\n    // const [taskObserver, setTaskObserver] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    // const [status, setStatus] = useState(\"To Do\");\r\n    const [priority, setPriority] = useState(\"Regular\");\r\n\r\n    // const [estimateTimeHour, setEstimateTimeHour] = useState(0);\r\n    // const [estimateTimeMin, setEstimateTimeMin] = useState(0);\r\n\r\n    const [files, setFiles] = React.useState([]);\r\n\r\n    const [pageType, setPageType] = React.useState(\"\");\r\n    const [pageTypeOthers, setPageTypeOthers] = React.useState(\"\");\r\n    const [pageName, setPageName] = React.useState(\"\");\r\n    const [pageURL, setPageURL] = React.useState(\"\");\r\n    const [numberOfPage, setNumberOfPage] = React.useState(0);\r\n    const [existingDesignLink, setExistingDesignLink] = React.useState(\"\");\r\n    const [pageTypePriority, setPageTypePriority] = React.useState(\"\");\r\n    const [pageTypeName, setPageTypeName] = React.useState(\"\");\r\n\r\n    const [err, setErr] = useState(null);\r\n\r\n    const task = new SingleTask(taskDetails);\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n    // const params = useParams();\r\n    const [createSubtask, { isLoading, error }] = useCreateSubtaskMutation();\r\n    // const {  } = useGetTaskDetailsQuery(`/${task?.id}/json?mode=estimation_time`);\r\n    const [getTaskDetails, { data: estimation, isFetching }] =\r\n        useLazyGetTaskDetailsQuery();\r\n\r\n    const [showForm, setShowForm] = React.useState(false);\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n    const [containViolation, setContainViolation] = React.useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // const [\r\n    //     checkRestrictedWords,\r\n    //     {isLoading: checking}\r\n    // ] = useCheckRestrictedWordsMutation();\r\n    const checking = false;\r\n\r\n    // handle change\r\n    React.useEffect(() => {\r\n        setParentTask(task?.title);\r\n    }, [task]);\r\n\r\n    React.useEffect(() => {\r\n        getTaskDetails(`/${task?.id}/json?mode=estimation_time`).unwrap();\r\n    }, []);\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n    const isValid = () => {\r\n        let count = 0;\r\n        const error = new Object();\r\n\r\n        if (!title) {\r\n            error.title = \"The title field is required\";\r\n            count++;\r\n        }\r\n\r\n        if (!startDate) {\r\n            error.startDate = \"You have to select a start date\";\r\n            count++;\r\n        }\r\n\r\n        if (!dueDate) {\r\n            error.dueDate = \"You have to select a due date\";\r\n            count++;\r\n        }\r\n\r\n        if (!taskCategory) {\r\n            error.taskCategory = \"You have to select task category\";\r\n            count++;\r\n        }\r\n\r\n        if (!assignedTo) {\r\n            error.assignedTo = \"You have to select an user\";\r\n            count++;\r\n        }\r\n\r\n        if (assignedTo && assignedTo?.isOverloaded) {\r\n            toast.warn(\r\n                `You cannot assign this task to ${assignedTo?.name}  because ${\r\n                    assignedTo?.gender === \"male\" ? \"He \" : \"She \"\r\n                } has more than 04 Submittable tasks.`\r\n            );\r\n            count++;\r\n        }\r\n\r\n        if (!pageType) {\r\n            error.taskType = \"You have to Select task type\";\r\n            count++;\r\n        } else {\r\n            if (_.toLower(pageType) === _.toLower(\"New Page Design\")) {\r\n                if (!pageTypePriority) {\r\n                    error.pageTypePriority = \"You have to Select page type\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageName) {\r\n                    error.pageName = \"You have to Select page name\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageURL) {\r\n                    error.pageUrl = \"You have to provide page URL\";\r\n                    count++;\r\n                } else if (!checkIsURL(pageURL)) {\r\n                    error.pageUrl = \"You have to provide a valid page URL\";\r\n                    toast.warn(\"You have to provide a valid page URL\");\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if (_.toLower(pageType) === _.toLower(\"Others\")) {\r\n                if (!pageTypeOthers) {\r\n                    error.pageTypeOthers = \"You have to select an option\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageName) {\r\n                    error.pageName = \"You have to Select page name\";\r\n                    count++;\r\n                }\r\n\r\n                if (!pageURL) {\r\n                    error.pageUrl = \"You have to provide page URL\";\r\n                    count++;\r\n                } else if (!checkIsURL(pageURL)) {\r\n                    error.pageUrl = \"You have to provide a valid page URL\";\r\n                    toast.warn(\"You have to provide a valid page URL\");\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if (_.toLower(pageType) === _.toLower(\"Cloning Existing Design\")) {\r\n                if (!pageTypeName) {\r\n                    error.pageTypeName = \"You have to select an option\";\r\n                    count++;\r\n                }\r\n\r\n                if (!numberOfPage) {\r\n                    error.numberOfPage = \"The minimum required number is 1\";\r\n                    count++;\r\n                }\r\n\r\n                if (!existingDesignLink) {\r\n                    error.existingDesignLink =\r\n                        \"You have to provide Exiting Design Link\";\r\n                    count++;\r\n                } else if (!checkIsURL(existingDesignLink)) {\r\n                    error.existingDesignLink =\r\n                        \"You have to provide a valid Exiting Design Link\";\r\n                    toast.warn(\r\n                        \"You have to provide a valid Exiting Design Link\"\r\n                    );\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if (!description) {\r\n                error.description = \"The description field is required\";\r\n                count++;\r\n            }\r\n        }\r\n\r\n        setErr(error);\r\n        return !count;\r\n    };\r\n\r\n    // handle submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n        const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n        const fd = new FormData();\r\n        // fd.append(\"milestone_id\", task?.milestoneID);\r\n        fd.append(\"task_id\", task?.id);\r\n        fd.append(\"title\", title);\r\n        fd.append(\"start_date\", _startDate);\r\n        fd.append(\"due_date\", _dueDate);\r\n        // fd.append(\"project_id\", task?.projectId);\r\n        fd.append(\"task_category_id\", taskCategory?.id);\r\n        fd.append(\"user_id\", assignedTo?.id);\r\n        fd.append(\"description\", description);\r\n        fd.append(\"board_column_id\", task?.boardColumn?.id);\r\n        fd.append(\"priority\", _.lowerCase(priority));\r\n        // fd.append(\"estimate_hours\", estimateTimeHour);\r\n        // fd.append(\"estimate_minutes\", estimateTimeMin);\r\n        fd.append(\"image_url\", null);\r\n        fd.append(\"subTaskID\", null);\r\n        fd.append(\"addedFiles\", null);\r\n        fd.append(\"task_type\", pageType ?? null);\r\n        fd.append(\"page_type\", pageTypePriority);\r\n        fd.append(\"page_name\", pageName);\r\n        fd.append(\"page_url\", pageURL);\r\n        fd.append(\"task_type_other\", pageTypeOthers);\r\n        fd.append(\"page_type_name\", pageTypeName);\r\n        fd.append(\"number_of_pages\", numberOfPage);\r\n        fd.append(\"existing_design_link\", existingDesignLink);\r\n        fd.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            fd.append(\"file[]\", file);\r\n        });\r\n\r\n        // const submit = async () => {\r\n\r\n        if (isValid()) {\r\n            await createSubtask(fd)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    if (res?.status === \"success\") {\r\n                        let _subtask = [\r\n                            ...subTask,\r\n                            {\r\n                                id: res?.sub_task?.id,\r\n                                title: res?.sub_task?.title,\r\n                            },\r\n                        ];\r\n                        dispatch(storeSubTasks(_subtask));\r\n                        close();\r\n\r\n                        Swal.fire({\r\n                            position: \"center\",\r\n                            icon: \"success\",\r\n                            title: res.message,\r\n                            showConfirmButton: false,\r\n                            timer: 2500,\r\n                        });\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    if (err?.status === 422) {\r\n                        Swal.fire({\r\n                            position: \"center\",\r\n                            icon: \"error\",\r\n                            title: \"Task title should be unique on this project\",\r\n                            showConfirmButton: true,\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (isLoading) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading]);\r\n\r\n    // editor data handle\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        const text = _.head(err?.errors?.hours);\r\n        return text;\r\n    };\r\n\r\n    useEffect(() => {\r\n        // const showEnv = _.size(task?.subtask) === 0 ? true : false;\r\n        if (auth.getRoleId() === 6 || auth.isHasRolePermission(13)) {\r\n            dispatch(setWorkingEnvironmentStatus(!isFirstSubtask));\r\n        }\r\n    }, [isFirstSubtask]);\r\n\r\n    // useEffect(()=>{\r\n    //   console.log({isFirstSubtask,isWorkingEnvironmentSubmit});\r\n    // },[isFirstSubtask,isWorkingEnvironmentSubmit]);\r\n\r\n    // useEffect(()=>{\r\n    //   console.log({isWorkingEnvironmentSubmit,isFirstSubtask,task});\r\n    // },[isWorkingEnvironmentSubmit,isFirstSubtask,task])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sp1-subtask-form --modal-panel\">\r\n                <div className=\"sp1-subtask-form --modal-panel-header\">\r\n                    <h6>\r\n                        {!isWorkingEnvironmentSubmit\r\n                            ? \"Working Environment\"\r\n                            : \"Create Sub Task\"}\r\n                    </h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className=\"_close-modal\"\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body sp1_subtask_form\">\r\n                    {/* working environment form */}\r\n                    {!isWorkingEnvironmentSubmit && (\r\n                        <WorkingEnvironmentForm\r\n                            task={task}\r\n                            onSubmit={() => {\r\n                                refetchTask();\r\n                            }}\r\n                            close={close}\r\n                        />\r\n                    )}\r\n                    {/* end working environment form */}\r\n\r\n                    {isWorkingEnvironmentSubmit && (\r\n                        <LeadConfirmationModal\r\n                            isOpen={!showForm}\r\n                            onConfirm={() => setShowForm(true)}\r\n                        />\r\n                    )}\r\n                    {showForm && (\r\n                        <div className=\"sp1-subtask-form --form row\">\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <Input\r\n                                    id=\"title\"\r\n                                    label=\"Title\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter a task title\"\r\n                                    name=\"title\"\r\n                                    required={true}\r\n                                    value={title}\r\n                                    error={\r\n                                        err?.title || required_error?.title?.[0]\r\n                                    }\r\n                                    onChange={(e) => handleChange(e, setTitle)}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Milestone */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Milestone\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={milestone}\r\n                                    />\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Parent Task\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={parentTask}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Project */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Project\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={project}\r\n                                    />\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\">\r\n                                        Start Date <sup className=\"f-14\">*</sup>\r\n                                    </label>\r\n                                    <div className=\"form-control height-35 f-14\">\r\n                                        <DatePicker\r\n                                            placeholderText={`Ex: ${dayjs\r\n                                                .dayjs()\r\n                                                .format(\"DD-MM-YYYY\")}`}\r\n                                            minDate={dayjs\r\n                                                .dayjs(task?.startDate)\r\n                                                .toDate()}\r\n                                            maxDate={\r\n                                                dueDate ||\r\n                                                dayjs\r\n                                                    .dayjs(task?.dueDate)\r\n                                                    .toDate()\r\n                                            }\r\n                                            date={startDate}\r\n                                            setDate={setStateDate}\r\n                                        />\r\n                                    </div>\r\n                                    {required_error?.start_date?.[0] && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {required_error?.start_date?.[0]}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {err?.startDate && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.startDate}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\">\r\n                                        Due Date <sup className=\"f-14\">*</sup>\r\n                                    </label>\r\n                                    <div className=\"form-control height-35 f-14\">\r\n                                        <DatePicker\r\n                                            placeholderText={`Ex: ${dayjs\r\n                                                .dayjs()\r\n                                                .format(\"DD-MM-YYYY\")}`}\r\n                                            minDate={\r\n                                                startDate ||\r\n                                                dayjs\r\n                                                    .dayjs(task?.startDate)\r\n                                                    .toDate()\r\n                                            }\r\n                                            maxDate={dayjs\r\n                                                .dayjs(task?.dueDate)\r\n                                                .toDate()}\r\n                                            date={dueDate}\r\n                                            setDate={setDueDate}\r\n                                        />\r\n                                    </div>\r\n                                    {required_error?.due_date?.[0] && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {required_error?.due_date?.[0]}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {err?.dueDate && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.dueDate}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <TaskCategorySelectionBox\r\n                                    selected={taskCategory}\r\n                                    onSelect={setTaskCategory}\r\n                                />\r\n\r\n                                {err?.taskCategory && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.taskCategory}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <AssginedToSelection\r\n                                    selected={assignedTo}\r\n                                    onSelect={setAssignedTo}\r\n                                    taskCategory={taskCategory}\r\n                                />\r\n\r\n                                {err?.assignedTo && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.assignedTo}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {assignedTo?.isOverloaded && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {`You cannot assign this task to ${\r\n                                            assignedTo?.name\r\n                                        }  because ${\r\n                                            assignedTo?.gender === \"male\"\r\n                                                ? \"He \"\r\n                                                : \"She \"\r\n                                        } has more than 4 Submittable tasks.`}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            {/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <StatusSelection />\r\n                            </div> */}\r\n\r\n                            {/* Page Type  */}\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <Listbox\r\n                                    value={pageType}\r\n                                    onChange={setPageType}\r\n                                >\r\n                                    <div className=\"form-group position-relative my-3\">\r\n                                        <label htmlFor=\"\">\r\n                                            {\" \"}\r\n                                            Task Type <sup>*</sup>{\" \"}\r\n                                        </label>\r\n                                        <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                            <span className=\"singleline-ellipsis pr-3\">\r\n                                                {pageType ?? \"--\"}\r\n                                            </span>\r\n\r\n                                            <div className=\"__icon\">\r\n                                                <i className=\"fa-solid fa-sort\"></i>\r\n                                            </div>\r\n                                        </Listbox.Button>\r\n                                        <Listbox.Options className=\"sp1-select-options\">\r\n                                            {[\r\n                                                \"New Page Design\",\r\n                                                \"Cloning Existing Design\",\r\n                                                \"Others\",\r\n                                            ]?.map((s, i) => (\r\n                                                <Listbox.Option\r\n                                                    key={i}\r\n                                                    className={({ active }) =>\r\n                                                        `sp1-select-option ${\r\n                                                            active\r\n                                                                ? \"active\"\r\n                                                                : \"\"\r\n                                                        }`\r\n                                                    }\r\n                                                    value={s}\r\n                                                >\r\n                                                    {({ selected }) => (\r\n                                                        <>\r\n                                                            {s}\r\n\r\n                                                            {selected ? (\r\n                                                                <i className=\"fa-solid fa-check ml-2\" />\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </>\r\n                                                    )}\r\n                                                </Listbox.Option>\r\n                                            ))}\r\n                                        </Listbox.Options>\r\n                                    </div>\r\n                                </Listbox>\r\n\r\n                                {required_error?.pageType?.[0] && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {required_error?.pageType?.[0]}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {err?.taskType && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.taskType}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {pageType === \"New Page Design\" ? (\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <Listbox\r\n                                        value={pageTypePriority}\r\n                                        onChange={setPageTypePriority}\r\n                                    >\r\n                                        <div className=\"form-group position-relative my-3\">\r\n                                            <label htmlFor=\"\">\r\n                                                {\" \"}\r\n                                                Page Type <sup>*</sup>{\" \"}\r\n                                            </label>\r\n                                            <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                <span className=\"singleline-ellipsis pr-3\">\r\n                                                    {pageTypePriority ?? \"--\"}\r\n                                                </span>\r\n\r\n                                                <div className=\"__icon\">\r\n                                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                                </div>\r\n                                            </Listbox.Button>\r\n                                            <Listbox.Options className=\"sp1-select-options\">\r\n                                                {[\r\n                                                    \"Primary Page Development\",\r\n                                                    \"Secondary Page Development\",\r\n                                                ]?.map((s, i) => (\r\n                                                    <Listbox.Option\r\n                                                        key={i}\r\n                                                        className={({\r\n                                                            active,\r\n                                                        }) =>\r\n                                                            `sp1-select-option ${\r\n                                                                active\r\n                                                                    ? \"active\"\r\n                                                                    : \"\"\r\n                                                            }`\r\n                                                        }\r\n                                                        value={s}\r\n                                                    >\r\n                                                        {({ selected }) => (\r\n                                                            <>\r\n                                                                {s}\r\n\r\n                                                                {selected ? (\r\n                                                                    <i className=\"fa-solid fa-check ml-2\" />\r\n                                                                ) : (\r\n                                                                    \"\"\r\n                                                                )}\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Listbox.Option>\r\n                                                ))}\r\n                                            </Listbox.Options>\r\n                                        </div>\r\n                                    </Listbox>\r\n\r\n                                    {err?.pageTypePriority && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.pageTypePriority}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ) : null}\r\n\r\n                            {/* Others */}\r\n                            {pageType === \"Others\" ? (\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <Listbox\r\n                                        value={pageTypeOthers}\r\n                                        onChange={setPageTypeOthers}\r\n                                    >\r\n                                        <div className=\"form-group position-relative my-3\">\r\n                                            <label htmlFor=\"\">\r\n                                                {\" \"}\r\n                                                Others <sup>*</sup>{\" \"}\r\n                                            </label>\r\n                                            <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                <span className=\"singleline-ellipsis pr-3\">\r\n                                                    {pageTypeOthers ?? \"--\"}\r\n                                                </span>\r\n\r\n                                                <div className=\"__icon\">\r\n                                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                                </div>\r\n                                            </Listbox.Button>\r\n                                            <Listbox.Options className=\"sp1-select-options\">\r\n                                                {[\r\n                                                    \"Page Design Change\",\r\n                                                    \"Speed Optimization\",\r\n                                                    \"Fixing Issues/Bugs\",\r\n                                                    \"Responsiveness Issue Fixing/Making Something Responsive\",\r\n                                                ]?.map((s, i) => (\r\n                                                    <Listbox.Option\r\n                                                        key={i}\r\n                                                        className={({\r\n                                                            active,\r\n                                                        }) =>\r\n                                                            `sp1-select-option ${\r\n                                                                active\r\n                                                                    ? \"active\"\r\n                                                                    : \"\"\r\n                                                            }`\r\n                                                        }\r\n                                                        value={s}\r\n                                                    >\r\n                                                        {({ selected }) => (\r\n                                                            <>\r\n                                                                {s}\r\n\r\n                                                                {selected ? (\r\n                                                                    <i className=\"fa-solid fa-check ml-2\" />\r\n                                                                ) : (\r\n                                                                    \"\"\r\n                                                                )}\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Listbox.Option>\r\n                                                ))}\r\n                                            </Listbox.Options>\r\n                                        </div>\r\n                                    </Listbox>\r\n\r\n                                    {err?.pageTypeOthers && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.pageTypeOthers}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ) : null}\r\n\r\n                            {pageType ? (\r\n                                <React.Fragment>\r\n                                    {pageType === \"Cloning Existing Design\" ? (\r\n                                        <>\r\n                                            {/* <div className=\"col-12 col-md-6\">\r\n                                                    <Input\r\n                                                        id=\"page_type_name\"\r\n                                                        label=\"Page type name\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter page type name...\"\r\n                                                        name=\"pageTypeName\"\r\n                                                        required={true}\r\n                                                        value={pageTypeName}\r\n\r\n                                                        onChange={(e) => handleChange(e, setPageTypeName)}\r\n                                                    />\r\n                                                </div> */}\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Listbox\r\n                                                    value={pageTypeName}\r\n                                                    onChange={setPageTypeName}\r\n                                                >\r\n                                                    <div className=\"form-group position-relative my-3\">\r\n                                                        <label htmlFor=\"\">\r\n                                                            {\" \"}\r\n                                                            Page Type Name{\" \"}\r\n                                                            <sup>*</sup>{\" \"}\r\n                                                        </label>\r\n                                                        <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                            <span className=\"singleline-ellipsis pr-3\">\r\n                                                                {pageTypeName ??\r\n                                                                    \"--\"}\r\n                                                            </span>\r\n\r\n                                                            <div className=\"__icon\">\r\n                                                                <i className=\"fa-solid fa-sort\"></i>\r\n                                                            </div>\r\n                                                        </Listbox.Button>\r\n                                                        <Listbox.Options className=\"sp1-select-options\">\r\n                                                            {[\r\n                                                                \"Primary Page Development\",\r\n                                                                \"Secondary Page Development\",\r\n                                                            ]?.map((s, i) => (\r\n                                                                <Listbox.Option\r\n                                                                    key={i}\r\n                                                                    className={({\r\n                                                                        active,\r\n                                                                    }) =>\r\n                                                                        `sp1-select-option ${\r\n                                                                            active\r\n                                                                                ? \"active\"\r\n                                                                                : \"\"\r\n                                                                        }`\r\n                                                                    }\r\n                                                                    value={s}\r\n                                                                >\r\n                                                                    {({\r\n                                                                        selected,\r\n                                                                    }) => (\r\n                                                                        <>\r\n                                                                            {s}\r\n\r\n                                                                            {selected ? (\r\n                                                                                <i className=\"fa-solid fa-check ml-2\" />\r\n                                                                            ) : (\r\n                                                                                \"\"\r\n                                                                            )}\r\n                                                                        </>\r\n                                                                    )}\r\n                                                                </Listbox.Option>\r\n                                                            ))}\r\n                                                        </Listbox.Options>\r\n                                                    </div>\r\n                                                </Listbox>\r\n                                                {err?.pageTypeName ||\r\n                                                    required_error\r\n                                                        ?.page_type?.[0]}\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"page_name\"\r\n                                                    label=\"Page Name\"\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter page name\"\r\n                                                    name=\"page name\"\r\n                                                    required={true}\r\n                                                    value={pageName}\r\n                                                    error={err?.pageName}\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setPageName\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"page_url\"\r\n                                                    label=\"Page URL\"\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter page url\"\r\n                                                    name=\"page url\"\r\n                                                    required={true}\r\n                                                    value={pageURL}\r\n                                                    error={\r\n                                                        err?.pageUrl ||\r\n                                                        required_error\r\n                                                            ?.page_url?.[0]\r\n                                                    }\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setPageURL\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n\r\n                                    {pageType === \"Cloning Existing Design\" ? (\r\n                                        <>\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"number_of_pages\"\r\n                                                    label=\"Number of Pages\"\r\n                                                    type=\"number\"\r\n                                                    placeholder=\"--\"\r\n                                                    name=\"number_of_pages\"\r\n                                                    required={true}\r\n                                                    value={numberOfPage}\r\n                                                    error={err?.numberOfPage}\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setNumberOfPage\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"exiting_project_url\"\r\n                                                    label=\"Existing Design Link\"\r\n                                                    type=\"Link\"\r\n                                                    placeholder=\"--\"\r\n                                                    name=\"exiting_project_url\"\r\n                                                    required={true}\r\n                                                    value={existingDesignLink}\r\n                                                    error={\r\n                                                        err?.existingDesignLink\r\n                                                    }\r\n                                                    onChange={(e) =>\r\n                                                        handleChange(\r\n                                                            e,\r\n                                                            setExistingDesignLink\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                        </>\r\n                                    ) : null}\r\n                                </React.Fragment>\r\n                            ) : null}\r\n                            {/*  */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <PrioritySelection\r\n                                    selected={priority}\r\n                                    setSelected={setPriority}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Set Estimate Time */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        htmlFor=\"\"\r\n                                        className=\"f-14 text-dark-gray\"\r\n                                    >\r\n                                        Set Estimate Time{\" \"}\r\n                                        <sup className=\"f-14\"> * </sup>\r\n                                    </label>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control height-35 f-14 mr-2\"\r\n                                            value={estimateTimeHour}\r\n                                            onWheel={e => e.currentTarget.blur()}\r\n                                            onChange={(e) =>handleChange( e,setEstimateTimeHour)}\r\n                                        />{\" \"}\r\n                                        hrs\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                            value={estimateTimeMin}\r\n                                            onWheel={e => e.currentTarget.blur()}\r\n                                            onChange={(e) =>\r\n                                                handleChange(\r\n                                                    e,\r\n                                                    setEstimateTimeMin\r\n                                                )\r\n                                            }\r\n                                        />{\" \"}\r\n                                        min\r\n                                    </div>\r\n\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {estimateError(required_error)}\r\n                                    </div>\r\n\r\n                                    <div style={{ color: \"#F73B12\" }}>\r\n                                    Estimation time can't exceed {estimation?.hours_left} hours {estimation?.minutes_left} minutes\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\"> Description </label>\r\n                                    <div\r\n                                        className=\"sp1_st_write_comment_editor\"\r\n                                        style={{ minHeight: \"100px\" }}\r\n                                    >\r\n                                        <CKEditorComponent\r\n                                            onChange={handleEditorChange}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {required_error?.description?.[0] && (\r\n                                        <span className=\"text-danger\">\r\n                                            <small>\r\n                                                {\" \"}\r\n                                                {\r\n                                                    required_error\r\n                                                        ?.description?.[0]\r\n                                                }{\" \"}\r\n                                            </small>\r\n                                        </span>\r\n                                    )}\r\n                                    {err?.description && (\r\n                                        <span className=\"text-danger\">\r\n                                            <small> {err?.description} </small>\r\n                                        </span>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <UploadFilesInLine\r\n                                    files={files}\r\n                                    setFiles={setFiles}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* {err?.violationWord ? <div className=\"alert alert-danger mt-2 w-100 text-center\" dangerouslySetInnerHTML={{__html: err?.violationWord}} />: null} */}\r\n\r\n                            <div className=\"col-12 mt-3 pb-3\">\r\n                                <div className=\"d-flex align-items-center justify-content-end\">\r\n                                    <Button\r\n                                        variant=\"secondary\"\r\n                                        className=\"mr-2\"\r\n                                        onClick={close}\r\n                                    >\r\n                                        Cancel\r\n                                    </Button>\r\n\r\n                                    {!isLoading && !checking ? (\r\n                                        <Button onClick={handleSubmit}>\r\n                                            <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                            Create\r\n                                        </Button>\r\n                                    ) : (\r\n                                        <Button className=\"cursor-processing\">\r\n                                            <div\r\n                                                className=\"spinner-border text-white\"\r\n                                                role=\"status\"\r\n                                                style={{\r\n                                                    width: \"18px\",\r\n                                                    height: \"18px\",\r\n                                                }}\r\n                                            ></div>\r\n                                            Processing...\r\n                                        </Button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SubTaskForm;\r\n","import React, { useState } from 'react'\r\nimport Button from '../../components/Button'\r\nimport Input from '../../components/form/Input'\r\nimport TaskCategorySelectionBox from './TaskCategorySelectionBox'\r\nimport AssginedToSelection from './AssignedToSelection'\r\nimport PrioritySelection from './PrioritySelection'\r\nimport DatePicker from '../comments/DatePicker'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport _ from 'lodash'\r\nimport { useDeleteUplaodedFileMutation, useEditSubtaskMutation, useGetTaskDetailsQuery, useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeSubTasks } from '../../../services/features/subTaskSlice'\r\nimport { CompareDate } from '../../../utils/dateController'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n\r\nconst  SubtTaskEditForm= ({close, editId}) => {\r\n    const { task, subTask } = useSelector(s => s.subTask);\r\n    const dispatch = useDispatch();\r\n\r\n//   form data\r\n  const [title, setTitle] = useState('');\r\n  const [milestone, setMilestone] = useState('');\r\n  const [parentTask, setParentTask] = useState('');\r\n  const [startDate, setStateDate] = useState(new Date());\r\n  const [dueDate, setDueDate] = useState(new Date());\r\n  const [project, setProject] = useState(\"\");\r\n  const [taskCategory, setTaskCategory] = useState('')\r\n  const [assignedTo, setAssignedTo] = useState('');\r\n  const [taskObserver, setTaskObserver] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('To Do');\r\n  const [priority, setPriority] = useState('Medium');\r\n  const [estimateTimeHour, setEstimateTimeHour ] = useState('');\r\n  const [estimateTimeMin, setEstimateTimeMin ] = useState('');\r\n  const [attachedFiles, setAttachedFiles] = useState([]);\r\n  const [files, setFiles] = React.useState([]);\r\n\r\n    const params = useParams();\r\n\r\nconst [\r\n    editSubtask,\r\n    { isLoading, error }\r\n] = useEditSubtaskMutation();\r\n\r\nconst [\r\n    getTaskDetails,\r\n    { data: edit, isFetching: editDataIsFetching}\r\n] = useLazyGetTaskDetailsQuery();\r\n\r\n\r\n// find edited subtask\r\nconst editSubTask = subTask.find(d => d.id === editId);\r\n\r\nconst { data: estimation, isFetching } = useGetTaskDetailsQuery(`/${params?.taskId}/json?mode=estimation_time`);\r\n\r\n\r\nconst required_error = error?.status === 422 ? error?.data: null;\r\n\r\n\r\n// handle change\r\nReact.useEffect(() => {\r\n    const formatedDate = (d) => {\r\n        let day = dayjs.dayjs(d).toDate();\r\n        return day;\r\n    }\r\n    getTaskDetails(`/${editId}/json?mode=sub_task_edit`).unwrap().then(res => {\r\n        if(res){\r\n            const assigneeTo = res?.users?.[0];\r\n\r\n            setTitle(res.heading);\r\n            setMilestone(res.milestone_title);\r\n            setParentTask(task?.heading);\r\n            setStateDate(formatedDate(res.start_date));\r\n            setDueDate(formatedDate(res.due_date));\r\n            setProject(res.project_name);\r\n            setTaskCategory(res.task_category);\r\n            setAssignedTo(assigneeTo ? {id: assigneeTo?.id, name: assigneeTo?.name}: '');\r\n            setDescription(res.description);\r\n            setPriority(_.startCase(res.priority));\r\n            setEstimateTimeHour(res.estimate_hours);\r\n            setEstimateTimeMin(res.estimate_minutes);\r\n            setAttachedFiles(res.files);\r\n\r\n\r\n\r\n        }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    } )\r\n}, [task, editId])\r\n\r\n\r\n\r\n// handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n// handle submission\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  const _startDate = dayjs.dayjs(startDate).format('DD-MM-YYYY');\r\n  const _dueDate = dayjs.dayjs(dueDate).format('DD-MM-YYYY');\r\n\r\n  const fd = new FormData();\r\n    fd.append('milestone_id', task?.milestone_id);\r\n    fd.append('task_id', task?.id);\r\n    fd.append('title', title);\r\n    fd.append('start_date', _startDate);\r\n    fd.append('due_date', _dueDate);\r\n    fd.append('project_id', task?.project_id);\r\n    fd.append('task_category_id', taskCategory?.id);\r\n    fd.append('user_id', assignedTo?.id);\r\n    fd.append('description', description);\r\n    fd.append('board_column_id', task?.board_column_id);\r\n    fd.append('priority', _.lowerCase(priority));\r\n    fd.append('estimate_hours', estimateTimeHour);\r\n    fd.append('estimate_minutes', estimateTimeMin);\r\n    fd.append('image_url', null);\r\n    fd.append('subTaskID', editSubTask?.subtask_id);\r\n    fd.append('addedFiles', null);\r\n    fd.append('_method', 'PUT');\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    editSubtask({data: fd, id: editId}).unwrap().then(res => {\r\n            if(res?.status === 'success'){\r\n\r\n                 let _subtask = [...subTask];\r\n                 _subtask = _subtask?.map(s => {\r\n                    if(Number(s?.id) === Number(res?.sub_task?.id)){\r\n                        return res?.sub_task\r\n                    }else return s;\r\n                 })\r\n\r\n                dispatch(storeSubTasks(_subtask));\r\n\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: res?.message,\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                })\r\n\r\n                close();\r\n            }\r\n    }).catch((err) => {\r\n        if(err?.status === 422){\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'error',\r\n                title: \"Please fill out all required fields\",\r\n                showConfirmButton: true,\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n// handle uplaoded file delete request\r\nconst [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\nconst handleFileDelete = (e, file) => {\r\n    // delete\r\n    deleteUplaodedFile(file?.id).unwrap();\r\n\r\n    // delete form ui\r\n    let previousFile = [...attachedFiles];\r\n    let index = previousFile?.indexOf(file);\r\n    previousFile.splice(index,1);\r\n    setAttachedFiles(previousFile);\r\n}\r\n\r\n\r\n// handle loading state\r\nReact.useEffect(() => {\r\n    if (isLoading || editDataIsFetching) {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'progress';\r\n      } else {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'default';\r\n      }\r\n}, [isLoading, editDataIsFetching])\r\n\r\n\r\n\r\nconst handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setDescription(data);\r\n}\r\n\r\nconst estimateError= (err) =>{\r\n    let errText = '';\r\n    let hoursErr = err?.estimate_hours?.[0];\r\n    let minErr = err?.estimate_minutes?.[0];\r\n    if(hoursErr) errText += hoursErr;\r\n    if(minErr) errText += minErr;\r\n    return errText;\r\n}\r\n\r\n  return (\r\n    <>\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'>\r\n                 <h6>\r\n                        Edit Sub Task\r\n                        {editDataIsFetching && <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent'\r\n                            }}\r\n                        />}\r\n                </h6>\r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching &&\r\n                    <div className='w-100' style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        zIndex: 1\r\n                    }}/>\r\n                }\r\n                <div className='sp1-subtask-form --form row'>\r\n                    <div className=\"col-6\">\r\n                        <Input\r\n                            id='title'\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder='Enter a task title'\r\n                            name='title'\r\n                            required={true}\r\n                            value={title}\r\n                            error= {required_error?.title?.[0]}\r\n                            onChange={e => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Milestone\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={milestone}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Parent Task\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={parentTask}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">Start Date <sup className='f-14'>*</sup></label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs.dayjs().format('DD-MM-YYYY')}`}\r\n                                    minDate={dayjs.dayjs(task?.start_date).toDate()}\r\n                                    maxDate={dueDate || dayjs.dayjs(task?.due_date).toDate()}\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                required_error?.start_date?.[0] &&\r\n                               <div style={{color: 'red'}}>{required_error?.start_date?.[0]}</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-6'>\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">Due Date <sup className='f-14'>*</sup></label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs.dayjs().format('DD-MM-YYYY')}`}\r\n                                    minDate={startDate || dayjs.dayjs(task?.start_date).toDate()}\r\n                                    maxDate={dayjs.dayjs(task?.due_date).toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                required_error?.due_date?.[0] &&\r\n                               <div style={{color: 'red'}}>{required_error?.due_date?.[0]}</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <TaskCategorySelectionBox selected={taskCategory} onSelect={setTaskCategory}  />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <AssginedToSelection selected={assignedTo} onSelect={setAssignedTo} />\r\n                    </div>\r\n{/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-6\">\r\n                        <PrioritySelection selected={priority} setSelected={setPriority} />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className='f-14 text-dark-gray'>Set Estimate Time <sup className='f-14'> * </sup></label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type='number'\r\n                                    onWheel={e => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) => handleChange(e, setEstimateTimeHour)}\r\n                                /> hrs\r\n                                <input\r\n                                    type='number'\r\n                                    onWheel={e => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={e => handleChange(e, setEstimateTimeMin)}\r\n                                /> min\r\n                            </div>\r\n\r\n                            <div style={{color: 'red'}}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{color: 'red'}}>\r\n                            Estimation time can't exceed {estimation?.hours_left} hours {estimation?.minutes_left} minutes\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div className='sp1_st_write_comment_editor' style={{minHeight: '100px'}}>\r\n                                <CKEditorComponent data={description} onChange={handleEditorChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12'>\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3\">\r\n\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant='secondary'\r\n                                className='mr-2'\r\n                                onClick={close}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            {!isLoading ? (\r\n                                <Button onClick={handleSubmit}>\r\n                                    <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                    Update\r\n                                </Button>\r\n                            ) : (\r\n                            <Button className='cursor-processing'>\r\n                                <div\r\n                                    className=\"spinner-border text-white\"\r\n                                    role=\"status\"\r\n                                    style={{\r\n                                        width: '18px',\r\n                                        height: '18px',\r\n                                    }}\r\n                                >\r\n                                </div>\r\n                                Processing...\r\n                            </Button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SubtTaskEditForm\r\n","import React from \"react\";\r\nimport SubTask from \"./SubTask\";\r\nimport SubTaskForm from \"./SubTaskForm\";\r\nimport Button from \"../../components/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    useGetTaskDetailsQuery,\r\n    useLazyGetInProgressTaskStatusQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { storeSubTasks } from \"../../../services/features/subTaskSlice\";\r\nimport SubtTaskEditForm from \"./SubTaskEditForm\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport Modal from \"../../components/Modal\";\r\nimport _ from \"lodash\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { subTaskCreationPermision } from \"../../permissions\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst SubTaskSection = ({ status }) => {\r\n    const { task, subTask } = useSelector((s) => s.subTask);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [edit, setEdit] = React.useState(null);\r\n    const [formMode, setFormMode] = React.useState(\"add\");\r\n    const [isTaskModalOpen, setIsTaskModalOpen] = React.useState(false);\r\n    const [subtaskModalToggleRef, setSubtaskModalToggleRef] =\r\n        React.useState(null);\r\n    const { width } = useWindowSize();\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n    // check in progress task history\r\n    const [getInProgressTaskStatus, { isFetching: inProgressTaskStatus }] =\r\n        useLazyGetInProgressTaskStatusQuery();\r\n\r\n    const toggleAddButton = async () => {\r\n        // try{\r\n        //     const res = await getInProgressTaskStatus(`/${auth?.getId()}`).unwrap();\r\n        //     if(res.status === 400){\r\n        //         toast.error(res?.message, {theme: 'colored'})\r\n        //     }else{\r\n        //         setIsTaskModalOpen(!isTaskModalOpen);\r\n        //     }\r\n\r\n        // }catch(err){\r\n        //     console.log(err)\r\n        // }\r\n\r\n        setIsTaskModalOpen(!isTaskModalOpen);\r\n    };\r\n\r\n    const closeAddModal = () => {\r\n        setIsTaskModalOpen(false);\r\n        setFormMode(\"add\");\r\n        navigate(`/account/tasks/${task?.id}`);\r\n    };\r\n    const toggleEditButton = (e) => {\r\n        setFormMode(\"edit\");\r\n        setIsTaskModalOpen(!isTaskModalOpen);\r\n    };\r\n\r\n    // edit modal form control\r\n    const toggleEditForm = (e, id) => {\r\n        e.preventDefault();\r\n        setEdit(id);\r\n        setIsTaskModalOpen(true);\r\n    };\r\n\r\n    const closeEditForm = () => {\r\n        setEdit(null);\r\n        setIsTaskModalOpen(false);\r\n    };\r\n\r\n    // handle create new subtask\r\n    // const handleCreateSubTask = () => {\r\n    //     // if parent task has not already any subtask\r\n    //     // show the Working Environment form\r\n    //     // else create from\r\n    // };\r\n\r\n    // edit modal form control end\r\n    // const {\r\n    //   data,\r\n    //   isFetching\r\n    // } = useGetTaskDetailsQuery(`/${task?.id}/json?mode=sub_task`, {\r\n    //   skip: subTask?.length\r\n    // });\r\n\r\n    // fetch all task\r\n    const [getTaskDetails, { isFetching }] = useLazyGetTaskDetailsQuery(\"\", {\r\n        skip: subTask?.length,\r\n    });\r\n\r\n    // useEffect(()=>{\r\n    //     console.log({task,subTask,isFetching});\r\n    //   },[task,subTask,isFetching])\r\n\r\n    // if task notes fetch completed store data into redux store\r\n    React.useEffect(() => {\r\n        if (task && task.id) {\r\n            getTaskDetails(`/${task?.id}/json?mode=sub_task`)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    if (res) {\r\n                        dispatch(storeSubTasks(res));\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [task]);\r\n\r\n    // React.useEffect(() => {\r\n    //   if(!isFetching && data){\r\n    //     dispatch(storeSubTasks(data));\r\n    //   }\r\n    // },[data])\r\n\r\n    const Task = new SingleTask(task);\r\n\r\n    return (\r\n        <div\r\n            className=\"sp1_task_right_card mb-3\"\r\n            ref={setSubtaskModalToggleRef}\r\n            style={{ zIndex: isTaskModalOpen ? \"99\" : \"\" }}\r\n        >\r\n            {width > 1200 ? (\r\n                <React.Fragment>\r\n                    {/* modal */}\r\n                    <CustomModal\r\n                        toggleRef={subtaskModalToggleRef}\r\n                        isOpen={isTaskModalOpen}\r\n                        close={closeAddModal}\r\n                        formMode={formMode}\r\n                    >\r\n                        {!edit ? (\r\n                            <SubTaskForm\r\n                                close={closeAddModal}\r\n                                isFirstSubtask={!Task.workEnvData}\r\n                            />\r\n                        ) : (\r\n                            <SubtTaskEditForm\r\n                                close={closeEditForm}\r\n                                editId={edit}\r\n                            />\r\n                        )}\r\n                    </CustomModal>\r\n                </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                    {/* modal */}\r\n                    <Modal isOpen={isTaskModalOpen}>\r\n                        {!edit ? (\r\n                            <SubTaskForm\r\n                                close={closeAddModal}\r\n                                isFirstSubtask={!Task.workEnvData}\r\n                            />\r\n                        ) : (\r\n                            <SubtTaskEditForm\r\n                                close={closeEditForm}\r\n                                editId={edit}\r\n                            />\r\n                        )}\r\n                    </Modal>\r\n                </React.Fragment>\r\n            )}\r\n\r\n            {/* left dropdown */}\r\n\r\n            {isTaskModalOpen && (\r\n                <button\r\n                    aria-label=\"openCommentModalButton\"\r\n                    className=\"sp1_task_right_dl_toggle\"\r\n                    onClick={toggleAddButton}\r\n                    style={{ zIndex: isTaskModalOpen ? \"110\" : \"\" }}\r\n                >\r\n                    <i\r\n                        className={`fa-solid fa-circle-chevron-${\r\n                            isTaskModalOpen ? \"right\" : \"left\"\r\n                        }`}\r\n                        style={{ color: \"#276fec\" }}\r\n                    />\r\n                </button>\r\n            )}\r\n            {/* left dropdown */}\r\n\r\n            <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n                <div className=\"f-16\">\r\n                    <span>Sub Task</span>\r\n                    {isFetching && (\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        />\r\n                    )}\r\n                </div>\r\n\r\n                {subTaskCreationPermision({ task: Task, auth, status }) &&\r\n                    !_.includes([15, 16, 17], Number(auth.roleId)) && (\r\n                        <Button\r\n                            variant=\"tertiary\"\r\n                            className=\"sp1_tark_add_item\"\r\n                            aria-label=\"addButton\"\r\n                            onClick={toggleAddButton}\r\n                        >\r\n                            {isTaskModalOpen ? (\r\n                                <React.Fragment>\r\n                                    <i\r\n                                        className=\"fa-solid fa-xmark\"\r\n                                        style={{ fontSize: \"12px\" }}\r\n                                    />{\" \"}\r\n                                    Close\r\n                                </React.Fragment>\r\n                            ) : (\r\n                                <React.Fragment>\r\n                                    {inProgressTaskStatus ? (\r\n                                        <Loader title=\"Loading...\" />\r\n                                    ) : (\r\n                                        <>\r\n                                            <i\r\n                                                className=\"fa-solid fa-plus\"\r\n                                                style={{ fontSize: \"12px\" }}\r\n                                            />{\" \"}\r\n                                            Sub Task\r\n                                        </>\r\n                                    )}\r\n                                </React.Fragment>\r\n                            )}\r\n                        </Button>\r\n                    )}\r\n            </div>\r\n\r\n            <div className=\"sp1_task_right_card--body\">\r\n                {!isFetching ? (\r\n                    _.size(subTask) !== 0 ? (\r\n                        subTask?.map((sub) => (\r\n                            <SubTask\r\n                                key={sub.id}\r\n                                subTask={sub}\r\n                                task={task}\r\n                                status={status}\r\n                                toggleEditForm={toggleEditForm}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{\r\n                                color: \"#B4BCC4\",\r\n                                fontSize: \"15px\",\r\n                                textAlign: \"center\",\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                            }}\r\n                        >\r\n                            Sub Task is Not Available\r\n                        </div>\r\n                    )\r\n                ) : (\r\n                    <div\r\n                        className=\"d-flex align-items-center justify-content-center\"\r\n                        style={{\r\n                            color: \"#5A6169\",\r\n                            fontSize: \"15px\",\r\n                            textAlign: \"center\",\r\n                            height: \"100%\",\r\n                            width: \"100%\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                                marginRight: \"10px\",\r\n                            }}\r\n                        />\r\n                        Loading...\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubTaskSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport Card from \"../../../global/Card\";\r\nimport styles from \"./task-edit-form.module.css\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport Button from '../../../global/Button'\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\nimport AssignedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\n\r\nimport {\r\n    useDeleteUplaodedFileMutation,\r\n    useGetTaskDetailsQuery,\r\n    useEditSubtaskMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { storeSubTasks } from \"../../../services/features/subTaskSlice\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useUpdateTaskMutation } from \"../../../services/api/tasksApiSlice\";\r\nimport { useGetMilestoneDetailsQuery, useLazyGetMilestoneDetailsQuery } from \"../../../services/api/projectApiSlice\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport Loader from \"../../../global/Loader\";\r\nimport { convertTime } from \"../../../utils/converTime\";\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n// Edit form Provider\r\nconst EditFormProvider = ({ task }) => {\r\n    const [searchParams] = useSearchParams(); // get search params\r\n    const isVisible = searchParams.get(\"modal\") === \"edit\"; // check has modal\r\n    const taskId = searchParams.get(\"task\"); // get task id\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const close = () => navigate(location.pathname, { replace: true });\r\n\r\n\r\n    const [updateTask, { isLoading, error }] = useUpdateTaskMutation();\r\n    // handle submission\r\n    const handleSubmission = (formData) => {\r\n        updateTask(formData).unwrap().then(res => {\r\n            if (res?.status === 200) {\r\n                toast.success(\"Task Updated successfully!\");\r\n                close();\r\n            }\r\n        }).catch((err) => {\r\n            if (err?.status === 422) {\r\n                toast.warn(\"Please fill out all required fields\")\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={isVisible}>\r\n            <Card className={styles.form_card}>\r\n                <Card.Head\r\n                    onClose={close}\r\n                    className={styles.form_card_head}\r\n                >\r\n                    <h6> Edit Task # {taskId} </h6>\r\n                </Card.Head>\r\n\r\n                <Card.Body className={styles.form_card_body}>\r\n                    <div className=\"\">\r\n                        {task && (\r\n                            <TaskEditForm\r\n                                task={task}\r\n                                onSubmit={handleSubmission}\r\n                                isLoading={isLoading}\r\n                                onClose={close}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditFormProvider;\r\n\r\nconst TaskEditForm = ({ task, onSubmit, isLoading, onClose }) => {\r\n    const editDataIsFetching = !task;\r\n    //form data\r\n    const [title, setTitle] = useState(task.title);\r\n    const [milestone, setMilestone] = useState({ id: task.milestoneID, milestone_title: task.milestoneTitle });\r\n    const [parentTask, setParentTask] = useState(task.parentTaskTitle);\r\n    const [startDate, setStateDate] = useState(new Date(task.startDate));\r\n    const [dueDate, setDueDate] = useState(new Date(task.dueDate));\r\n    const [project, setProject] = useState(task.projectName);\r\n    const [taskCategory, setTaskCategory] = useState({\r\n        id: task.category.id,\r\n        category_name: task.category.name,\r\n    });\r\n    const [assignedTo, setAssignedTo] = useState({\r\n        id: task.assigneeTo.id,\r\n        name: task.assigneeTo.name,\r\n    });\r\n    const [description, setDescription] = useState(task.description);\r\n    const [priority, setPriority] = useState(task.priority);\r\n    const [estimateTimeHour, setEstimateTimeHour] = useState(\r\n        task.estimateHours\r\n    );\r\n    const [estimateTimeMin, setEstimateTimeMin] = useState(\r\n        task.estimateMinutes\r\n    );\r\n    const [attachedFiles, setAttachedFiles] = useState([]);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { data: estimation, isFetching } = useGetTaskDetailsQuery(\r\n        `/${task?.id}/json?mode=estimation_time`, { skip: !task?.id }\r\n    );\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n        let count = 0;\r\n        const err = new Object();\r\n\r\n        const errorMessages = {\r\n            requiredField: 'This field is required.',\r\n            startDate: 'Please select a start date.',\r\n            dueDate: 'Please select a due date.',\r\n            taskCategory: 'Please select a task category.',\r\n            assignedTo: 'Please select a user.',\r\n            overloadedUser: (name, gender) =>\r\n                `You cannot assign this task to ${name} because ${gender === 'male' ? 'he ' : 'she '\r\n                } has more than 10 submittable tasks.`,\r\n            description: 'This field is required.',\r\n        };\r\n\r\n        const showError = (field) => {\r\n            err[field] = errorMessages[field];\r\n            count++;\r\n        }\r\n\r\n\r\n        if (!title) showError('title');\r\n        if (!startDate) showError('startDate');\r\n        if (!dueDate) showError('dueDate');\r\n        if (!taskCategory) showError('taskCategory');\r\n        if (!assignedTo) showError('assignedTo');\r\n\r\n        if (assignedTo && assignedTo?.isOverloaded) {\r\n            err.assignedTo = overloadedUser(assignedTo.name, genderPronoun);\r\n            count++;\r\n        }\r\n\r\n        if (!description) showError('description');\r\n\r\n        setError(error);\r\n        return count === 0;\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = () => {\r\n        //form data\r\n        const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n        const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n        const fd = new FormData();\r\n        fd.append(\"milestone_id\", task?.milestoneID);\r\n        fd.append(\"task_id\", task?.id);\r\n        fd.append(\"heading\", title);\r\n        fd.append(\"start_date\", _startDate);\r\n        fd.append(\"due_date\", _dueDate);\r\n        fd.append(\"project_id\", task?.projectId);\r\n        fd.append(\"category_id\", taskCategory?.id);\r\n        fd.append(\"user_id\", assignedTo?.id);\r\n        fd.append(\"description\", description);\r\n        fd.append(\"board_column_id\", task?.boardColumn.id);\r\n        fd.append(\"priority\", _.lowerCase(priority));\r\n        fd.append(\"estimate_hours\", estimateTimeHour);\r\n        fd.append(\"estimate_minutes\", estimateTimeMin);\r\n        fd.append(\"deliverable_id\", milestone?.deliverable_type ?? '');\r\n        fd.append(\"image_url\", null);\r\n        fd.append(\"addedFiles\", null);\r\n        fd.append(\"_method\", \"POST\");\r\n        fd.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            fd.append(\"file[]\", file);\r\n        });\r\n\r\n        if (isValid()) {\r\n            onSubmit(fd);\r\n        } else {\r\n            toast.warn('Please fill out all required fields!');\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const { data: projects, isFetching: isFetchingMilestone } = useGetMilestoneDetailsQuery(task?.projectId)\r\n\r\n\r\n\r\n    // handle uploaded file delete request\r\n    const [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\n    const handleFileDelete = (e, file) => {\r\n        // delete\r\n        deleteUplaodedFile(file?.id).unwrap();\r\n\r\n        // delete form ui\r\n        let previousFile = [...attachedFiles];\r\n        let index = previousFile?.indexOf(file);\r\n        previousFile.splice(index, 1);\r\n        setAttachedFiles(previousFile);\r\n    };\r\n\r\n    // handle loading state\r\n    React.useEffect(() => {\r\n        if (isLoading || editDataIsFetching) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading, editDataIsFetching]);\r\n\r\n    //   editor\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        let errText = \"\";\r\n        let hoursErr = err?.estimate_hours?.[0];\r\n        let minErr = err?.estimate_minutes?.[0];\r\n        if (hoursErr) errText += hoursErr;\r\n        if (minErr) errText += minErr;\r\n        return errText;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching && (\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            zIndex: 1,\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className=\"sp1-subtask-form --form row\">\r\n                    <div className=\"col-6\">\r\n                        <Input\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter a task title\"\r\n                            name=\"title\"\r\n                            required={true}\r\n                            value={title}\r\n                            error={required_error?.title?.[0]}\r\n                            onChange={(e) => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* Project Milestone Selection Menu */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Listbox value={milestone} onChange={setMilestone}>\r\n                            <div className=\"form-group position-relative my-3\">\r\n                                <label\r\n                                    className={`f-14 text-dark-gray mb-1`}\r\n                                    data-label=\"true\"\r\n                                >\r\n                                    Milestone\r\n                                </label>\r\n                                <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                    <span className=\"singleline-ellipsis\" >{milestone?.milestone_title ?? '--'}</span>\r\n                                    <div className='__icon'>\r\n                                        <i className=\"fa-solid fa-sort\"></i>\r\n                                    </div>\r\n                                </Listbox.Button>\r\n                                <Listbox.Options className=\"sp1-select-options\">\r\n                                    {isFetchingMilestone && <span className=\"w-full d-block py-2 px-3\">Loading...</span>}\r\n\r\n                                    {_.map(projects?.milestones, (milestone) => (\r\n                                        <Listbox.Option\r\n                                            key={milestone.id}\r\n                                            className={({ active }) => `sp1-select-option ${styles.list_border}${active ? 'active' : ''}`}\r\n                                            value={milestone}\r\n                                        >\r\n                                            {milestone?.milestone_title}\r\n                                        </Listbox.Option>\r\n                                    ))}\r\n                                </Listbox.Options>\r\n\r\n                                {error?.milestone && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {error?.milestone}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Listbox>\r\n                    </div>\r\n\r\n                    {/* Project Deliverable */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project Deliverable\r\n                            </label>\r\n                            <div className=\"sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                <span className=\"singleline-ellipsis\">{isFetchingMilestone ? 'Loading...' : _.find(projects?.milestones, d => d.id === milestone.id)?.deliverable_type}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/*task.isSubtask && (\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group my-3\">\r\n                                <label\r\n                                    className={`f-14 text-dark-gray mb-1`}\r\n                                    data-label=\"true\"\r\n                                >\r\n                                    Parent Task\r\n                                </label>\r\n                                <input\r\n                                    className={`form-control height-35 f-14`}\r\n                                    readOnly\r\n                                    defaultValue={parentTask}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )} */}\r\n\r\n\r\n\r\n                    <div className=\"col-6\">\r\n\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Start Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={dayjs\r\n                                        .dayjs(task?.start_date)\r\n                                        .toDate()}\r\n                                    maxDate={\r\n                                        dueDate ||\r\n                                        dayjs.dayjs(task?.due_date).toDate()\r\n                                    }\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.start_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.start_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Due Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={\r\n                                        startDate ||\r\n                                        dayjs.dayjs(task?.start_date).toDate()\r\n                                    }\r\n                                    maxDate={dayjs\r\n                                        .dayjs(task?.due_date)\r\n                                        .toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.due_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.due_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <TaskCategorySelectionBox\r\n                            selected={taskCategory}\r\n                            onSelect={setTaskCategory}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <AssignedToSelection\r\n                            selected={assignedTo}\r\n                            onSelect={setAssignedTo}\r\n                        />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-6\">\r\n                        <PrioritySelection\r\n                            selected={priority}\r\n                            setSelected={setPriority}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className=\"f-14 text-dark-gray\">\r\n                                Set Estimate Time{\" \"}\r\n                                <sup className=\"f-14\"> * </sup>\r\n                            </label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeHour)\r\n                                    }\r\n                                />{\" \"}\r\n                                hrs\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeMin)\r\n                                    }\r\n                                />{\" \"}\r\n                                min\r\n                            </div>\r\n\r\n                            <div style={{ color: \"red\" }}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{ color: \"red\" }}>\r\n                                {/* {console.log({a: projects?.minutes_left})} */}\r\n                                Estimation time can't exceed{\" \"}\r\n                                {convertTime(Number(projects?.minutes_left) > 0 ? Number(projects?.minutes_left) : 0)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div\r\n                                className=\"sp1_st_write_comment_editor\"\r\n                                style={{ minHeight: \"100px\" }}\r\n                            >\r\n                                <CKEditorComponent\r\n                                    data={description}\r\n                                    onChange={handleEditorChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3 mb-5\">\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                className=\"mr-2\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n\r\n                            <Button\r\n                                onClick={handleSubmit}\r\n                                isLoading={isLoading}\r\n                            >\r\n                                <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Button from \"../../components/Button\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport Modal from \"../../components/Modal\";\r\n\r\nconst SubmitionView = ({ isOpen, close, toggle, data, isLoading }) => {\r\n    const links = _.compact(_.split(data?.links, \",\"));\r\n    const attaches = _.compact(_.split(data?.attaches, \",\"));\r\n    const { width: deviceWidth } = useWindowSize();\r\n\r\n    const content = () => {\r\n        return (\r\n            <div className=\"sp1-subtask-form --modal-panel --modal-submitted\">\r\n                <div className=\"sp1-subtask-form --modal-panel-header\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <h6>Submitted Task </h6>\r\n                        {isLoading && (\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className=\"_close-modal\"\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body --modal-submitted-body\">\r\n                    <div\r\n                        className=\"mt-3 d-flex flex-column\"\r\n                        style={{ gap: \"10px\" }}\r\n                    >\r\n                        <div>\r\n                            <span\r\n                                className=\"fs-14 font-weight-bold d-block mb-3\"\r\n                                style={{ color: \"#767581\" }}\r\n                            >\r\n                                Submitted By\r\n                            </span>\r\n\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div>\r\n                                    {data?.image ? (\r\n                                        <img\r\n                                            src={`/user-uploads/avatar/${data?.image}`}\r\n                                            alt={data?.name}\r\n                                            width={32}\r\n                                            height={32}\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                    ) : (\r\n                                        <div\r\n                                            className=\"sp1-item-center rounded-circle border\"\r\n                                            style={{\r\n                                                width: \"32px\",\r\n                                                height: \"32px\",\r\n                                            }}\r\n                                        >\r\n                                            <span\r\n                                                className=\"font-weight-bold\"\r\n                                                style={{ fontSize: \"1.2rem\" }}\r\n                                            >\r\n                                                {data?.name?.slice(0, 1)}\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"d-flex flex-column px-2\">\r\n                                    <a\r\n                                        className=\"text-underline text-primary\"\r\n                                        href={`/account/employees/${data?.user_id}`}\r\n                                        style={{ color: \"#767581\" }}\r\n                                    >\r\n                                        {\" \"}\r\n                                        {data?.name}{\" \"}\r\n                                    </a>\r\n                                    <span\r\n                                        className=\"d-block\"\r\n                                        style={{ color: \"#767581\" }}\r\n                                    >\r\n                                        {dayjs(data?.submission_date).format(\r\n                                            \"MMM DD, YYYY\"\r\n                                        )}{\" \"}\r\n                                        at{\" \"}\r\n                                        {dayjs(data?.submission_date).format(\r\n                                            \"hh:mm a\"\r\n                                        )}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div\r\n                            className=\"d-flex flex-column mt-3\"\r\n                            style={{ gap: \"10px\" }}\r\n                        >\r\n                            <span\r\n                                className=\"d-block fs-14 font-weight-bold\"\r\n                                style={{ color: \"#767581\" }}\r\n                            >\r\n                                {\" \"}\r\n                                Links{\" \"}\r\n                            </span>\r\n                            <ul\r\n                                style={{\r\n                                    listStyle: \"unset\",\r\n                                    marginLeft: \"30px\",\r\n                                }}\r\n                            >\r\n                                {links?.map((link, i) => (\r\n                                    <li\r\n                                        style={{ listStyle: \"unset\" }}\r\n                                        key={link + i}\r\n                                    >\r\n                                        <a\r\n                                            className=\"hover-underline text-primary\"\r\n                                            target=\"_blank\"\r\n                                            href={link}\r\n                                        >\r\n                                            {\" \"}\r\n                                            {link}{\" \"}\r\n                                        </a>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                        {data?.screen_record_link && (\r\n                            <div\r\n                                className=\"d-flex flex-column mt-3\"\r\n                                style={{ gap: \"10px\" }}\r\n                            >\r\n                                <span\r\n                                    className=\"d-block fs-14 font-weight-bold\"\r\n                                    style={{ color: \"#767581\" }}\r\n                                >\r\n                                    {\" \"}\r\n                                    Screen Record Link{\" \"}\r\n                                </span>\r\n                                <ul\r\n                                    style={{\r\n                                        listStyle: \"unset\",\r\n                                        marginLeft: \"30px\",\r\n                                    }}\r\n                                >\r\n                                    <li style={{ listStyle: \"unset\" }}>\r\n                                        <a\r\n                                            className=\"hover-underline text-primary\"\r\n                                            target=\"_blank\"\r\n                                            href={data?.screen_record_link}\r\n                                        >\r\n                                            {\" \"}\r\n                                            {data?.screen_record_link}{\" \"}\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"mt-2 mt-3\">\r\n                            <span\r\n                                className=\"d-block fs-12 font-weight-bold mb-2\"\r\n                                style={{ color: \"#767581\" }}\r\n                            >\r\n                                Description\r\n                            </span>\r\n                            {data?.text ? (\r\n                                <div\r\n                                    className=\"sp1_ck_content\"\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: data?.text,\r\n                                    }}\r\n                                />\r\n                            ) : (\r\n                                <span style={{ color: \"rgb(180, 188, 196)\" }}>\r\n                                    No description is available\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-3\">\r\n                            <span\r\n                                className=\"d-block fs-12 font-weight-bold mb-2\"\r\n                                style={{ color: \"#767581\" }}\r\n                            >\r\n                                Attached Files\r\n                            </span>\r\n\r\n                            {_.size(attaches) > 0 ? (\r\n                                <FileUploader>\r\n                                    {_.map(attaches, (file, index) => (\r\n                                        <FileUploader.Preview\r\n                                            key={`${file}_${index}`}\r\n                                            fileName={file}\r\n                                            downloadAble={true}\r\n                                            deleteAble={false}\r\n                                            downloadUrl={`${file}`}\r\n                                            previewUrl={`${file}`}\r\n                                            fileType={\r\n                                                _.includes(\r\n                                                    [\r\n                                                        \"png\",\r\n                                                        \"jpg\",\r\n                                                        \"jpeg\",\r\n                                                        \"gif\",\r\n                                                        \"svg\",\r\n                                                    ],\r\n                                                    _.last(_.split(file, \".\"))\r\n                                                )\r\n                                                    ? \"images\"\r\n                                                    : \"others\"\r\n                                            }\r\n                                            ext=\"\"\r\n                                        />\r\n                                    ))}\r\n                                </FileUploader>\r\n                            ) : (\r\n                                <span\r\n                                    className=\"\"\r\n                                    style={{ color: \"rgb(180, 188, 196)\" }}\r\n                                >\r\n                                    No Attachment is available\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    if (deviceWidth > 1200) {\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        );\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <Modal isOpen={isOpen}> {content()} </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SubmitionView;\r\n","import React from 'react'\r\nimport SubmitionView from './SubmitionView';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nconst WorkItem = ({data, toggle, modalRef, close, isLoading}) => { \r\n  const [searchParams] = useSearchParams();\r\n  const previewId = searchParams.get('submitted-work') || 0;\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\">\r\n        <div> \r\n            <a className='hover-underline text-primary' href={`/account/tasks/${data?.task_id}`}> Task#{data?.task_id} </a>\r\n            ({data?.submission_no}) submitted by <a className='hover-underline text-primary' href={`/account/employees/${data?.user_id}`}>{data?.name}</a> </div>\r\n\r\n        <div>{dayjs(data?.submission_date).format('MMM DD, YYYY')}</div>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?submitted-work=${data?.task_id}${data?.submission_no}`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n        </div> \r\n\r\n       {\r\n        Number(previewId) === Number(`${data?.task_id}${data?.submission_no}`) && \r\n        <SubmitionView\r\n            isOpen={Number(previewId) === Number(`${data?.task_id}${data?.submission_no}`)}\r\n            toggle={modalRef}\r\n            data={data}\r\n            close={close}\r\n            isLoading={isLoading}\r\n        />\r\n       } \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default WorkItem","import React from 'react'\r\nimport { User } from '../../../utils/user-details'\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nconst InnerWorkItem = ({data}) => { \r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item px-0 py-2\" styte={{gap: \"16px\"}}>\r\n        <div> \r\n            <a \r\n              className='hover-underline text-primary' \r\n              href={`/account/tasks/${data?.task_id}`}\r\n            > \r\n              Task#{data?.task_id} \r\n            </a>\r\n            ({data?.submission_no}) submitted by <a className='hover-underline text-primary' href={`/account/employees/${data?.user_id}`}>{data?.name}</a> </div>\r\n\r\n        <div>{dayjs(data?.submission_date).format('MMM DD, YYYY')}</div>  \r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?submitted-work=${data?.task_id}${data?.submission_no}`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n        </div> \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default InnerWorkItem","import React from 'react'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport Button from '../../components/Button'\r\nimport InnerWorkItem from './InnerWorkItem'\r\nimport Modal from '../../components/Modal'\r\nimport { useWindowSize } from 'react-use'\r\n\r\nconst SubmittedModalView = ({\r\n    isOpen, \r\n    toggle,\r\n    data,\r\n    close,\r\n    isLoading\r\n}) => {\r\n  const { width: deviceWidth } = useWindowSize();\r\n \r\n  const content = () => {\r\n        return(\r\n            <div className='sp1-subtask-form --modal-panel --modal-submitted'>\r\n                <div className='sp1-subtask-form --modal-panel-header'> \r\n                    <div className='d-flex align-items-center'>\r\n                        <h6>Submitted Task </h6>\r\n                        {isLoading && <div \r\n                            className=\"spinner-border text-dark ml-2\" \r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent' \r\n                            }}\r\n                        />}\r\n                    </div> \r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button> \r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body px-0\">\r\n                    {data?.map(d => (\r\n                        <InnerWorkItem key={`${d.task_id}_${d.submission_no}`} data={d} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n  }\r\n\r\n\r\n  return (\r\n        deviceWidth > 1200 ? \r\n        <React.Fragment>\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle} > {content()} </CustomModal>\r\n        </React.Fragment> : \r\n        <React.Fragment>\r\n            <Modal isOpen={isOpen}> { content() } </Modal> \r\n        </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SubmittedModalView","import * as React from 'react' \r\nimport WorkItem from './WorkItem';\r\nimport useSWR from 'swr';\r\nimport SubmitionView from './SubmitionView';\r\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport SubmittedModalView from './SubmittedModalView';\r\nimport _ from 'lodash';\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst SubmittedWork = ({task}) => { \r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const navigate = useNavigate(); \r\n  const location = useLocation();\r\n  const { data, error, isLoading } = useSWR(`/account/tasks/get-task-submissions/${task?.id}`, fetcher, {refreshInterval: 1000 * 3600});\r\n  const [searchParams] = useSearchParams();\r\n  const preview = searchParams.get('submitted-work');\r\n  const modal = searchParams.get('view-modal')\r\n    // control modal\r\n  const toggle = (e) => {\r\n    e.preventDefault();\r\n    if(preview || modal){\r\n      if(location.state && location.state.from){\r\n        navigate(location.state.from);\r\n      }else{navigate(`/account/tasks/${task?.id}`);} \r\n    }else{\r\n      navigate(`/account/tasks/${task?.id}?view-modal=submitted-work`) \r\n    }\r\n  };\r\n  const close = () => { \r\n    if(location.state && location.state.from){\r\n      navigate(location.state.from);\r\n    }else{navigate(`/account/tasks/${task?.id}`);} \r\n  }\r\n \r\n  return (\r\n    <div className='sp1_task_right_card mb-3'  \r\n    ref={setModalRefButton} \r\n    style={{zIndex:  (preview || modal === 'submitted-work') ? 99 : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Submitted Works</span> \r\n          {isLoading && \r\n            <div \r\n                className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                role=\"status\"\r\n                style={{\r\n                    width: '16px',\r\n                    height: '16px',\r\n                    border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                    borderRightColor: 'transparent' \r\n                }}\r\n            />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n       {\r\n        _.size(data) > 0 &&\r\n        <button \r\n            aria-label='openCommentModalButton'\r\n            className='sp1_task_right_dl_toggle'\r\n            onClick={toggle}\r\n            style={{zIndex:  (preview || modal === 'submitted-work') ? '110' : ''}}\r\n          >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ (preview || modal === 'submitted-work') ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>\r\n       } \r\n\r\n        <SubmittedModalView\r\n            isOpen={modal === 'submitted-work'}\r\n            toggle={modalRefButton}\r\n            data={_.orderBy(data, ['task_id', 'submission_no'], ['desc', 'desc'])}\r\n            close={close}\r\n            isLoading={isLoading}\r\n        />\r\n\r\n        {/* side drop toggle button end */} \r\n        <div className=\"sp1_task_right_card--body\"> \r\n        {\r\n          _.size(data) > 0 ? \r\n            _.map(_.orderBy(data, ['task_id', 'submission_no'], ['desc', 'desc']), item => (\r\n              <WorkItem \r\n                key={item?.submission_date + item?.submission_no} \r\n                data={item} \r\n                toggle={toggle} \r\n                close={close}\r\n                isLoading={isLoading}\r\n                modalRef={modalRefButton} \r\n              />\r\n            )):\r\n            <div\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{\r\n                    color: \"#B4BCC4\",\r\n                    fontSize: \"15px\",\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                No Submitted Work is Available\r\n            </div>\r\n        }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubmittedWork ","/* eslint-disable react/prop-types */\r\nimport { useState } from \"react\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport { convertTime } from \"../../../utils/converTime\";\r\nimport { Placeholder } from \"../../../global/Placeholder\";\r\nimport Checkbox from \"../../../UI/form/Cheeckbox\";\r\nimport { useSubmitDailySubmissionMutation } from \"../../../services/api/dailySubmissionApiSlice\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst TodaysUpdateModalTableRow = ({ data, date, index, open, setOpen, loading, refetch }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [attachmentLink, setAttachmentLink] = useState('');\r\n    const [checked, setChecked] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const [taskDescription, setTaskDescription] = useState('');\r\n    const [updatedValue,] = useState(null);\r\n    const [completedSection, setCompletedSection] = useState('');\r\n    const [submitDailySubmission, { isLoading: isSubmitting }] = useSubmitDailySubmissionMutation();\r\n    \r\n\r\n    // error state\r\n    const [attachmentLinkError, setAttachmentLinkError] = useState('');\r\n    const [taskDescriptionError, setTaskDescriptionError] = useState('');\r\n    const [completedSectionError, setCompletedSectionError] = useState('')\r\n\r\n    // check validation of attachmentLink and taskDescription\r\n    const isValid = () => {\r\n        let valid = true;\r\n        if (attachmentLink === '') {\r\n            setAttachmentLinkError('You must provide the link of your work');\r\n            valid = false;\r\n        }\r\n        if (taskDescription === '') {\r\n            setTaskDescriptionError(\"Please describe what you've done !\");\r\n            valid = false;\r\n        }\r\n        if (completedSection === '') {\r\n            setCompletedSectionError(\"You must provide at least one section name that you have completed\");\r\n            valid = false;\r\n        }\r\n        return valid;\r\n    }\r\n\r\n\r\n    // daily update submission function\r\n    const handleSubmit = () => {\r\n        if (!isValid()) {\r\n            return;\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('task_id', data.id);\r\n        formData.append('user_id', window.Laravel?.user?.id)\r\n        formData.append('project_id', data.projectId);\r\n        formData.append('task_heading', data.task_title);\r\n        formData.append('client_id', data.clientId);\r\n        formData.append('client_name', data.client_name);\r\n        formData.append('hours_spent', data.total_time_spent);\r\n        formData.append('link_name', attachmentLink);\r\n        formData.append('section_name', completedSection);\r\n        formData.append('comment', taskDescription);\r\n        formData.append('mark_as_complete', checked);\r\n        formData.append('report_date', date);\r\n        const _token = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\");\r\n        formData.append(\"_token\", _token);\r\n        files.forEach((file) => formData.append('file[]', file))\r\n\r\n\r\n        submitDailySubmission(formData)\r\n            .unwrap()\r\n            .then(res => {\r\n                // console.log(res);\r\n                if (res.mark_as_complete===\"true\" || res.mark_as_complete===true) {\r\n                    navigate(`${location.pathname}?modal=complete-task`);\r\n                }\r\n                const Toast = Swal.mixin({\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n                })\r\n\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'Submitted successfully'\r\n                })\r\n                setOpen(null);\r\n                refetch();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <tr\r\n                className={`sp1_tlr_tr ${open === index && 'openRow_bg'}`}\r\n                // style={{\r\n                //     backgroundColor: `${data.daily_submission_status ? 'lightgreen' : 'white'}`\r\n                // }}\r\n            >\r\n\r\n                <td className={`sp1_tlr_td`} style={{ minWidth: '50px' }}>{loading ? <Placeholder /> : index + 1}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : data?.task_title}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : \r\n                    data?.page_url ?\r\n                        <a href={data.page_url} title={data.page_url} target=\"_blank\">View Link</a>\r\n                        :\r\n                        'No Link attached'\r\n                }</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : convertTime(data.total_time_spent)}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : (data?.client_name ?? 'N/A')}</td>\r\n                <td className={`sp1_tlr_td`}>\r\n                    {\r\n                        loading ?\r\n                            <Placeholder />\r\n                            :\r\n                            <button\r\n                                onClick={() => {\r\n                                    if (data.daily_submission_status) {\r\n                                        return;\r\n                                    }\r\n                                    setOpen((prev) => {\r\n                                        if (prev === index) {\r\n                                            return null;\r\n                                        } else {\r\n                                            return index;\r\n                                        }\r\n                                    })\r\n                                }\r\n                                }\r\n                                className={`btn btn-sm ${data.daily_submission_status ? 'btn-success' : 'btn-outline-success'}`}\r\n                            >\r\n                                {\r\n                                    data.daily_submission_status ? 'Submitted' : 'Click To Submit'\r\n                                }\r\n                            </button>\r\n                    }\r\n                </td>\r\n            </tr>\r\n            {open === index && (\r\n                <tr className={``} style={{ border: \"solid gray 1px\", borderTop: \"none\" }}>\r\n                    <td colSpan={6}>\r\n                        <form className=\"from_body openRow_bg\">\r\n\r\n                            {/* completed section names */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionName\">\r\n                                    Completed Section Name <sup>*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Sections Name\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <input\r\n                                    value={completedSection}\r\n                                    type=\"text\"\r\n                                    id=\"sectionName\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        margin: '2px 0',\r\n                                        borderRadius: '3px',\r\n                                        border: 'none',\r\n                                        fontSize: '1.2rem',\r\n                                        padding: '10px',\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    onChange={(e) => setCompletedSection(e.target.value)}\r\n                                />\r\n                                {completedSectionError && <small className=\"form-text text-danger\">{completedSectionError}</small>}\r\n                            </div>\r\n\r\n                            {/* attachment url link */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionName\">\r\n                                    Screenshots/Screen records of the sections <sup>*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Sections Name\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <input\r\n                                    value={attachmentLink}\r\n                                    type=\"text\"\r\n                                    id=\"sectionName\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        margin: '2px 0',\r\n                                        borderRadius: '3px',\r\n                                        border: 'none',\r\n                                        fontSize: '1.2rem',\r\n                                        padding: '10px',\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    onChange={(e) => setAttachmentLink(e.target.value)}\r\n                                />\r\n                                {attachmentLinkError && <small className=\"form-text text-danger\">{attachmentLinkError}</small>}\r\n                            </div>\r\n\r\n                            {/* upload files */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput1\">\r\n                                    Attachments\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Attachment\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <FileUploader files={files} setFiles={setFiles}>\r\n                                    <FileUploader.Input />\r\n                                    <FileUploader.SelectedFiles>\r\n                                        {({ previews, onDelete }) =>\r\n                                            Array.from(previews)?.map(\r\n                                                (p, i) => (\r\n                                                    <FileUploader.Preview\r\n                                                        key={i}\r\n                                                        id={i}\r\n                                                        fileName={p.name}\r\n                                                        previewUrl={p.preview}\r\n                                                        fileType={p.type}\r\n                                                        onRemove={onDelete}\r\n                                                    />\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </FileUploader.SelectedFiles>\r\n                                </FileUploader>\r\n                            </div>\r\n                            {/* End Upload files */}\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput2\" style={{ maxWidth: '95%' }}>\r\n                                    Describe which sections you have worked on today <sup className=\"text-danger\">*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Describe What You've Done\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n\r\n                                <div\r\n                                    className=\"sp1_st_write_comment_editor\"\r\n                                    style={{ minHeight: \"100px\" }}\r\n                                >\r\n                                    <CKEditorComponent\r\n                                        value={taskDescription}\r\n                                        onChange={(e, editor) => {\r\n                                            const data = editor.getData();\r\n                                            setTaskDescription(data);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {taskDescriptionError && <small className=\"form-text text-danger\">{taskDescriptionError}</small>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <Checkbox checked={checked} onChange={(e) => setChecked(e.target.checked)} label={'Mark as Complete'} className=\"user-select-none\" />\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 d-flex align-items-center\" style={{ gap: '5px' }}>\r\n                                <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" />\r\n                                {/* <SubmitButton onClick={()=>{}} isLoading={false} title=\"Submit & Mark as Complete\"></SubmitButton> */}\r\n                            </div>\r\n                        </form>\r\n                    </td>\r\n                </tr>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodaysUpdateModalTableRow;\r\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./DailySubmission.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./DataTable.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { useState } from \"react\";\r\nimport TodaysUpdateModalTableRow from \"./TodaysUpdateModalTableRow\";\r\nimport style from \"./styles/DailySubmission.module.css\";\r\nimport \"./styles/DataTable.css\";\r\nimport { useGetDailySubmissionQuery } from \"../../../services/api/dailySubmissionApiSlice\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst TodaysUpdateModalTable = () => {\r\n    const [open, setOpen] = useState(null);\r\n    const [searchParams] = useSearchParams();\r\n    const date_type = searchParams.get(\"data_type\");\r\n\r\n    const loggedUser = new User(window.Laravel?.user);\r\n\r\n    const today = dayjs().format('YYYY-MM-DD');\r\n\r\n    const { data, isLoading, refetch } = useGetDailySubmissionQuery(\r\n        `${loggedUser?.id}?date_type=${today}`\r\n    ); \r\n     \r\n\r\n    return (\r\n        <div className={`sp1_tlr_tbl_wrapper`} style={{ overflow: \"auto\" }}>\r\n            <table className={`sp1_tlr_table`} style={{ minWidth: \"0\" }}>\r\n                <thead>\r\n                    <tr className={``}>\r\n                        <th className={`sp1_tlr_th`}>SL No.</th>\r\n                        <th className={`sp1_tlr_th`}>Task Name</th>\r\n                        <th className={`sp1_tlr_th`}>Page Link</th>\r\n                        <th className={`sp1_tlr_th`}>\r\n                            Total Time Spend on This Task Today\r\n                        </th>\r\n                        <th className={`sp1_tlr_th`}>Client Name</th>\r\n                        <th className={`sp1_tlr_th`} style={{ width: \"10rem\" }}>\r\n                            Action\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody className={`sp1_tlr_tbody`}>\r\n                    {/* {\r\n                        (isLoading ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] : data?.data).filter((d) => !d.daily_submission_status).map((d, i) => <TodaysUpdateModalTableRow data={d} key={i} index={i} open={open} setOpen={setOpen} loading={isLoading} />)\r\n                    } */}\r\n                    {(isLoading\r\n                        ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n                        : data?.data\r\n                    ).map((d, i) => (\r\n                        <TodaysUpdateModalTableRow\r\n                            data={d}\r\n                            date={data?.date}\r\n                            key={i}\r\n                            index={i}\r\n                            open={open}\r\n                            setOpen={setOpen}\r\n                            loading={isLoading}\r\n                            refetch={refetch}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodaysUpdateModalTable;\r\n","import { useState } from \"react\";\r\n// import { Button } from \"react-bootstrap\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport TodaysUpdateModalTable from \"../daily-submission/TodaysUpdateModalTable\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\"; \r\nimport dayjs from \"dayjs\";\r\n\r\nconst DailySubmissionControl = () => {\r\n    const [todaysUpdateModalisOpen, setTodaysUpdateModalisOpen] =\r\n        useState(false);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const url = new URLSearchParams(location.search);\r\n \r\n\r\n    const isOpen = url.get(\"modal\") === \"daily-submission\"; \r\n\r\n\r\n     \r\n\r\n    // console.log(location);\r\n\r\n    const close = () => {\r\n        if(url.get('trigger') === 'stop-button'){\r\n            Swal.fire({\r\n                icon: \"warning\",\r\n                title: \"If you don't submit the daily submission, you won't be able to start any task on next day.\",\r\n                showConfirmButton: true,\r\n            });\r\n        }\r\n\r\n        navigate(`${location.pathname}`);\r\n        setTodaysUpdateModalisOpen(false);\r\n    };\r\n    const open = () => navigate(`${location.pathname}?modal=daily-submission&data_type=today`);\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                // onClick={toggle}\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {/* {isFetching ? <Loader title=\"Processing...\" /> : <i className=\"fa-solid fa-check\" />} */}\r\n                <span className=\"d-inline ml-1\"> Submit Today's Update </span>\r\n            </Button>\r\n\r\n            <Modal isOpen={isOpen} className=\"sp1_mark-as--modal \">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_mark-as--modal-panel\"\r\n                        style={{ overflow: \"visible\", maxWidth: \"70rem\" }}\r\n                    >\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0\">Submit Today's Update</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"visible\" }}\r\n                        >\r\n                            <div className=\"alert alert-warning text-center\">\r\n                                If you don't submit the daily submission, you\r\n                                won't be able to start any task on next day.\r\n                            </div>\r\n\r\n                            {isOpen && <TodaysUpdateModalTable />}\r\n                            <div className=\"mt-3 d-flex align-items-center\">\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                    onClick={close}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                                {/* <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" /> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DailySubmissionControl;\r\n","import _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport CKEditorComponent from \"../../../ckeditor/index\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport {\r\n    useLazyCheckSubTaskStateQuery,\r\n    useMarkAsCompleteMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport Button from \"../../components/Button\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Modal from \"../../components/Modal\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\n\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst MarkAsComplete = ({ task, auth }) => {\r\n    // screen record url for trainee\r\n    const [screenRecordUrl, setScreenRecordUrl] = useState(\"\");\r\n    const [screenRecordUrlErr, setScreenRecordUrlErr] = useState(\"\");\r\n    // form data\r\n    const dispatch = useDispatch();\r\n    const [links, setLinks] = useState([\"\"]);\r\n    const [linkErr, setLinkErr] = useState(\"\");\r\n    const [isModalUrl, setIsModalUrl] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentErr, setCommentErr] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [markAsComplete, { isLoading: isSubmitting }] =\r\n        useMarkAsCompleteMutation();\r\n    const [checkSubTaskState, { isFetching }] = useLazyCheckSubTaskStateQuery();\r\n\r\n    const [markAsCompleteModaIsOpen, setMarkAsCompleteModalIsOpen] =\r\n        useState(false);\r\n\r\n    // open modal\r\n    const open = () => {\r\n        navigate(`${location.pathname}?modal=complete-task`);\r\n    };\r\n\r\n    // close modal\r\n    const close = () => {\r\n        navigate(`${location.pathname}`);\r\n    };\r\n\r\n    // const [err, setErr] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const url = new URLSearchParams(location.search);\r\n        if (url.get(\"modal\") === \"complete-task\") {\r\n            setIsModalUrl(true);\r\n        } else {\r\n            setIsModalUrl(false);\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        // const url = new URLSearchParams(location.search);\r\n\r\n        // if (url.get('modal')==='complete-task') {\r\n        if (isModalUrl) {\r\n            if (Number(auth.getRoleId()) === 6) {\r\n                checkSubTaskState(task?.id)\r\n                    .unwrap()\r\n                    .then((res) => {\r\n                        if (res.status === \"true\" || res.status === true) {\r\n                            Swal.fire({\r\n                                icon: \"warning\",\r\n                                title: `You can't complete this task because you\r\n                                have some pending subtask?`,\r\n                            });\r\n                            close();\r\n                        } else {\r\n                            setMarkAsCompleteModalIsOpen(true);\r\n                        }\r\n                    });\r\n            } else {\r\n                setMarkAsCompleteModalIsOpen(true);\r\n            }\r\n        } else {\r\n            setMarkAsCompleteModalIsOpen(false);\r\n        }\r\n    }, [isModalUrl]);\r\n\r\n    // handle editor change\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // handle remove link\r\n    const handleRemoveLink = (e, index) => {\r\n        const _links = [...links];\r\n        _links.splice(index, 1);\r\n        setLinks(_links);\r\n    };\r\n\r\n    // handle link change\r\n    const handleOnLinkInputChange = (e, index) => {\r\n        const _links = [...links];\r\n        (_links[index] = e.target.value), setLinks(_links);\r\n    };\r\n    // handle screenRecord link change\r\n    const handleOnScreenRecordLinkInputChange = (e) => {\r\n        setScreenRecordUrl(e.target.value);\r\n    };\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n        let valid = true;\r\n        if (!_.size(links) || links[0] === \"\") {\r\n            setLinkErr(\"You must provide at least one link to your work\");\r\n            toast.warn(\"You must provide at least one link to your work\");\r\n            valid = false;\r\n        }\r\n\r\n        if (_.size(links)) {\r\n            _.forEach(links, (link) => {\r\n                if (!checkIsURL(link)) {\r\n                    toast.warn(\"Please provide a valid url\");\r\n                    setLinkErr(\"Please provide a valid url\");\r\n                    valid = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (comment === \"\") {\r\n            setCommentErr(\"Please describe what you've done !\");\r\n            toast.warn(\"Please describe what you've done!\");\r\n            valid = false;\r\n        }\r\n        if (\r\n            _.includes([14, 15, 16, 17], auth?.getRoleId()) &&\r\n            !checkIsURL(screenRecordUrl)\r\n        ) {\r\n            toast.warn(\"Please provide a valid url\");\r\n            setScreenRecordUrlErr(\"Please provide a valid url\");\r\n            valid = false;\r\n        }\r\n\r\n        return valid;\r\n    };\r\n\r\n    // handle submit\r\n    const handleSubmit = (e) => {\r\n        const formData = new FormData();\r\n        formData.append(\"text\", comment);\r\n        formData.append(\"user_id\", auth?.getId());\r\n        formData.append(\"task_id\", task?.id);\r\n        formData.append(\"screen_record_link\", screenRecordUrl);\r\n        links.map((link) => formData.append(\"link[]\", link));\r\n        files?.map((file) => formData.append(\"file[]\", file));\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n\r\n        if (isValid()) {\r\n            markAsComplete(formData)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: \"top-end\",\r\n                        showConfirmButton: false,\r\n                        timer: 3000,\r\n                        timerProgressBar: true,\r\n                    });\r\n\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: \"Task submitted successfully\",\r\n                    });\r\n                    close();\r\n                })\r\n                .catch((err) => {\r\n                    close();\r\n                    console.log(err);\r\n                })\r\n                .finally(() => {\r\n                    close();\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {isFetching ? (\r\n                    <Loader title=\"Processing...\" />\r\n                ) : (\r\n                    <i className=\"fa-solid fa-check\" />\r\n                )}\r\n                <span className=\"d-inline ml-1\">\r\n                    {\" \"}\r\n                    {isFetching ? \"\" : \"Mark As Complete\"}\r\n                </span>\r\n            </Button>\r\n\r\n            <Modal\r\n                isOpen={markAsCompleteModaIsOpen}\r\n                className=\"sp1_mark-as--modal\"\r\n            >\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div className=\"sp1_mark-as--modal-panel\">\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0\">Submit Task</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"unset\" }}\r\n                        >\r\n                            <form>\r\n                                {/* //multiple link */}\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlInput1\">\r\n                                        Submit Links What You've Done\r\n                                        <sup>*</sup>\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Submit Links What You've Done\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n                                    {links?.map((link, i) => (\r\n                                        <div\r\n                                            key={i}\r\n                                            className=\"mark-as-compeleted-link mb-2\"\r\n                                        >\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control py-2\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                placeholder=\"--\"\r\n                                                value={link}\r\n                                                onChange={(e) =>\r\n                                                    handleOnLinkInputChange(\r\n                                                        e,\r\n                                                        i\r\n                                                    )\r\n                                                }\r\n                                            />\r\n\r\n                                            {links?.length > 1 && (\r\n                                                <button\r\n                                                    onClick={(e) =>\r\n                                                        handleRemoveLink(e, i)\r\n                                                    }\r\n                                                >\r\n                                                    <i className=\"fa-regular fa-trash-can\"></i>\r\n                                                </button>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n\r\n                                    {linkErr && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            class=\"form-text text-danger\"\r\n                                        >\r\n                                            {linkErr}\r\n                                        </small>\r\n                                    )}\r\n\r\n                                    <button\r\n                                        className=\"mt-2 d-flex align-items-center bg-transparent\"\r\n                                        style={{ gap: \"10px\" }}\r\n                                        onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            setLinks((prev) => [...prev, \"\"]);\r\n                                        }}\r\n                                    >\r\n                                        <i className=\"fa-solid fa-circle-plus\" />\r\n                                        Add Another Link\r\n                                    </button>\r\n                                </div>\r\n\r\n                                {/* single link for screen recording in case of trainee , role id===14 */}\r\n                                {_.includes(\r\n                                    [14, 15, 16, 17],\r\n                                    Number(auth.roleId)\r\n                                ) && (\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">\r\n                                            Screen recording of the last work\r\n                                            done\r\n                                            <sup>*</sup>\r\n                                            <span\r\n                                                className=\"ml-2\"\r\n                                                data-toggle=\"tooltip\"\r\n                                                data-placement=\"top\"\r\n                                                title=\"Submit Screen recording of the last work done\"\r\n                                                data-boundary=\"window\"\r\n                                                style={{ cursor: \"pointer\" }}\r\n                                            >\r\n                                                <i className=\"fa-regular fa-circle-question\" />\r\n                                            </span>\r\n                                        </label>\r\n\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control py-2\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"--\"\r\n                                            value={screenRecordUrl}\r\n                                            onChange={(e) =>\r\n                                                handleOnScreenRecordLinkInputChange(\r\n                                                    e\r\n                                                )\r\n                                            }\r\n                                        />\r\n\r\n                                        {screenRecordUrlErr && (\r\n                                            <small\r\n                                                id=\"emailHelp\"\r\n                                                class=\"form-text text-danger\"\r\n                                            >\r\n                                                {screenRecordUrlErr}\r\n                                            </small>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {/* upload files */}\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlInput1\">\r\n                                        Attachments\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Attachment\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n                                    <FileUploader\r\n                                        files={files}\r\n                                        setFiles={setFiles}\r\n                                    >\r\n                                        <FileUploader.Input />\r\n                                        <FileUploader.SelectedFiles>\r\n                                            {({ previews, onDelete }) =>\r\n                                                Array.from(previews)?.map(\r\n                                                    (p, i) => (\r\n                                                        <FileUploader.Preview\r\n                                                            key={i}\r\n                                                            id={i}\r\n                                                            fileName={p.name}\r\n                                                            previewUrl={\r\n                                                                p.preview\r\n                                                            }\r\n                                                            fileType={p.type}\r\n                                                            onRemove={onDelete}\r\n                                                        />\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        </FileUploader.SelectedFiles>\r\n                                    </FileUploader>\r\n                                </div>\r\n                                {/* End Upload files */}\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label\r\n                                        htmlFor=\"exampleFormControlInput1\"\r\n                                        style={{ maxWidth: \"95%\" }}\r\n                                    >\r\n                                        Mention clearly if anything asked in the\r\n                                        instruction couldn't be done or if there\r\n                                        is anything else your reporting boss\r\n                                        should know while approving or rejecting\r\n                                        this task<sup>*</sup>\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Describe What You've Done\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n\r\n                                    <div className=\"ck-editor-holder stop-timer-options\">\r\n                                        <CKEditorComponent\r\n                                            onChange={handleEditorChange}\r\n                                        />\r\n                                    </div>\r\n                                    {commentErr && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            class=\"form-text text-danger\"\r\n                                        >\r\n                                            {commentErr}\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"mt-3 d-flex align-items-center\">\r\n                                    <Button\r\n                                        variant=\"tertiary\"\r\n                                        className=\"ml-auto mr-2\"\r\n                                        onClick={close}\r\n                                    >\r\n                                        Close\r\n                                    </Button>\r\n                                    <SubmitButton\r\n                                        onClick={handleSubmit}\r\n                                        isLoading={isSubmitting}\r\n                                        title=\"Submit\"\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MarkAsComplete;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport { useRevision } from \"../../../../hooks/useRevision\";\r\nimport { useCreateRevisionMutation } from \"../../../../services/api/SingleTaskPageApi\";\r\nimport Button from \"../../../components/Button\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst RevisionCreationModal = ({ close, task, auth }) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [isDeniable, setIsDeniable] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const {\r\n        getLeadDeveloperAcknowladgementOptions,\r\n        getProjectManagerAcknowladgementOptions,\r\n    } = useRevision(task);\r\n    const { pathname } = useLocation();\r\n    const navigate = useNavigate();\r\n    // console.log({pathname});\r\n\r\n    const role = auth.getRoleId();\r\n\r\n    const revisionOptions =\r\n        role === 1 || role === 4 || role === 8\r\n            ? getProjectManagerAcknowladgementOptions()\r\n            : getLeadDeveloperAcknowladgementOptions();\r\n\r\n    const [createRevision, { isLoading }] = useCreateRevisionMutation();\r\n\r\n    // radio button change\r\n    const handleChange = (value) => {\r\n        setReason(value);\r\n    };\r\n\r\n    // editor change text\r\n    const handleEditorTextChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // validation\r\n    const validate = () => {\r\n        let errorCount = 0;\r\n\r\n        if (comment === \"\") {\r\n            errorCount++;\r\n            setCommentError(\r\n                \"You have to explain the revision in details, so that lead developer/developer can understand where they need to work.\"\r\n            );\r\n        }\r\n\r\n        if (!reason) {\r\n            errorCount++;\r\n            setReasonError(\"You have to select a reason from above options\");\r\n        }\r\n\r\n        return errorCount === 0;\r\n    };\r\n\r\n    // handle submission\r\n    const handleSubmission = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            task_id: task?.id,\r\n            user_id: auth?.id,\r\n            revision_acknowledgement: reason?.revision ?? \"\",\r\n            acknowledgement_id: reason?.id,\r\n            comment,\r\n            is_deniable: reason?.isDeniable ?? false,\r\n        };\r\n\r\n        if (validate()) {\r\n            createRevision(data)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: \"top-end\",\r\n                        showConfirmButton: false,\r\n                        timer: 3000,\r\n                        timerProgressBar: true,\r\n                    });\r\n\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: \"Task submitted for Revision successfully\",\r\n                    });\r\n                    navigate(`${pathname}`);\r\n                    close();\r\n                })\r\n                .catch((err) => console.log(err));\r\n        } else {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: \"top-end\",\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n            });\r\n\r\n            Toast.fire({\r\n                icon: \"error\",\r\n                title: \"Your forgot to fill up some required fields\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div\r\n                className=\"sp1_single_task--modal-panel\"\r\n                style={{ maxWidth: \"550px\" }}\r\n            >\r\n                <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                    <div className=\"font-weight-bold f-14\">\r\n                        Revision - Task: {task?.id}#\r\n                        {task?.title || task?.heading}\r\n                    </div>\r\n                    <Button onClick={close} className=\"\">\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <form className=\"px-3\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select Reason for Revision\r\n                            <sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {revisionOptions.map((option) => (\r\n                                <div\r\n                                    key={option.id}\r\n                                    className=\"form-check d-flex align-items-start mb-2\"\r\n                                >\r\n                                    <input\r\n                                        className=\"form-check-input mr-2\"\r\n                                        type=\"radio\"\r\n                                        name=\"exampleRadios\"\r\n                                        id={option.id}\r\n                                        required={true}\r\n                                        onChange={() => handleChange(option)}\r\n                                        value={option.revision}\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            marginTop: \"3px\",\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor={option.id}\r\n                                        style={{ marginBottom: \"3px\" }}\r\n                                    >\r\n                                        {option.revision}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {reasonError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {reasonError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Explain or Comment<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"ck-editor-holder\">\r\n                            <CKEditorComponent\r\n                                onChange={handleEditorTextChange}\r\n                            />\r\n                        </div>\r\n                        {commentError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {commentError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                onClick={close}\r\n                                variant=\"tertiary\"\r\n                                className=\"ml-auto mr-2\"\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                            <SubmitButton\r\n                                title=\"Submit\"\r\n                                onClick={handleSubmission}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RevisionCreationModal;\r\n","import React, { useState, lazy, Suspense } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport { SingleTask } from \"../../../../utils/single-task\";\r\nimport RevisionCreationModal from \"./RevisionCreationModal\";\r\n\r\nconst RevisionControl = ({ task, auth }) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    // const singleTask = new SingleTask(task)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={() => setRevisionModal(true)}\r\n                className=\"d-flex align-items-center sp1-st-revision-btn sp1-st-revision-btn\"\r\n            >\r\n                <i className=\"fa-solid fa-plus-minus\" />\r\n                <span className=\"d-inline ml-1\">Need Revision</span>\r\n            </Button>\r\n\r\n            <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <RevisionCreationModal\r\n                        auth={auth}\r\n                        task={task}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                </div>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RevisionControl;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport Button from \"../../../components/Button\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\n// button\r\nexport const AcceptAndContinueButton = ({ isLoading, onClick }) => {\r\n    if (!isLoading) {\r\n        return <Button onClick={onClick}>Accept & Continue</Button>;\r\n    } else {\r\n        <React.Fragment>\r\n            <Button className=\"cursor-processing\">\r\n                <div\r\n                    className=\"spinner-border text-white\"\r\n                    role=\"status\"\r\n                    style={{\r\n                        width: \"18px\",\r\n                        height: \"18px\",\r\n                    }}\r\n                />{\" \"}\r\n                Processing...\r\n            </Button>\r\n        </React.Fragment>;\r\n    }\r\n};\r\n\r\n// component\r\nexport const RevisionAcceptAndContinue = ({\r\n    task,\r\n    revision,\r\n    onSubmit,\r\n    close,\r\n    onNext,\r\n    isSubmitting = false,\r\n}) => {\r\n    const [comment, setComment] = useState(\"\");\r\n    const [err, setErr] = useState(\"\");\r\n\r\n    const handleEditorDataChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n        if(comment !== ''){\r\n            onSubmit({comment});\r\n        }else{\r\n            setErr(\"You have to Explain Why & How Did This Happen!\")\r\n        }\r\n    }\r\n\r\n    const auth = window?.Laravel?.user;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form action=\"\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Please Explain Why & How Did This Happen?{\" \"}\r\n                        <sup className=\"f-16 text-red\">*</sup>\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent onChange={handleEditorDataChange} />\r\n                    </div>\r\n                    {err && <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                        {err}\r\n                    </small>}\r\n\r\n                    <div className=\"mt-3 d-flex align-items-center\">\r\n                        <Button\r\n                            onClick={close}\r\n                            variant=\"tertiary\"\r\n                            className=\"ml-auto mr-2\"\r\n                        >\r\n                            Back\r\n                        </Button>\r\n\r\n                        {!isSubmitting ? (\r\n                            <React.Fragment>\r\n                                {_.includes([4, 6], auth?.role_id) ? (\r\n                                    <Button onClick={handleOnSubmit}>Next</Button>\r\n                                ): \r\n                                    <SubmitButton\r\n                                        title=\"Submit\" \r\n                                        isLoading={isSubmitting}\r\n                                        onClick={handleOnSubmit}\r\n                                    />\r\n                                }\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Button className=\"cursor-processing\">\r\n                                    <div\r\n                                        className=\"spinner-border text-white\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"18px\",\r\n                                            height: \"18px\",\r\n                                        }}\r\n                                    />{\" \"}\r\n                                    Processing...\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport { AcceptAndContinueButton } from \"./RevisionAcceptAndContinue\";\r\nimport { Placeholder } from \"../../../../global/Placeholder\";\r\nimport { User } from \"../../../../utils/user-details\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\nconst RevisionView = ({\r\n    revision,\r\n    isLoading,\r\n    onAccept,\r\n    onDeny,\r\n    onContinue,\r\n    isContinue,\r\n}) => {\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n    // const getComment = () => {\r\n    //     if (\r\n    //         auth?.isHasRolePermission(6) ||\r\n    //         auth?.isHasRolePermission(13) ||\r\n    //         auth?.isHasRolePermission(9) ||\r\n    //         auth?.isHasRolePermission(10)\r\n    //     ) {\r\n    //         return revision?.pm_comment;\r\n    //     } else {\r\n    //         return revision?.lead_comment;\r\n    //     }\r\n    // };\r\n\r\n    //new logic\r\n\r\n    const getComment = () => {\r\n        if (auth?.isHasRolePermission(6) || auth?.isHasRolePermission(13)) {\r\n            return revision?.pm_comment;\r\n        } else if (\r\n            auth?.isHasRolePermission(9) ||\r\n            auth?.isHasRolePermission(10) ||\r\n            auth?.isHasRolePermission(14) ||\r\n            auth?.isHasRolePermission(5)\r\n        ) {\r\n            if (\r\n                revision?.revision_status === \"Project Manager Revision\" ||\r\n                revision?.revision_status === \"Client Has Revision\"\r\n            ) {\r\n                return revision?.pm_comment;\r\n            } else {\r\n                return revision?.lead_comment;\r\n            }\r\n        } else {\r\n            return revision?.pm_comment;\r\n        }\r\n    };\r\n\r\n    const comment = getComment();\r\n    if (isLoading) {\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <div>\r\n                        <Placeholder width=\"450px\" className=\"mb-2\" />\r\n                        <Placeholder width=\"100px\" className=\"mb-3\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"st_revision_comment mb-4\">\r\n                    {isLoading && (\r\n                        <div>\r\n                            <Placeholder width=\"100%\" className=\"mb-2\" />\r\n                            <Placeholder width=\"100%\" className=\"mb-2\" />\r\n                            <Placeholder width=\"30%\" className=\"mb-2\" />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    } else if (!comment && !isLoading) {\r\n        return null;\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                {revision?.revision_acknowledgement && (\r\n                    <div>\r\n                        {!isLoading ? (\r\n                            <p>\r\n                                <span className=\"font-weight-bold text-danger f-16\">\r\n                                    Reason:{\" \"}\r\n                                </span>\r\n                                {revision?.revision_acknowledgement ??\r\n                                    revision?.revision_reason}\r\n                            </p>\r\n                        ) : (\r\n                            <div>\r\n                                <Placeholder width=\"450px\" className=\"mb-2\" />\r\n                                <Placeholder width=\"100px\" className=\"mb-3\" />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"st_revision_comment\">\r\n                    {!isLoading && (\r\n                        <div\r\n                            className=\"sp1_ck_content\"\r\n                            dangerouslySetInnerHTML={{ __html: comment }}\r\n                        />\r\n                    )}\r\n\r\n                    {isLoading && (\r\n                        <div>\r\n                            <Placeholder width=\"100%\" className=\"mb-2\" />\r\n                            <Placeholder width=\"100%\" className=\"mb-2\" />\r\n                            <Placeholder width=\"30%\" className=\"mb-2\" />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"mt-4 mb-2 d-flex align-items-center\">\r\n                    {!isLoading &&\r\n                        (revision?.is_deniable ? (\r\n                            <React.Fragment>\r\n                                <Button\r\n                                    onClick={onDeny}\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                >\r\n                                    Deny & Continue\r\n                                </Button>\r\n\r\n                                <AcceptAndContinueButton\r\n                                    onClick={onAccept}\r\n                                    isLoading={false}\r\n                                />\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <div className=\"ml-auto\">\r\n                                    <SubmitButton\r\n                                        onClick={onContinue}\r\n                                        variant=\"primary\"\r\n                                        isLoading={isContinue}\r\n                                        title=\"Continue\"\r\n                                    />\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default RevisionView;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport _ from \"lodash\";\r\n\r\nconst options = [\r\n    {\r\n        id: \"LDRx10\",\r\n        revision: \"I overlooked a few things while checking\",\r\n        isDeniable: true,\r\n    },\r\n    {\r\n        id: \"LDRx11\",\r\n        revision: \"I couldn't understand a few things in the instruction\",\r\n        isDeniable: false,\r\n    },\r\n];\r\n\r\nconst AssigneeRevisionToDev = ({\r\n    task,\r\n    onBack,\r\n    onSubmit,\r\n    revision,\r\n    type = false,\r\n    isSubmitting = false,\r\n}) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comments, setComments] = useState([]);\r\n    const [commentError, setCommentError] = useState(false);\r\n    const [subtasks, setSubtasks] = useState([]);\r\n    const [subtaskError, setSubtaskError] = useState(\"\");\r\n    const [isDeniable, setIsDeniable] = useState(false);\r\n\r\n    // radio button change\r\n    const handleChange = (value) => {\r\n        setReason(value);\r\n    };\r\n\r\n    // editor change text\r\n    const hanldeEditorTextChange = (e, editor, id) => {\r\n        const data = editor.getData();\r\n        const _comments = [...comments];\r\n\r\n        const index = _comments?.findIndex((d) => d.subtask_id === id);\r\n        if (index === -1) {\r\n            _comments.push({\r\n                id: id,\r\n                subtask_id: id,\r\n                comment: data,\r\n                acknowledgement_id: reason?.id ?? \"\",\r\n            });\r\n        } else {\r\n            _comments[index] = {\r\n                id: id,\r\n                subtask_id: id,\r\n                comment: data,\r\n                acknowledgement_id: reason?.id ?? \"\",\r\n            };\r\n        }\r\n\r\n        setComments([..._comments]);\r\n    };\r\n\r\n    // validation\r\n    const validate = () => {\r\n        let errorCount = 0;\r\n        if (reason === null && revision?.is_deniable && type) {\r\n            errorCount++;\r\n            setReasonError(\"You have to select a reason from below options\");\r\n        }\r\n\r\n        if (_.size(task?.subtask) > 0) {\r\n            if (subtasks.length === 0) {\r\n                errorCount++;\r\n                setSubtaskError(\r\n                    \"You need to selecd at least one sub task to continue.\"\r\n                );\r\n            }\r\n\r\n            if (comments.length === 0 || comments.length !== subtasks.length) {\r\n                errorCount++;\r\n                setCommentError(true);\r\n            }\r\n\r\n            comments?.map((comment) => {\r\n                if (comment?.comment === \"\") {\r\n                    errorCount++;\r\n                    setCommentError(true);\r\n                }\r\n            });\r\n        }\r\n\r\n        return errorCount === 0 ? true : false;\r\n    };\r\n\r\n    // handle submiton\r\n    const handleSubmition = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            task_id: task?.id,\r\n            reason: reason?.revision,\r\n            comments,\r\n            is_deniable: reason?.isDeniable ?? false,\r\n        };\r\n        if (validate()) {\r\n            onSubmit(data);\r\n        }\r\n    };\r\n\r\n    const onBackButtonClick = (e) => {\r\n        e.preventDefault();\r\n        onBack();\r\n    };\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form action=\"\">\r\n                {revision?.is_deniable !== 0 && type ? (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Revision Acknowledgement\r\n                            <sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {_.map(options, (revision) => (\r\n                                <div\r\n                                    key={revision.id}\r\n                                    className=\"form-check d-flex align-items-start mb-2\"\r\n                                >\r\n                                    <input\r\n                                        className=\"form-check-input mr-2\"\r\n                                        type=\"radio\"\r\n                                        name=\"exampleRadios\"\r\n                                        id={revision.id}\r\n                                        required={true}\r\n                                        onChange={() => handleChange(revision)}\r\n                                        value={revision.revision}\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            marginTop: \"3px\",\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor={revision.id}\r\n                                        style={{ marginBottom: \"3px\" }}\r\n                                    >\r\n                                        {revision.revision}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {reasonError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {reasonError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n                ) : null}\r\n\r\n                {task?.taskSubTask?.length > 0 && (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select SubTask\r\n                            <sup className=\"font-weight-bold f-16\">*</sup> :\r\n                        </label>\r\n                        <SubtaskSelectionMenu\r\n                            task={task}\r\n                            subTasks={subtasks}\r\n                            setSubtasks={setSubtasks}\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n                {subtasks?.length > 0 && (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Comment:\r\n                        </label>\r\n                        {subtasks.map((s, i) => (\r\n                            <React.Fragment key={s.subtask_id}>\r\n                                <div className=\"form-group\">\r\n                                    <label\r\n                                        htmlFor=\"\"\r\n                                        className=\"font-weight-bold\"\r\n                                    >\r\n                                        {i + 1}. Task: {s?.title}\r\n                                    </label>{\" \"}\r\n                                    <br />\r\n                                    <label className=\"font-weight-bold\">\r\n                                        Write Your Revision\r\n                                        <sup className=\"font-weight-bold f-16\">\r\n                                            *\r\n                                        </sup>\r\n                                        :{\" \"}\r\n                                    </label>\r\n                                    <div className=\"ck-editor-holder\">\r\n                                        <CKEditorComponent\r\n                                            onChange={(e, editor) =>\r\n                                                hanldeEditorTextChange(\r\n                                                    e,\r\n                                                    editor,\r\n                                                    s?.subtask_id\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    {commentError && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            className=\"form-text text-danger\"\r\n                                        >\r\n                                            You have to explain the revision in\r\n                                            details, so that Developer can\r\n                                            understand where they need to work.\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"mt-3 mb-3 d-flex align-items-center\">\r\n                    {/* <Button\r\n                        onClick={onBackButtonClick}\r\n                        variant=\"tertiary\"\r\n                        className=\"ml-auto mr-2\"\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                     */}\r\n                    <NextAndContinueButton\r\n                        onClick={handleSubmition}\r\n                        isLoading={isSubmitting}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AssigneeRevisionToDev;\r\n\r\nconst NextAndContinueButton = ({ onClick, isLoading }) => {\r\n    if (!isLoading) {\r\n        return (\r\n            <Button className=\"ml-auto\" onClick={onClick}>\r\n                {\" \"}\r\n                Continue\r\n            </Button>\r\n        );\r\n    } else {\r\n        return (\r\n            <Button className=\"cursor-processing ml-auto\">\r\n                <div\r\n                    className=\"spinner-border text-white mr-2\"\r\n                    role=\"status\"\r\n                    style={{\r\n                        width: \"18px\",\r\n                        height: \"18px\",\r\n                    }}\r\n                />\r\n                Processing...\r\n            </Button>\r\n        );\r\n    }\r\n};\r\n\r\n// sub task selection menu\r\nconst SubtaskSelectionMenu = ({ task, subTasks, setSubtasks }) => {\r\n    return (\r\n        <div className=\"position-relative\">\r\n            <Listbox value={subTasks} onChange={setSubtasks} multiple>\r\n                <Listbox.Button className=\"position-relative w-100 bg-white py-2 pl-2 pr-1 border d-flex align-items-center justify-content-between\">\r\n                    <span\r\n                        className=\"w-100 mr-auto text-left d-flex flex-wrap align-items-center\"\r\n                        style={{ gap: \"6px\" }}\r\n                    >\r\n                        {subTasks?.length > 0\r\n                            ? subTasks.map((s) => (\r\n                                  <span\r\n                                      key={s.subtask_id}\r\n                                      className=\"badge badge-light\"\r\n                                      style={{ fontSize: \"13px\" }}\r\n                                  >\r\n                                      {\" \"}\r\n                                      {s?.title}{\" \"}\r\n                                  </span>\r\n                              ))\r\n                            : \"Select Subtasks\"}\r\n                    </span>\r\n                    <HiOutlineSelector />\r\n                </Listbox.Button>\r\n                <Listbox.Options\r\n                    className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                    style={{\r\n                        zIndex: 10,\r\n                        maxHeight: \"350px\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {task?.taskSubTask?.length > 0 ? (\r\n                        task?.taskSubTask?.map((s) => (\r\n                            <Listbox.Option\r\n                                value={s}\r\n                                key={s.subtask_id}\r\n                                tabIndex={-1}\r\n                                className={({ active }) =>\r\n                                    active\r\n                                        ? \"task-selection-list-option active\"\r\n                                        : \"task-selection-list-option\"\r\n                                }\r\n                            >\r\n                                {({ selected }) => (\r\n                                    <React.Fragment>\r\n                                        <div>{s.title} <span className=\"badge badge-success\">{s.assigned_to_name}</span></div>\r\n                                        {selected && (\r\n                                            <div>\r\n                                                <i className=\"fa-solid fa-check\"></i>\r\n                                            </div>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                )}\r\n                            </Listbox.Option>\r\n                        ))\r\n                    ) : (\r\n                        <div>No Data Found</div>\r\n                    )}\r\n                </Listbox.Options>\r\n            </Listbox>\r\n        </div>\r\n    );\r\n};\r\n","import React, {useState} from 'react'\r\nimport Button from '../../../components/Button';\r\nimport CKEditorComponent from '../../../../ckeditor';\r\nimport SubmitButton from '../../../components/SubmitButton';\r\nimport { User } from '../../../../utils/user-details';\r\n\r\n\r\n\r\nconst denyOptions = (type) => {\r\n    switch(type){\r\n        case 'lead_dev': \r\n            return ([\r\n                {id: 'deny1', title: 'The project manager added new things in the instruction which was not part of the original instruction'},\r\n                {id: 'deny2', title: 'The way the project manager is interpreting his original instruction now was not possible to understand from what his writing'}\r\n            ])\r\n        case 'dev':\r\n            return([\r\n                {id: 'deny1', title: 'The lead developer added new things in the instruction which was not part of the original instruction'},\r\n                {id: 'deny2', title: 'The way the lead developer is interpreting his original instruction now was not possible to understand from what his writing'}\r\n            ])\r\n        default: []\r\n    }\r\n}\r\n\r\n\r\n\r\nconst DenyAndContinue = ({onSubmit, isSubmitting, onBack, task}) => {\r\n    const auth = new User(window?.Laravel?.user);\r\n    const [reason, setReason] = useState(\"\");\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [err, setErr] = useState(null);\r\n\r\n    const handleEditorDataChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // radio button change\r\n    const handleChange = (e) => {\r\n        setReason(e.target.value);\r\n    };\r\n\r\n     // validation\r\n     const validate = () => {\r\n        let errorCount = 0;\r\n        \r\n        if(comment === \"\"){\r\n             errorCount++;\r\n             setCommentError('You have to explain the revision in details, so that lead developer/developer can understand where they need to work.')     \r\n        }\r\n \r\n        if(reason === ''){\r\n             errorCount++;\r\n             setReasonError('You have to select a reason from above options')\r\n        }\r\n \r\n        return errorCount === 0; \r\n     }\r\n\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            onSubmit({\r\n                comment,\r\n                denyReason: reason\r\n            });\r\n        }else{\r\n            setErr(\"You have to Explain Why Did You Deny!\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const options = auth?.getRoleId() === 6 ? denyOptions('lead_dev') : denyOptions('dev');\r\n    return (\r\n        <React.Fragment>  \r\n            <form action=\"\">\r\n                {/* reason for deny */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Select reason for deny<sup className=\"f-16\">*</sup> :\r\n                    </label>\r\n                    <div className=\"px-3\">\r\n                        {options.map(option => (\r\n                            <div key={option.id} className=\"form-check d-flex align-items-start mb-2\">\r\n                                <input\r\n                                    className=\"form-check-input mr-2\"\r\n                                    type=\"radio\"\r\n                                    name=\"exampleRadios\"\r\n                                    id={option.id}\r\n                                    required= {true}\r\n                                    onChange={handleChange}\r\n                                    value={option.title}\r\n                                    style={{\r\n                                        width: \"16px\",\r\n                                        height: \"16px\",\r\n                                        marginTop: \"3px\",\r\n                                    }}\r\n                                    \r\n                                />\r\n                                <label\r\n                                    className=\"form-check-label\"\r\n                                    htmlFor={option.id}\r\n                                    style={{ marginBottom: \"3px\" }}\r\n                                >\r\n                                    {option.title}\r\n                                </label>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    {reasonError && <small id=\"emailHelp\" className=\"form-text text-danger\">{reasonError}</small>}\r\n                </div>\r\n\r\n\r\n                {/* rich editor  */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Please Explain Why Did You Deny? <sup className=\"f-16 text-red\">*</sup>\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent onChange={handleEditorDataChange} />\r\n                    </div>\r\n                    {commentError && <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                        {commentError}\r\n                    </small>} \r\n                </div>\r\n\r\n                <div className=\"mt-3 d-flex align-items-center\">\r\n                        <Button onClick={onBack} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                            Back\r\n                        </Button>\r\n\r\n                        {!isSubmitting ? (\r\n                            <React.Fragment>\r\n                                <React.Fragment>\r\n                                {_.includes([4, 6], auth?.getRoleId()) ? (\r\n                                    <Button onClick={handleOnSubmit}>Next</Button>\r\n                                ): \r\n                                    <SubmitButton\r\n                                        title=\"Submit\" \r\n                                        isLoading={isSubmitting}\r\n                                        onClick={handleOnSubmit}\r\n                                    />\r\n                                }\r\n                            </React.Fragment>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Button className=\"cursor-processing\">\r\n                                    <div\r\n                                        className=\"spinner-border text-white\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"18px\",\r\n                                            height: \"18px\",\r\n                                        }}\r\n                                    />{\" \"}\r\n                                    Processing...\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default DenyAndContinue","import React, { useState } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport RevisionView from \"./RevisionView\";\r\nimport { RevisionAcceptAndContinue } from \"./RevisionAcceptAndContinue\";\r\nimport AssigneeRevisionToDev from \"./AssigneeRevisionToDev\";\r\nimport DenyAndContinue from \"./DenyAndContinue\";\r\nimport {\r\n    useGetRevisionDetailsQuery,\r\n    useRevisionAcceptOrDenyMutation,\r\n} from \"../../../../services/api/SingleTaskPageApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setTaskStatus } from \"../../../../services/features/subTaskSlice\";\r\nimport { User } from \"../../../../utils/user-details\";\r\n\r\nconst DeveloperRevisionView = ({ task, close }) => {\r\n    const [show, setShow] = useState(\"REVISION\");\r\n    const [accept, setAccept] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const { data: revision, isFetching: isFetchingRevision } =\r\n        useGetRevisionDetailsQuery(task?.id);\r\n    const [revisionAcceptOrDeny, { isLoading: isLoadingRevisionReview }] =\r\n        useRevisionAcceptOrDenyMutation();\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n    // handle Accept and continue submission\r\n    const handleAcceptAndContinueSubmission = (data, type) => {\r\n        const _data = {\r\n            comment: data?.comment ?? \"\",\r\n            deny_reason: data?.denyReason ?? \"\",\r\n            task_id: task?.id,\r\n            user_id: auth?.getId(),\r\n            revision_id: revision?.id,\r\n            mode: data?.continue ? \"continue\" : accept,\r\n        };\r\n\r\n        revisionAcceptOrDeny(_data)\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (_.includes([4, 6], auth?.getRoleId())) {\r\n                    setShow(type);\r\n                } else {\r\n                    dispatch(setTaskStatus(res?.task_status));\r\n                    close();\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    // generate modal title by user role id\r\n\r\n    const generateModalTitle = () => {\r\n        if (auth.getRoleId() === 4) {\r\n            return show === \"ASSIGNEE_TO_DEV\"\r\n                ? \"Revision For Lead Developer\"\r\n                : \"Revision By Project Manager/Top Management\";\r\n        } else if (auth.getRoleId() === 6) {\r\n            return show === \"ASSIGNEE_TO_DEV\"\r\n                ? \"Revision For Developer\"\r\n                : \"Revision By Project Manager/Top Management\";\r\n        } else if (auth.getRoleId() === 9 || auth.getRoleId() === 10) {\r\n            if (\r\n                revision?.revision_status === \"Project Manager Revision\" ||\r\n                revision?.revision_status === \"Client Has Revision\"\r\n            ) {\r\n                return \"Revision By Project Manager /Top Management\";\r\n            } else {\r\n                return \"Revision By Lead Designer\";\r\n            }\r\n        } else return \"Revision By Lead Developer\";\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div\r\n                className=\"sp1_single_task--modal-panel\"\r\n                style={{ maxWidth: \"550px\" }}\r\n            >\r\n                <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                    <div className=\"font-weight-bold f-16\">\r\n                        Task#{task?.id}: {generateModalTitle()}\r\n                    </div>\r\n                    <Button onClick={close} className=\"\">\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"px-3\">\r\n                    {show === \"REVISION\" && (\r\n                        <RevisionView\r\n                            revision={revision}\r\n                            isLoading={isFetchingRevision}\r\n                            isContinue={isLoadingRevisionReview}\r\n                            onAccept={() => {\r\n                                setAccept(\"accept\");\r\n                                setShow(\"ACCEPT_AND_CONTINUE\");\r\n                            }}\r\n                            onDeny={() => {\r\n                                setAccept(\"deny\");\r\n                                setShow(\"DENY_AND_CONTINUE\");\r\n                            }}\r\n                            onContinue={() => {\r\n                                setAccept(\"continue\");\r\n                                handleAcceptAndContinueSubmission(\r\n                                    { continue: true },\r\n                                    \"\"\r\n                                );\r\n                            }}\r\n                        />\r\n                    )}\r\n\r\n                    {show === \"ACCEPT_AND_CONTINUE\" && (\r\n                        <RevisionAcceptAndContinue\r\n                            task={task}\r\n                            isSubmitting={isLoadingRevisionReview}\r\n                            onSubmit={(data) =>\r\n                                handleAcceptAndContinueSubmission(\r\n                                    data,\r\n                                    \"ASSIGNEE_TO_DEV\"\r\n                                )\r\n                            }\r\n                            close={() => setShow(\"REVISION\")}\r\n                        />\r\n                    )}\r\n\r\n                    {show === \"DENY_AND_CONTINUE\" && (\r\n                        <DenyAndContinue\r\n                            task={task}\r\n                            onSubmit={(data) =>\r\n                                handleAcceptAndContinueSubmission(\r\n                                    data,\r\n                                    \"DENY_ASSIGNEE_TO_DEV\"\r\n                                )\r\n                            }\r\n                            isSubmitting={isLoadingRevisionReview}\r\n                            onBack={() => setShow(\"REVISION\")}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default DeveloperRevisionView;\r\n","import _ from 'lodash';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { useGetRevisionDetailsQuery, useRevisionAcceptOrDenyByLeadDeveloperMutation } from '../../../../services/api/SingleTaskPageApi';\r\nimport { User } from '../../../../utils/user-details';\r\nimport Button from '../../../components/Button';\r\nimport AssigneeRevisionToDev from './AssigneeRevisionToDev';\r\nimport DenyAndContinue from './DenyAndContinue';\r\nimport { RevisionAcceptAndContinue } from './RevisionAcceptAndContinue';\r\nimport RevisionView from './RevisionView';\r\n\r\n\r\nconst RevisionViewModal = ({task, close}) => {\r\n  const [show, setShow] = useState(\"REVISION\");\r\n  const [accept, setAccept] = useState('');\r\n  const [comment, setComment] = useState('');\r\n  const [denyReason, setDenyReason] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { data: revision, isFetching } = useGetRevisionDetailsQuery(task?.id);\r\n//   const [revisionAcceptOrDeny, {isLoading: isLoadingRevisionReview}] = useRevisionAcceptOrDenyMutation();\r\n  const auth = new User(window?.Laravel?.user);\r\n  const [\r\n    revisionAcceptOrDeny,\r\n    {isLoading: isLoadingRevisionReview}\r\n  ] = useRevisionAcceptOrDenyByLeadDeveloperMutation();\r\n\r\n  // handle Accept and continue submition\r\n  const hanldeAcceptAndContinueSubmition = (data, type) => {\r\n    setComment(data);\r\n    setShow(type);\r\n  }\r\n\r\n   // handle Accept and continue submition\r\n   const hanldeDenyAndContinueSubmition = (data, type) => {\r\n    setComment(data);\r\n    setDenyReason(data?.denyReason);\r\n    setShow(type);\r\n  }\r\n\r\n\r\n  const handleOnSubmit = async (data, type) =>{\r\n    let fdata ={\r\n        comment: comment?.comment ?? '',\r\n        task_id: data?.task_id,\r\n        project_id: task?.projectId,\r\n        user_id: auth?.getId(),\r\n        subTask: _.map(data?.comments, comment => ({...comment, is_deniable: data?.is_deniable})),\r\n        revision_acknowledgement: data?.reason ?? '',\r\n        revision_id: revision?.id,\r\n        mode: data?.continue ? 'continue' : accept,\r\n        deny_reason: denyReason ?? '',\r\n        is_deniable: data?.is_deniable ?? false,\r\n    }\r\n\r\n\r\n    const params = (!data?.continue && accept===\"deny\") ? 'deny-continue' :'accept-continue';\r\n\r\n    await revisionAcceptOrDeny({fdata, params})\r\n    .unwrap()\r\n    .then(res => {\r\n        toast.success('Your request has been successfully processed')\r\n        close();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  const handleContinueButton = () => {\r\n    setAccept('continue');\r\n    if(_.size(revision?.taskSubTask) === 0){\r\n        setShow('DENY_ASSIGNEE_TO_DEV');\r\n    }else{\r\n        handleOnSubmit({\r\n            continue: true,\r\n        }, '')\r\n    }\r\n  }\r\n\r\n\r\n  const generateModalTitle = () => {\r\n    if(auth.getRoleId() === 4){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Lead Developer\":\"Revision By Project Manager\";\r\n    }else if(auth.getRoleId() === 6){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Developer\":\"Revision By Project Manager\";\r\n    }else if(auth.getRoleId() === 9 || auth.getRoleId() === 10){\r\n        return \"Revision By Project Manager\";\r\n    }else return \"Revision By Lead Developer\"\r\n  }\r\n\r\n\r\n\r\n\r\n//   console.log({task})\r\n  return (\r\n    <React.Fragment>\r\n        <div\r\n            className=\"sp1_single_task--modal-panel\"\r\n            style={{ maxWidth: \"550px\" }}\r\n        >\r\n            <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                <div className=\"font-weight-bold f-16\">\r\n                    Task#{task?.id}:\r\n                    {generateModalTitle()}\r\n                </div>\r\n                <Button onClick={close} className=\"\">\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"px-3\">\r\n               {show === 'REVISION' &&\r\n                    <RevisionView\r\n                        revision={revision}\r\n                        isLoading= {isFetching}\r\n                        isContinue={isLoadingRevisionReview}\r\n                        onAccept={() => {\r\n                            setAccept('accept');\r\n                            setShow('ACCEPT_AND_CONTINUE');\r\n                        }}\r\n                        onDeny={() => {\r\n                            setAccept('deny');\r\n                            setShow('DENY_AND_CONTINUE')\r\n                        }}\r\n                        onContinue={handleContinueButton}\r\n                    />\r\n                }\r\n\r\n                {\r\n                    show === 'ACCEPT_AND_CONTINUE' &&\r\n                    <RevisionAcceptAndContinue\r\n                        task={task}\r\n                        isSubmitting={isLoadingRevisionReview}\r\n                        onSubmit={data => hanldeAcceptAndContinueSubmition(data, \"ASSIGNEE_TO_DEV\")}\r\n                        close={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n\r\n                {show === \"ASSIGNEE_TO_DEV\" &&\r\n                    <AssigneeRevisionToDev\r\n                        task={task}\r\n                        revision={revision}\r\n                        type={true}\r\n                        onSubmit={(data) =>handleOnSubmit( data, 'ASSIGNEE_TO_DEV' )}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"ACCEPT_AND_CONTINUE\")}\r\n                    />\r\n                }\r\n\r\n                {show === \"DENY_AND_CONTINUE\" &&\r\n                    <DenyAndContinue\r\n                        task={task}\r\n                        onSubmit={data => hanldeDenyAndContinueSubmition(data, \"DENY_ASSIGNEE_TO_DEV\")}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n\r\n\r\n                {_.size(task?.taskSubTask) > 0 && show === \"DENY_ASSIGNEE_TO_DEV\" &&\r\n                    <AssigneeRevisionToDev\r\n                        task={task}\r\n                        revision={revision}\r\n                        type={false}\r\n                        onSubmit={(data) => handleOnSubmit(data, 'DENY_ASSIGNEE_TO_DEV')}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"DENY_AND_CONTINUE\")}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default RevisionViewModal\r\n","import React, { useState } from 'react';\r\nimport Button from '../../../components/Button';\r\nimport Modal from '../../../components/Modal';\r\nimport DeveloperRevisionView from './DeveloperRevisionView';\r\nimport RevisionViewModal from './RevisionViewModal';\r\n\r\nconst RevisionViewControl = ({task, auth, status}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const singleTask = task;\r\n\r\n    console.log({task})\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn --view-revision'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Revision</span>\r\n        </Button>\r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                {\r\n                    // check is subtask\r\n                    task?.hasSubtask ?\r\n                    <RevisionViewModal\r\n                        task={singleTask}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                    :\r\n                    <DeveloperRevisionView\r\n                        task={task}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n        </Modal>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RevisionViewControl\r\n","import React from 'react'\r\n\r\nexport default function GuideLineText() {\r\n\r\n    const html = `<html><head><meta content=\"text/html; charset=UTF-8\" http-equiv=\"content-type\"><style type=\"text/css\">ol{margin:0;padding:0}table td,table th{padding:0}.c4{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c5{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c2{height:11pt}.c3{font-style:italic}.c1{font-weight:700}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class=\"c5 doc-content\"><p class=\"c0\"><span>Other than all the old fields, we have introduced the task type and page type fields in the new subtask creation form. Here is a guide for you so you know when to choose which one: <br><br></span><span class=\"c1\">1. New page design:</span><span>&nbsp;When you are going to need any new pages developed (except for cloning for example duplicating a service page to create 20 more service pages and cases like this), you should select this one. It has 2 subdivisions in the next field: <br><br></span><span class=\"c1\">A. Primary page development:</span><span class=\"c4\">&nbsp;All the pages on the website that are money pages (can generate money or revenue), require significant effort to be developed and clients usually remain very picky about them and don&rsquo;t want to compromise anything in those pages are what we are calling primary pages. Primary pages will have these elements mandatorily: <br> &nbsp; &nbsp; They have to be money pages like home, product, service, collection etc. </span></p><p class=\"c0\"><span class=\"c4\">&nbsp; &nbsp; &nbsp;*Most of the traffic will be on these pages <br> &nbsp; &nbsp; They have not less than 6 sections and every section has to be well designed<br> &nbsp; &nbsp; Homepage should be always counted as a primary page. <br> &nbsp; &nbsp; The developers will have to put significant effort to build them</span></p><p class=\"c0\"><span>&nbsp; &nbsp; &nbsp;*The clients will be serious/picky about these pages and won&#39;t accept unless they are perfect. <br><br></span><span class=\"c1\">Rough numbers of primary page on a website:</span><span>&nbsp;Not more than 3 (Except for very rare cases)<br><br></span><span class=\"c1\">Example:</span><span>&nbsp;Home, product page and collection pages for woocommerce/shopify; home, service category and service page for service websites; Home, property buy/sale listing pages for a real estate broker site and like this. <br><br><br>B. </span><span class=\"c1\">Secondary page development:</span><span class=\"c4\">&nbsp;All the relatively less important pages on the site should go to secondary pages. The characteristics include: <br> &nbsp;*They don&rsquo;t generate money necessarily, they are needed for customers&#39; trust, information and other things. For example, about us, shipping policy, FAQ, return policy etc. <br> &nbsp;*They have less than 6 sections, for example contact us. <br> &nbsp;*Require less efforts from the developers to develop them.<br> &nbsp;*In many cases, developers can directly use the template with minimum customization. For example, cart, checkout pages on ecommerce sites. </span></p><p class=\"c0\"><span>&nbsp; *The clients will be less serious about them as these pages are not super sensitive. <br><br><br>2. </span><span class=\"c1\">Cloning existing design: <br></span><span class=\"c4\">Any cloning/duplication job that needs to be done in bulk should go under this. Example include: <br><br>A. Creating 20 service pages from 1 service page just by changing the content and the picture. <br>B. Creating/uploading 300 products after the product page will be developed initially. </span></p><p class=\"c0\"><span class=\"c4\">C. Creating 70 location pages from 1 page template finalized initially. <br><br>These tasks can be assigned to junior most persons in the team as these are identical to data entry works. <br><br></span></p><p class=\"c0\"><span>3. </span><span class=\"c1\">Others: </span><span><br>Under others, there are some other work types which you can select depending on your needs. <br><br>Choosing any task as the primary task will require authorization from team lead/management and the task will be assigned to the developers after the authorization part will be done. Declare any page as a primary page carefully as we are going to set up a point system for the developers where developers will get more points for the primary pages when compared to the secondary pages. So declaring any page as a primary page when it will take almost no effort to create can give the respective developer an unfair edge over the rest of him team members. <br><br></span><span class=\"c1\">P.S. </span><span class=\"c1 c3\">Other than these, we have added a new field named page url in the subtask creation form. So from now, you have to define the urls where the developers will work when assigning a task. It&rsquo;s important that the developers don&#39;t choose urls/permalinks randomly and you declare them beforehand and they use them mandatorily. <br><br></span><span class=\"c1\">Naming Criteria<br></span><span class=\"c4\">Make sure the subtask names are self explanatory so you or anyone else from the management knows what the subtask was about from its name. <br><br>For example, if the task name is &ldquo;Homepage&rdquo;, and if you have to break it into parts for obvious reasons, the subtask names should be as below: <br>Homepage mockup design (XD)</span></p><p class=\"c0\"><span class=\"c4\">Creating a custom slider for the homepage</span></p><p class=\"c0\"><span class=\"c4\">Converting XD to wordpress for the homepage</span></p><p class=\"c0 c2\"><span class=\"c4\"></span></p><p class=\"c0 c2\"><span><br><br><br></span></p></body></html>`\r\n  return (\r\n    <div dangerouslySetInnerHTML={{__html: html}}/>\r\n  )\r\n}\r\n","import { useState } from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport GuideLineText from \"./subtask_creation_guide/GuideLineText\";\r\n\r\n\r\nexport default function SubtaskCreationControl({ className }) {\r\n  const [subtaskCreationModalIsOpen, setSubtaskCreationModalIsOpen] = useState(false);\r\n\r\n\r\n    // console.log(location);\r\n\r\n    const close = () => setSubtaskCreationModalIsOpen(false);\r\n    const open = () => setSubtaskCreationModalIsOpen(true);\r\n\r\n    return (\r\n        <div className={` ${className}`} >\r\n            <Button\r\n                variant=\"tertiary\"\r\n                // onClick={toggle}\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {/* {isFetching ? <Loader title=\"Processing...\" /> : <i className=\"fa-solid fa-check\" />} */}\r\n                <span className=\"d-inline ml-1\"> Subtask creation guide </span>\r\n            </Button>\r\n\r\n            <Modal isOpen={subtaskCreationModalIsOpen} className=\"sp1_mark-as--modal \">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_mark-as--modal-panel\"\r\n                        style={{ overflow: \"visible\", maxWidth: \"70rem\" }}\r\n                    >\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0 ml-2\" style={{fontStyle:'normal',fontWeight:'bold'}}>Subtask creation guide</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"visible\" }}\r\n                        >\r\n                            \r\n                            <div style={{maxHeight:'80vh',overflow:'auto',padding:'0 20px 0 0'}}>\r\n                                <GuideLineText />\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 d-flex align-items-center\">\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                    onClick={close}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                                {/* <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" /> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\n\r\nconst StartTimerConfirmationModal = ({isOpen, onConfirm}) => {\r\n  const [buttonVisible, setButtonVisible] = React.useState(false);\r\n  const [countDown, setCountDown] = React.useState(20);\r\n\r\n  React.useEffect(() => {\r\n    let count = countDown ?? 0;\r\n\r\n    let timeIntervelId = setInterval(() => {\r\n        setCountDown(count--);\r\n    }, 1000);\r\n\r\n\r\n    let timeOutId = setTimeout(() => {\r\n      setButtonVisible(true);\r\n      clearInterval(timeIntervelId)\r\n    }, 22000);\r\n\r\n    \r\n\r\n    return () => {\r\n      clearTimeout(timeOutId);\r\n      clearInterval(timeIntervelId);\r\n    };\r\n  }, []);\r\n\r\n  const text = `<html><head><meta content=\"text/html; charset=UTF-8\" http-equiv=\"content-type\"><style type=\"text/css\">ol{margin:0;padding:0}table td,table th{padding:0}.c0{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c2{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c3{height:11pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class=\"c2 doc-content\"><p class=\"c1\"><span class=\"c0\">Do You Understand The Following Things?</span></p><p class=\"c1\"><span class=\"c0\">A. Your job is not to decide what the look and feel of a website will be based on a few reference websites.</span></p><p class=\"c1\"><span class=\"c0\">B. Your job is not to research a theme based on an instruction shared by the PM.</span></p><p class=\"c1\"><span class=\"c0\">C. Your job is not to research a plugin based on a problem shared by PM.</span></p><p class=\"c1\"><span class=\"c0\">D. Your job is not to choose the color scheme of a website.</span></p><p class=\"c1\"><span class=\"c0\">E. Your job is not to talk to the support for example the Shopify support team, theme support, plugin support and any other support for any solution.</span></p><p class=\"c1\"><span class=\"c0\">F. Your job is not to create the training videos for the client after the completion of a project.</span></p><p class=\"c1\"><span class=\"c0\">G. You understand that all your hours have to be logged/tracked, and you will be questioned if you don&rsquo;t log at least 7 hours for any reason.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your job is to execute the work based on the defined requirements.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily. Report immediately if you are asked to do any of these and if it wasn&rsquo;t authorized by top management. You should see a text like &ldquo;Authorized by top management&rdquo; on the right side of the task title if it was authorized.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">In case, you don&rsquo;t report, the extra time taken for these will be considered as your lacking (as they will remain unaccountable) and you will receive negative performance score.&quot;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2438;&#2474;&#2472;&#2495; &#2453;&#2495; &#2472;&#2495;&#2478;&#2509;&#2472;&#2482;&#2495;&#2454;&#2495;&#2468; &#2476;&#2495;&#2487;&#2479;&#2492;&#2455;&#2497;&#2482;&#2495; &#2476;&#2497;&#2461;&#2503;&#2472;?</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2535;&#2404; &#2453;&#2527;&#2503;&#2453;&#2463;&#2495; &#2480;&#2503;&#2475;&#2494;&#2480;&#2503;&#2472;&#2509;&#2488; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; &#2451;&#2474;&#2480; &#2477;&#2495;&#2468;&#2509;&#2468;&#2495; &#2453;&#2480;&#2503; &#2453;&#2509;&#2482;&#2494;&#2527;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; Look &amp; Feel &#2453;&#2503;&#2478;&#2472; &#2489;&#2476;&#2503; &#2468;&#2494;&#2480; &#2476;&#2495;&#2487;&#2527;&#2503; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2536;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2439;&#2472;&#2509;&#2488;&#2463;&#2509;&#2480;&#2494;&#2453;&#2486;&#2472; &#2437;&#2472;&#2497;&#2479;&#2494;&#2527;&#2496; &#2480;&#2495;&#2488;&#2494;&#2480;&#2509;&#2458; &#2453;&#2480;&#2503; &#2469;&#2495;&#2478; &#2454;&#2497;&#2433;&#2460;&#2503; &#2476;&#2503;&#2480; &#2453;&#2480;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2537;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2439;&#2472;&#2509;&#2488;&#2463;&#2509;&#2480;&#2494;&#2453;&#2486;&#2472; &#2437;&#2472;&#2497;&#2479;&#2494;&#2527;&#2496; &#2480;&#2495;&#2488;&#2494;&#2480;&#2509;&#2458; &#2453;&#2480;&#2503; &#2474;&#2509;&#2482;&#2494;&#2455;&#2495;&#2472; &#2454;&#2497;&#2433;&#2460;&#2503; &#2476;&#2503;&#2480; &#2453;&#2480;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2538;&#2404; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; &#2453;&#2494;&#2482;&#2494;&#2480; &#2488;&#2509;&#2453;&#2495;&#2478; &#2453;&#2495; &#2489;&#2476;&#2503; &#2488;&#2503;&#2463;&#2494; &#2474;&#2459;&#2472;&#2509;&#2470; &#2453;&#2480;&#2494; &#2476;&#2494; &#2453;&#2507;&#2472; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2539;&#2404; &#2453;&#2507;&#2472; &#2471;&#2480;&#2472;&#2503;&#2480; &#2488;&#2478;&#2488;&#2509;&#2479;&#2494;&#2480; &#2488;&#2478;&#2494;&#2471;&#2494;&#2472;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2453;&#2507;&#2472; &#2474;&#2509;&#2480;&#2453;&#2494;&#2480; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;&#2503;&#2480; &#2488;&#2494;&#2469;&#2503; &#2479;&#2507;&#2455;&#2494;&#2479;&#2507;&#2455; &#2453;&#2480;&#2494; (&#2479;&#2503;&#2478;&#2472;, &#2486;&#2474;&#2495;&#2475;&#2494;&#2439; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;, &#2469;&#2495;&#2478; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463;, &#2474;&#2509;&#2482;&#2494;&#2455;&#2495;&#2472; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463;, &#2447;&#2476;&#2434; &#2437;&#2472;&#2509;&#2479; &#2453;&#2507;&#2472; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;) &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2540;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2486;&#2503;&#2487; &#2489;&#2476;&#2494;&#2480; &#2474;&#2480;&#2503; &#2453;&#2509;&#2482;&#2494;&#2527;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2453;&#2507;&#2472; &#2474;&#2509;&#2480;&#2453;&#2494;&#2480; &#2463;&#2509;&#2480;&#2503;&#2439;&#2472;&#2495;&#2434; &#2477;&#2495;&#2465;&#2495;&#2451; &#2476;&#2494;&#2472;&#2494;&#2472;&#2507; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2541;&#2404; &#2438;&#2474;&#2472;&#2495; &#2488;&#2509;&#2476;&#2496;&#2453;&#2494;&#2480; &#2453;&#2480;&#2459;&#2503;&#2472; &#2479;&#2503;, &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2488;&#2453;&#2482; &#2453;&#2494;&#2460;&#2503;&#2480; &#2488;&#2478;&#2527; Seopage1 &#2447;&#2480; &#2439; &#2438;&#2480; &#2474;&#2495; &#2488;&#2495;&#2488;&#2509;&#2463;&#2503;&#2478;&#2503; &#2463;&#2509;&#2480;&#2509;&#2479;&#2494;&#2453; &#2453;&#2480;&#2468;&#2503; &#2489;&#2476;&#2503; &#2447;&#2476;&#2434; &#2479;&#2470;&#2495; &#2438;&#2474;&#2472;&#2495; &#2453;&#2507;&#2472; &#2453;&#2494;&#2480;&#2467;&#2503; &#2453;&#2478;&#2474;&#2453;&#2509;&#2487;&#2503; 7 &#2456;&#2467;&#2509;&#2463;&#2494; &#2463;&#2509;&#2480;&#2509;&#2479;&#2494;&#2453; &#2472;&#2494; &#2453;&#2480;&#2503;&#2472; &#2468;&#2494;&#2489;&#2482;&#2503; &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2474;&#2509;&#2480;&#2486;&#2509;&#2472; &#2453;&#2480;&#2494; &#2489;&#2476;&#2503;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2488;&#2494;&#2471;&#2494;&#2480;&#2467;&#2477;&#2494;&#2476;&#2503;, &#2479;&#2503;&#2453;&#2507;&#2472;&#2507; &#2471;&#2480;&#2467;&#2503;&#2480; &#2474;&#2509;&#2480;&#2479;&#2492;&#2507;&#2460;&#2472;&#2496;&#2479;&#2492;&#2468;&#2494; &#2476;&#2494; Requirements &#2447;&#2480; &#2476;&#2495;&#2487;&#2527;&#2503; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; (&#2479;&#2503; &#2453;&#2507;&#2472; &#2471;&#2480;&#2467;&#2503;&#2480;) &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2453;&#2494;&#2460;&#2404; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2489;&#2458;&#2509;&#2459;&#2503;, &#2438;&#2474;&#2472;&#2494;&#2480; &#2441;&#2474;&#2480;&#2503; &#2447;&#2488;&#2494;&#2439;&#2472; &#2453;&#2480;&#2494; &#2453;&#2494;&#2460;&#2455;&#2497;&#2482;&#2507;&#2453;&#2503; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2470;&#2503;&#2527;&#2494; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2437;&#2472;&#2509;&#2479;&#2479;&#2494;&#2527;&#2496; &#2476;&#2494;&#2488;&#2509;&#2468;&#2476;&#2494;&#2527;&#2472; &#2453;&#2480;&#2494;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2479;&#2470;&#2495; &#2453;&#2507;&#2472; &#2453;&#2494;&#2480;&#2467;&#2503;, &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480; &#2447;&#2439; &#2453;&#2507;&#2472;&#2451; &#2453;&#2494;&#2460;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2488;&#2494;&#2489;&#2494;&#2479;&#2509;&#2479;&#2503;&#2480; &#2474;&#2509;&#2480;&#2479;&#2492;&#2507;&#2460;&#2472; &#2478;&#2472;&#2503; &#2453;&#2480;&#2503;, &#2468;&#2494;&#2489;&#2482;&#2503; &#2468;&#2495;&#2472;&#2495; &#2488;&#2503;&#2455;&#2497;&#2482;&#2495;&#2480; &#2460;&#2472;&#2509;&#2479; &#2438;&#2482;&#2494;&#2470;&#2494; &#2438;&#2482;&#2494;&#2470;&#2494; &#2476;&#2495;&#2486;&#2503;&#2487; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2494;&#2460; &#2468;&#2504;&#2480;&#2495; &#2453;&#2480;&#2468;&#2503; &#2489;&#2476;&#2503; &#2447;&#2476;&#2434; &#2448; &#2453;&#2494;&#2460;&#2455;&#2497;&#2482;&#2495; &#2437;&#2476;&#2486;&#2509;&#2479;&#2439; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2489;&#2468;&#2503; &#2489;&#2476;&#2503;&#2404; &#2479;&#2470;&#2495; &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2507;&#2472;&#2451; &#2453;&#2494;&#2460; &#2453;&#2480;&#2468;&#2503; &#2476;&#2482;&#2494; &#2489;&#2479;&#2492; &#2447;&#2476;&#2434; &#2488;&#2503;&#2439; &#2453;&#2494;&#2460;&#2463;&#2495; &#2479;&#2470;&#2495; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2472;&#2494; &#2489;&#2479;&#2492; &#2468;&#2476;&#2503; &#2468;&#2494; &#2437;&#2476;&#2495;&#2482;&#2478;&#2509;&#2476;&#2503; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2453;&#2494;&#2459;&#2503; &#2480;&#2495;&#2474;&#2507;&#2480;&#2509;&#2463;&#2503;&#2480; &#2478;&#2494;&#2471;&#2509;&#2479;&#2478;&#2503; &#2460;&#2494;&#2472;&#2494;&#2468;&#2503; &#2489;&#2476;&#2503;&#2404; &nbsp;&#2488;&#2494;&#2471;&#2494;&#2480;&#2467;&#2468;, &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2494;&#2460;&#2503;&#2480; &#2453;&#2509;&#2487;&#2503;&#2468;&#2509;&#2480;&#2503;, &#2488;&#2434;&#2486;&#2509;&#2482;&#2495;&#2487;&#2509;&#2463; &#2474;&#2503;&#2460;&#2503;&#2480; &#2465;&#2494;&#2472; &#2474;&#2494;&#2486;&#2503; &ldquo;Authorized by top management&rdquo; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2447;&#2453;&#2463;&#2495; &#2482;&#2503;&#2454;&#2494; &#2470;&#2503;&#2454;&#2468;&#2503; &#2474;&#2494;&#2480;&#2476;&#2503;&#2472; &#2479;&#2470;&#2495; &#2488;&#2503;&#2463;&#2495; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2489;&#2479;&#2492;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2447;&#2439;&#2471;&#2480;&#2467;&#2503;&#2480; &#2437;&#2472;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2453;&#2494;&#2460;&#2503;&#2480; &#2453;&#2509;&#2487;&#2503;&#2468;&#2509;&#2480;&#2503; &#2438;&#2474;&#2472;&#2495; &#2479;&#2470;&#2495; &#2480;&#2495;&#2474;&#2507;&#2480;&#2509;&#2463; &#2472;&#2494; &#2453;&#2480;&#2503;&#2472;, &#2468;&#2494;&#2489;&#2482;&#2503; &#2488;&#2503;&#2439; &#2453;&#2494;&#2460;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2438;&#2474;&#2472;&#2495; &#2479;&#2503;&#2439; &#2488;&#2478;&#2527; &#2476;&#2509;&#2479;&#2527; &#2453;&#2480;&#2476;&#2503;&#2472; &#2468;&#2494; &#2455;&#2509;&#2480;&#2489;&#2472;&#2479;&#2507;&#2455;&#2509;&#2479; &#2476;&#2482;&#2503; &#2476;&#2495;&#2476;&#2503;&#2458;&#2495;&#2468; &#2489;&#2476;&#2503; &#2472;&#2494; &#2447;&#2476;&#2434; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2437;&#2472;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2453;&#2494;&#2460;&#2503; &#2460;&#2524;&#2495;&#2468; &#2469;&#2494;&#2453;&#2494;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2474;&#2494;&#2480;&#2475;&#2480;&#2509;&#2478;&#2503;&#2472;&#2509;&#2488; &#2488;&#2509;&#2453;&#2507;&#2480;&#2503; &#2472;&#2503;&#2455;&#2503;&#2463;&#2495;&#2477; &#2474;&#2527;&#2503;&#2472;&#2509;&#2463; &#2479;&#2507;&#2455; &#2489;&#2476;&#2503;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p></body></html>`\r\n\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"subtask-timer-confirmation--modal\">\r\n        <div className='subtask-timer-confirmation--panel'>\r\n           <div className=\"subtask-timer-confirmation--content\">\r\n            <div dangerouslySetInnerHTML={{__html: text}} />\r\n\r\n            \r\n                {/* <h4 className='mb-3'> Do You Understand The Following Things? </h4>\r\n                \r\n                <ol type='A'>\r\n                    <li> Your job is not to decide what the look and feel of a website will be based on a few reference websites. </li>\r\n                    <li>Your job is not to research a theme based on an instruction shared by the PM.</li>\r\n                    <li>Your job is not to research a plugin based on a problem shared by PM.</li>\r\n                    <li>Your job is not to choose the color scheme of a website.</li>\r\n                    <li>Your job is not to talk to the support for example the Shopify support team, theme support, plugin support and any other support for any solution.</li>\r\n                    <li>Your job is not to create the training videos for the client after the completion of a project.</li>\r\n                    <li>You understand that all your hours have to be logged/tracked, and you will be questioned if you don’t log at least 7 hours for any reason.</li>\r\n                </ol>\r\n\r\n\r\n                <p>In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your job is to execute the work based on the defined requirements. </p> \r\n\r\n                <p>If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily. Report immediately if you are asked to do any of these and if it wasn’t authorized by top management. You should see a text like “Authorized by top management” on the right side of the task title if it was authorized.</p>\r\n                \r\n                <p> In case, you don’t report, the extra time taken for these will be considered as your lacking (as they will remain unaccountable) and you will receive negative performance score.”</p>\r\n                */}\r\n                <div className='d-flex align-items-center'>\r\n                     <Button \r\n                        onClick={onConfirm} \r\n                        className='ml-auto'\r\n                        disabled={!buttonVisible}\r\n                      > \r\n                        Yes, I Fully Understand This {!buttonVisible && `(${countDown})`}\r\n                      </Button> \r\n                </div> \r\n           </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StartTimerConfirmationModal","import * as React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLessTrackModal } from \"../../../../services/features/subTaskSlice\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport Loader from \"../../../components/Loader\";\r\n\r\nconst StopTimerConfrimationPopUp = React.lazy(() =>\r\n    import(\"./StopTimerConfrimationPopUp\")\r\n);\r\n\r\nconst LessTrackTimerModal = ({ stopTimer, startTimer }) => {\r\n    const { task, lessTrackModal, lessTrackModalFor } = useSelector(\r\n        (s) => s.subTask\r\n    );\r\n    const dispatch = useDispatch();\r\n\r\n    const close = () => {\r\n        dispatch(setLessTrackModal({ show: false, type: \"\" }));\r\n    };\r\n\r\n    // temporarily stop timer now\r\n    const stopTimerTemporarily = () => {\r\n        if (lessTrackModalFor === \"STOP_TIMER\") {\r\n            stopTimer();\r\n        }\r\n\r\n        if (lessTrackModalFor === \"START_TIMER\") {\r\n            startTimer();\r\n        }\r\n\r\n        close();\r\n    };\r\n    // lessTrackModal\r\n    return (\r\n        <Modal isOpen={lessTrackModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <React.Suspense\r\n                    fallback={\r\n                        <div className=\"sp1_single_task--modal-panel\">\r\n                            <Loader />\r\n                        </div>\r\n                    }\r\n                >\r\n                    <StopTimerConfrimationPopUp\r\n                        handleTemporarilyStopTimer={stopTimerTemporarily}\r\n                        close={close}\r\n                    />\r\n                </React.Suspense>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default LessTrackTimerModal;\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const StartTimerWorkingReport = () => {\r\n    return(\r\n       <div>\r\n            <Title>You haven't submitted the last day's working report.</Title>\r\n            <Text> Do you want to submit the working report?</Text>\r\n            <Note><strong>Note:</strong> If you didn't submit last day's working report, you won't be able to start the timer</Note>\r\n       </div>\r\n    )\r\n}\r\n\r\n\r\nconst Title = styled.h1`\r\n    font-weight: 600;\r\n    font-size: 1.5rem;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Text = styled.p`\r\n    font-size: 1.1rem;\r\n    color: #ee3f07;\r\n`\r\n\r\nconst Note = styled.p`\r\n    font-size: 13px;\r\n    margin-top: 5px;\r\n    color: rgb(0 0 0 / 50%);\r\n    & > strong{\r\n        color:  #ee3f07;;\r\n    }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactModal from \"react-modal\";\r\n\r\nconst ExpiredTimeModalForNewEmployee = ({\r\n    showExpirationWarningModal,\r\n    setShowExpirationWarningModal,\r\n    timeLeft,\r\n    setTimeLeft,\r\n    timerStatusForWarningModal,\r\n}) => {\r\n    const [toggleModal, setToggleModal] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setTimeLeft((prevTime) => {\r\n                if (prevTime >= 0) {\r\n                    return prevTime - 1;\r\n                } else {\r\n                    clearInterval(timer);\r\n                    return prevTime;\r\n                }\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setToggleModal(true);\r\n        }, 600000); //10 minutes\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n    // console.log(\"show warning modal\", showExpirationWarningModal);\r\n    // console.log(\"time left\", timeLeft);\r\n    // console.log(\" toggle modal warning modal\", toggleModal);\r\n    // console.log(\"time left less then 4200 seconds\", timeLeft <= 4200);\r\n    // console.log(\"time left greater then 0\", timeLeft > 0);\r\n    // console.log(\"timer status for warning\", timerStatusForWarningModal);\r\n\r\n    useEffect(() => {\r\n        if (\r\n            toggleModal &&\r\n            timeLeft <= 3600 && // 60 minutes\r\n            timeLeft > 0 &&\r\n            timerStatusForWarningModal\r\n        ) {\r\n            setShowExpirationWarningModal(true);\r\n        }\r\n    }, [toggleModal, timeLeft]);\r\n\r\n    const closeModal = () => {\r\n        setShowExpirationWarningModal(false);\r\n        setToggleModal(false);\r\n    };\r\n\r\n    const minutes = Math.floor(timeLeft / 60);\r\n    const seconds = timeLeft % 60;\r\n\r\n    return (\r\n        <ReactModal\r\n            isOpen={showExpirationWarningModal}\r\n            onRequestClose={closeModal}\r\n            contentLabel=\"Expired Time Modal\"\r\n            shouldCloseOnOverlayClick={false}\r\n            style={{\r\n                overlay: {\r\n                    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    zIndex: 9999999998,\r\n                },\r\n                content: {\r\n                    width: \"400px\",\r\n                    height: \"fit-content\",\r\n                    margin: \"auto\",\r\n                    padding: \"20px\",\r\n                    borderRadius: \"8px\",\r\n                    textAlign: \"center\",\r\n                    Index: 9999999999,\r\n                },\r\n            }}\r\n        >\r\n            <h2 style={{ marginBottom: \"20px\" }}>\r\n                Your timer will be stopped by the system after\r\n            </h2>\r\n            <h3 style={{ marginBottom: \"20px\" }}>\r\n                <span style={{ color: \"red\" }}>\r\n                    {minutes === -1 ? 0 : minutes}\r\n                </span>{\" \"}\r\n                minutes{\" \"}\r\n                <span style={{ color: \"red\" }}>\r\n                    {seconds === -1 ? 0 : seconds}\r\n                </span>{\" \"}\r\n                seconds.\r\n            </h3>\r\n            <h6>\r\n                Please complete your task, stop the timer yourself and submit\r\n                your work\r\n            </h6>\r\n            <button onClick={closeModal} className=\"btn btn-danger mt-4\">\r\n                Close\r\n            </button>\r\n        </ReactModal>\r\n    );\r\n};\r\n\r\nexport default ExpiredTimeModalForNewEmployee;\r\n","import * as React from \"react\";\r\nimport styles from \"./paginate.module.css\";\r\n\r\nimport {\r\n    useReactTable,\r\n    getCoreRowModel,\r\n    getPaginationRowModel,\r\n    getFilteredRowModel,\r\n    getExpandedRowModel,\r\n    getSortedRowModel,\r\n    flexRender,\r\n} from \"@tanstack/react-table\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\n// ui component\r\nimport {\r\n    TableContainer,\r\n    Table,\r\n    TableRow,\r\n    TableBody,\r\n    TableItem,\r\n    Flex,\r\n    TableFooter,\r\n    Select,\r\n} from \"./ui\";\r\nimport DataTableHeader from \"./TableHeader\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useLocalStorage } from \"react-use\";\r\nimport EmptyTable from \"../../../global/EmptyTable\";\r\nimport { Placeholder } from \"../../../global/Placeholder\";\r\n\r\nconst PendingTasksTable = ({\r\n    data,\r\n    columns = [],\r\n    isLoading,\r\n    onPageChange,\r\n    sorting,\r\n    tableName,\r\n    setSorting,\r\n}) => {\r\n    const [tableData, setTableData] = React.useState([]);\r\n    const [tableColumns, setTableColumns] = React.useState(columns);\r\n    const [{ pageIndex, pageSize }, setPagination] = React.useState({\r\n        pageIndex: 0,\r\n        pageSize: 10,\r\n    });\r\n\r\n    const [value, setValue] = useLocalStorage(tableName);\r\n\r\n    // on pagination\r\n    const handlePageChange = ({ selected }) => {\r\n        const paginate = {\r\n            pageIndex: selected,\r\n            pageSize,\r\n        };\r\n\r\n        setPagination({ ...paginate, pageIndex: 0 });\r\n        onPageChange(paginate);\r\n    };\r\n\r\n    // handle page size change\r\n    const handlePageSizeChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        const paginate = {\r\n            pageIndex,\r\n            pageSize: e.target.value,\r\n        };\r\n        setPagination({ ...paginate, pageIndex: 0 });\r\n        onPageChange(paginate);\r\n    };\r\n\r\n    // columns order\r\n    const [columnOrder, setColumnOrder] = React.useState(_.map(columns, \"id\"));\r\n\r\n    // if has table columns record on local store\r\n    // organize column orders\r\n    React.useEffect(() => {\r\n        if (value && value.columnOrder) {\r\n            setColumnOrder(value.columnOrder);\r\n        }\r\n    }, []);\r\n\r\n    // formate data\r\n\r\n    // use effect\r\n    // React.useEffect(() => {\r\n    //     data ? setTableData(_.orderBy(data?.data, \"desc\")) : setTableData([]);\r\n    // }, [data]);\r\n    React.useEffect(() => {\r\n        data ? setTableData(_.orderBy(data, \"desc\")) : setTableData([]);\r\n    }, [data]);\r\n\r\n    // pagination\r\n    const pagination = React.useMemo(\r\n        () => ({ pageIndex, pageSize }),\r\n        [pageIndex, pageSize]\r\n    );\r\n\r\n    // table instance\r\n    const table = useReactTable({\r\n        data: tableData,\r\n        columns: tableColumns,\r\n        state: {\r\n            sorting,\r\n            pagination,\r\n            tableName,\r\n            columnOrder,\r\n        },\r\n        // onPaginationChange: setPagination,\r\n        onSortingChange: setSorting,\r\n        onColumnOrderChange: setColumnOrder,\r\n        getCoreRowModel: getCoreRowModel(),\r\n        getPaginationRowModel: getPaginationRowModel(),\r\n        // getFilteredRowModel: getFilteredRowModel(),\r\n        getSortedRowModel: getSortedRowModel(),\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <React.Fragment>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <DataTableHeader table={table} columns={tableColumns} />\r\n                        <TableBody>\r\n                            {!isLoading &&\r\n                                table.getRowModel().rows.map((row) => (\r\n                                    <TableRow key={row.id}>\r\n                                        {row.getVisibleCells().map((cell) => (\r\n                                            <TableItem key={cell.id}>\r\n                                                {flexRender(\r\n                                                    cell.column.columnDef.cell,\r\n                                                    cell.getContext()\r\n                                                )}\r\n                                            </TableItem>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n\r\n                            {/* On loading  */}\r\n                            {isLoading &&\r\n                                _.times(pageSize, (item) => (\r\n                                    <TableRow key={item}>\r\n                                        {_.times(tableColumns.length, (col) => (\r\n                                            <TableItem\r\n                                                key={col}\r\n                                                className=\"py-3\"\r\n                                            >\r\n                                                <Placeholder />\r\n                                            </TableItem>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n\r\n                            {!isLoading && _.size(tableData) === 0 && (\r\n                                <TableRow>\r\n                                    <TableItem colSpan={_.size(tableColumns)}>\r\n                                        <EmptyTable />\r\n                                    </TableItem>\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                {data?.length > 10 && (\r\n                    <TableFooter>\r\n                        <Flex>\r\n                            Show\r\n                            <Select\r\n                                value={pageSize}\r\n                                onChange={handlePageSizeChange}\r\n                            >\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"20\">20</option>\r\n                                <option value=\"30\">30</option>\r\n                                <option value=\"50\">50</option>\r\n                                <option value=\"100\">100</option>\r\n                            </Select>\r\n                            Entries\r\n                        </Flex>\r\n\r\n                        <Flex>\r\n                            <span>\r\n                                Showing {data?.from} to {data?.to} of{\" \"}\r\n                                {data?.total} entries\r\n                            </span>\r\n\r\n                            <ReactPaginate\r\n                                breakLabel=\"...\"\r\n                                onPageChange={handlePageChange}\r\n                                previousLabel=\"Previous\"\r\n                                nextLabel=\"Next\"\r\n                                pageRangeDisplayed={3}\r\n                                marginPagesDisplayed={1}\r\n                                pageCount={data?.last_page ?? 1}\r\n                                renderOnZeroPageCount={null}\r\n                                containerClassName={styles.containerClassName}\r\n                                pageLinkClassName={styles.pageLinkClassName}\r\n                                activeLinkClassName={styles.activeLinkClassName}\r\n                                previousLinkClassName={styles.pageLinkClassName}\r\n                                nextLinkClassName={styles.pageLinkClassName}\r\n                            />\r\n                        </Flex>\r\n                    </TableFooter>\r\n                )}\r\n            </React.Fragment>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PendingTasksTable;\r\n","import Popover from \"../../../../react-latest/ui/Popover\";\r\nimport Button from \"../../../global/Button\";\r\nimport { convertTime } from \"../../../utils/converTime\";\r\nimport EvaluationTaskRevisionModal from \"../modal/EvaluationTaskRevisionModal\";\r\nimport ActionEvaluationTaskTable from \"./ActionEvaluationTaskTable\";\r\n\r\nexport const PendingTasksTableColumns = [\r\n    {\r\n        id: \"task_name\",\r\n        header: \"Task Name\",\r\n        accessorKey: \"task_name\",\r\n\r\n        cell: ({ row: { original }, className }) => {\r\n            return original?.task_name ? (\r\n                <div style={{ minWidth: \"10rem\" }}>\r\n                    <Popover>\r\n                        <Popover.Button>\r\n                            <span className=\" singleline-ellipsis link_color\">\r\n                                <span className=\"link_color\">\r\n                                    {original?.task_name}\r\n                                </span>\r\n                            </span>\r\n                        </Popover.Button>\r\n\r\n                        <Popover.Panel>\r\n                            <div className=\"revision_popover_panel\">\r\n                                <a\r\n                                    href={`/account/tasks/${original?.task_id}`}\r\n                                    className=\"hover-underline\"\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    <span className=\"link_color \">\r\n                                        {original?.task_name}\r\n                                    </span>\r\n                                </a>\r\n                            </div>\r\n                        </Popover.Panel>\r\n                    </Popover>\r\n                </div>\r\n            ) : (\r\n                <span>Not Available</span>\r\n            );\r\n        },\r\n    },\r\n\r\n    {\r\n        id: \"status\",\r\n        header: \"Task Status\",\r\n        accessorKey: \"task_board_column_name\",\r\n        cell: ({ row }) => {\r\n            const data = row?.original;\r\n            // console.log('from independent task table column',data?.column_name);\r\n            return (\r\n                <span\r\n                    className=\"badge text-white\"\r\n                    style={{ background: data?.task_board_column_color }}\r\n                >\r\n                    {data?.task_board_column_name ?? \"--\"}\r\n                </span>\r\n            );\r\n        },\r\n    },\r\n\r\n    {\r\n        id: \"total_hours\",\r\n        header: \"Total Hours Tracked\",\r\n        accessorKey: \"total_hours\",\r\n        cell: ({ row }) => {\r\n            const data = row.original;\r\n            return (\r\n                <div style={{ marginLeft: \"50px\" }}>\r\n                    {convertTime(data?.total_min)}\r\n                </div>\r\n            );\r\n        },\r\n    },\r\n\r\n    {\r\n        header: \"Action\",\r\n        accessorKey: \"assign_date\",\r\n\r\n        cell: ({ row }) => {\r\n            const data = row.original;\r\n\r\n            return (\r\n                <Button variant=\"primary\" className=\"text-white\">\r\n                    <a\r\n                        href={`/account/tasks/${data?.task_id}`}\r\n                        className=\"hover-underline text-white\"\r\n                        target=\"_blank\"\r\n                    >\r\n                        Submit\r\n                    </a>\r\n                </Button>\r\n            );\r\n        },\r\n    },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport ReactModal from \"react-modal\";\r\n\r\nimport styles from \"../../../../react/tasks/components/PrimaryPageAuthorization.module.css\";\r\nimport Card from \"../../../global/Card\";\r\n\r\nimport PendingTasksTable from \"../../../employee-evaluation/components/Table/PendingTasksTable\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\nimport { useGetTaskListQuery } from \"../../../services/api/EvaluationApiSlice\";\r\n\r\nimport { PendingTasksTableColumns } from \"../../../employee-evaluation/components/Table/PendingTasksTableColumn\";\r\nconst PendingTasksForTrainee = ({\r\n    isPendingModalOpen,\r\n    setIsPendingModalOpen,\r\n}) => {\r\n    const auth = useAuth();\r\n\r\n    const { data, isLoading } = useGetTaskListQuery(auth.id);\r\n\r\n    //filter tasks by board column id to extract un submitted tasks\r\n    const Tasks = data?.data.filter((task) =>\r\n        _.includes([1, 2, 3, 7], Number(task.task_board_column_id))\r\n    );\r\n\r\n    const [sorting, setSorting] = useState([]);\r\n    const onPageChange = (paginate) => {\r\n        setPagination(paginate);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ReactModal\r\n                style={{\r\n                    overlay: {\r\n                        backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n                        margin: \"auto auto\",\r\n                        zIndex: 99998,\r\n                    },\r\n                    content: {\r\n                        borderRadius: \"10px\",\r\n                        maxWidth: \"820px\",\r\n                        height: \"fit-content\",\r\n                        maxHeight: \"100%\",\r\n                        margin: \"auto auto\",\r\n                        padding: \"10px\",\r\n                        overflowY: \"auto\",\r\n                        zIndex: 99999,\r\n                    },\r\n                }}\r\n                isOpen={isPendingModalOpen}\r\n                onRequestClose={() => setIsPendingModalOpen(false)}\r\n                ariaHideApp={false}\r\n            >\r\n                <Card className={styles.card}>\r\n                    <Card.Head\r\n                        onClose={() => setIsPendingModalOpen(false)}\r\n                        className={styles.card_head}\r\n                    >\r\n                        Pending tasks\r\n                    </Card.Head>\r\n\r\n                    <Card.Body className={styles.card_body}>\r\n                        <PendingTasksTable\r\n                            data={Tasks}\r\n                            columns={[...PendingTasksTableColumns]}\r\n                            isLoading={isLoading}\r\n                            onPageChange={onPageChange}\r\n                            sorting={sorting}\r\n                            tableName=\"Pending Tasks Table\"\r\n                            setSorting={setSorting}\r\n                        />\r\n                    </Card.Body>\r\n                </Card>\r\n            </ReactModal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PendingTasksForTrainee;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactModal from \"react-modal\";\r\nimport PendingTasksForTrainee from \"./PendingTasksForTrainee\";\r\n\r\nconst ExpiredNotifyModalForNewEmployee = ({\r\n    expireDateForTrainer,\r\n    showExpirationNotifyModal,\r\n    setShowExpirationNotifyModal,\r\n    timeLeft,\r\n}) => {\r\n    const [isPendingModalOpen, setIsPendingModalOpen] = useState(false);\r\n    useEffect(() => {\r\n        const expireDate = new Date(expireDateForTrainer);\r\n        const currentTime = new Date();\r\n        if (currentTime > expireDate) {\r\n            // if (timeLeft < 0 && expireDateForTrainer !== null) {\r\n            setShowExpirationNotifyModal(true);\r\n        }\r\n    }, [timeLeft]);\r\n\r\n    const closeModal = () => {\r\n        setShowExpirationNotifyModal(false);\r\n    };\r\n\r\n    const handlePendingTasks = () => {\r\n        setIsPendingModalOpen(true);\r\n    };\r\n    return (\r\n        <ReactModal\r\n            isOpen={showExpirationNotifyModal}\r\n            onRequestClose={closeModal}\r\n            contentLabel=\"Expired Time Modal\"\r\n            shouldCloseOnOverlayClick={false}\r\n            ariaHideApp={false}\r\n            style={{\r\n                overlay: {\r\n                    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    zIndex: 9998,\r\n                },\r\n                content: {\r\n                    width: \"400px\",\r\n                    height: \"fit-content\",\r\n                    margin: \"auto\",\r\n                    padding: \"20px\",\r\n                    borderRadius: \"8px\",\r\n                    textAlign: \"center\",\r\n                    zIndex: 9999,\r\n                },\r\n            }}\r\n        >\r\n            <h2 style={{ marginBottom: \"20px\", color: \"red\" }}>\r\n                Your time has expired\r\n            </h2>\r\n            <h6>\r\n                Please Submit your{\" \"}\r\n                <span\r\n                    onClick={handlePendingTasks}\r\n                    className=\"link_color\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                >\r\n                    pending\r\n                </span>{\" \"}\r\n                tasks\r\n            </h6>\r\n            <button onClick={closeModal} className=\"btn btn-danger mt-4\">\r\n                Close\r\n            </button>\r\n\r\n            <PendingTasksForTrainee\r\n                isPendingModalOpen={isPendingModalOpen}\r\n                setIsPendingModalOpen={setIsPendingModalOpen}\r\n            />\r\n        </ReactModal>\r\n    );\r\n};\r\n\r\nexport default ExpiredNotifyModalForNewEmployee;\r\n","import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport Button from \"../../components/Button\";\r\nimport StartTimerConfirmationModal from \"./StartTimerConfirmationModal\";\r\nimport {\r\n    useCheckWorkingReportMutation,\r\n    useLazyGetTaskDetailsQuery,\r\n    useLazyGetUserTrackTimeQuery,\r\n    useStartTimerApiMutation,\r\n    useStopTimerApiMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport _ from \"lodash\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    setLessTrackModal,\r\n    setTaskStatus,\r\n} from \"../../../services/features/subTaskSlice\";\r\nimport LessTrackTimerModal from \"./stop-timer/LessTrackTimerModal\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { workingReportError } from \"../helper/timer-start-working-report-error-toaster\";\r\nimport ExpiredTimeModalForNewEmployee from \"./ExpiredTimeModalForNewEmployee\";\r\nimport ExpiredNotifyModalForNewEmployee from \"./ExpiredNotifyModalForNewEmployee\";\r\nimport { useGetSingleEvaluationQuery } from \"../../../services/api/EvaluationApiSlice\";\r\n\r\n// component\r\nconst TimerControl = ({ task, timerStart, setTimerStart, auth }) => {\r\n    const { data: EvaluationData, isLoading } = useGetSingleEvaluationQuery(\r\n        auth?.id\r\n    );\r\n\r\n    const expireDate = EvaluationData?.data[0]?.exp_date;\r\n    // console.log(\"auth\", auth?.id);\r\n    // console.log(\"evaluation data\", EvaluationData);\r\n    // console.log(\"expire date\", expireDate);\r\n    //new employee timer hiding and warning modal showing\r\n    const [timerStatusForWarningModal, setTimerStatusForWarningModal] =\r\n        useState(true);\r\n    const [timeLeft, setTimeLeft] = useState(0);\r\n    const [showExpirationWarningModal, setShowExpirationWarningModal] =\r\n        useState(false);\r\n    const [showExpirationNotifyModal, setShowExpirationNotifyModal] =\r\n        useState(false);\r\n    const [expiredTimerForNewEmployee, setExpiredTimerForNewEmployee] =\r\n        useState(false);\r\n    //expired time check and state change for new employee / Trainee\r\n    const [expireDateForTrainer, setExpireDateForTrainer] =\r\n        useState(expireDate);\r\n\r\n    // console.log(\"expired date\", expireDateForTrainer);\r\n    const [timerId, setTimerId] = useState(null);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [isOpenConfirmationModal, setIsOpenConfirmationModal] =\r\n        useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const dayjs = new CompareDate();\r\n    const loggedUser = new User(window?.Laravel?.user);\r\n    const navigate = useNavigate();\r\n\r\n    const timerStatus = task?.ranningTimer?.status;\r\n    const taskRunning = useMemo(() => timerStatus, [timerStatus]);\r\n\r\n    useEffect(() => {\r\n        if (taskRunning === \"running\") {\r\n            let serverTime = task?.ranningTimer?.time;\r\n            let localTime = dayjs.dayjs().unix();\r\n            let timer = localTime - serverTime;\r\n            setTimerStart(true);\r\n            setSeconds(timer);\r\n            setTimerId(task?.ranningTimer?.id);\r\n        }\r\n    }, [taskRunning]);\r\n\r\n    // console.log(\"time left\", timeLeft);\r\n    // console.log(\"expire date\", expireDateForTrainer);\r\n    //   timer control\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (timerStart) {\r\n            //   interval for timer\r\n            interval = setInterval(() => {\r\n                setSeconds((s) => s + 1);\r\n            }, 1000);\r\n        } else clearInterval(interval); // clear interval\r\n        return () => clearInterval(interval); // clear interval\r\n    }, [timerStart]);\r\n\r\n    const intervalRef = useRef(null);\r\n    useEffect(() => {\r\n        setExpireDateForTrainer(expireDate);\r\n    }, [timerId, taskRunning, expireDate]);\r\n\r\n    useEffect(() => {\r\n        // Function to check the expiration status\r\n        const checkExpiration = () => {\r\n            if (expireDateForTrainer !== null) {\r\n                const expireDate = new Date(expireDateForTrainer);\r\n                const currentTime = new Date();\r\n                const timeDifference =\r\n                    expireDate.getTime() - currentTime.getTime();\r\n                setTimeLeft(Math.max(0, Math.floor(timeDifference / 1000)));\r\n\r\n                if (\r\n                    currentTime >= expireDate &&\r\n                    _.includes([14, 15, 16, 17], Number(auth.roleId))\r\n                ) {\r\n                    setExpiredTimerForNewEmployee(true);\r\n                    stopTimer();\r\n                    clearInterval(intervalRef.current); // Stop the interval\r\n                }\r\n            }\r\n        };\r\n\r\n        // Check expiration immediately on mount\r\n        checkExpiration();\r\n\r\n        intervalRef.current = setInterval(checkExpiration, 1000); //expire checking every 1 seconds\r\n\r\n        return () => clearInterval(intervalRef.current);\r\n    }, [expireDateForTrainer, timerId]);\r\n\r\n    // time formating\r\n    const timer = () => {\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const s = Math.floor((seconds % 3600) % 60);\r\n\r\n        // format\r\n        let sec = s < 10 ? `0${s}` : s;\r\n        let min = minutes < 10 ? `0${minutes}` : minutes;\r\n        let hr = hours < 10 ? `0${hours}` : hours;\r\n        return `${hr}:${min}:${sec}`;\r\n    };\r\n\r\n    // tostar\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 5000,\r\n        timerProgressBar: true,\r\n    });\r\n\r\n    /******** Start timer control *********/\r\n\r\n    // timer start first timer : checking api\r\n    const [\r\n        startTimerFirstCheck,\r\n        { isFetching: startTimerFirstCheckIsFetching },\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    // start timer api slice\r\n    const [startTimerApi, { isLoading: timerStartStatusIsLoading }] =\r\n        useStartTimerApiMutation();\r\n\r\n    // stop timer api slice\r\n    const [stopTimerApi, { isLoading: timerStopStatusIsLoading }] =\r\n        useStopTimerApiMutation();\r\n\r\n    const [checkWorkReport] = useCheckWorkingReportMutation();\r\n\r\n    // timer start control\r\n    const startTimerControl = async () => {\r\n        setIsOpenConfirmationModal(false);\r\n\r\n        // check is developer submit their daily working report on previous day\r\n\r\n        try {\r\n            // check\r\n            const workReport = await checkWorkReport().unwrap();\r\n\r\n            // if submit all required report start timer\r\n            if (\r\n                workReport &&\r\n                workReport.data &&\r\n                (workReport.data.check_in_check_out.check_in_status ||\r\n                    _.includes([14, 15, 16, 17], Number(auth.roleId))) &&\r\n                (workReport.data.daily_task_report.daily_submission_status ||\r\n                    _.includes([14, 15, 16, 17], Number(auth.roleId))) &&\r\n                (workReport.data.hours_log_report.hours_log_report_status ||\r\n                    _.includes([14, 15, 16, 17], Number(auth.roleId)))\r\n            ) {\r\n                await startTimerApi({\r\n                    task_id: task?.id,\r\n                    project_id: task?.projectId,\r\n                    memo: task?.title,\r\n                    user_id: window?.Laravel?.user?.id,\r\n                })\r\n                    .unwrap()\r\n                    .then((res) => {\r\n                        if (res?.status === \"success\" || res?.status === 200) {\r\n                            setTimerStart(true);\r\n                            setTimerId(res?.id);\r\n                            dispatch(setTaskStatus(res?.task_status));\r\n                            // localStorage.setItem(\r\n                            //     \"expireDateForTrainer\",\r\n                            //     res?.evaluation\r\n                            // );\r\n                            Toast.fire({\r\n                                icon: \"success\",\r\n                                title: _.startCase(res?.message),\r\n                            });\r\n                        } else {\r\n                            Toast.fire({\r\n                                icon: \"warning\",\r\n                                title: _.startCase(res?.message),\r\n                            });\r\n                        }\r\n                    });\r\n            } else {\r\n                workingReportError();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        /*\r\n        startTimerApi({\r\n            task_id: task?.id,\r\n            project_id: task?.projectId,\r\n            memo: task?.title,\r\n            user_id: window?.Laravel?.user?.id,\r\n        })\r\n            .unwrap()\r\n            .then((res) => {\r\n                  if (res?.status === \"success\" || res?.status === 200) {\r\n                    setTimerStart(true);\r\n                    setTimerId(res?.id);\r\n                    dispatch(setTaskStatus(res?.task_status));\r\n                    Toast.fire({\r\n                        icon: 'success',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                } else {\r\n                    Toast.fire({\r\n                        icon: 'warning',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => { \r\n                if(err.status === 400){\r\n                    if(err.data.acknowledgement_submitted === false){\r\n                        Swal.fire({\r\n                            title:  \"You have not meet last day's minimum hour count. Please share the reasons!\",\r\n                            showDenyButton: true,\r\n                            confirmButtonText: 'Yes',\r\n                            denyButtonText: `Close`,\r\n                            icon: 'warning'\r\n                          }).then((result) => {\r\n                            // Read more about isConfirmed, isDenied below\r\n                            if (result.isConfirmed) {\r\n                                dispatch(setLessTrackModal({\r\n                                    show: true, \r\n                                    type: 'START_TIMER', \r\n                                    date: dayjs.dayjs(err?.data?.date).format(\"MMM DD, YYYY\"),\r\n                                }))\r\n                            } \r\n                          })\r\n                     }\r\n                     \r\n                     else if(err.data.daily_submission_submitted === false){\r\n                        Swal.fire({\r\n                            title:  \"You didn't submit last day daily submission\",\r\n                            showDenyButton: true,\r\n                            confirmButtonText: 'Yes',\r\n                            denyButtonText: `Close`,\r\n                            icon: 'warning'\r\n                          }).then((result) => {\r\n                            // Read more about isConfirmed, isDenied below \r\n                            if (result.isConfirmed) {\r\n                                navigate(`?modal=daily-submission&date_type=last-date`)\r\n                            } \r\n                          })\r\n                     }\r\n    \r\n                } \r\n            });\r\n        */\r\n    };\r\n\r\n    // start timer function\r\n    const startTimer = (e) => {\r\n        e.preventDefault();\r\n        setTimerStatusForWarningModal(true);\r\n        startTimerFirstCheck(\r\n            `/${task?.id}/json?mode=developer_first_task_check&project_id=${task?.projectId}`\r\n        )\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res.is_first_task) {\r\n                    setIsOpenConfirmationModal(true);\r\n                } else startTimerControl();\r\n            });\r\n    };\r\n\r\n    /*********** End of Start Timer control ***************/\r\n\r\n    // stop timer\r\n    const stopTimer = () => {\r\n        //navigate(`/account/tasks/${task?.id}?modal=daily-submission&trigger=stop-button`);\r\n        setTimerStatusForWarningModal(false);\r\n        stopTimerApi({ timeId: timerId, task_id: task?.id })\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res?.status === \"success\" || res?.status === 200) {\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                    setTimerStart(false);\r\n                    setSeconds(0);\r\n                    timerId(null);\r\n                } else {\r\n                    Toast.fire({\r\n                        icon: \"warning\",\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                }\r\n            });\r\n    };\r\n    const [getUserTrackTime, { isFetching: trackTimerFetcing }] =\r\n        useLazyGetUserTrackTimeQuery();\r\n\r\n    // handle stop timer\r\n    const handleStopTimer = () => {\r\n        // fetch data\r\n        getUserTrackTime(loggedUser?.getId())\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res) {\r\n                    let currentTime = dayjs.dayjs(res.current_time);\r\n                    let target = currentTime\r\n                        .set(\"hour\", 16)\r\n                        .set(\"minute\", 45)\r\n                        .set(\"second\", 0);\r\n                    const isSaturday = currentTime.day() === 6;\r\n\r\n                    if (isSaturday) {\r\n                        target = currentTime\r\n                            .set(\"hour\", 13)\r\n                            .set(\"minute\", 0)\r\n                            .set(\"second\", 0);\r\n                    }\r\n\r\n                    let check = dayjs.dayjs(currentTime).isBefore(target);\r\n                    let isDev = _.includes(\r\n                        [5, 9, 10],\r\n                        Number(auth?.getRoleId())\r\n                    );\r\n                    if (!check && isDev) {\r\n                        res.tracked_times < res.target_time\r\n                            ? dispatch(\r\n                                  setLessTrackModal({\r\n                                      show: true,\r\n                                      type: \"STOP_TIMER\",\r\n                                      date: \"Today\",\r\n                                  })\r\n                              )\r\n                            : stopTimer();\r\n                    } else {\r\n                        stopTimer();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    // control loading states...\r\n    useEffect(() => {\r\n        if (startTimerFirstCheckIsFetching || timerStartStatusIsLoading) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [startTimerFirstCheckIsFetching, timerStartStatusIsLoading]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!timerStart ? (\r\n                <React.Fragment>\r\n                    {!timerStartStatusIsLoading &&\r\n                    !startTimerFirstCheckIsFetching ? (\r\n                        <div>\r\n                            {!expiredTimerForNewEmployee ? (\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    onClick={startTimer}\r\n                                    className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                                >\r\n                                    <i className=\"fa-solid fa-circle-play\" />\r\n                                    <span>Start Timer</span>\r\n                                </Button>\r\n                            ) : (\r\n                                <Button\r\n                                    variant=\"danger\"\r\n                                    className=\"d-flex align-items-center  \"\r\n                                >\r\n                                    <i\r\n                                        className=\"fa-solid fa-circle-play\"\r\n                                        style={{ color: \"white\" }}\r\n                                    />\r\n\r\n                                    <span>Time Expired</span>\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                    ) : (\r\n                        <Button className=\"cursor-processing mr-2\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{ width: \"18px\", height: \"18px\" }}\r\n                            ></div>\r\n                            Starting...\r\n                        </Button>\r\n                    )}\r\n                    <StartTimerConfirmationModal\r\n                        isOpen={isOpenConfirmationModal}\r\n                        onConfirm={startTimerControl}\r\n                    />\r\n                </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                    >\r\n                        <i className=\"fa-solid fa-stopwatch\" />\r\n                        <span className=\"d-inline ml-1\">{timer()}</span>\r\n                    </Button>\r\n\r\n                    {/* <StopTimerControl\r\n                        stopTimer={stopTimer}\r\n                        timerStopStatusIsLoading={timerStopStatusIsLoading}\r\n                    /> */}\r\n\r\n                    {trackTimerFetcing ? (\r\n                        <Button className=\"cursor-processing\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{ width: \"18px\", height: \"18px\" }}\r\n                            />\r\n                            Processing...\r\n                        </Button>\r\n                    ) : !timerStopStatusIsLoading ? (\r\n                        <Button\r\n                            variant=\"tertiary\"\r\n                            onClick={handleStopTimer}\r\n                            className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                        >\r\n                            <i className=\"fa-solid fa-pause\" />\r\n                            <span className=\"d-inline ml-1\">Stop Timer</span>\r\n                        </Button>\r\n                    ) : (\r\n                        <Button className=\"cursor-processing\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{ width: \"18px\", height: \"18px\" }}\r\n                            />\r\n                            Stopping...\r\n                        </Button>\r\n                    )}\r\n                </React.Fragment>\r\n            )}\r\n\r\n            {/* LessTrackTimerModal */}\r\n            <LessTrackTimerModal\r\n                stopTimer={stopTimer}\r\n                startTimer={startTimerControl}\r\n            />\r\n\r\n            {_.includes([14, 15, 16, 17], Number(auth.roleId)) && (\r\n                <>\r\n                    <ExpiredTimeModalForNewEmployee\r\n                        showExpirationWarningModal={showExpirationWarningModal}\r\n                        setShowExpirationWarningModal={\r\n                            setShowExpirationWarningModal\r\n                        }\r\n                        timeLeft={timeLeft}\r\n                        setTimeLeft={setTimeLeft}\r\n                        taskRunning={taskRunning}\r\n                        task={task}\r\n                        timerStatusForWarningModal={timerStatusForWarningModal}\r\n                    />\r\n                    <ExpiredNotifyModalForNewEmployee\r\n                        expireDateForTrainer={expireDateForTrainer}\r\n                        showExpirationNotifyModal={showExpirationNotifyModal}\r\n                        setShowExpirationNotifyModal={\r\n                            setShowExpirationNotifyModal\r\n                        }\r\n                        timeLeft={timeLeft}\r\n                    />\r\n                </>\r\n            )}\r\n\r\n            {console.log(\r\n                \"timeleft , expireDate, show expire task modal\",\r\n                timeLeft,\r\n                expireDateForTrainer,\r\n                showExpirationNotifyModal\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TimerControl;\r\n","import Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport { StartTimerWorkingReport } from '../../components/StartTimerWorkingReportPopup'\r\n\r\n\r\nexport const workingReportError = () => {\r\n    withReactContent(Swal).fire({\r\n        icon: 'error',\r\n        html: <StartTimerWorkingReport />,\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'No',\r\n        customClass: {\r\n            confirmButton: 'btn btn-primary py-2 px-4',\r\n            cancelButton: 'btn py-2 px-4 text-white'\r\n        },\r\n    }).then(result => {\r\n        if(result.isConfirmed){\r\n            window.location.reload();\r\n        }\r\n    })\r\n}\r\n","import React, {useState, useRef} from 'react'\r\nimport Button from '../../../components/Button'\r\nimport Modal from '../../../components/Modal';\r\nimport { useClickAway } from 'react-use';\r\nimport { useSubmitForClientApprovalMutation } from '../../../../services/api/SingleTaskPageApi';\r\nimport Loader from '../../../components/Loader';\r\n\r\nexport const SubmitForClientApproval = ({task, auth}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const closeModal = () => setIsOpen(false)\r\n  const openModal = () => setIsOpen(true)\r\n  const ref = useRef();\r\n  useClickAway(ref, closeModal);\r\n\r\n\r\n  const [submitForClientApproval, {isLoading}] = useSubmitForClientApprovalMutation();\r\n\r\n\r\n  const handleOnSubmit = ()=>{\r\n    submitForClientApproval({task_id: task?.id, user_id: auth?.getId()})\r\n    .unwrap()\r\n    .then(res => {\r\n      Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: 'Submitted Task For Client Approval Successfully',\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n      });\r\n    })\r\n    .catch(err => console.log(err))\r\n    .finally(() => closeModal())\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <React.Fragment>\r\n          {\r\n            isLoading ? \r\n            <React.Fragment>\r\n              <div className=\"cursor-processing cnx__btn cnx__btn_sm cnx__btn_primary\">\r\n                    <div\r\n                        className=\"spinner-border text-white\"\r\n                        role=\"status\"\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                        }}\r\n                    ></div>\r\n                    Processing...\r\n                </div>\r\n            </React.Fragment>\r\n            :\r\n              <Button \r\n                  variant='success'\r\n                  onClick={openModal}\r\n                  className='d-flex align-items-center border-success'\r\n              >\r\n                  <i className=\"fa-solid fa-handshake-angle\"></i>\r\n                  <span className=\"d-inline ml-1\">Submit For Client Approval</span>\r\n              </Button> \r\n          }\r\n        </React.Fragment>\r\n        <Modal isOpen={isOpen} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n              <div \r\n                ref={ref}\r\n                className=\"sp1_single_task--modal-panel position-absolute p-2 mb-3\"\r\n                style={{top:'50%', left:'50%',transform:'translate(-50%, -50%)', width: '250px'}}\r\n              >\r\n                {!isLoading &&\r\n                  <div className='d-flex align-items-center border-bottom pb-1'>\r\n                    <Button variant='tertiary' onClick={closeModal} className='ml-auto border-0'>\r\n                      <i className='fa-solid fa-xmark' />\r\n                    </Button>\r\n                </div>\r\n                }\r\n                <div className='d-flex flex-column align-items-center p-2' style={{gap:'10px'}}>\r\n                  {isLoading && \r\n                    <React.Fragment>\r\n                      <Loader title='Submitting...' />\r\n                    </React.Fragment>\r\n                  }\r\n                  \r\n                  {!isLoading &&\r\n                    <React.Fragment>\r\n                      <img src='/img/warning.gif' alt='' style={{width: '50px', height: '50px'}}/>\r\n                      <div className='d-flex flex-column aling-items-center'>\r\n                        <h5 className='d-block mb-3'>Are You Sure?</h5>\r\n                        <div className='d-flex align-items-center justify-content-center'>\r\n                          <Button onClick={handleOnSubmit} className='mr-2 py-0'>Yes</Button>\r\n                          <Button variant='tertiary' onClick={closeModal} className='py-0'>No</Button>\r\n                        </div>\r\n                      </div>\r\n                   </React.Fragment>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Button from '../../../components/Button'\r\nimport { useConfirmClientApprovalMutation } from '../../../../services/api/SingleTaskPageApi'\r\nimport SubmitButton from '../../../components/SubmitButton';\r\n\r\nconst ClientAcceptedTask = ({task}) => { \r\n\r\n  const [confirmClientApproval, {isLoading}] = useConfirmClientApprovalMutation();\r\n\r\n  const handleClick=(e)=>{\r\n    e.preventDefault();\r\n    confirmClientApproval({\r\n        task_id: task?.id\r\n    }).unwrap()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <SubmitButton \r\n            onClick={handleClick}\r\n            variant='success'\r\n            isLoading={isLoading}\r\n            className='d-flex align-items-center border-success'\r\n        >\r\n            <i className=\"fa-solid fa-check\"></i>\r\n            <span className=\"d-inline ml-1\">Client Has Accepted This Task</span>\r\n        </SubmitButton>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientAcceptedTask","import React, { useState, useRef } from \"react\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport Button from \"../../../components/Button\";\r\nimport { useCreateRevisionMutation } from \"../../../../services/api/SingleTaskPageApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setTaskStatus } from \"../../../../services/features/subTaskSlice\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\n\r\n\r\n\r\nconst projectManagerAcknowladgement = [\r\n    {\r\n        id: \"CPRx01\",\r\n        title: 'Client added some additional requirements which was not part of the actual job scope',\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'PLRx12',\r\n        title: 'I submitted the work without proper checking and overlooked the issues',\r\n        isDeniable: true,\r\n    },\r\n    {\r\n        id: 'PLRx03',\r\n        title: 'I couldnt understand clients expectation properly earlier',\r\n        isDeniable: false\r\n    },\r\n    {\r\n        id: 'PLRx04',\r\n        title: 'I didnt understand the job properly as it’s very technical in nature and relied fully on technical team for success',\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'CPRx05',\r\n        title: \"The client didnt change his instruction but his interpretation of the original instruction now is weird and nobody could have interpreted it this way from his instruction\",\r\n        isDeniable: false,\r\n        createDispute: true,\r\n    },\r\n    {\r\n        id: 'CPRx06',\r\n        title: \"The client is asking for some minor changes which he couldn’t specify until he saw the completed work and we can’t charge him for these\",\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'SPRx01',\r\n        title: \"Sales person discussed something in a verbal meeting with the client and then forgot to document it when assigning\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    },\r\n    {\r\n        id: 'SPRx02',\r\n        title: \"Sales person couldn't define requirement properly and I also failed to define it after I took over\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    },\r\n    {\r\n        id: 'SPRx03',\r\n        title: \"Sales overpromised: This task is not doable to this extent or in this way and I informed management about it on day 1\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    }\r\n]\r\n\r\n\r\nconst AssigneeToLeadFromClientRevision = ({ close, onBack, onSubmit, task, auth, isSubmitting }) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [additionalPaid, setAdditionalPaid] = useState('');\r\n    const [additionalInfo, setAdditionalInfo] = useState(null);\r\n    const [additionalAmount, setAdditionalAmount] = useState(0);\r\n    const [additionalError, setAdditionalError] = useState('');\r\n\r\n    // radio button change\r\n    const handleChange = (e, reason) => {\r\n        setReason(reason);\r\n        setAdditionalAmount(0);\r\n        setAdditionalPaid('');\r\n        setAdditionalInfo(null);\r\n    };\r\n\r\n\r\n    // on blur\r\n    const handleBlurEvent = () => {\r\n        Swal.fire({\r\n            title: 'Do you want to create a milestone?',\r\n            // showDenyButton: true,\r\n            confirmButtonText: 'Yes',\r\n            // denyButtonText: `No`,\r\n            }).then(res => {\r\n            if(res.isConfirmed){\r\n                window.open(`/account/projects/${task?.projectId}?tab=milestones`, '_blank');\r\n            }\r\n        })\r\n    }\r\n\r\n    // additional payment\r\n    const hasAdditionalPayment = (isPay) =>{\r\n        setAdditionalPaid(() => isPay ? 'yes': 'no');\r\n    }\r\n\r\n    // editor change text\r\n    const handleEditorTextChange= (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    }\r\n\r\n    // validation\r\n    const validate = () => {\r\n       let errorCount = 0;\r\n\r\n       if(comment === \"\"){\r\n            errorCount++;\r\n            setCommentError('You have to explain the revision in details, so that lead developer can understand where they need to work.')\r\n       }\r\n\r\n       if(!reason){\r\n            errorCount++;\r\n            setReasonError('You have to select a reason from above options')\r\n       }\r\n\r\n\r\n       if(reason && reason?.id === 'CPRx01'){\r\n            if(additionalPaid === 'yes' && additionalAmount === 0){\r\n                errorCount++;\r\n                setAdditionalError('You have to provide amount')\r\n            }\r\n\r\n            if(additionalPaid === 'no' && !additionalInfo){\r\n                errorCount++;\r\n                setAdditionalError('You have to select an option')\r\n            }\r\n       }\r\n\r\n       return errorCount === 0;\r\n    }\r\n\r\n\r\n    // handle submission\r\n    const handleSubmission=(e)=>{\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        const data = {\r\n            acknowledgement_id: reason?.id ,\r\n            task_id: task?.id,\r\n            user_id: auth?.id,\r\n            is_deniable: reason?.isDeniable,\r\n            revision_acknowledgement: reason?.title,\r\n            comment: comment,\r\n            additional_amount: Number(additionalAmount),\r\n            additional_status: additionalPaid,\r\n            additional_comment: additionalInfo?.info ?? '',\r\n            dispute_create: reason?.createDispute || additionalInfo?.disputeCreate || false\r\n        }\r\n\r\n        if(validate()){\r\n            onSubmit(data);\r\n        }else{\r\n            console.log('Your forgot to fillup some required fields')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <form className=\"px-3\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select Reason for Revision<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {\r\n                                _.map(projectManagerAcknowladgement, option => (\r\n                                    <div key={option.id} className=\"form-check d-flex align-items-start mb-2\">\r\n                                        <input\r\n                                            className=\"form-check-input mr-2\"\r\n                                            type=\"radio\"\r\n                                            name=\"exampleRadios\"\r\n                                            id={option.id}\r\n                                            required= {true}\r\n                                            onChange={e => handleChange(e, option)}\r\n                                            value={option.title}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n\r\n                                        />\r\n                                        <label\r\n                                            className=\"form-check-label\"\r\n                                            htmlFor={option.id}\r\n                                            style={{ marginBottom: \"3px\" }}\r\n                                        >\r\n                                           {option.title}\r\n                                        </label>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        {reasonError && <small id=\"emailHelp\" className=\"form-text text-danger\">{reasonError}</small>}\r\n                    </div>\r\n\r\n                    {reason?.id === 'CPRx01' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Is the client paying additionally for these changes? <sup>*</sup></label>\r\n                            <div className=\"d-block\">\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"milestone\"\r\n                                            type=\"radio\"\r\n                                            id=\"createMilestoneYes\"\r\n                                            value=\"1\"\r\n                                            onChange={(e)=>hasAdditionalPayment(true)}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"createMilestoneYes\" className=\"form-check-label\">Yes</label>\r\n                                    </div>\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"milestone\"\r\n                                            type=\"radio\"\r\n                                            id=\"createMilestoneNo\"\r\n                                            value=\"0\"\r\n                                            onChange={(e) => hasAdditionalPayment(false)}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"createMilestoneNo\" className=\"form-check-label\">No</label>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {additionalPaid === 'yes' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Amount? <sup>*</sup></label>\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">$</div>\r\n                                </div>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onChange={e => setAdditionalAmount(e.target.value)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inlineFormInputGroup\"\r\n                                    placeholder=\"300\"\r\n                                    onBlur={handleBlurEvent}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        additionalPaid === 'no' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Is the client paying additionally for these changes? <sup>*</sup></label>\r\n                            <div className=\"d-block\">\r\n                                    <div className=\"form-check mb-3\">\r\n                                        <input\r\n                                            name=\"additionalInformation\"\r\n                                            className=\"form-check-input\"\r\n                                            type=\"radio\"\r\n                                            id=\"additionalInformation1\"\r\n                                            onChange={e => setAdditionalInfo({\r\n                                                info: e.target.value,\r\n                                                disputeCreate: false,\r\n                                            })}\r\n                                            value=\"Client changed his/her mind and he/she don't want to pay additional payment. We have to continue the task for client satisfaction\"\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"additionalInformation1\" className=\"form-check-label\">\r\n                                            Client changed his/her mind and he/she don't want to pay additional payment. We have to continue the task for client satisfaction\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"additionalInformation\"\r\n                                            type=\"radio\"\r\n                                            id=\"additionalInformation2\"\r\n                                            value=\"The client is interpreting his original instruction in a very unusual way!\"\r\n                                            onChange={(e) => setAdditionalInfo({\r\n                                                info: e.target.value,\r\n                                                disputeCreate: true,\r\n                                            })}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"additionalInformation2\" className=\"form-check-label\">\r\n                                        The client is interpreting his original instruction in a very unusual way!\r\n                                        </label>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    { additionalError && <div className=\"mb-3\">\r\n                        <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                            {additionalError}\r\n                        </small>\r\n                    </div>}\r\n\r\n                    {/* Editor  */}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Explain or Comment<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"ck-editor-holder\">\r\n                            <CKEditorComponent onChange={handleEditorTextChange}/>\r\n                        </div>\r\n                        {commentError && <small id=\"emailHelp\" className=\"form-text text-danger\">{commentError}</small>}\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button onClick={onBack} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                Back\r\n                            </Button>\r\n                            <SubmitButton title=\"Submit\" onClick={handleSubmission} isLoading={isSubmitting} />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AssigneeToLeadFromClientRevision;\r\n","import React, {useState, lazy, Suspense} from 'react'\r\nimport Button from '../../../components/Button' \r\nimport Modal from '../../../components/Modal';\r\nimport { SingleTask } from '../../../../utils/single-task';\r\nimport ClientRevisionForm from './ClientRevisionForm';\r\nimport AssigneeToLeadFromClientRevision from './AssigneeToLeadFromClientRevision';\r\nimport { useStoreClientRevisionTaskMutation } from '../../../../services/api/SingleTaskPageApi';\r\n\r\nconst ClientRevision = ({task, auth}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const [show,setShow] = useState('ASSINEE_TO_DEV');\r\n    \r\n    const singleTask = task;\r\n\r\n    // client revision data\r\n    const [clientComment, setClientComment] = useState('');\r\n    const [clientAcknowledgement, setClientAcknowladgement] = useState('');\r\n\r\n\r\n    const [storeClientRevisionTask, {isLoading}] = useStoreClientRevisionTaskMutation();\r\n\r\n    const handleSubmit = (data) => {\r\n       setClientAcknowladgement(data?.reason);\r\n       setClientComment(data?.comment); \r\n       setShow('ASSINEE_TO_DEV'); \r\n    }\r\n\r\n    const close = () => {\r\n        setRevisionModal(false)\r\n    }\r\n\r\n    const handleSubmitToStore = (data) =>{\r\n        const fData = {\r\n            ...data,\r\n            project_id: task?.projectId\r\n        }\r\n  \r\n        // show toster notification\r\n        const showToster= () =>{\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n            }) \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Task submitted for Revision successfully'\r\n            })\r\n        }\r\n    \r\n        storeClientRevisionTask(fData)\r\n        .unwrap()\r\n        .then(res => showToster())\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    \r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn sp1-st-revision-btn'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Client Has Revision</span>\r\n        </Button> \r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <div\r\n                    className=\"sp1_single_task--modal-panel w-100 pb-3\"\r\n                    style={{ maxWidth: \"550px\" }}\r\n                >\r\n                    <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <div className=\"font-weight-bold f-14\">\r\n                            Task#{task?.id} - Client Revision\r\n                        </div>\r\n                        <Button onClick={close} className=\"\">\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {/* {show === 'CLIENT_REVISION' && \r\n                        <ClientRevisionForm \r\n                            task={singleTask}\r\n                            close={() => setRevisionModal(false)} \r\n                            onSubmitForm={(data) => handleSubmit(data)}\r\n                        />\r\n                    }  */}\r\n                    {/* {show === \"ASSINEE_TO_DEV\" && */}\r\n                        <AssigneeToLeadFromClientRevision \r\n                            task={task}\r\n                            auth={auth}\r\n                            isSubmitting = {isLoading}\r\n                            onSubmit={handleSubmitToStore}\r\n                            close={() => setRevisionModal(false)}\r\n                            onBack={() => setShow('CLIENT_REVISION')}\r\n                        />\r\n                    {/* }  */}\r\n                </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientRevision \r\n\r\n","import React from 'react'\r\nimport { SubmitForClientApproval } from './SubmitForClientApproval'\r\nimport ClientAcceptedTask from './ClientAcceptedTask'\r\nimport { SingleTask } from '../../../../utils/single-task'\r\nimport ClientRevision from '../Revision/ClientRevision'\r\nimport { submitForClientApproval, clientApproveConfirmationButtonPermission } from '../../../permissions'\r\n\r\nconst ClientApproval = ({task, status, auth}) => {\r\n  return (\r\n    <React.Fragment>\r\n        { submitForClientApproval({task, status, auth}) && <SubmitForClientApproval task={task} auth={auth} /> }\r\n        { clientApproveConfirmationButtonPermission({task, status, auth}) && \r\n          <React.Fragment>\r\n            <ClientAcceptedTask task={task} auth={auth} />\r\n            <ClientRevision task={task} auth={auth} />\r\n          </React.Fragment>\r\n        }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientApproval","import React, { useState, lazy, Suspense } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport { SingleTask } from \"../../../../utils/single-task\";\r\nimport Loader from \"../../../components/Loader\";\r\nconst ReportForm = lazy(() => import(\"./ReportForm\"));\r\n\r\nconst ReportControl = ({ task }) => {\r\n    const [reportModalOpen, setReportModalOpen] = useState(false); \r\n\r\n    const close = () => setReportModalOpen(false);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={() => setReportModalOpen(true)}\r\n                className=\"ml-auto d-flex align-items-center sp1-st-revision-btn --view-revision sp1_report_btn\"\r\n            >\r\n                <i className=\"fa-solid fa-flag\"></i>\r\n                <span className=\"d-inline ml-1\">Report</span>\r\n            </Button>\r\n\r\n            <Modal isOpen={reportModalOpen} className=\"sp1_single_task--modal\">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_single_task--modal-panel task-report-form--modal-panel\"\r\n                    >\r\n                        <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                            <div className=\"font-weight-bold f-14\">\r\n                                Task#{task?.id} : Report\r\n                            </div>\r\n                            <Button onClick={close} className=\"\">\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n                        <Suspense fallback={<div className=\"py-3 d-flex align-items-center justify-content-center\"><Loader /></div>}>\r\n                            <ReportForm task={task} close={close} />\r\n                        </Suspense>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ReportControl;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { useDeveloperCanCompleteTaskQuery, useLazyCheckSubTaskTimerQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useDailySubmission } from \"../../../single-task/hooks/useDailySubmission\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport {\r\n    approveButtonPermission,\r\n    markAsCompletedButtonPermission,\r\n    needRevisionPermision,\r\n    revisionButtonPermission,\r\n    timeControlPermision\r\n} from \"../../permissions\";\r\nimport DailySubmissionControl from './DailySubmissionControl';\r\nimport MarkAsComplete from \"./MarkAsComplete\";\r\nimport RevisionControl from \"./Revision/RevisionControl\";\r\nimport RevisionViewControl from \"./Revision/RevisionViewControl\";\r\nimport SubtaskCreationControl from \"./SubtaskCreationControl\";\r\nimport TimerControl from \"./TimerControl\";\r\nimport ApproveTask from \"./approve-task/ApproveTask\";\r\nimport ClientApproval from \"./client-approval/ClientApproval\";\r\nimport ReportControl from \"./report/Report\";\r\n\r\nconst TaskAction = ({ task, status }) => {\r\n    const loggedUser = new User(window?.Laravel?.user);\r\n    const [timerStart, setTimerStart] = React.useState(false);\r\n    const { isEnable } = useDailySubmission();\r\n\r\n\r\n    const [checkSubTaskTimer, { isFetching }] = useLazyCheckSubTaskTimerQuery();\r\n\r\n    const {  data: checkMarkAsCompleteEnableStatus, isLoading: isLoadingCompleteCheck } = useDeveloperCanCompleteTaskQuery(task?.id, {skip: !task.id});\r\n    const ENABLE_MARKASCOMPLETE_BUTTON = task && (task?.isSubtask ? checkMarkAsCompleteEnableStatus?.message === \"Developer can complete this task\" : true);\r\n\r\n    // console.log({task});\r\n\r\n\r\n    const onModalEditButtonClick = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(task?.id)\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res?.status === 200) {\r\n                    window.location = `/account/tasks/${task?.id}/edit`;\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Oops...\",\r\n                        text: \"You cannot edit the task because timer is already running\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    let time = task.isSubtask ? task?.parentTaskTimeLog : task?.totalTimeLog;\r\n\r\n    return (\r\n        <div\r\n            className=\"d-flex flex-wrap border-bottom pb-3 sp1_task_btn_group\"\r\n            style={{ gap: \"10px\" }}\r\n        >\r\n            {/* with permission */}\r\n            {timeControlPermision({ task, status, loggedUser }) ? (\r\n                <TimerControl\r\n                    task={task}\r\n                    timerStart={timerStart}\r\n                    setTimerStart={setTimerStart}\r\n                    auth={loggedUser}\r\n                />\r\n            ) : null}\r\n            {!timerStart && !isLoadingCompleteCheck &&\r\n            ENABLE_MARKASCOMPLETE_BUTTON && markAsCompletedButtonPermission({ task, status, loggedUser }) ? (\r\n                <MarkAsComplete task={task} auth={loggedUser} />\r\n            ) : null}\r\n\r\n\r\n            {/* develop */}\r\n            {approveButtonPermission({ task, status, loggedUser }) ? (\r\n                <ApproveTask task={task} status={status} auth={loggedUser} />\r\n            ) : null}\r\n\r\n            {needRevisionPermision({ task, status, loggedUser }) ? (\r\n                <RevisionControl task={task} auth={loggedUser} />\r\n            ) : null}\r\n\r\n            {/*  */}\r\n            {revisionButtonPermission({ task, status, loggedUser }) && (\r\n                <RevisionViewControl\r\n                    task={task}\r\n                    status={status}\r\n                    auth={loggedUser}\r\n                />\r\n            )}\r\n            {/* <TimeExtension task={task} /> */}\r\n            <ClientApproval task={task} status={status} auth={loggedUser} />\r\n\r\n             {/* daily submission control */}\r\n             {_.includes([5, 9, 10], loggedUser?.getRoleId()) && isEnable && (\r\n                <DailySubmissionControl />\r\n             )}\r\n\r\n\r\n\r\n            {/* right side button container */}\r\n            <div style={{display:'inline-flex',marginLeft:'auto',gap:'0 10px'}}>\r\n\r\n                {/* Subtask creation guideline */}\r\n                {_.includes([6, 4, 1], loggedUser?.getRoleId()) && !task?.isSubtask &&  <SubtaskCreationControl />}\r\n\r\n\r\n                {/*********** Report Control ***********/}\r\n                {_.includes([6, 5, 9, 10], loggedUser?.getRoleId()) && (\r\n                    <ReportControl task={task} />\r\n                )}\r\n\r\n\r\n                {/* {taskEditPermision({ task, status, auth: loggedUser }) && (\r\n                    <Link\r\n                        to={`?modal=edit&task=${task?.id}`}\r\n                        onClick={onModalEditButtonClick}\r\n                        className=\"cnx__btn cnx__btn_sm cnx__btn_primary sp1_task-edit-button\"\r\n                        style={{\r\n                            marginLeft: 'none'\r\n                        }}\r\n                    >\r\n                        {isFetching ? (\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgb(255, 255, 255)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                }}\r\n                            />\r\n                        ) : (\r\n                            <i className=\"fa-regular fa-pen-to-square\"></i>\r\n                        )}\r\n                        <span className=\"ml-1 mr-2\">Edit</span>\r\n                    </Link>\r\n                )} */}\r\n\r\n                {/* {task &&  task.boardColumn.id === 2 && !(_.includes([5, 6], loggedUser?.getRoleId()))  &&\r\n                    <Link\r\n                        to={`?modal=edit&task=${task?.id}`}\r\n                        className=\"cnx__btn cnx__btn_sm cnx__btn_primary sp1_task-edit-button\"\r\n                        style={{\r\n                            marginLeft: 'none'\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-regular fa-pen-to-square\" />\r\n                        Edit\r\n                    </Link>\r\n                } */}\r\n            </div>\r\n\r\n            {/* {{-- 3 dot --}} */}\r\n            {/* <button type=\"button\" className=\"d-flex align-items-center btn btn-sm btn-outline-dark mr-2 border-0 ml-auto\">\r\n                <i className=\"bi bi-three-dots\" ></i>\r\n            </button> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskAction;\r\n","import { User } from \"../../../utils/user-details\";\r\nimport dayjs from 'dayjs';\r\n\r\nconst TableRow = ({log}) => {\r\n    const user = log?.user ? new User(log.user) : null;\r\n    return(\r\n        <tr className='__tbody_tr'>\r\n            <td className='__tbody_td _tbody_td_employee'>\r\n                <img src={user?.getAvatar()} alt={user?.getName()} />\r\n                <span className='px-2'>{user?.getName()}</span>\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_start_time'>\r\n                {dayjs(log?.start_time).format('MMM DD, YYYY')} <br/>\r\n                {dayjs(log?.start_time).format('hh:mm a')}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_start_time _tbody_td_start_end'>\r\n                {log?.end_time ? <>\r\n                    {dayjs(log?.end_time).format('MMM DD, YYYY')} <br/>\r\n                    {dayjs(log?.end_time).format('hh:mm a')}\r\n                </> : <span className='text-success font-weight-bold'>Active</span>}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_memo'>\r\n                {log?.memo}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_hour_logged'>\r\n                {log?.hours_logged}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow\r\n","import React from \"react\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from '../../components/Modal';\r\n\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport TableRow from \"./InnerTableRow\";\r\nimport _ from \"lodash\";\r\nimport Avatar from \"../../../global/Avatar\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\nimport Button from \"../../components/Button\";\r\n\r\n\r\n\r\n\r\nconst Table = ({data}) => {\r\n    return(\r\n        <table className=\"sp1_subtask_log-tbl\">\r\n            <thead className=\"__thead\">\r\n                <tr>\r\n                    <th>Employee</th>\r\n                    <th>Start Time</th>\r\n                    <th>End Time</th>\r\n                    <th>Memo</th>\r\n                    <th>Hours Logged</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"__tbody\">\r\n                {data\r\n                    ? data.map((log) => (\r\n                        <TableRow key={log.id} log={log} />\r\n                    ))\r\n                    : null}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\n\r\nconst Card = ({log, className}) => {\r\n    const user = new User(log.user);\r\n    return(\r\n        <div className={`border-bottom ${className}`}>\r\n            <div className=\"d-flex align-items-center\" style={{gap:'10px'}}>\r\n                <Avatar \r\n                    src={user?.getAvatar()} \r\n                    name={user?.getName()} \r\n                    alt={user?.getName()} \r\n                    type=\"circle\"\r\n                /> \r\n                <h6>{user?.getName()}</h6>\r\n            </div>\r\n            <div className=\"d-flex flex-column flex-wrap ml-5\" style={{gap: '4px'}}>\r\n                <span><span className=\"font-weight-bold\">Memo:</span> {log?.memo}</span>\r\n                <span><span className=\"font-weight-bold\">Hours Logged:</span> {log?.hours_logged}</span>\r\n                <span><span className=\"font-weight-bold\">Start Time:</span> {dayjs(log?.start_time).format('MMM DD, YYYY hh:mm a')} </span>\r\n                <span><span className=\"font-weight-bold\">End Time:</span> {dayjs(log?.end_time).format('MMM DD, YYYY hh:mm a')} </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CardView = ({data}) => {\r\n    return(\r\n        <div className=\"d-flex flex-column\" style={{gap: '10px'}}>\r\n            {_.map(data, (log) =>(\r\n                    <Card log={log} key={log.id} className=\"w-100 py-2\" />\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\nconst TimeLogTable = ({ isOpen, close, toggle, data = [] }) => {\r\n    const ref = React.useRef(null);\r\n    const {width: deviceWidth} = useWindowSize();\r\n    useClickAway(ref, close);\r\n\r\n\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\"> \r\n                <div className='sp1-subtask-form --modal-panel-header'> \r\n                    <h6>Session Logs</h6> \r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button> \r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <div className=\"mt-3\">\r\n                        {deviceWidth > 800 ? <Table data={data} />: <CardView data={data} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if(deviceWidth > 1200){\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </CustomModal>\r\n        );\r\n    }else{\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </Modal>\r\n        );\r\n    }\r\n\r\n};\r\nexport default TimeLogTable;\r\n","import React from 'react'\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst TimeLogItemLoader = ({}) => {\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item py-2\" style={{gap: '10px', height: '30px'}}>\r\n        <div className='d-flex align-items-center'>\r\n            <Placeholder width=\"24px\" height=\"24px\" type='circle' className='mr-2' />\r\n            <span className='sp1_time_log_emplyee_name'>\r\n                <Placeholder width='100px' />\r\n            </span>\r\n        </div> \r\n\r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div> \r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div>\r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeLogItemLoader","import React, {lazy, Suspense} from 'react'\r\nconst TimeLogItem = lazy(() => import('./TimeLogItem'));\r\nimport TimeLogTable from './TimeLogTable';\r\nimport { useDispatch, useSelector } from 'react-redux'; \r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport { storeTimeLogs } from '../../../services/features/subTaskSlice';\r\nimport { Placeholder } from '../../../global/Placeholder';\r\nimport TimeLogItemLoader from './TimeLogItemLoader';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\n\r\nconst TimeLogSection = () => {\r\n  const {task, timeLogs} = useSelector(s => s.subTask);\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n  // get data\r\n    // fetch all task \r\n    const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n      skip: timeLogs?.length\r\n    }) \r\n  \r\n    // if task notes fetch completed store data into redux store\r\n    React.useEffect(()=> {\r\n      if(task && task.id){\r\n        getTaskDetails(`/${task?.id}/json?mode=task_time_log`)\r\n        .unwrap()\r\n        .then(res => {\r\n          if(res){\r\n            dispatch(storeTimeLogs(res));\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      } \r\n    }, [task]); \r\n    \r\n\r\n    // control modal\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const close = () => setIsOpen(false);\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3'  \r\n    ref={setModalRefButton} style={{zIndex: isOpen ? '99' : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Session Logs</span> \r\n        {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n        {_.size(timeLogs) > 0 &&\r\n          <button \r\n              aria-label='openCommentModalButton'\r\n              className='sp1_task_right_dl_toggle'\r\n              onClick={toggle}\r\n              style={{zIndex: isOpen ? 110 : ''}}\r\n            >\r\n              <i \r\n                className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n                style={{color: \"#276fec\"}} \r\n              />\r\n          </button>}\r\n        {/* side drop toggle button end */}\r\n\r\n\r\n          <TimeLogTable\r\n            isOpen={isOpen}\r\n            close={close}\r\n            toggle={modalRefButton}\r\n            data={timeLogs}\r\n          />\r\n\r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          { _.size(timeLogs) > 0 ?\r\n            _.map(timeLogs, log => (\r\n              <React.Fragment key={log.id}>\r\n                <Suspense fallback={<TimeLogItemLoader />}>\r\n                  <TimeLogItem log={log}/>\r\n                </Suspense>\r\n              </React.Fragment>\r\n            )):\r\n            <div\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{\r\n                    color: \"#B4BCC4\",\r\n                    fontSize: \"15px\",\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                No Logged Session is Available\r\n            </div>\r\n          } \r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeLogSection","import dayjs from \"dayjs\";\r\nimport _ from \"lodash\";\r\nimport * as React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useErrorHandler } from \"../context/ErrorHandleServiceContextProvider\";\r\nimport FileUploader from \"../file-upload/FileUploader\";\r\nimport Toaster from \"../global/Toaster\";\r\nimport {\r\n    useGetTaskStatusQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n    useLazyGetWorkingEnvironmentQuery,\r\n} from \"../services/api/SingleTaskPageApi\";\r\nimport { storeTask } from \"../services/features/subTaskSlice\";\r\nimport { BoardColumn, SingleTask } from \"../utils/single-task\";\r\nimport { User } from \"../utils/user-details\";\r\nimport Accordion from \"./components/Accordion\";\r\nimport Guideline from \"./components/Guideline\";\r\nimport Loading from \"./components/Loading\";\r\nimport RevisionText from \"./components/RevisionText\";\r\nimport GenarelLoader from \"./components/loader/GenarelLoader\";\r\nimport { singleTaskPagePermission } from \"./permissions\";\r\nimport CommentSection from \"./section/comments/CommentsSection\";\r\nimport DailySubmissionSection from \"./section/daily-submission/DailySubmissionSection\";\r\nimport HistorySection from \"./section/history/HistorySection\";\r\nimport NoteSection from \"./section/notes/NoteSection\";\r\nimport RevisionSection from \"./section/revisions/RevisionSection\";\r\nimport SubTaskEditModal from \"./section/sub-task/SubTaskEditModal\";\r\nimport SubTaskSection from \"./section/sub-task/SubTaskSection\";\r\nimport TaskEditForm from \"./section/sub-task/TaskEditForm\";\r\nimport SubmittedWork from \"./section/submitted-work/SubmittedWork\";\r\nimport TaskAction from \"./section/task-actions/TaskAction\";\r\nimport TimeLogSection from \"./section/time-logs/TimeLogSection\";\r\nimport { useGetTaskForTotalTimeQuery } from \"../services/api/tasksApiSlice\";\r\n\r\nconst RefetchTaskProvider = React.createContext({});\r\nexport const useRefetchTaskDetails = () => {\r\n    const { setRefetchTask } = React.useContext(RefetchTaskProvider);\r\n    return () => {\r\n        setRefetchTask((prev) => !prev);\r\n    };\r\n};\r\n\r\nconst SingleIndependentTask = () => {\r\n    const { task: Task } = useSelector((s) => s.subTask);\r\n    const [refetchTask, setRefetchTask] = React.useState(false);\r\n    const { throwError } = useErrorHandler();\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n\r\n    // lazily get task details\r\n    const [\r\n        getTaskDetails,\r\n        { isFetching: isTaskFetching, isLoading: isTaskLoading },\r\n    ] = useLazyGetTaskDetailsQuery({ skip: !params?.taskId });\r\n\r\n    // get task status query\r\n    const { data: taskStatus } = useGetTaskStatusQuery(params?.taskId);\r\n\r\n    // lazily get task working environment\r\n    const [\r\n        getWorkingEnv,\r\n        { isFetching: isWorkingEnvFetching, isLoading: isWorkingEnvLoading },\r\n    ] = useLazyGetWorkingEnvironmentQuery();\r\n\r\n    const task = new SingleTask(Task); // task instance\r\n    const loggedUser = new User(window?.Laravel?.user); // logged users data\r\n\r\n    const [taskForTimeLog, setTaskForTimeLog] = React.useState({});\r\n    const [totalTime, setTotalTime] = React.useState(\"\");\r\n    const taskId = task?.id;\r\n\r\n    console.log(\"total time\", totalTime);\r\n    const { data: taskForTime } = useGetTaskForTotalTimeQuery(taskId, {\r\n        skip: !taskId,\r\n    });\r\n    useEffect(() => {\r\n        setTaskForTimeLog(taskForTime);\r\n    }, [taskForTime]);\r\n    const calculateTotalTime = (task) => {\r\n        if (task) {\r\n            let totalTimeInMinutes = 0;\r\n            const parentTimeArray = task?.parent_task_time_log?.split(\" \");\r\n            const subTimeArray = task?.sub_task_time_log?.split(\" \");\r\n\r\n            if (task?.subtask.length === 0) {\r\n                if (parentTimeArray && parentTimeArray.length >= 1) {\r\n                    totalTimeInMinutes += parseInt(parentTimeArray[0]) * 60;\r\n                    totalTimeInMinutes += parseInt(\r\n                        parentTimeArray[2] === \"\"\r\n                            ? 0\r\n                            : parseInt(parentTimeArray[2])\r\n                    );\r\n                }\r\n            } else {\r\n                if (\r\n                    parentTimeArray &&\r\n                    parentTimeArray.length >= 1 &&\r\n                    subTimeArray &&\r\n                    subTimeArray.length >= 1\r\n                ) {\r\n                    totalTimeInMinutes += parseInt(parentTimeArray[0]) * 60;\r\n                    totalTimeInMinutes += parseInt(\r\n                        parentTimeArray[2] === \"\"\r\n                            ? 0\r\n                            : parseInt(parentTimeArray[2])\r\n                    );\r\n\r\n                    totalTimeInMinutes += parseInt(subTimeArray[0]) * 60;\r\n                    if (subTimeArray[0]) {\r\n                        totalTimeInMinutes += parseInt(\r\n                            subTimeArray[2] === \"\"\r\n                                ? 0\r\n                                : parseInt(subTimeArray[2])\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n            const hours = Math.floor(totalTimeInMinutes / 60);\r\n            const minutes = totalTimeInMinutes % 60;\r\n\r\n            setTotalTime(`${hours} hrs ${minutes} mins`);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (taskForTimeLog) {\r\n            calculateTotalTime(taskForTimeLog.task);\r\n        }\r\n    }, [taskForTimeLog]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const CurrentTask = {};\r\n\r\n            await getTaskDetails(`/${params?.taskId}/json?mode=basic`)\r\n                .unwrap()\r\n                .then(\r\n                    ({\r\n                        task,\r\n                        parent_task_heading,\r\n                        parent_task_action,\r\n                        subtasks,\r\n                        task_guideline,\r\n                        revisions,\r\n                        Sub_Tasks,\r\n                        ppTaskFiles,\r\n                    }) => {\r\n                        for (const key in task) {\r\n                            CurrentTask[key] = task[key];\r\n                        }\r\n                        CurrentTask.parent_task_title =\r\n                            parent_task_heading?.heading || null;\r\n                        CurrentTask.parent_task_action = parent_task_action;\r\n                        CurrentTask.subtask = subtasks;\r\n                        CurrentTask.pm_task_guideline = task_guideline;\r\n                        CurrentTask.task_revisions = revisions;\r\n                        CurrentTask.taskSubTask = Sub_Tasks;\r\n                        CurrentTask.taskFiles = [...ppTaskFiles];\r\n                    }\r\n                );\r\n\r\n            // console.log(CurrentTask.subtask_id);\r\n\r\n            await getWorkingEnv(\r\n                CurrentTask.subtask_id\r\n                    ? CurrentTask.parent_task_id\r\n                    : CurrentTask.id\r\n            )\r\n                .unwrap()\r\n                .then(({ task_working_environment }) => {\r\n                    CurrentTask.working_environment_data =\r\n                        task_working_environment;\r\n                });\r\n\r\n            // console.log({ CurrentTask });\r\n\r\n            const _task = new SingleTask(CurrentTask);\r\n\r\n            // console.log({ _task });\r\n\r\n            let hasPermission = singleTaskPagePermission(_task, loggedUser);\r\n\r\n            if (!hasPermission) {\r\n                return throwError({\r\n                    title: \"Access Denied\",\r\n                    message:\r\n                        \"Access to this resource is forbidden. Please contact the administrator for assistance.\",\r\n                    code: 403,\r\n                });\r\n            } else {\r\n                // const task = _task;\r\n                dispatch(storeTask(CurrentTask));\r\n            }\r\n        })();\r\n    }, [refetchTask]);\r\n\r\n    const loadingClass =\r\n        isTaskFetching || isTaskLoading ? \"skeleton-loading\" : \"\";\r\n\r\n    if (\r\n        isTaskFetching ||\r\n        isTaskLoading ||\r\n        isWorkingEnvFetching ||\r\n        isWorkingEnvLoading\r\n    ) {\r\n        return <Loading isLoading={true} />;\r\n    }\r\n\r\n    const _taskStatus = new BoardColumn(taskStatus);\r\n\r\n    if (!task) return null;\r\n\r\n    // console.log(\"task revision\", task?.revisions);\r\n\r\n    return (\r\n        <RefetchTaskProvider.Provider value={{ setRefetchTask }}>\r\n            <div className=\"position-relative content-wrapper\">\r\n                <div className=\"mb-3\">\r\n                    <div className={`f-18 ${loadingClass}`}>\r\n                        <span>\r\n                            {\" \"}\r\n                            <strong>Task: </strong>{\" \"}\r\n                        </span>\r\n                        <a href={`/account/tasks/${task?.id}`}>\r\n                            {task?.getSubtaskTitle()}\r\n                        </a>\r\n                        {_.includes(\r\n                            [1, 4, 6, 7, 8],\r\n                            loggedUser?.getRoleId()\r\n                        ) && (\r\n                            <span className=\"ml-2\">\r\n                                (\r\n                                <a\r\n                                    href={`/account/projects/${task.projectId}?tab=tasks`}\r\n                                    className=\"f-14\"\r\n                                >\r\n                                    See All Tasks\r\n                                </a>\r\n                                )\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {isTaskFetching || isTaskLoading ? (\r\n                        <GenarelLoader />\r\n                    ) : (\r\n                        <React.Fragment>\r\n                            <div className=\"col-12 col-md-7 col-lg-8 mb-3\">\r\n                                <div className=\"bg-white rounded-lg p-3\">\r\n                                    <TaskAction\r\n                                        task={task}\r\n                                        status={taskStatus}\r\n                                    />\r\n\r\n                                    {/* task information */}\r\n                                    <div>\r\n                                        <div\r\n                                            className=\"d-flex flex-column py-3\"\r\n                                            style={{ gap: \"10px\" }}\r\n                                        >\r\n                                            {task?.isSubtask && (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        {\" \"}\r\n                                                        Parent Task:{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        <a\r\n                                                            href={`/account/tasks/${task?.parentTaskId}`}\r\n                                                            className=\"text-hover-underline\"\r\n                                                        >\r\n                                                            {\r\n                                                                task?.parentTaskTitle\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n\r\n                                            {/* project name */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">Project : </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <span className=\"dot-color bg-danger mr-2\" />\r\n                                            <a href={`/account/projects/${task?.projectId}`} className=\"text-hover-underline\">\r\n                                                {task?.projectName}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* client name */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Client :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <span className=\"dot-color bg-info mr-2\" />\r\n                                                    <span>\r\n                                                        {Task?.ind_clientId\r\n                                                            ? Task?.ind_client_name\r\n                                                            : Task?.independent_client_name}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* project manager */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">Project Manager: </div>\r\n\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                                <img\r\n                                                    src={`/user-uploads/avatar/${task?.projectManagerAvatar}`}\r\n                                                    alt={task?.projectManagerName}\r\n                                                    width=\"32px\"\r\n                                                    height=\"32px\"\r\n                                                    className=\"rounded-circle\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"ml-2\">\r\n                                                <span\r\n                                                    className={`d-block f-14 font-weight-bold`}\r\n                                                >\r\n                                                    <a\r\n                                                        href={`/account/employees/${task?.projectManagerId}`}\r\n                                                        className=\"hover-underline\"\r\n                                                    >\r\n                                                        {task?.projectManagerName}</a>\r\n                                                    {Number(task?.projectManagerId) ===\r\n                                                        Number(loggedUser?.getId()) && (\r\n                                                        <sup\r\n                                                            className=\"rounded-pill bg-dark text-white px-1 ml-1\"\r\n                                                            style={{ fontSize: \"10px\", whiteSpace: 'nowrap' }}\r\n                                                        >\r\n                                                            It's You\r\n                                                        </sup>\r\n                                                    )}\r\n                                                </span>\r\n\r\n                                                <span style={{ fontSize: \"12px\" }}>\r\n                                                   {task?.projectManagerDesignation}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* milestone */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">\r\n                                            Milestone :{\" \"}\r\n                                        </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <span className=\"dot-color bg-primary mr-2\" />\r\n                                            {task?.milestoneTitle}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* assignee to */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Assigned To :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            width: \"32px\",\r\n                                                            height: \"32px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <img\r\n                                                            src={task?.assigneeTo?.getAvatar()}\r\n                                                            alt={task?.assigneeTo?.getName()}\r\n                                                            width=\"32px\"\r\n                                                            height=\"32px\"\r\n                                                            className=\"rounded-circle\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"ml-2\">\r\n                                                        <span\r\n                                                            className={`d-block f-14 font-weight-bold`}\r\n                                                        >\r\n                                                            <a\r\n                                                                href={task?.assigneeTo?.getUserLink()}\r\n                                                                className=\"hover-underline\"\r\n                                                            >\r\n                                                                {task?.assigneeTo?.getName()}\r\n                                                            </a>\r\n                                                            {Number(\r\n                                                                task?.assigneeTo?.getId()\r\n                                                            ) ===\r\n                                                                Number(\r\n                                                                    loggedUser?.getId()\r\n                                                                ) && (\r\n                                                                <sup\r\n                                                                    className=\"rounded-pill bg-dark text-white px-1 ml-1\"\r\n                                                                    style={{\r\n                                                                        fontSize:\r\n                                                                            \"10px\",\r\n                                                                        whiteSpace:\r\n                                                                            \"nowrap\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    It's You\r\n                                                                </sup>\r\n                                                            )}\r\n                                                        </span>\r\n\r\n                                                        <span\r\n                                                            style={{\r\n                                                                fontSize:\r\n                                                                    \"12px\",\r\n                                                            }}\r\n                                                        >\r\n                                                            {task?.assigneeTo?.getDesignationName()}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* assignee by */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Assigned by:{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            width: \"32px\",\r\n                                                            height: \"32px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <img\r\n                                                            src={task?.assigneeBy?.getAvatar()}\r\n                                                            alt={task?.assigneeBy?.getName()}\r\n                                                            width=\"32px\"\r\n                                                            height=\"32px\"\r\n                                                            className=\"rounded-circle\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"ml-2\">\r\n                                                        <span\r\n                                                            className={`d-block f-14 font-weight-bold`}\r\n                                                        >\r\n                                                            <a\r\n                                                                href={task?.assigneeBy?.getUserLink()}\r\n                                                                className=\"hover-underline\"\r\n                                                            >\r\n                                                                {task?.assigneeBy?.getName()}\r\n                                                            </a>\r\n                                                            {Number(\r\n                                                                task?.assigneeBy?.getId()\r\n                                                            ) ===\r\n                                                                Number(\r\n                                                                    loggedUser?.getId()\r\n                                                                ) && (\r\n                                                                <sup\r\n                                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                                    style={{\r\n                                                                        fontSize:\r\n                                                                            \"10px\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    It's You\r\n                                                                </sup>\r\n                                                            )}\r\n                                                        </span>\r\n\r\n                                                        <span\r\n                                                            style={{\r\n                                                                fontSize:\r\n                                                                    \"12px\",\r\n                                                            }}\r\n                                                        >\r\n                                                            {task?.assigneeBy?.getDesignationName()}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* TASK CATEGORY */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Task Category :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {task.category.name}\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* PRIORITY */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Priority :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    />\r\n                                                    {task?.priority}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* login url */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Login URL :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n\r\n                                                        <a\r\n                                                            target=\"__blank\"\r\n                                                            href={\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.loginURL\r\n                                                            }\r\n                                                        >\r\n                                                            {\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.loginURL\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* username */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Username :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {\r\n                                                            task.additionalInfo\r\n                                                                .username\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* password */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Password :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {\r\n                                                            task.additionalInfo\r\n                                                                .password\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* ref site */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Reference page :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        <a\r\n                                                            target=\"__blank\"\r\n                                                            href={\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.refSite\r\n                                                            }\r\n                                                        >\r\n                                                            {\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.refSite\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* category */}\r\n                                            {task?.isSubtask && (\r\n                                                <>\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Task Category :{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.category\r\n                                                                ?.name ?? \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    {/* task type */}\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Task Type:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.taskType ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Type:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageType ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Name:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageName ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Url:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageUrl ? (\r\n                                                                <a\r\n                                                                    href={\r\n                                                                        task?.pageUrl\r\n                                                                    }\r\n                                                                >\r\n                                                                    ( view )\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <span>--</span>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        {/* project manager guideline */}\r\n                                        {(!_.isEmpty(task?.workEnvData) ||\r\n                                            !_.isEmpty(task?.guidelines)) && (\r\n                                            <Accordion\r\n                                                expendable={false}\r\n                                                title=\"General Guidelines\"\r\n                                            >\r\n                                                {/* {task?.hasProjectManagerGuideline && <PMGuideline guideline={task?.PMTaskGuideline} /> } */}\r\n\r\n                                                {!_.isEmpty(\r\n                                                    task?.workEnvData\r\n                                                ) && (\r\n                                                    <div className=\"sp1_task_card--sub-card\">\r\n                                                        <div\r\n                                                            className=\"px-4 py-3\"\r\n                                                            style={{\r\n                                                                background:\r\n                                                                    \"#F3F5F9\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <h6 className=\"mb-2\">\r\n                                                                Working\r\n                                                                Environment\r\n                                                            </h6>\r\n                                                            <hr />\r\n                                                            <div className=\"row\">\r\n                                                                {/* working/staging site's url */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            URL\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.site_url\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* frontend password */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Frontend\r\n                                                                            Password\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.frontend_password\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* working/staging site's login url */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            Login\r\n                                                                            URL\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.login_url\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>{\" \"}\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* working/staging site's username/email */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            Username/Email\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {task\r\n                                                                            ?.workEnvData\r\n                                                                            ?.email ||\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.user_name}\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* password */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Password\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.password\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* Reference Page */}\r\n                                                                {/* <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Reference\r\n                                                                            Page\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.reference_site\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                <Guideline\r\n                                                    text={task?.guidelines}\r\n                                                    workEnv={task?.workEnvData}\r\n                                                />\r\n                                            </Accordion>\r\n                                        )}\r\n\r\n                                        {/* task revision */}\r\n                                        {_.size(task?.revisions) > 0 && (\r\n                                            <Accordion\r\n                                                title={\r\n                                                    _.last(task?.revisions)\r\n                                                        ?.revisionStatus\r\n                                                }\r\n                                                headingClass=\"d-flex align-items-center justify-content-between\"\r\n                                                headingStyle={{\r\n                                                    background:\r\n                                                        \"rgba(227,62,79,1)\",\r\n                                                    color: \"#fff\",\r\n                                                }}\r\n                                            >\r\n                                                {_.map(\r\n                                                    task?.revisions,\r\n                                                    (revision, index) => (\r\n                                                        <RevisionText\r\n                                                            key={revision?.id}\r\n                                                            index={index + 1}\r\n                                                            date={dayjs(\r\n                                                                revision.createdAt\r\n                                                            ).format(\r\n                                                                \"MMM DD, YYYY\"\r\n                                                            )}\r\n                                                            time={dayjs(\r\n                                                                revision.createdAt\r\n                                                            ).format(\"hh:mm a\")}\r\n                                                            text={\r\n                                                                revision?.comment ||\r\n                                                                revision?.devComment ||\r\n                                                                revision?.pmComment\r\n                                                            }\r\n                                                            revision={revision}\r\n                                                        />\r\n                                                    )\r\n                                                )}\r\n                                            </Accordion>\r\n                                        )}\r\n\r\n                                        {/* task description */}\r\n                                        <Accordion\r\n                                            expendable={false}\r\n                                            title=\"Task Descriptions\"\r\n                                        >\r\n                                            <Guideline\r\n                                                text={task?.description}\r\n                                            />\r\n\r\n                                            {_.size(task?.attachments) > 0 ? (\r\n                                                <div className=\"mt-3\">\r\n                                                    <h4 className=\"mb-2\">\r\n                                                        Task Attachments:{\" \"}\r\n                                                    </h4>\r\n                                                    <FileUploader>\r\n                                                        {_.map(\r\n                                                            task?.attachments,\r\n                                                            (attachment) =>\r\n                                                                attachment?.pp_task_file_name ? (\r\n                                                                    <FileUploader.Preview\r\n                                                                        key={\r\n                                                                            attachment?.pp_task_file_id\r\n                                                                        }\r\n                                                                        fileName={\r\n                                                                            attachment?.pp_task_file_name\r\n                                                                        }\r\n                                                                        downloadAble={\r\n                                                                            true\r\n                                                                        }\r\n                                                                        deleteAble={\r\n                                                                            false\r\n                                                                        }\r\n                                                                        downloadUrl={\r\n                                                                            attachment?.pp_task_file_url\r\n                                                                        }\r\n                                                                        previewUrl={\r\n                                                                            attachment?.pp_task_file_url\r\n                                                                        }\r\n                                                                        fileType={\r\n                                                                            _.includes(\r\n                                                                                [\r\n                                                                                    \"png\",\r\n                                                                                    \"jpeg\",\r\n                                                                                    \"jpg\",\r\n                                                                                    \"svg\",\r\n                                                                                    \"webp\",\r\n                                                                                    \"gif\",\r\n                                                                                ],\r\n                                                                                attachment?.pp_task_file_icon\r\n                                                                            )\r\n                                                                                ? \"images\"\r\n                                                                                : \"others\"\r\n                                                                        }\r\n                                                                        classname=\"comment_file\"\r\n                                                                        ext={\r\n                                                                            attachment?.pp_task_file_icon\r\n                                                                        }\r\n                                                                    />\r\n                                                                ) : null\r\n                                                        )}\r\n                                                    </FileUploader>\r\n                                                </div>\r\n                                            ) : null}\r\n                                        </Accordion>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )}\r\n\r\n                    <div className=\"col-12 col-md-5 col-lg-4\">\r\n                        <div className=\"d-flex flex-column\">\r\n                            {/* period */}\r\n                            <div\r\n                                className=\"sp1_task_right_card mb-3\"\r\n                                style={{ maxHeight: \"450px\" }}\r\n                            >\r\n                                <div className=\"d-flex align-items-center font-weight-bold border-bottom pl-2 pb-2 mb-2\">\r\n                                    <span\r\n                                        style={{\r\n                                            display: \"block\",\r\n                                            width: \"10px\",\r\n                                            height: \"10px\",\r\n                                            borderRadius: \"100%\",\r\n                                            background: taskStatus?.label_color,\r\n                                            marginRight: \"6px\",\r\n                                            boxShadow:\r\n                                                \"0 0 10px rgba(0,0,0,.1)\",\r\n                                        }}\r\n                                    />\r\n\r\n                                    {_taskStatus.getTaskStatusName(\r\n                                        loggedUser?.getRoleId(),\r\n                                        task.isSubtask\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Start Date: </div>\r\n                                    <div\r\n                                        className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                    >\r\n                                        {task?.getStartDate(\"MMM DD, YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Due Date */}\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Due Date: </div>\r\n                                    <div\r\n                                        className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                    >\r\n                                        {task?.getDueDate(\"MMM DD, YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n                                {/* End Due Date */}\r\n\r\n                                {/* Time Estimate */}\r\n                                {/* <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">Time Estimate: </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.getEstimateTime()}\r\n                                </div>\r\n                            </div> */}\r\n                                {/* End Time Estimate */}\r\n\r\n                                {/* <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">\r\n                                    Parent Task Hours Logged:\r\n                                </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.parentTaskTimeLog || \"--\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">Subtask Hours Logged: </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold ml-2 pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.subTaskTimeLog || \"--\"}\r\n                                </div>\r\n                            </div> */}\r\n\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Total Hours Logged: </div>\r\n                                    <div className=\"d-flex align-items-center font-weight-bold pl-2\">\r\n                                        {(task.isSubtask\r\n                                            ? task?.parentTaskTimeLog\r\n                                            : totalTime\r\n                                            ? totalTime\r\n                                            : \"0 hrs 0 mins\") || \"--\"}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* comments */}\r\n                            {task && task?.id && <SubmittedWork task={task} />}\r\n                            {!task.isSubtask && (\r\n                                <SubTaskSection status={taskStatus} />\r\n                            )}\r\n                            {task && task?.id && (\r\n                                <DailySubmissionSection task={task} />\r\n                            )}\r\n                            {task && task?.id && (\r\n                                <CommentSection\r\n                                    task={task}\r\n                                    isLoading={isTaskFetching || isTaskLoading}\r\n                                />\r\n                            )}\r\n                            <NoteSection />\r\n                            <TimeLogSection />\r\n                            {task && task?.id && <HistorySection />}\r\n                            {task && task?.id && (\r\n                                <RevisionSection task={task} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Toaster />\r\n                <ShowEditModals task={task} auth={loggedUser} />\r\n            </div>\r\n        </RefetchTaskProvider.Provider>\r\n    );\r\n};\r\n\r\nexport default SingleIndependentTask;\r\n\r\nconst ShowEditModals = ({ auth, task }) => {\r\n    let hasAccess = false;\r\n\r\n    let time = task.isSubtask ? task?.parentTaskTimeLog : task?.totalTimeLog;\r\n\r\n    if (auth.getRoleId() === 1) {\r\n        hasAccess = true;\r\n    } else if (\r\n        auth.getId() === task.assigneeBy.id &&\r\n        task.boardColumn.id === 2\r\n    ) {\r\n        hasAccess = true;\r\n    } else hasAccess = false;\r\n\r\n    if (hasAccess) {\r\n        if (task.isSubtask) {\r\n            return <SubTaskEditModal task={task} />;\r\n        } else {\r\n            return <TaskEditForm task={task} />;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({\r\n    children, \r\n    type=\"button\",\r\n    disabled=false, \r\n    className = '', \r\n    variant='primary',\r\n    size=\"sm\",\r\n    onClick,\r\n    ...props\r\n}) => {\r\n    const classes = `cnx__btn cnx__btn_${variant} ${disabled ? 'cnx__btn_disabled': ''} cnx__btn_${size} ${className}`\r\n\r\n    const handleOnClick = (e) => {\r\n        onClick && onClick(e)\r\n    }\r\n\r\n\r\n    return (\r\n        <button \r\n            type='button' \r\n            className={classes} \r\n            disabled={disabled} \r\n            onClick={handleOnClick} \r\n            {...props}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    children: PropTypes.node.isRequired || PropTypes.string.isRequired || PropTypes.array.isRequired,\r\n    disabled: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    variant: PropTypes.oneOf(['primary', 'secondary', 'tertiary', 'success', 'danger']),\r\n    size: PropTypes.oneOf(['sm', 'md', 'lg']),\r\n    onClick: PropTypes.func,\r\n    href: PropTypes.string\r\n}\r\n\r\nexport default Button;","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {usePopper} from 'react-popper';\r\nimport {motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst DropdownContext = React.createContext();\r\n\r\n\r\nconst DropdownProvider = ({children}) => {\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [element, setElement] = React.useState(null);\r\n    const [reference, setReference] = React.useState(null);\r\n\r\n    return (\r\n        <DropdownContext.Provider value={{\r\n            element,\r\n            setElement,\r\n            reference,\r\n            setReference,\r\n            isOpen,\r\n            setIsOpen\r\n        }}>\r\n            {children}\r\n        </DropdownContext.Provider>\r\n    )\r\n}\r\n\r\n// dropdown hooks\r\nconst useDropdown = () => {\r\n    const context = React.useContext(DropdownContext);\r\n    if(!context) {\r\n        throw new Error('useDropdown must be used within a DropdownProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\n\r\n// dropdown item\r\nconst DropdownItem = ({children, className, onClick, disabled=false, ...props}) => {\r\n    const {setIsOpen} = useDropdown();\r\n    return(\r\n        <div \r\n            onMouseUp={() => disabled ? null : setIsOpen(false)}\r\n            onClick={(e) => disabled ? null : onClick ? onClick(e): null}\r\n            className={`cnx_dropdown__item ${disabled ? 'cnx_dropdown__item_disabled}': ''} ${className}`}\r\n            {...props}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DropdownToggle = ({children, icon=true, className}) => {\r\n    const {setIsOpen, isOpen, setReference} = useDropdown();\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    return(\r\n        <div\r\n            ref={setReference}\r\n            className={`cnx_dropdown__toggle ${className}`}\r\n            onClick={toggle}\r\n        >\r\n\r\n            {children}\r\n            {icon && <i className={`fas fa-caret-${isOpen ? 'up' : 'down'} cnx_dropdown__toggle_icon`}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n// dropdown menu\r\nconst DropdownMenu = ({children, className, placement=\"bottom-start\", offset=[0, 3], ...props}) => {\r\n    const { reference, setIsOpen, isOpen} = useDropdown();\r\n    const [popperElement , setPopperElement] = React.useState(null);\r\n    const [width, setWidth] = React.useState(100);\r\n    \r\n    // generate random id for dropdown menu\r\n    const id = React.useMemo(() => Math.random().toString(36).substr(2, 9), []);\r\n\r\n\r\n    let DOM = document.getElementById(id);\r\n    const {styles, attributes} = usePopper(reference, popperElement, {\r\n        placement,\r\n        modifiers: [\r\n            {\r\n                name: 'offset',\r\n                options: {\r\n                    offset,\r\n                },\r\n            },\r\n            {\r\n                name: 'flip',\r\n                options: {\r\n                    fallbackPlacements: ['bottom', 'left', 'right', 'top' ],\r\n                },\r\n            }\r\n        ],\r\n    });\r\n\r\n\r\n    // min width\r\n    React.useEffect(() => {\r\n        if(reference){\r\n            setWidth(reference.offsetWidth);\r\n        }\r\n    }, [reference])\r\n\r\n\r\n    // outside click\r\n\r\n    React.useEffect(() => {\r\n        let timeout;\r\n        const handleClickOutside = (event) => {\r\n            if (popperElement && !popperElement.contains(event.target)) {\r\n                setIsOpen(false);\r\n                clearTimeout(timeout);\r\n                window.removeEventListener('click', handleClickOutside);\r\n            }\r\n        };\r\n\r\n\r\n        if(isOpen) {\r\n            timeout = setTimeout(() => {\r\n                window.addEventListener('click', handleClickOutside);\r\n            }, 100);\r\n        } else {\r\n            window.removeEventListener('click', handleClickOutside);\r\n        }\r\n        return () => {\r\n            window.removeEventListener('click', handleClickOutside);\r\n            clearTimeout(timeout);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isOpen, popperElement])\r\n\r\n    // create element in html body\r\n    React.useEffect(() => {\r\n        const el = document.createElement('div');\r\n        el.id = id;\r\n        document.body.appendChild(el);\r\n        \r\n        setPopperElement(el);\r\n        return () => {\r\n            document.body.removeChild(el);\r\n        }\r\n    }, [])\r\n\r\n    \r\n    if(!DOM) {\r\n        return null\r\n    }\r\n\r\n    return(\r\n       ReactDOM.createPortal(\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1 }}\r\n                        exit={{opacity: 0}}\r\n                        className={`cnx_dropdown__menu ${isOpen ? 'cnx_dropdown__menu_open' : ''} ${className}`}\r\n                        ref={setPopperElement}\r\n                        style={{...styles.popper, minWidth: width}}\r\n                        {...attributes.popper}\r\n                        {...props}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>, \r\n            DOM\r\n       )\r\n    )\r\n} \r\n\r\n\r\n\r\nconst Dropdown = ({children, className=''}) => {\r\n    return(\r\n        <div className={`cnx_dropdown ${className}`}>\r\n            <DropdownProvider>\r\n                {children}\r\n            </DropdownProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nDropdown.Item = DropdownItem;\r\nDropdown.Toggle = DropdownToggle;\r\nDropdown.Menu = DropdownMenu;\r\n\r\nexport default Dropdown;\r\n\r\n\r\n// type\r\n\r\nDropdownProvider.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\nDropdownItem.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    onClick: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    className: PropTypes.string,\r\n}\r\n\r\nDropdownToggle.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    icon: PropTypes.bool,\r\n    className: PropTypes.string,\r\n}\r\n\r\n\r\nDropdownMenu.propTypes = {\r\n    children: PropTypes.node.isRequired || PropTypes.arrayOf(PropTypes.node).isRequired,\r\n    className: PropTypes.string,\r\n    placement: PropTypes.string,\r\n    offset: PropTypes.arrayOf(PropTypes.number),\r\n}\r\n\r\nDropdown.propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.node.isRequired || PropTypes.arrayOf(PropTypes.node).isRequired,\r\n}","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ children, isOpen, className }) => {\r\n    const [isBrowser, setIsBrowser] = React.useState(false);\r\n    // generate random id for dropdown menu\r\n    const id = React.useMemo(() => Math.random().toString(36).substr(2, 9), []);\r\n    let DOM = document.getElementById(id);\r\n \r\n  \r\n    React.useEffect(() => {\r\n        setIsBrowser(true);\r\n        const el = document.createElement('div');\r\n        el.id = id;\r\n        document.body.appendChild(el);\r\n        return () => {\r\n            document.body.removeChild(el);\r\n        }\r\n    }, []);\r\n\r\n\r\n    // React.useEffect(() => {\r\n    //     if(isOpen){\r\n    //         document.body.classList.add('cnx_body-overflow-hidden')\r\n    //     }else{\r\n    //         document.body.classList.remove('cnx_body-overflow-hidden')\r\n    //     }\r\n    // }, [isOpen]) \r\n\r\n    if(!DOM) return;\r\n \r\n\r\n    const modalContent = isOpen ? (\r\n        <div className={`cnx_modal ${className}`}>\r\n            {children}\r\n        </div>\r\n    ) : null;\r\n\r\n    if (isBrowser) {\r\n        return ReactDOM.createPortal(\r\n            modalContent,\r\n            DOM\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nModal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    isOpen: PropTypes.bool.isRequired,\r\n    className: PropTypes.string,\r\n}\r\n\r\n\r\nexport default Modal;","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst SubmitButton = ({onClick, isLoading, className, variant=\"primary\", children, title}) => {\r\n    let body = document.querySelector('#body');\r\n\r\n    const handleOnClick = (e) => {\r\n        e.stopPropagation();\r\n        onClick(e)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(isLoading){\r\n            body.style.cursor = 'progress';\r\n        }else{\r\n            body.style.cursor = 'default';\r\n        }\r\n    }, [isLoading])\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {!isLoading ? (\r\n                <Button variant={variant} onClick={handleOnClick} className={className}>\r\n                    {children || title}\r\n                </Button>\r\n            ) : (\r\n                <div className=\"cursor-processing cnx__btn cnx__btn_sm cnx__btn_primary\">\r\n                    <div\r\n                        className=\"spinner-border text-white\"\r\n                        role=\"status\"\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                        }}\r\n                    ></div>\r\n                    Processing...\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from 'styled-components';\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useReplyTaskCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst AttachmentUpload = ({ comment, onReply, close }) => {\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = React.useState(null);\r\n    const [replyTaskComment, { isLoading }] = useReplyTaskCommentMutation();\r\n\r\n    const visibleToScreenRef = React.useRef(null);\r\n    // update on layout change\r\n    React.useLayoutEffect(() => {\r\n        if (visibleToScreenRef && visibleToScreenRef.current) {\r\n            visibleToScreenRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, []);\r\n\r\n    // handle update\r\n    const onUpdate = async (e) => {\r\n\r\n        // if not select any file show error message\r\n        if(_.size(files) === 0){\r\n           setError(p => ({...p, fileError: \"Please select at least one file.\"}));\r\n           return;\r\n        }\r\n\r\n        // create form data\r\n        const formData = new FormData();\r\n        formData.append(\"reply_text\", \"\");\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"parent_comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n        // submit form\r\n        try {\r\n            const response = await replyTaskComment({ formData, commentId: comment.id });\r\n            if(response){\r\n                toast.success(\"Your files has been successfully uploaded.\");\r\n                onReply();\r\n                close();\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        <UploadFilesInLine\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        />\r\n\r\n                        {error && error.fileError ? <ErrorText> {error.fileError} </ErrorText> :''}\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Processing..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onUpdate}>\r\n                                Reply\r\n                            </Button>\r\n                            <Button variant=\"secondary\" onClick={close}>\r\n                                Close\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n\r\n            <div ref={visibleToScreenRef} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AttachmentUpload;\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n`;\r\n","import { Menu } from \"@headlessui/react\";\r\nimport * as React from \"react\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\nimport { timeCalculate } from \"../../../utils/timeCalculate\";\r\nimport { User } from \"../../../utils/user-details\";\r\n\r\nconst Comment = ({ comment, onDelete }) => {\r\n    const auth = useAuth();\r\n    const user = comment?.user ? new User(comment.user) : null;\r\n    const [showDeletedComment, setShowDeletedComment] = React.useState(false);\r\n\r\n    if (comment.is_deleted && !showDeletedComment) {\r\n        return (\r\n            <div className=\"sp1_comment_deleted_status w-100\">\r\n                This Comment has been deleted\r\n                {auth.getRoleId() === 1 ? (\r\n                    <button onClick={() => setShowDeletedComment(!showDeletedComment)}>\r\n                        <i className=\"fa-solid fa-eye-slash\" />\r\n                    </button>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deletedClass = comment.is_deleted ? \"sp1_comment_deleted_status\" : \"\";\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`w-100 d-flex align-items-center  ${deletedClass}`}>\r\n                <div className=\"mr-2\">\r\n                    <div className=\"rounded-circle\">\r\n                        <img\r\n                            src={user?.getAvatar()}\r\n                            alt={user?.getName()}\r\n                            width=\"32px\"\r\n                            height=\"32px\"\r\n                            className=\"rounded-circle\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"w-100 d-flex align-items-center justify-between\">\r\n                    <div className=\"sp1_comment\">\r\n                        <span className=\"sp1_comment_user--name\">\r\n                            {user?.getName()} ({user?.getDesignationName()})\r\n                        </span>\r\n                        <span\r\n                            className=\"sp1_comment_time\"\r\n                            style={{ color: \"#888\" }}\r\n                        >\r\n                            {timeCalculate(comment.last_updated_date)}\r\n                        </span>\r\n                    </div>\r\n\r\n                    {comment.is_deleted && auth.getRoleId() === 1 ? (\r\n                        <button className=\"ml-auto\" onClick={() => setShowDeletedComment(!showDeletedComment)}>\r\n                            <i className=\"fa-solid fa-eye\" />\r\n                        </button>\r\n                    ) : null}\r\n                </div>\r\n\r\n\r\n\r\n                {/* <Dropdown className=\"sp1_comment_extend_menu_dd\">\r\n                    <Dropdown.Toggle icon={false}>\r\n                        <i className=\"fa-solid fa-ellipsis\"></i>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu placement=\"bottom-end\" className=\"sp1_comment_extend_menu\">\r\n                        <Dropdown.Item>Edit</Dropdown.Item>\r\n                        <Dropdown.Item>Delete</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown> */}\r\n                {comment.is_deleted || user.getId() !== auth.getId() ? null : (\r\n                    <Menu as=\"div\" className=\"sp1_comment_extend_menu\">\r\n                        <Menu.Button\r\n                            as=\"button\"\r\n                            className=\"sp1_comment_extend_menu-btn\"\r\n                        >\r\n                            <i className=\"fa-solid fa-ellipsis\"></i>\r\n                        </Menu.Button>\r\n                        <Menu.Items\r\n                            as=\"div\"\r\n                            placement=\"bottom-end\"\r\n                            className=\"sp1_comment_extend_menu__items\"\r\n                        >\r\n                            <Menu.Item\r\n                                as=\"div\"\r\n                                className=\"sp1_comment_extend_menu__item --disabled\"\r\n                            >\r\n                                Edit\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                as=\"div\"\r\n                                className=\"sp1_comment_extend_menu__item --delete\"\r\n                                onClick={(e) => onDelete(e, comment.id)}\r\n                            >\r\n                                Delete\r\n                            </Menu.Item>\r\n                        </Menu.Items>\r\n                    </Menu>\r\n                )}\r\n            </div>\r\n            {comment?.comment ? (\r\n                <div className=\"__box __reply_text w-100 my-1 text-dark border-rounded\">\r\n                    <div\r\n                        className=\"sp1_ck_content sp1_message--body\"\r\n                        style={{ overflow: \"hidden\" }}\r\n                        dangerouslySetInnerHTML={{ __html: comment?.comment }}\r\n                    />\r\n                </div>\r\n            ) : null}\r\n\r\n            <div className=\"comment_files mt-2\">\r\n                <FileUploader>\r\n                    {comment?.files_data?.map((file) => (\r\n                        <FileUploader.Preview\r\n                            key={file?.name}\r\n                            fileName={file?.name}\r\n                            downloadAble={true}\r\n                            deleteAble={false}\r\n                            downloadUrl={file?.url}\r\n                            previewUrl={file?.url}\r\n                            fileType={file?.icon}\r\n                            classname=\"comment_file\"\r\n                            ext=\"\"\r\n                        />\r\n                    ))}\r\n                </FileUploader>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default Comment;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useRemoveCommentPreviousUploadedFileMutation, useUpdateCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst EditComment = ({ comment, updateComments, close }) => {\r\n    const [text, setText] = React.useState(comment.comment);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [previousFiles, setPreviousFiles] = React.useState([\r\n        ..._.map(comment.files_data, (file) => ({ id: file.name, ...file })),\r\n    ]);\r\n\r\n    const [updateComment, { isLoading }] = useUpdateCommentMutation();\r\n    const [removeCommentPreviousUploadedFile, {isLoading: uploadingFileDeleting}] = useRemoveCommentPreviousUploadedFileMutation();\r\n\r\n    // const isLoading = false;\r\n\r\n    const handleEditor = (e, editor) => {\r\n        const data = editor.getData();\r\n        setText(data);\r\n    };\r\n\r\n    // handle previous uploaded file delete\r\n    const handlePreviousFileDeleted = (e, file) => {\r\n        console.log(\"deleted: \", file);\r\n        const data = {\r\n            task_id: comment.task_id,\r\n            comment_id: comment.id,\r\n            file_details: file\r\n        }\r\n        removeCommentPreviousUploadedFile(data)\r\n        .unwrap()\r\n        .then(res => {\r\n            console.log(res)\r\n        })\r\n        .catch(err => {console.log(err)})\r\n    };\r\n\r\n    // handle update\r\n    const onUpdate = (e) => {\r\n        const formData = new FormData();\r\n        formData.append(\"comment\", text);\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n\r\n        updateComment({ data: formData, commentId: comment.id })\r\n            .unwrap()\r\n            .then((res) => {\r\n                toast.success(\"Successfully Updated!\");\r\n                updateComments(res.data);\r\n\r\n                close();\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent\r\n                            data={text}\r\n                            onChange={handleEditor}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        {/* <UploadFilesInLine\r\n                            onPreviousFileDelete={handlePreviousFileDeleted}\r\n                            previous={previousFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        /> */}\r\n\r\n                        <FileUploader files={files} setFiles={setFiles}>\r\n                            <FileUploader.Input />\r\n                            {comment?.files_data?.map((file) => (\r\n                                <FileUploader.Preview\r\n                                    id={file}\r\n                                    key={file?.name}\r\n                                    fileName={file?.name}\r\n                                    downloadAble={true}\r\n                                    deleteAble={true}\r\n                                    onRemove={handlePreviousFileDeleted}\r\n                                    downloadUrl={file?.url}\r\n                                    previewUrl={file?.url}\r\n                                    fileType={file?.icon}\r\n                                    ext=\"\"\r\n                                />\r\n                            ))}\r\n\r\n                            <FileUploader.SelectedFiles>\r\n                                {({previews, onDelete}) => (\r\n                                   _.map(previews, (preview, index) => (\r\n                                        <FileUploader.Preview\r\n                                            id={index}\r\n                                            key={index}\r\n                                            fileName={preview?.name}\r\n                                            downloadAble={true}\r\n                                            deleteAble={true}\r\n                                            onRemove={onDelete}\r\n                                            previewUrl={preview.preview}\r\n                                            fileType={preview.type}\r\n                                            ext={preview.ext}\r\n                                        />\r\n                                   ))\r\n                                )}\r\n                            </FileUploader.SelectedFiles>\r\n                        </FileUploader>\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Updating..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onUpdate}>\r\n                                Update\r\n                            </Button>\r\n                            <Button variant=\"secondary\">Close</Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditComment;\r\n","import * as React from \"react\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\nimport Dropdown from \"../../components/Dropdown\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport EditComment from \"./EditComment\";\r\nimport ReplyComment from \"./ReplyComment\";\r\nimport AttachmentUpload from \"./AttachmentUpload\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\nimport _, { compact } from \"lodash\";\r\nimport AvatarGroup from \"../../../global/AvatarGroup\";\r\nimport {\r\n    useDeleteCommentMutation,\r\n    useGetTaskCommentRepliesQuery,\r\n} from \"../../../services/api/TaskCommentApiSlice\";\r\nimport Loader from \"../../../global/Loader\";\r\nimport { BsFillPlusCircleFill } from \"react-icons/bs\";\r\nimport Comment from \"./Comment\";\r\nimport ReplyCommentPreview from \"./ReplyCommentPreview\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst InnerComment = ({ comment, updateComments }) => {\r\n    const [showReplies, setShowReplies] = React.useState(false);\r\n    const [replyMode, setReplyMode] = React.useState(false);\r\n    const [activeEditMode, setActiveEditModal] = React.useState(false);\r\n    const [uploadAttachment, setUploadAttachment] = React.useState(false);\r\n    const [selectedEmoji, setSelectedEmoji] = React.useState(\"\");\r\n    const user = comment?.user ? new User(comment.user) : null;\r\n    const auth = useAuth();\r\n\r\n    const [isRepliesLoading, setIsRepliesLoading] = React.useState(false);\r\n\r\n    // api hook\r\n    // handle delete\r\n    const [deleteComment, { isLoading: isDeleting }] =\r\n        useDeleteCommentMutation();\r\n\r\n    const handleReplyButtonClick = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(true);\r\n        setActiveEditModal(false);\r\n        setUploadAttachment(false);\r\n    };\r\n\r\n    // handle edit\r\n    const handleEditButton = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(false);\r\n        setUploadAttachment(false);\r\n        setActiveEditModal(true);\r\n    };\r\n\r\n    const handleUploadAttachment = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(false);\r\n        setActiveEditModal(false);\r\n        setUploadAttachment(true);\r\n    };\r\n\r\n    // handle comment delete\r\n    // delete comment\r\n    const handleDeleteComment = (e, commentId) => {\r\n        e.preventDefault();\r\n\r\n        Swal.fire({\r\n            icon: \"warning\",\r\n            title: `Are you sure you want to delete this comment?`,\r\n            html: \"This action cannot be undone. Deleting this comment will permanently remove it from the discussion.\",\r\n            showDenyButton: true,\r\n            denyButtonText: \"Cancel\",\r\n            // denyButtonColor: '#ffffff',\r\n\r\n            showConfirmButton: true,\r\n            confirmButtonText: \"Yes, Delete It!\",\r\n            confirmButtonColor: \"#E73819\",\r\n            customClass: {\r\n                confirmButton: \"delete-confirm-button\",\r\n                denyButton: \"delete-deny-button\",\r\n            },\r\n            buttonsStyling: false,\r\n        }).then((res) => {\r\n            if (res.isConfirmed) {\r\n                deleteCommentData();\r\n            }\r\n        });\r\n\r\n        // delete\r\n        const deleteCommentData = async () => {\r\n            const response = await deleteComment(commentId).unwrap();\r\n            if (response) {\r\n                toast.success(\"Comment Deleted Successfully\");\r\n            }\r\n        };\r\n    };\r\n\r\n    // emoji selection control\r\n    const handleEmojiSelect = (emojiData, event) => {\r\n        setSelectedEmoji(emojiData.unified);\r\n    };\r\n\r\n    // permission\r\n    const CAN_EDIT_COMMENT = auth.getId() === user.getId();\r\n\r\n    // console.log({ comment });\r\n\r\n    return (\r\n        <div className=\"sp1_task_comment_send_box sp1_task_comment_replied pl-2 pr-3 pb-2\">\r\n            <div\r\n                className=\"__send-box flex-column align-items-start\"\r\n                style={{ maxWidth: \"100%\" }}\r\n            >\r\n                {/* show comment details */}\r\n                <Comment comment={comment} onDelete={handleDeleteComment} />\r\n\r\n                <Switch>\r\n                    <Switch.Case\r\n                        condition={\r\n                            !comment.is_deleted || auth.getRoleId() === 1\r\n                        }\r\n                    >\r\n                        <div className=\"sp1_task_comment_actions\">\r\n                            {/* <Dropdown>\r\n                                <Dropdown.Toggle icon={false}>\r\n                                    <i className=\"fa-regular fa-face-smile\"></i>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    <EmojiPicker lazyLoadEmojis={true} />\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n\r\n                            <span>•</span> */}\r\n                            <Switch.Case condition={!comment.is_deleted}>\r\n                                <a href=\"#\" onClick={handleReplyButtonClick}>\r\n                                    Reply\r\n                                </a>\r\n                                <span>•</span>\r\n                                <a href=\"#\" onClick={handleUploadAttachment}>\r\n                                    <i className=\"fa-solid fa-paperclip\"></i>\r\n                                </a>\r\n                            </Switch.Case>\r\n\r\n                            {/* <Switch>\r\n                                <Switch.Case condition={CAN_EDIT_COMMENT}>\r\n                                    <a href=\"#\" onClick={handleEditButton}>\r\n                                        Edit\r\n                                    </a>\r\n                                    <span>•</span>\r\n                                </Switch.Case>\r\n                            </Switch>\r\n                            */}\r\n\r\n                            {/* <a href=\"#\">Delete</a>\r\n                <span>•</span> */}\r\n\r\n                            <Switch>\r\n                                <Switch.Case\r\n                                    condition={comment?.total_replies > 0}\r\n                                >\r\n                                    <div\r\n                                        className=\"replies_count\"\r\n                                        onClick={() =>\r\n                                            setShowReplies(!showReplies)\r\n                                        }\r\n                                    >\r\n                                        <AvatarGroup\r\n                                            users={_.map(\r\n                                                comment?.replies_users,\r\n                                                (user) => ({\r\n                                                    ...user,\r\n                                                    src: user.image_url,\r\n                                                })\r\n                                            )}\r\n                                        />\r\n                                        <div className=\"ml-1 mr-2\">\r\n                                            {comment.total_replies} replies\r\n                                        </div>\r\n                                        {isRepliesLoading ? (\r\n                                            <Loader title=\"\" />\r\n                                        ) : null}\r\n                                    </div>\r\n                                    {/* </div> */}\r\n                                </Switch.Case>\r\n                            </Switch>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n\r\n                {/* reply box */}\r\n\r\n                {showReplies ? (\r\n                    <>\r\n                        <ReplyCommentPreview\r\n                            comment={comment}\r\n                            onReply={handleReplyButtonClick}\r\n                            showReplyButton={!replyMode}\r\n                            onDelete={handleDeleteComment}\r\n                            cb={(loading) => setIsRepliesLoading(loading)}\r\n                        />\r\n                    </>\r\n                ) : null}\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={activeEditMode}>\r\n                        <EditComment\r\n                            comment={comment}\r\n                            updateComments={updateComments}\r\n                            close={() => setActiveEditModal(false)}\r\n                        />\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={replyMode}>\r\n                        <ReplyComment\r\n                            comment={comment}\r\n                            onReply={() => {\r\n                                setShowReplies(true);\r\n                            }}\r\n                            close={() => setReplyMode(false)}\r\n                        />\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={uploadAttachment}>\r\n                        <AttachmentUpload\r\n                            comment={comment}\r\n                            onReply={() => setShowReplies(true)}\r\n                            close={() => setUploadAttachment(false)}\r\n                        />\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InnerComment;\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from 'styled-components';\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useReplyTaskCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst ReplyComment = ({ comment, close, onReply }) => {\r\n    const [text, setText] = React.useState(\"\");\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = React.useState(null);\r\n\r\n    // comment reply api hook from redux toolkit\r\n    const [replyTaskComment, { isLoading }] = useReplyTaskCommentMutation();\r\n\r\n    const visibleToScreenRef = React.useRef(null); // reference element\r\n    // update on layout change\r\n    React.useLayoutEffect(() => {\r\n        if (visibleToScreenRef && visibleToScreenRef.current) {\r\n            // scroll into view on visible\r\n            visibleToScreenRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, []);\r\n\r\n    // handle ck editor text change\r\n    const handleEditor = (e, editor) => {\r\n        const data = editor.getData(); // get editor text\r\n        setText(data);\r\n    };\r\n\r\n    // handle update\r\n    const onReplied = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // if text not provide show error message\r\n        if(!text){\r\n            setError(s => ({...s, comment: \"Please provide a comment before submitting.\"}));\r\n            return;\r\n        }\r\n\r\n        // make form\r\n        const formData = new FormData();\r\n        formData.append(\"reply_text\", text);\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"parent_comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n        // show formData\r\n        // for(const [key, value] of formData.entries()){\r\n        //     console.log(key, ': ', value)\r\n        // }\r\n\r\n\r\n        // submit form\r\n        await replyTaskComment({ formData, commentId: comment.id }).then(\r\n            (res) => {\r\n                toast.success(\"Your reply has been successfully submitted.\");\r\n                onReply();\r\n                close();\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <h6>Reply: <sup >(<span className=\"text-danger\"> Require </span>)</sup></h6>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent\r\n                            data={text}\r\n                            onChange={handleEditor}\r\n                        />\r\n                    </div>\r\n                    {error?.comment ? <ErrorText>{error?.comment}</ErrorText> : null }\r\n\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        <UploadFilesInLine\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        />\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Processing..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onReplied}>\r\n                                Reply\r\n                            </Button>\r\n                            <Button onClick={close} variant=\"secondary\">\r\n                                Close\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n\r\n            <div ref={visibleToScreenRef} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReplyComment;\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n    padding: 10px 0;\r\n`;\r\n","import * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useGetTaskCommentRepliesQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport { BsFillPlusCircleFill } from \"react-icons/bs\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst ReplyCommentPreview = ({\r\n    comment,\r\n    cb,\r\n    onReply,\r\n    showReplyButton,\r\n    onDelete,\r\n}) => {\r\n    const { data, isLoading } = useGetTaskCommentRepliesQuery(comment.id, {\r\n        refetchOnMountOrArgChange: true,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        cb(isLoading);\r\n    }, [isLoading]);\r\n\r\n    return (\r\n        <div className=\"sp1_task_replies_comment_list ml-3 w-100\">\r\n            {_.map(data, (r, i) => (\r\n                <div\r\n                    key={i}\r\n                    className=\"pl-3 pr-4 border-left border__left py-3 w-100\"\r\n                >\r\n                    <Comment comment={r} onDelete={onDelete} />\r\n                </div>\r\n            ))}\r\n\r\n            {!comment.is_deleted && !isLoading && showReplyButton ? (\r\n                <div className=\"border-left border__left reply_button pl-3\">\r\n                    <button onClick={onReply}>\r\n                        {/* <BsFillPlusCircleFill className=\"fs-16 icon\" /> */}\r\n                        <span>+ Reply</span>\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReplyCommentPreview;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { CompareDate } from '../../utils/dateController';\r\n\r\nconst d = new CompareDate();\r\nexport const useDailySubmission = () => {\r\n    const [isEnable, setIsEnable] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                // Fetch server time\r\n                let response = await axios.get('/server-time-status');\r\n                const date = response.data.data;\r\n\r\n                // Get the current day abbreviation (e.g., 'Sat', 'Sun', 'Mon', etc.)\r\n                const dayAbbreviation = d.dayjs(date).format('ddd');\r\n\r\n                // Define the cutoff times\r\n                const saturdayCutoffTime = d.dayjs(date).set('hour', 12).set('minute', 45);\r\n                const otherDaysCutoffTime = d.dayjs(date).set('hour', 16).set('minute', 45);\r\n\r\n                // Get the current time\r\n                const currentTime = d.dayjs(date);\r\n\r\n                // Check if it's Saturday or not\r\n                if (dayAbbreviation === 'Sat') {\r\n                    // Check if the current time is greater than 12:30 PM on Saturday\r\n                    if (currentTime.isSameOrAfter(saturdayCutoffTime)) {\r\n                       setIsEnable(true);\r\n                    }else{\r\n                        setIsEnable(false);\r\n                    }\r\n                } else {\r\n                    // Check if the current time is greater than 4:30 PM on other days\r\n                    if (currentTime.isSameOrAfter(otherDaysCutoffTime)) {\r\n                        setIsEnable(true);\r\n                    }else setIsEnable(false);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n    return {isEnable}\r\n}\r\n","import dayjs from \"dayjs\";\r\n\r\nexport const timeCalculate = (date) => {\r\n    const providedDate = dayjs(date);\r\n    const currentDate = dayjs();\r\n    const diff = currentDate.diff(providedDate, 'minute');\r\n    if (diff < 1) {\r\n        return 'Just now';\r\n    } else if (diff < 60) {\r\n        return `${diff} minute${diff > 1 ? 's' : ''} ago`;\r\n    } else if (diff < 1440) { // Less than 24 hours\r\n        const hours = Math.floor(diff / 60);\r\n        return `${hours} hour${hours > 1 ? 's' : ''} ago`;\r\n    } else if (diff < 10080) { // Less than 7 days\r\n        const days = Math.floor(diff / 1440);\r\n        return `${days} day${days > 1 ? 's' : ''} ago`\r\n    } else {\r\n        return providedDate.format('MMM DD, YYYY [at] h:mm A');\r\n    }\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp1_checkbox--label.disable{color:#aaa}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/UI/form/checkbox.css\"],\"names\":[],\"mappings\":\"AAAA,6BACI,UACJ\",\"sourcesContent\":[\".sp1_checkbox--label.disable {\\r\\n    color: #aaa;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".fpsqco3G\\\\+Hf7gF1vYUOU9Q\\\\=\\\\={flex-direction:row-reverse;margin:auto;width:-moz-fit-content;width:fit-content}.rpJ2L0Uklhu0QGtrM7rb3Q\\\\=\\\\=,.fpsqco3G\\\\+Hf7gF1vYUOU9Q\\\\=\\\\={display:flex;padding:0}.rpJ2L0Uklhu0QGtrM7rb3Q\\\\=\\\\={align-items:center;background-color:#ededed;border:2px solid #f4f4f4;border-radius:100%;box-shadow:0 0 2px rgba(0,0,0,.1);height:24px;justify-content:center;margin-left:-10px;width:24px}.N71c75OLkFHuPvS5HeIkpQ\\\\=\\\\={border-radius:100%;height:100%;object-fit:fill;-o-object-fit:fill;width:100%}.\\\\+F5c8j7QS2thczRvvUXBlw\\\\=\\\\={background-color:#276fec;color:#fff;text-decoration:none!important}.\\\\+F5c8j7QS2thczRvvUXBlw\\\\=\\\\= span{font-size:12px;text-decoration:none!important}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/global/AvatarGroup.module.css\"],\"names\":[],\"mappings\":\"AAAA,6BAKI,0BAA2B,CAF3B,WAAY,CAFZ,sBAAkB,CAAlB,iBAKJ,CAEA,yDANI,YAAa,CAEb,SAgBJ,CAZA,4BAQI,kBAAmB,CAFnB,wBAAyB,CAFzB,wBAAqC,CADrC,kBAAmB,CAQnB,iCAAoC,CATpC,WAAY,CAOZ,sBAAuB,CACvB,iBAAkB,CATlB,UAWJ,CAGA,4BAGI,kBAAmB,CADnB,WAAY,CAEZ,eAAgB,CAChB,kBAAmB,CAJnB,UAKJ,CAGA,6BACI,wBAAmC,CACnC,UAAW,CACX,8BACJ,CAEA,kCACI,cAAe,CACf,8BACJ\",\"sourcesContent\":[\".avatar_group{\\r\\n    width: fit-content;\\r\\n    display: flex;\\r\\n    margin: auto;\\r\\n    padding: 0;\\r\\n    flex-direction: row-reverse;\\r\\n}\\r\\n\\r\\n.avatar{\\r\\n    width: 24px;\\r\\n    height: 24px;\\r\\n    border-radius: 100%;\\r\\n    border: 2px solid rgb(244, 244, 244) ;\\r\\n    padding: 0;\\r\\n    background-color: #ededed;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-left: -10px;\\r\\n    box-shadow: 0 0 2px rgb(0 0 0 / 10%);\\r\\n}\\r\\n\\r\\n\\r\\n.avatar_image{\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    border-radius: 100%;\\r\\n    object-fit: fill;\\r\\n    -o-object-fit: fill;\\r\\n}\\r\\n\\r\\n\\r\\n.empty_avatar{\\r\\n    background-color: rgb(39, 111, 236);\\r\\n    color: #fff;\\r\\n    text-decoration:none !important;\\r\\n}\\r\\n\\r\\n.empty_avatar span{\\r\\n    font-size: 12px;\\r\\n    text-decoration:none !important;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"avatar_group\": \"fpsqco3G+Hf7gF1vYUOU9Q==\",\n\t\"avatar\": \"rpJ2L0Uklhu0QGtrM7rb3Q==\",\n\t\"avatar_image\": \"N71c75OLkFHuPvS5HeIkpQ==\",\n\t\"empty_avatar\": \"+F5c8j7QS2thczRvvUXBlw==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._8xXZnlhj3eHMkUUObnMmZw\\\\=\\\\={margin:2rem auto;max-width:90%;min-height:10rem;padding:1rem}._7n-CpR1Fy19zjUlU6WsThQ\\\\=\\\\={margin:0 auto}.SxO-JfljZkxUGDLmlQviZg\\\\=\\\\= th{background-color:#222;color:#fff;font-weight:700;padding:15px 25px;text-align:center}.YQAkXuuhsOlsr6ZIt378wQ\\\\=\\\\= td{padding:15px;text-align:center}.A5JA7hH72pS6vSurU7mqwQ\\\\=\\\\={padding:2rem 15px 15px}.A5JA7hH72pS6vSurU7mqwQ\\\\=\\\\=,.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={background-color:#fff}.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={border-radius:5px;margin-bottom:16px}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=,.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={position:relative}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\={background-color:transparent;border:1px solid rgba(0,0,0,.37);border-radius:4px;color:rgba(0,0,0,.85);display:block;font-size:16px;height:40px;margin:0 auto;outline:none!important;padding:6px 4px 4px 14px;transition:all .2s ease-in-out;width:100%}.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\={background:#fff;color:rgba(0,0,0,.519);cursor:text;display:inline-block;font-size:14px;font-weight:700;height:14px;left:12px;line-height:14px;margin:0 auto;padding:0 4px;position:absolute;text-align:left;top:30%;transition:all .15s ease-in-out}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:focus,.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:hover{border:1px solid #000}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:focus+.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\=,.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:valid+.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\={color:#000;font-weight:700;top:-6px}.sU7OfO8z\\\\+2G5bBnOIGPJmA\\\\=\\\\={background-color:inherit;color:#e32b2b;padding:0 0 0 3px}.sU7OfO8z\\\\+2G5bBnOIGPJmA\\\\=\\\\=:after{content:\\\"*\\\"}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css\"],\"names\":[],\"mappings\":\"AAIA,6BAGE,gBAAiB,CADjB,aAAc,CAEd,gBAAiB,CAHjB,YAIF,CAEA,6BACE,aACF,CAEA,+BACE,qBAAiC,CAGjC,UAAY,CACZ,eAAiB,CAHjB,iBAAkB,CAClB,iBAGF,CAMA,+BAEE,YAAa,CADb,iBAEF,CAGA,4BAGE,sBAEF,CAGA,wDAJE,qBASF,CALA,4BAIE,iBAAkB,CAHlB,kBAIF,CACA,0DAJE,iBAkBF,CAdA,8BAME,4BAA6B,CAF7B,gCAAiC,CACjC,iBAAkB,CAOlB,qBAAuB,CAVvB,aAAc,CASd,cAAe,CAFf,WAAY,CAFZ,aAAgB,CAGhB,sBAAwB,CAFxB,wBAAyB,CAKzB,8BAA+B,CAV/B,UAWF,CAEA,4BAWE,eAAiB,CACjB,sBAA2B,CAE3B,WAAY,CATZ,oBAAqB,CAIrB,cAAe,CACf,eAAiB,CAHjB,WAAY,CAJZ,SAAU,CAKV,gBAAiB,CAKjB,aAAgB,CAPhB,aAAc,CALd,iBAAkB,CAGlB,eAAgB,CAFhB,OAAQ,CAaR,+BACF,CACA,wEAA6B,qBAAwB,CAErD,gIAEE,UAAW,CACX,eAAiB,CAFjB,QAGF,CACA,6BACI,wBAAyB,CACzB,aAAc,CAEd,iBACJ,CACA,mCACI,WACJ\",\"sourcesContent\":[\".bdr{\\r\\n  /* border: solid; */\\r\\n}\\r\\n\\r\\n.container{\\r\\n  padding: 1rem;\\r\\n  max-width: 90%;\\r\\n  margin: 2rem auto;\\r\\n  min-height: 10rem;\\r\\n}\\r\\n\\r\\n.myTable{\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.headerRow th{\\r\\n  background-color: rgb(34, 34, 34);\\r\\n  padding: 15px 25px;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.bodyRow tr{\\r\\n  /* border-radius: 5px; */\\r\\n}\\r\\n\\r\\n.bodyRow td{\\r\\n  text-align: center;\\r\\n  padding: 15px;\\r\\n}\\r\\n\\r\\n\\r\\n.form{\\r\\n  /* border: solid; */\\r\\n  padding: 15px;\\r\\n  padding-top: 2rem;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n/* floating .label input field */\\r\\n.wrapper {\\r\\n  margin-bottom: 16px;\\r\\n  position: relative;\\r\\n  background-color: white;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n.input {\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  border: 1px solid rgba(0,0,0,.37);\\r\\n  border-radius: 4px;\\r\\n  background-color: transparent;\\r\\n  margin: 0px auto;\\r\\n  padding: 6px 4px 4px 14px;\\r\\n  height: 40px;\\r\\n  outline: none !important;\\r\\n  font-size: 16px;\\r\\n  color: rgba(0,0,0,0.85);\\r\\n  transition: all .2s ease-in-out;\\r\\n}\\r\\n\\r\\n.label {\\r\\n  position: absolute;\\r\\n  top: 30%; \\r\\n  left: 12px;\\r\\n  text-align: left;\\r\\n  display: inline-block;\\r\\n  padding: 0 4px;\\r\\n  height: 14px;\\r\\n  line-height: 14px;\\r\\n  font-size: 14px;\\r\\n  font-weight: bold;\\r\\n  background: white;\\r\\n  color: rgba(0, 0, 0, 0.519);\\r\\n  margin: 0px auto;\\r\\n  cursor: text;\\r\\n  transition: all .15s ease-in-out;\\r\\n}\\r\\n.input:hover, .input:focus { border: 1px solid #000; }\\r\\n\\r\\n.input:valid + .label, .input:focus + .label { \\r\\n  top: -6px;\\r\\n  color: #000;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.formAsterisk {\\r\\n    background-color: inherit;\\r\\n    color: #e32b2b;\\r\\n    padding: 0;\\r\\n    padding-left: 3px;\\r\\n}\\r\\n.formAsterisk:after {\\r\\n    content: \\\"*\\\";\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"_8xXZnlhj3eHMkUUObnMmZw==\",\n\t\"myTable\": \"_7n-CpR1Fy19zjUlU6WsThQ==\",\n\t\"headerRow\": \"SxO-JfljZkxUGDLmlQviZg==\",\n\t\"bodyRow\": \"YQAkXuuhsOlsr6ZIt378wQ==\",\n\t\"form\": \"A5JA7hH72pS6vSurU7mqwQ==\",\n\t\"wrapper\": \"sHn0ikpJ-siiyePWSQMFFA==\",\n\t\"input\": \"YRqnDsOCvlyUNmnxtR++ug==\",\n\t\"label\": \"P-INSzqztmJ-mpd7zZK14w==\",\n\t\"formAsterisk\": \"sU7OfO8z+2G5bBnOIGPJmA==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp1_tlr_tbl_wrapper{overflow-y:auto}.sp1_tlr_table{width:100%}.sp1_tlr_th{border-bottom:2px solid #dbe4ff;color:#373737;height:36px;padding:3px 10px;position:sticky;text-align:center;top:0;z-index:10}.sp1_tlr_td{border-bottom:1px solid #dbe4ff;max-width:350px;min-width:150px;padding:10px;text-align:center}.sp1_tlr_tbody>.sp1_tlr_tr:hover .sp1_tlr_td{background-color:rgba(233,235,240,.349)}.sp1_tlr_tr .sp1_tlr_td_marged{background-color:rgba(243,244,248,.349);border-inline:1px solid #dbe4ff}.sp1_tlr_tr .sp1_tlr_td_marged:first-child,.sp1_tlr_tr .sp1_tlr_td_marged:nth-child(2){border-left-color:transparent}.sp1_tlr_td_border{border-bottom:2px solid #dbe4ff}.sp1_drag_th.__dragging{background-color:hsla(222,6%,69%,.222)}.sp1_drag_th.__drop-area{background-color:rgba(34,45,71,.349)}.from_body{padding:2rem 1rem 3rem}.openRow_bg{background-color:hsla(218,7%,78%,.32)!important;border:none!important;overflow:visible}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css\"],\"names\":[],\"mappings\":\"AAAA,qBACI,eACJ,CAEA,eACI,UACJ,CAEA,YAII,+BAA2C,CAK3C,aAAsB,CARtB,WAAY,CACZ,gBAAiB,CAGjB,eAAgB,CAGhB,iBAAkB,CADlB,KAAM,CADN,UAIJ,CAEA,YAII,+BAA2C,CAF3C,eAAgB,CAChB,eAAgB,CAFhB,YAAa,CAIb,iBACJ,CAEA,6CACI,uCACJ,CAEA,+BACI,uCAA2C,CAC3C,+BACJ,CAEA,uFAEI,6BACJ,CAEA,mBACI,+BACJ,CAQA,wBACI,sCACJ,CAEA,yBACI,oCACJ,CAEA,WACI,sBACJ,CAGA,YACI,+CAAqD,CACrD,qBAAuB,CACvB,gBACJ\",\"sourcesContent\":[\".sp1_tlr_tbl_wrapper{\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n.sp1_tlr_table{\\r\\n    width: 100%; \\r\\n}\\r\\n\\r\\n.sp1_tlr_th {\\r\\n    height: 36px;\\r\\n    padding: 3px 10px;\\r\\n    /* background-color: rgb(55, 55, 55); */\\r\\n    border-bottom: 2px solid rgb(219, 228, 255);\\r\\n    position: sticky;\\r\\n    z-index: 10;\\r\\n    top: 0;\\r\\n    text-align: center;\\r\\n    color: rgb(55, 55, 55);\\r\\n}\\r\\n\\r\\n.sp1_tlr_td{\\r\\n    padding: 10px;\\r\\n    max-width: 350px;\\r\\n    min-width: 150px;\\r\\n    border-bottom: 1px solid rgb(219, 228, 255);\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.sp1_tlr_tbody > .sp1_tlr_tr:hover .sp1_tlr_td{\\r\\n    background-color:rgba(233, 235, 240, 0.349);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged{\\r\\n    background-color:rgba(243, 244, 248, 0.349);\\r\\n    border-inline: 1px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged:first-child,\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged:nth-child(2){\\r\\n    border-left-color: transparent;\\r\\n}\\r\\n\\r\\n.sp1_tlr_td_border{\\r\\n    border-bottom: 2px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n/* .sp1_tlr_tbody > .sp1_tlr_tr:hover .sp1_tlr_td_hover-disable{\\r\\n   background-color: #fff !important; \\r\\n} */\\r\\n\\r\\n\\r\\n\\r\\n.sp1_drag_th.__dragging {\\r\\n    background-color: rgba(170, 173, 180, 0.222);\\r\\n}\\r\\n\\r\\n.sp1_drag_th.__drop-area {\\r\\n    background-color: rgba(34, 45, 71, 0.349);\\r\\n}\\r\\n\\r\\n.from_body{\\r\\n    padding: 2rem 1rem 3rem;\\r\\n}\\r\\n\\r\\n\\r\\n.openRow_bg{\\r\\n    background-color:rgba(194, 197, 202, 0.32) !important;\\r\\n    border: none !important;\\r\\n    overflow: visible;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".QWT8SKIOKp3nCIlWnmqvlA\\\\=\\\\={box-shadow:0 10px 16px rgba(0,0,0,.2);font-family:Inter;font-weight:400;left:50%;max-width:800px;position:absolute;top:50%;transform:translate(-50%,-50%);width:100%}._7q1rGYYnwZMgY33fyvn5Rw\\\\=\\\\={background-color:#f3f3f3}._7q1rGYYnwZMgY33fyvn5Rw\\\\=\\\\= h6{font-weight:600;margin:0}.xFa21Dq-VWzqARlTwQw6ug\\\\=\\\\=:not(:last-child){border-bottom:1px dashed rgba(0,0,0,.1)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css\"],\"names\":[],\"mappings\":\"AAAA,4BASI,qCAAwC,CAFxC,iBAAkB,CAClB,eAAgB,CAHhB,QAAS,CAJT,eAAgB,CAEhB,iBAAkB,CAClB,OAAQ,CAER,8BAAgC,CAJhC,UAQJ,CAGA,6BACI,wBACJ,CAEA,gCAEI,eAAgB,CADhB,QAEJ,CAEA,6CACI,uCACJ\",\"sourcesContent\":[\".form_card{\\r\\n    max-width: 800px;\\r\\n    width: 100%;\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n    font-family: Inter;\\r\\n    font-weight: 400;\\r\\n    box-shadow: 0 10px 16px rgb(0 0 0 / 20%);\\r\\n}\\r\\n\\r\\n\\r\\n.form_card_head{\\r\\n    background-color: rgb(243, 243, 243);\\r\\n}\\r\\n\\r\\n.form_card_head h6{\\r\\n    margin: 0;\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.list_border:not(:last-child){\\r\\n    border-bottom: 1px dashed rgb(0 0 0 / 10%);\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"form_card\": \"QWT8SKIOKp3nCIlWnmqvlA==\",\n\t\"form_card_head\": \"_7q1rGYYnwZMgY33fyvn5Rw==\",\n\t\"list_border\": \"xFa21Dq-VWzqARlTwQw6ug==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["_ref","_ref$toggleRef","toggleRef","isOpen","close","_ref$comments","task","comments","taskId","onCommentPost","singleCommentId","_ref$showCommentEdito","showCommentEditor","_ref$showSearchBtn","showSearchBtn","_ref$showFullScreenBt","showFullScreenBtn","_ref$height","height","commentState","useCommentStore","param","useParams","width","useWindowSize","_useState2","_slicedToArray","useState","fullScreenView","setFullScreenView","_useGetCommentsQuery","useGetCommentsQuery","data","isFetching","isLoading","refetch","useEffect","_jsx","CommentContainerDecider","children","CommentsBody","filter","comment","id","loading","fetching","options","locals","value","onChange","label","checked","_ref$className","className","_ref$labelClassName","labelClassName","_ref$disabled","disabled","_objectWithoutProperties","_excluded","_jsxs","concat","type","_ref$users","users","_ref$show","show","len","_","avatars","splice","styles","avatar_group","avatar","empty_avatar","user","i","src","alt","avatar_image","rating","iconClassName","_Fragment","_toConsumableArray","Array","map","r","idx","parseInt","style","color","useRevision","_task$category","taskType","category","isIndependent","isIndependentTask","getLeadDeveloperAcknowladgementOptions","revision","isDeniable","getProjectManagerAcknowladgementOptions","_regeneratorRuntime","e","t","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","key","input","hint","prim","toPrimitive","undefined","res","String","Number","_toPrimitive","_toPropertyKey","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","err","arr","isArray","_arrayWithHoles","_iterableToArrayLimit","minLen","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","arr2","useSingleTask","User","_window","window","Laravel","_useLazyGetTaskDetail2","useLazyGetTaskDetailsQuery","getTaskDetails","taskDetailsIsFetching","getTaskById","_callee","_res$parent_task_head","_context","unwrap","taskFiles","parent_task_action","parent_task_title","parent_task_heading","heading","working_environment","working_environment_data","pm_task_guideline","task_guideline","task_revisions","revisions","taskSubTask","Sub_Tasks","t0","console","log","_x","_useLazyGetSubmittedT2","useLazyGetSubmittedTaskQuery","getSubmittedTask","submittionInfoIsFetching","getSubmittionInfo","_ref2","_callee2","_context2","_x2","_useApproveSubmittedT2","useApproveSubmittedTaskMutation","approveSubmittedTask","approveTaskLoadingStatus","approveTask","_ref3","_callee3","callback","_context3","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","fire","icon","title","_x3","_x4","taskCommentApiSlice","apiSlice","injectEndpoints","endpoints","build","getTaskComments","query","providesTags","getTaskCommentReplies","commentId","getTaskCommentWidgetData","getPreviewCommentData","updateComment","mutation","url","body","formData","invalidatesTags","removeCommentPreviousUploadedFile","task_id","comment_id","_token","document","querySelector","getAttribute","replyTaskComment","result","deleteComment","useGetTaskCommentsQuery","useGetTaskCommentRepliesQuery","useUpdateCommentMutation","useGetTaskCommentWidgetDataQuery","useLazyGetTaskCommentWidgetDataQuery","useGetPreviewCommentDataQuery","useRemoveCommentPreviousUploadedFileMutation","useReplyTaskCommentMutation","useDeleteCommentMutation","_ref$expendable","expendable","headingClass","headingStyle","_React$useState2","React","expend","setExpend","init","onClick","cursor","AnimatePresence","motion","div","initial","animate","exit","text","editorContainerClass","workEnv","useSelector","subTask","isLong","showText","ref","useRef","useClickAway","dangerouslySetInnerHTML","__html","href","preventDefault","Modal","background","target","site_url","frontend_password","login_url","email","password","index","pmComment","leadComment","getComment","disputeBetween","date","dayjs","createdAt","format","time","minHeight","revisionAcknowledgement","isDeny","isAccept","textIndent","gap","Placeholder","singleTaskPagePermission","auth","getRoleId","projectManagerId","getId","timeControlPermision","status","loggedUser","statusPermission","assigneePermission","statusId","assignedUser","assigneeTo","_loggedUser","includes","subtask","markAsCompletedButtonPermission","approveButtonPermission","assigneeBy","needRevisionPermision","_ref4","revisionButtonPermission","_ref5","submitForClientApproval","_ref6","clientApproveConfirmationButtonPermission","_ref7","subTaskCreationPermision","_ref9","assignedBy","styled","_templateObject","modalRef","setModalRef","_usePopper","usePopper","placement","modifiers","offset","attributes","popper","pointerEvents","zIndex","opacity","Shadow","ReactDOM","top","left","maxWidth","Button","minWidth","CKEditorComponent","WidgetItem","setIsOpen","overflow","is_deleted","mention","timeCalculate","deleted_at","created_date","CommentsContainer","skip","sortedComments","sort","b","a_day","diff","handleOrdering","modalIsOpen","setModalIsOpen","_React$useState4","openAddCommentModal","setOpenAddCommentModal","_React$useState6","modalToggleRef","setModalToggleRef","toggleModalButton","_useGetTaskCommentsQu","unshift","role","border","borderRightColor","variant","fontSize","CommentWritingModal","Widget","item","setModalData","modalData","verticalAlign","margin","textAlign","developer_name","submission_creation_date","AiFillEyeInvisible","AiFillEye","toggle","content","singleData","DailySubmissionItem","CustomModal","timeFormatter","_time$split$0$split2","split","year","month","month_name","columnSchema","header","draggable","accessorKey","cell","padding","getValue","convertTime","DataTable","tableData","tableColumns","tableName","_data$daily_submissio","_useState4","modalTableIsOpen","setModalTableIsOpen","_useState6","modalRefButton","setModalRefButton","_useState8","singleUserSubmissionTableDrawerRef","setSingleUserSubmissionTableDrawerRef","_useState10","_useGetDailyTasksSubm","useGetDailyTasksSubmissionQuery","modalTableClose","DailysubmissionDrawerTable","daily_submissions","SingleUserSubmissionTableDrawer","InnerHistoryItem","lazy","_ref$data","fallback","InnerHistoryItemLoader","history","HistoryItem","fetcher","axios","get","_useSelector","histories","dispatch","useDispatch","_useSWR","useSWR","refreshInterval","storeHistories","Histories","marginRight","Suspense","note","Link","to","_ref$readOnly","readOnly","_ref$placeholder","placeholder","_ref$inputClass","inputClass","_ref$labelClass","labelClass","_ref$type","defaultValue","rest","htmlFor","required","onWheel","currentTarget","blur","notes","files","setFiles","setTitle","errTitle","setErrTitle","_React$useState8","setNote","deviceWidth","_useCrateNoteMutation2","useCrateNoteMutation","crateNote","handleSubmit","fd","FormData","append","file","_notes","storeNotes","handleEditorChange","editor","getData","Input","setState","handleChange","UploadFilesInLine","_React$useState10","attachedFiles","setAttachedFiles","searchParams","useSearchParams","noteId","_useUpdateNoteMutatio2","useUpdateNoteMutation","updateNote","_useGetTaskDetailsQue","useGetTaskDetailsQuery","refetchOnMountOrArgChange","clearField","handleClose","_notes2","_res$note","message","getElementsByTagName","deleteNoteUploadedFile","useDeleteNoteUploadedFileMutation","handleFileDelete","previousFile","indexOf","previous","onPreviousFileDelete","getAvatar","getName","getDesignationName","mode","setMode","navigate","useNavigate","paramType","CreateNote","EditNote","NoteView","Note","setToggleRef","cmt","commentLength","maxHeight","Rating","deadline_meet","submission_quality","req_fullfillment","overall_tasks","ViewComment","setDate","selected","minDate","maxDate","placeholderText","DatePicker","dateFormat","SearchBox","_ref$autoFocus","autoFocus","props","current","focus","xmlns","viewBox","propTypes","PropTypes","isRequired","_ref$title","onSelect","setQuery","params","categories","filteredData","cat","category_name","toLowerCase","Combobox","displayValue","Options","Loader","catIdx","Option","active","_employees","taskCategory","employeeId","setEmployeeId","_useDeveloperInProgre","useDeveloperInProgressTaskQuery","DevProgressStatus","employees","role_id","employee","isOverloaded","image_url","objectFit","developer_status","priority","setSelected","Listbox","CompareDate","isVisible","location","useLocation","pathname","replace","_useEditSubtaskMutati2","useEditSubtaskMutation","editSubtask","_useEditSubtaskMutati3","Card","form_card","Head","onClose","form_card_head","Body","form_card_body","SubTaskEditModal","onSubmit","success","warn","_required_error$title","_required_error$start","_required_error$start2","_required_error$due_d","_required_error$due_d2","editDataIsFetching","milestoneID","milestone_title","milestoneTitle","milestone","parentTaskTitle","Date","startDate","setStateDate","dueDate","setDueDate","_useState12","projectName","_useState14","setTaskCategory","_useState16","assignedTo","setAssignedTo","_useState18","description","setDescription","_useState20","setPriority","_useState22","estimateHours","estimateTimeHour","_useState24","estimateMinutes","estimateTimeMin","_useState26","_useState28","setError","required_error","_useGetMilestoneDetai","useGetMilestoneDetailsQuery","projectId","deleteUplaodedFile","useDeleteUplaodedFileMutation","start_date","toDate","due_date","TaskCategorySelectionBox","AssignedToSelection","PrioritySelection","_milestone$deliverabl","count","errorMessages","showError","_startDate","_dueDate","parentTaskId","boardColumn","deliverable_type","subtaskId","requiredField","overloadedUser","gender","field","genderPronoun","_task$assigneeTo","_task$assigneeTo2","_task$assigneeTo3","_task$assigneeTo4","_task$assigneeTo5","_task$assigneeTo6","_task$assigneeBy","_task$assigneeBy2","_task$assigneeBy3","_task$assigneeBy4","_task$assigneeBy5","_task$assigneeBy6","_task$boardColumn","_$last","GenarelLoader","getSubtaskTitle","isSubtask","getUserLink","labelColor","columnName","getStartDate","getDueDate","parentTaskTimeLog","size","Accordion","last","revisionStatus","RevisionText","Guideline","SubmittedWorkItem","submittedWork","timeLog","TableRow","colSpan","TimeLog","getStartTime","endTime","getEndTime","memo","hoursLogged","review","ContentLoader","speed","backgroundColor","foregroundColor","x","rx","ry","HistoryLoader","parentTask","setTask","taskID","setSubmittedWork","setTimeLog","setReview","setHistories","_React$useState12","_React$useState14","isCommentShow","setIsCommentShow","_useSingleTask","detailFetchingStateLoading","subTaskComments","commentsFetching","commentsLoading","commentsRefetch","SingleTask","fetchData","cb","fetchSubmittedWork","fetchTimeLogData","fetchHistories","fetchReviewData","Genarel","SubmittedWork","showCloseBtn","History","TaskReview","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","showApproveForm","setShowApproveForm","completedWithInDeadline","setCompletedWithInDeadline","submittedStar","setSubmittedStar","fullfilledStar","setFullfilledStar","setComment","oldSubmittion","setOldSubmittion","latestSubmittion","setLatestSubmittion","_useGetSubmittedTaskQ","useGetSubmittedTaskQuery","setErr","sortBy","latest","old","handleOnSubmit","rating2","rating3","user_id","HiOutlineSelector","SubmittedWorkCard","submission_no","action","radius","SubmitButton","_data$text","_ref3$latest","_ref3$className","_ref3$isLoading","links","compact","attaches","submission_date","listStyle","link","FileUploader","Preview","fileName","downloadAble","deleteAble","downloadUrl","previewUrl","fileType","ext","toggleEditForm","_useLazyCheckSubTaskT2","useLazyCheckSubTaskTimerQuery","checkSubTaskTimer","useCheckEditableSubTaskQuery","isEditable","stopPropagation","hasEditPermission","added_by","PreviewSubtask","onConfirm","buttonVisible","setButtonVisible","countDown","setCountDown","timeIntervelId","setInterval","timeOutId","setTimeout","clearInterval","clearTimeout","marginLeft","siteUrl","setSiteUrl","frontendPassword","setFrontendPassword","loginUrl","setLoginUrl","siteLoginCredentialUserNameOrEmail","setSiteLoginCredentialUserNameOrEmail","setPassword","_useWorkingEnvironmen2","useWorkingEnvironmentMutation","workingEnvironment","project_id","checkIsURL","username","isConfirmed","_required_error$pageT","_required_error$pageT2","_ref12","_required_error$page_","_required_error$page_2","_required_error$descr","_required_error$descr2","_ref$isFirstSubtask","isFirstSubtask","refetchTask","useRefetchTaskDetails","taskDetails","isWorkingEnvironmentSubmit","setParentTask","pageType","setPageType","pageTypeOthers","setPageTypeOthers","pageName","setPageName","pageURL","setPageURL","numberOfPage","setNumberOfPage","existingDesignLink","setExistingDesignLink","_React$useState16","pageTypePriority","setPageTypePriority","_React$useState18","pageTypeName","setPageTypeName","_useCreateSubtaskMuta2","useCreateSubtaskMutation","createSubtask","_useCreateSubtaskMuta3","_useLazyGetTaskDetail3","_React$useState20","showForm","setShowForm","_React$useState22","isValid","pageUrl","_res$sub_task","_res$sub_task2","_subtask","sub_task","storeSubTasks","isHasRolePermission","setWorkingEnvironmentStatus","WorkingEnvironmentForm","LeadConfirmationModal","AssginedToSelection","_ref8","_ref10","_ref11","_ref13","_ref14","page_type","page_url","editId","setMilestone","project","setProject","setEstimateTimeHour","setEstimateTimeMin","_useState30","editSubTask","find","estimation","formatedDate","_res$users","project_name","task_category","estimate_hours","estimate_minutes","_err$estimate_hours","_err$estimate_minutes","errText","hoursErr","minErr","hours_left","minutes_left","milestone_id","board_column_id","subtask_id","_subtask2","edit","setEdit","formMode","setFormMode","isTaskModalOpen","setIsTaskModalOpen","subtaskModalToggleRef","setSubtaskModalToggleRef","_useLazyGetInProgress2","useLazyGetInProgressTaskStatusQuery","inProgressTaskStatus","toggleAddButton","closeAddModal","closeEditForm","Task","SubtTaskEditForm","SubTaskForm","workEnvData","roleId","sub","SubTask","_useUpdateTaskMutatio2","useUpdateTaskMutation","updateTask","_useUpdateTaskMutatio3","TaskEditForm","_milestone$milestone_","_$find","projects","isFetchingMilestone","milestones","list_border","_data$name","image","screen_record_link","previewId","SubmitionView","styte","InnerWorkItem","preview","modal","state","SubmittedModalView","WorkItem","_data$client_name","open","setOpen","attachmentLink","setAttachmentLink","setChecked","taskDescription","setTaskDescription","completedSection","setCompletedSection","_useSubmitDailySubmis2","useSubmitDailySubmissionMutation","submitDailySubmission","isSubmitting","attachmentLinkError","setAttachmentLinkError","taskDescriptionError","setTaskDescriptionError","completedSectionError","setCompletedSectionError","task_title","total_time_spent","client_name","daily_submission_status","borderTop","borderRadius","SelectedFiles","_Array$from","previews","onDelete","onRemove","Checkbox","_window$Laravel","valid","clientId","mark_as_complete","today","_useGetDailySubmissio","useGetDailySubmissionQuery","TodaysUpdateModalTableRow","setTodaysUpdateModalisOpen","URLSearchParams","search","TodaysUpdateModalTable","screenRecordUrl","setScreenRecordUrl","screenRecordUrlErr","setScreenRecordUrlErr","setLinks","linkErr","setLinkErr","isModalUrl","setIsModalUrl","commentErr","setCommentErr","_useMarkAsCompleteMut2","useMarkAsCompleteMutation","markAsComplete","_useLazyCheckSubTaskS2","useLazyCheckSubTaskStateQuery","checkSubTaskState","markAsCompleteModaIsOpen","setMarkAsCompleteModalIsOpen","_links","handleOnLinkInputChange","class","handleOnScreenRecordLinkInputChange","reason","setReason","reasonError","setReasonError","commentError","setCommentError","_useRevision","revisionOptions","_useCreateRevisionMut2","useCreateRevisionMutation","createRevision","option","marginTop","marginBottom","_reason$revision","_reason$isDeniable","errorCount","revision_acknowledgement","acknowledgement_id","is_deniable","revisionModal","setRevisionModal","RevisionCreationModal","AcceptAndContinueButton","RevisionAcceptAndContinue","_ref2$isSubmitting","onNext","_revision$revision_ac","onAccept","onDeny","onContinue","isContinue","pm_comment","revision_status","lead_comment","revision_reason","_task$taskSubTask","onBack","_ref$isSubmitting","setComments","subtasks","setSubtasks","setSubtaskError","SubtaskSelectionMenu","subTasks","_reason$id","_reason$id2","_comments","findIndex","hanldeEditorTextChange","NextAndContinueButton","_task$taskSubTask2","_task$taskSubTask3","multiple","overflowY","tabIndex","assigned_to_name","denyOptions","denyReason","setShow","accept","setAccept","_useGetRevisionDetail","useGetRevisionDetailsQuery","isFetchingRevision","_useRevisionAcceptOrD2","useRevisionAcceptOrDenyMutation","revisionAcceptOrDeny","isLoadingRevisionReview","handleAcceptAndContinueSubmission","_data$comment","_data$denyReason","_data","deny_reason","revision_id","setTaskStatus","task_status","RevisionView","continue","DenyAndContinue","setDenyReason","useRevisionAcceptOrDenyByLeadDeveloperMutation","_comment$comment","_data$reason","_data$is_deniable","fdata","hanldeAcceptAndContinueSubmition","AssigneeRevisionToDev","hanldeDenyAndContinueSubmition","singleTask","hasSubtask","RevisionViewModal","DeveloperRevisionView","GuideLineText","SubtaskCreationControl","subtaskCreationModalIsOpen","setSubtaskCreationModalIsOpen","fontStyle","fontWeight","StopTimerConfrimationPopUp","stopTimer","startTimer","lessTrackModal","lessTrackModalFor","setLessTrackModal","handleTemporarilyStopTimer","StartTimerWorkingReport","Title","Text","h1","_taggedTemplateLiteral","_templateObject2","_templateObject3","showExpirationWarningModal","setShowExpirationWarningModal","timeLeft","setTimeLeft","timerStatusForWarningModal","toggleModal","setToggleModal","prevTime","interval","closeModal","minutes","Math","floor","seconds","ReactModal","onRequestClose","contentLabel","shouldCloseOnOverlayClick","overlay","Index","_data$last_page","_ref$columns","columns","onPageChange","sorting","setSorting","setTableData","pageIndex","pageSize","_React$useState6$","setPagination","_useLocalStorage2","useLocalStorage","columnOrder","setColumnOrder","pagination","table","useReactTable","onSortingChange","onColumnOrderChange","getCoreRowModel","getPaginationRowModel","getSortedRowModel","TableContainer","Table","DataTableHeader","TableBody","getRowModel","rows","row","getVisibleCells","TableItem","flexRender","column","columnDef","getContext","col","EmptyTable","TableFooter","Flex","Select","paginate","total","ReactPaginate","breakLabel","previousLabel","nextLabel","pageRangeDisplayed","marginPagesDisplayed","pageCount","last_page","renderOnZeroPageCount","containerClassName","pageLinkClassName","activeLinkClassName","previousLinkClassName","nextLinkClassName","PendingTasksTableColumns","original","task_name","Popover","Panel","_data$task_board_colu","task_board_column_color","task_board_column_name","total_min","isPendingModalOpen","setIsPendingModalOpen","useAuth","_useGetTaskListQuery","useGetTaskListQuery","Tasks","task_board_column_id","ariaHideApp","card","card_head","card_body","PendingTasksTable","expireDateForTrainer","showExpirationNotifyModal","setShowExpirationNotifyModal","expireDate","PendingTasksForTrainee","_EvaluationData$data$","_task$ranningTimer","timerStart","setTimerStart","_useGetSingleEvaluati","useGetSingleEvaluationQuery","EvaluationData","exp_date","setTimerStatusForWarningModal","expiredTimerForNewEmployee","setExpiredTimerForNewEmployee","setExpireDateForTrainer","timerId","setTimerId","setSeconds","isOpenConfirmationModal","setIsOpenConfirmationModal","timerStatus","ranningTimer","taskRunning","useMemo","_task$ranningTimer2","_task$ranningTimer3","serverTime","unix","intervalRef","checkExpiration","currentTime","timeDifference","getTime","max","hours","sec","min","hr","Toast","startTimerFirstCheck","startTimerFirstCheckIsFetching","_useStartTimerApiMuta2","useStartTimerApiMutation","startTimerApi","timerStartStatusIsLoading","_useStopTimerApiMutat2","useStopTimerApiMutation","stopTimerApi","timerStopStatusIsLoading","checkWorkReport","useCheckWorkingReportMutation","startTimerControl","workReport","_window2","check_in_check_out","check_in_status","daily_task_report","hours_log_report","hours_log_report_status","withReactContent","html","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","reload","timeId","_useLazyGetUserTrackT2","useLazyGetUserTrackTimeQuery","getUserTrackTime","trackTimerFetcing","current_time","set","day","check","isBefore","isDev","tracked_times","target_time","is_first_task","StartTimerConfirmationModal","LessTrackTimerModal","ExpiredTimeModalForNewEmployee","ExpiredNotifyModalForNewEmployee","SubmitForClientApproval","_useSubmitForClientAp2","useSubmitForClientApprovalMutation","transform","_useConfirmClientAppr2","useConfirmClientApprovalMutation","confirmClientApproval","projectManagerAcknowladgement","createDispute","additionalPaid","setAdditionalPaid","additionalInfo","setAdditionalInfo","additionalAmount","setAdditionalAmount","additionalError","setAdditionalError","hasAdditionalPayment","isPay","onBlur","disputeCreate","_additionalInfo$info","additional_amount","additional_status","additional_comment","dispute_create","_useStoreClientRevisi2","useStoreClientRevisionTaskMutation","storeClientRevisionTask","AssigneeToLeadFromClientRevision","fData","ClientAcceptedTask","ClientRevision","ReportForm","reportModalOpen","setReportModalOpen","isEnable","useDailySubmission","_useDeveloperCanCompl","useDeveloperCanCompleteTaskQuery","checkMarkAsCompleteEnableStatus","isLoadingCompleteCheck","ENABLE_MARKASCOMPLETE_BUTTON","totalTimeLog","TimerControl","MarkAsComplete","ApproveTask","RevisionControl","RevisionViewControl","ClientApproval","DailySubmissionControl","display","ReportControl","start_time","end_time","hours_logged","Avatar","CardView","_ref4$data","_objectDestructuringEmpty","TimeLogItem","timeLogs","storeTimeLogs","TimeLogTable","TimeLogItemLoader","RefetchTaskProvider","setRefetchTask","_task$additionalInfo","_task$additionalInfo2","_task$additionalInfo3","_task$additionalInfo4","_task$category$name","_task$taskType","_task$pageType","_task$pageName","_task$workEnvData","_task$workEnvData2","_task$workEnvData3","_task$workEnvData4","_task$workEnvData5","_task$workEnvData6","throwError","useErrorHandler","isTaskFetching","isTaskLoading","taskStatus","useGetTaskStatusQuery","_useLazyGetWorkingEnv2","useLazyGetWorkingEnvironmentQuery","getWorkingEnv","_useLazyGetWorkingEnv3","isWorkingEnvFetching","isWorkingEnvLoading","taskForTimeLog","setTaskForTimeLog","totalTime","setTotalTime","taskForTime","useGetTaskForTotalTimeQuery","_task$parent_task_tim","_task$sub_task_time_l","totalTimeInMinutes","parentTimeArray","parent_task_time_log","subTimeArray","sub_task_time_log","calculateTotalTime","CurrentTask","ppTaskFiles","parent_task_id","task_working_environment","code","storeTask","loadingClass","Loading","_taskStatus","BoardColumn","Provider","TaskAction","ind_clientId","ind_client_name","independent_client_name","whiteSpace","loginURL","refSite","guidelines","user_name","devComment","attachments","attachment","pp_task_file_name","pp_task_file_url","pp_task_file_icon","classname","pp_task_file_id","label_color","boxShadow","getTaskStatusName","SubTaskSection","DailySubmissionSection","CommentSection","NoteSection","TimeLogSection","HistorySection","RevisionSection","Toaster","ShowEditModals","_ref$variant","_ref$size","classes","DropdownContext","DropdownProvider","element","setElement","reference","setReference","useDropdown","context","DropdownItem","_ref2$disabled","onMouseUp","DropdownToggle","_ref3$icon","_useDropdown2","DropdownMenu","_ref4$placement","_ref4$offset","_excluded2","_useDropdown3","popperElement","setPopperElement","setWidth","random","substr","DOM","getElementById","fallbackPlacements","offsetWidth","timeout","handleClickOutside","event","contains","removeEventListener","addEventListener","el","createElement","appendChild","removeChild","Dropdown","_ref5$className","Item","Toggle","Menu","isBrowser","setIsBrowser","modalContent","onReply","_useReplyTaskCommentM2","visibleToScreenRef","scrollIntoView","behavior","onUpdate","fileError","uploadInputClass","fileWrapperClass","ErrorText","Switch","Case","condition","loaderTitle","_comment$files_data","showDeletedComment","setShowDeletedComment","deletedClass","last_updated_date","as","Items","files_data","updateComments","setText","_React$useState5","_useUpdateCommentMuta2","_useRemoveCommentPrev2","handlePreviousFileDeleted","file_details","showReplies","setShowReplies","replyMode","setReplyMode","activeEditMode","setActiveEditModal","uploadAttachment","setUploadAttachment","isRepliesLoading","setIsRepliesLoading","_useDeleteCommentMuta2","handleReplyButtonClick","handleDeleteComment","showDenyButton","denyButtonText","confirmButtonColor","denyButton","buttonsStyling","deleteCommentData","Comment","total_replies","AvatarGroup","replies_users","ReplyCommentPreview","showReplyButton","EditComment","ReplyComment","AttachmentUpload","onReplied","_useGetTaskCommentRep","setIsEnable","response","dayAbbreviation","saturdayCutoffTime","otherDaysCutoffTime","isSameOrAfter","providedDate","days","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}
>>>>>>> aed693ea0995fe68224c7d13b272087e948a897d
